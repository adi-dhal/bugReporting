{"data":[{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3168","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3168/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3168/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3168/events","html_url":"https://github.com/libgdx/libgdx/issues/3168","id":80543320,"number":3168,"title":"missing ClassReflection#getComponentType(Class)","user":{"login":"dermetfan","id":4956158,"avatar_url":"https://avatars1.githubusercontent.com/u/4956158?v=4","gravatar_id":"","url":"https://api.github.com/users/dermetfan","html_url":"https://github.com/dermetfan","followers_url":"https://api.github.com/users/dermetfan/followers","following_url":"https://api.github.com/users/dermetfan/following{/other_user}","gists_url":"https://api.github.com/users/dermetfan/gists{/gist_id}","starred_url":"https://api.github.com/users/dermetfan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dermetfan/subscriptions","organizations_url":"https://api.github.com/users/dermetfan/orgs","repos_url":"https://api.github.com/users/dermetfan/repos","events_url":"https://api.github.com/users/dermetfan/events{/privacy}","received_events_url":"https://api.github.com/users/dermetfan/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2015-05-25T13:50:02Z","updated_at":"2015-05-25T15:56:32Z","closed_at":"2015-05-25T15:56:32Z","author_association":"CONTRIBUTOR","body":"Just another feature request for ClassReflection... not my first, I know :grin: \n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3168/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3167","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3167/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3167/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3167/events","html_url":"https://github.com/libgdx/libgdx/pull/3167","id":80472439,"number":3167,"title":"Added support for custom decal material in Decal class.","user":{"login":"scientistnm","id":933456,"avatar_url":"https://avatars3.githubusercontent.com/u/933456?v=4","gravatar_id":"","url":"https://api.github.com/users/scientistnm","html_url":"https://github.com/scientistnm","followers_url":"https://api.github.com/users/scientistnm/followers","following_url":"https://api.github.com/users/scientistnm/following{/other_user}","gists_url":"https://api.github.com/users/scientistnm/gists{/gist_id}","starred_url":"https://api.github.com/users/scientistnm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/scientistnm/subscriptions","organizations_url":"https://api.github.com/users/scientistnm/orgs","repos_url":"https://api.github.com/users/scientistnm/repos","events_url":"https://api.github.com/users/scientistnm/events{/privacy}","received_events_url":"https://api.github.com/users/scientistnm/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2015-05-25T09:44:43Z","updated_at":"2015-05-28T04:53:51Z","closed_at":"2015-05-28T04:53:51Z","author_association":"NONE","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3167","html_url":"https://github.com/libgdx/libgdx/pull/3167","diff_url":"https://github.com/libgdx/libgdx/pull/3167.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3167.patch"},"body":"fixes #2986 \n\nAdded support for setting custom decal material to Decal class.\nCustom material can be applied via constructor or via setter.\n\nNote: This is my first pull request ever and first day of using GIT :)\nSo any comments are welcome, if I messed up something.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3167/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3166","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3166/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3166/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3166/events","html_url":"https://github.com/libgdx/libgdx/issues/3166","id":80437848,"number":3166,"title":"About font wrapping","user":{"login":"panli32811","id":8217836,"avatar_url":"https://avatars0.githubusercontent.com/u/8217836?v=4","gravatar_id":"","url":"https://api.github.com/users/panli32811","html_url":"https://github.com/panli32811","followers_url":"https://api.github.com/users/panli32811/followers","following_url":"https://api.github.com/users/panli32811/following{/other_user}","gists_url":"https://api.github.com/users/panli32811/gists{/gist_id}","starred_url":"https://api.github.com/users/panli32811/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/panli32811/subscriptions","organizations_url":"https://api.github.com/users/panli32811/orgs","repos_url":"https://api.github.com/users/panli32811/repos","events_url":"https://api.github.com/users/panli32811/events{/privacy}","received_events_url":"https://api.github.com/users/panli32811/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2015-05-25T07:50:31Z","updated_at":"2015-06-25T16:33:24Z","closed_at":"2015-05-25T08:15:54Z","author_association":"NONE","body":"I found that the text would wrap when meeting color change.It's not accepted in our game.What can I do to prevent it?\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3166/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3165","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3165/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3165/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3165/events","html_url":"https://github.com/libgdx/libgdx/issues/3165","id":80366399,"number":3165,"title":"Enhancement: Separate Util Library","user":{"login":"chbachman","id":6267043,"avatar_url":"https://avatars0.githubusercontent.com/u/6267043?v=4","gravatar_id":"","url":"https://api.github.com/users/chbachman","html_url":"https://github.com/chbachman","followers_url":"https://api.github.com/users/chbachman/followers","following_url":"https://api.github.com/users/chbachman/following{/other_user}","gists_url":"https://api.github.com/users/chbachman/gists{/gist_id}","starred_url":"https://api.github.com/users/chbachman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/chbachman/subscriptions","organizations_url":"https://api.github.com/users/chbachman/orgs","repos_url":"https://api.github.com/users/chbachman/repos","events_url":"https://api.github.com/users/chbachman/events{/privacy}","received_events_url":"https://api.github.com/users/chbachman/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2015-05-25T03:20:13Z","updated_at":"2015-05-25T04:02:13Z","closed_at":"2015-05-25T04:02:13Z","author_association":"NONE","body":"I haven't looked at it in much detail, but a lot of the Util (e.g. the gdx.utils package) classes would be amazing as a separate library for general use. The Array and ImmutableArray classes especially are really nice to work with, and are fairly general use. It would be nice to include only those in many non game development projects. \n\nIs this possible? I totally understand, I can always rip them from the current library, however it would be nice to be able to grab them from the libgdx maven. \n\nThanks for your time.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3165/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3164","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3164/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3164/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3164/events","html_url":"https://github.com/libgdx/libgdx/issues/3164","id":80180838,"number":3164,"title":"create a no-arg constructor for Ray","user":{"login":"FyiurAmron","id":11016998,"avatar_url":"https://avatars1.githubusercontent.com/u/11016998?v=4","gravatar_id":"","url":"https://api.github.com/users/FyiurAmron","html_url":"https://github.com/FyiurAmron","followers_url":"https://api.github.com/users/FyiurAmron/followers","following_url":"https://api.github.com/users/FyiurAmron/following{/other_user}","gists_url":"https://api.github.com/users/FyiurAmron/gists{/gist_id}","starred_url":"https://api.github.com/users/FyiurAmron/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/FyiurAmron/subscriptions","organizations_url":"https://api.github.com/users/FyiurAmron/orgs","repos_url":"https://api.github.com/users/FyiurAmron/repos","events_url":"https://api.github.com/users/FyiurAmron/events{/privacy}","received_events_url":"https://api.github.com/users/FyiurAmron/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2015-05-24T14:52:08Z","updated_at":"2015-05-25T04:57:32Z","closed_at":"2015-05-25T04:57:32Z","author_association":"CONTRIBUTOR","body":"Similarily to https://github.com/libgdx/libgdx/issues/3111, could we perhaps have a no-arg constructor for Ray, for the very same reasons? (serialization & prealloc for loops, with delayed setting of the exact values)\n\nIt would be simply a\n\n```\n    public Ray () {\n    }\n```\n\ndue to the fact all the necessary fields are already initialized.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3164/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3163","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3163/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3163/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3163/events","html_url":"https://github.com/libgdx/libgdx/issues/3163","id":79985646,"number":3163,"title":"gdx-setup v1.6 ExtendViewport is broken","user":{"login":"barsunduk","id":7312635,"avatar_url":"https://avatars1.githubusercontent.com/u/7312635?v=4","gravatar_id":"","url":"https://api.github.com/users/barsunduk","html_url":"https://github.com/barsunduk","followers_url":"https://api.github.com/users/barsunduk/followers","following_url":"https://api.github.com/users/barsunduk/following{/other_user}","gists_url":"https://api.github.com/users/barsunduk/gists{/gist_id}","starred_url":"https://api.github.com/users/barsunduk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/barsunduk/subscriptions","organizations_url":"https://api.github.com/users/barsunduk/orgs","repos_url":"https://api.github.com/users/barsunduk/repos","events_url":"https://api.github.com/users/barsunduk/events{/privacy}","received_events_url":"https://api.github.com/users/barsunduk/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2015-05-23T23:35:00Z","updated_at":"2015-05-26T09:53:49Z","closed_at":"2015-05-26T03:52:51Z","author_association":"NONE","body":"it was my mistake, not your (forgot about old variables - it was not same code, i now it now). i'm so sorry! forgive me please! your framework is the best!!! sanx for your job! it's great.\nnext time i will check many times before ask something. i wish to delete this stupid post. but i can't.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3163/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3162","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3162/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3162/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3162/events","html_url":"https://github.com/libgdx/libgdx/pull/3162","id":79835737,"number":3162,"title":"Added method to disable programmatic change events in Button","user":{"login":"kotcrab","id":4594081,"avatar_url":"https://avatars1.githubusercontent.com/u/4594081?v=4","gravatar_id":"","url":"https://api.github.com/users/kotcrab","html_url":"https://github.com/kotcrab","followers_url":"https://api.github.com/users/kotcrab/followers","following_url":"https://api.github.com/users/kotcrab/following{/other_user}","gists_url":"https://api.github.com/users/kotcrab/gists{/gist_id}","starred_url":"https://api.github.com/users/kotcrab/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kotcrab/subscriptions","organizations_url":"https://api.github.com/users/kotcrab/orgs","repos_url":"https://api.github.com/users/kotcrab/repos","events_url":"https://api.github.com/users/kotcrab/events{/privacy}","received_events_url":"https://api.github.com/users/kotcrab/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2015-05-23T12:39:25Z","updated_at":"2015-06-13T18:54:19Z","closed_at":"2015-06-13T18:54:19Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3162","html_url":"https://github.com/libgdx/libgdx/pull/3162","diff_url":"https://github.com/libgdx/libgdx/pull/3162.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3162.patch"},"body":"This adds option to disable programmatic change events for Button, currently there is no way to change checked state without firing ChangeEvent. By default programmatic change events are enabled so it does not affect existing checkboxes. \n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3162/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3161","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3161/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3161/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3161/events","html_url":"https://github.com/libgdx/libgdx/pull/3161","id":79513569,"number":3161,"title":"Added callback for loading failed in AssetManager","user":{"login":"goranstupar","id":4856922,"avatar_url":"https://avatars1.githubusercontent.com/u/4856922?v=4","gravatar_id":"","url":"https://api.github.com/users/goranstupar","html_url":"https://github.com/goranstupar","followers_url":"https://api.github.com/users/goranstupar/followers","following_url":"https://api.github.com/users/goranstupar/following{/other_user}","gists_url":"https://api.github.com/users/goranstupar/gists{/gist_id}","starred_url":"https://api.github.com/users/goranstupar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/goranstupar/subscriptions","organizations_url":"https://api.github.com/users/goranstupar/orgs","repos_url":"https://api.github.com/users/goranstupar/repos","events_url":"https://api.github.com/users/goranstupar/events{/privacy}","received_events_url":"https://api.github.com/users/goranstupar/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":14,"created_at":"2015-05-22T16:15:55Z","updated_at":"2015-06-26T11:05:32Z","closed_at":"2015-06-25T15:28:02Z","author_association":"NONE","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3161","html_url":"https://github.com/libgdx/libgdx/pull/3161","diff_url":"https://github.com/libgdx/libgdx/pull/3161.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3161.patch"},"body":"**What Have I Done?**\nI added callback that will be invoked when loading of an asset fails. \n\nI added it as a separate interface, because otherwise users that used LoadedCallback should implement another method. I think it is \"nicer\" to add it as a separate interface, and not change API (add new method in the interface).\n\n**Why Have I Done It?**\nWhen I try to load asset with bad path or to load corrupted file, libgdx throws GdxRuntimeException on AssetManager's update() method. There is no way to catch which asset failed to be loaded. That is why I added this callback.\n\n**Test**\nI tested it on android and desktop with corrupted file, and bad url.\n\n**TODO**\nCan anyone help me what should I do with variable **loaded**? As I can see, it is used only for progress, so I think it should be incremented? Everything seems to be fine, but I just need someone to check it for me.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3161/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3160","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3160/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3160/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3160/events","html_url":"https://github.com/libgdx/libgdx/pull/3160","id":79502243,"number":3160,"title":"Added Label alignment getters","user":{"login":"kotcrab","id":4594081,"avatar_url":"https://avatars1.githubusercontent.com/u/4594081?v=4","gravatar_id":"","url":"https://api.github.com/users/kotcrab","html_url":"https://github.com/kotcrab","followers_url":"https://api.github.com/users/kotcrab/followers","following_url":"https://api.github.com/users/kotcrab/following{/other_user}","gists_url":"https://api.github.com/users/kotcrab/gists{/gist_id}","starred_url":"https://api.github.com/users/kotcrab/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kotcrab/subscriptions","organizations_url":"https://api.github.com/users/kotcrab/orgs","repos_url":"https://api.github.com/users/kotcrab/repos","events_url":"https://api.github.com/users/kotcrab/events{/privacy}","received_events_url":"https://api.github.com/users/kotcrab/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2015-05-22T15:43:09Z","updated_at":"2015-06-25T13:09:04Z","closed_at":"2015-06-25T13:09:04Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3160","html_url":"https://github.com/libgdx/libgdx/pull/3160","diff_url":"https://github.com/libgdx/libgdx/pull/3160.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3160.patch"},"body":"","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3160/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3159","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3159/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3159/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3159/events","html_url":"https://github.com/libgdx/libgdx/pull/3159","id":79476964,"number":3159,"title":"Fix bugs in Bits","user":{"login":"antag99","id":7714919,"avatar_url":"https://avatars3.githubusercontent.com/u/7714919?v=4","gravatar_id":"","url":"https://api.github.com/users/antag99","html_url":"https://github.com/antag99","followers_url":"https://api.github.com/users/antag99/followers","following_url":"https://api.github.com/users/antag99/following{/other_user}","gists_url":"https://api.github.com/users/antag99/gists{/gist_id}","starred_url":"https://api.github.com/users/antag99/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/antag99/subscriptions","organizations_url":"https://api.github.com/users/antag99/orgs","repos_url":"https://api.github.com/users/antag99/repos","events_url":"https://api.github.com/users/antag99/events{/privacy}","received_events_url":"https://api.github.com/users/antag99/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2015-05-22T14:32:52Z","updated_at":"2015-06-03T04:52:20Z","closed_at":"2015-06-03T04:52:13Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3159","html_url":"https://github.com/libgdx/libgdx/pull/3159","diff_url":"https://github.com/libgdx/libgdx/pull/3159.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3159.patch"},"body":"I was working on ashley and found a couple of bugs in the `Bits` class. First, `length()` returns the index of the last bit set, rather than the length. Second, `xor(Bits)` clear bits that exceed the argument's internal buffer size. I put together some small code snippets to demonstrate this:\n\n``` java\n// length() bug\nBits bits = new Bits();\nbits.set(0);\nSystem.out.println(bits.length()); // 0\n\n// xor() bug\nBits first = new Bits();\nfirst.set(200);\nBits second = new Bits();\nfirst.xor(second);\nSystem.out.println(first.get(200)); // false\n```\n\nThis pull request fixes these issues.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3159/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3158","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3158/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3158/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3158/events","html_url":"https://github.com/libgdx/libgdx/issues/3158","id":79433354,"number":3158,"title":"TextArea not calculating height on setPrefRows","user":{"login":"ghandhikus","id":5513498,"avatar_url":"https://avatars3.githubusercontent.com/u/5513498?v=4","gravatar_id":"","url":"https://api.github.com/users/ghandhikus","html_url":"https://github.com/ghandhikus","followers_url":"https://api.github.com/users/ghandhikus/followers","following_url":"https://api.github.com/users/ghandhikus/following{/other_user}","gists_url":"https://api.github.com/users/ghandhikus/gists{/gist_id}","starred_url":"https://api.github.com/users/ghandhikus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ghandhikus/subscriptions","organizations_url":"https://api.github.com/users/ghandhikus/orgs","repos_url":"https://api.github.com/users/ghandhikus/repos","events_url":"https://api.github.com/users/ghandhikus/events{/privacy}","received_events_url":"https://api.github.com/users/ghandhikus/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2015-05-22T12:18:03Z","updated_at":"2015-06-06T17:07:02Z","closed_at":"2015-06-06T17:07:02Z","author_association":"NONE","body":"TextArea is not recalculating height when setting prefered rows through setPrefRows.\nIt does after resizing though. There is no public method to recalculate the height though.\n\nThe thing I am trying to do is to force TextArea to have height of the text. I inserted it into ScrollPane and it does not resize itself out of the box. Is there any other way to recalculate it without extending the class?\n\nTest code:\n\n```\n    public void update()\n    {\n        String str = stringStream.toString();\n        Globals.consoleText.setText(str);\n        Globals.consoleText.setPrefRows(Globals.consoleText.getLines());\n    }\n```\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3158/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3157","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3157/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3157/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3157/events","html_url":"https://github.com/libgdx/libgdx/issues/3157","id":79271883,"number":3157,"title":"the  scrollPane  setScale","user":{"login":"muyexiudong","id":5708180,"avatar_url":"https://avatars0.githubusercontent.com/u/5708180?v=4","gravatar_id":"","url":"https://api.github.com/users/muyexiudong","html_url":"https://github.com/muyexiudong","followers_url":"https://api.github.com/users/muyexiudong/followers","following_url":"https://api.github.com/users/muyexiudong/following{/other_user}","gists_url":"https://api.github.com/users/muyexiudong/gists{/gist_id}","starred_url":"https://api.github.com/users/muyexiudong/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/muyexiudong/subscriptions","organizations_url":"https://api.github.com/users/muyexiudong/orgs","repos_url":"https://api.github.com/users/muyexiudong/repos","events_url":"https://api.github.com/users/muyexiudong/events{/privacy}","received_events_url":"https://api.github.com/users/muyexiudong/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2015-05-22T04:00:30Z","updated_at":"2015-06-26T11:05:58Z","closed_at":"2015-06-25T13:12:53Z","author_association":"NONE","body":"when  the scrollPane  setScale slide will have problems   ，when  i   set  the scrollPane's parent  scale  have  the same  problem, the  slider not  same  as the  finger\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3157/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3156","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3156/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3156/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3156/events","html_url":"https://github.com/libgdx/libgdx/pull/3156","id":79234170,"number":3156,"title":"Set background color","user":{"login":"marcguilera","id":7732696,"avatar_url":"https://avatars3.githubusercontent.com/u/7732696?v=4","gravatar_id":"","url":"https://api.github.com/users/marcguilera","html_url":"https://github.com/marcguilera","followers_url":"https://api.github.com/users/marcguilera/followers","following_url":"https://api.github.com/users/marcguilera/following{/other_user}","gists_url":"https://api.github.com/users/marcguilera/gists{/gist_id}","starred_url":"https://api.github.com/users/marcguilera/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/marcguilera/subscriptions","organizations_url":"https://api.github.com/users/marcguilera/orgs","repos_url":"https://api.github.com/users/marcguilera/repos","events_url":"https://api.github.com/users/marcguilera/events{/privacy}","received_events_url":"https://api.github.com/users/marcguilera/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2015-05-22T01:31:24Z","updated_at":"2015-05-22T18:01:41Z","closed_at":"2015-05-22T18:01:41Z","author_association":"NONE","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3156","html_url":"https://github.com/libgdx/libgdx/pull/3156","diff_url":"https://github.com/libgdx/libgdx/pull/3156.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3156.patch"},"body":"Just added a convenient way of setting a table bg color.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3156/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3155","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3155/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3155/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3155/events","html_url":"https://github.com/libgdx/libgdx/pull/3155","id":79217393,"number":3155,"title":"Custom shader in modelBatch is no longer ignored","user":{"login":"frustaci","id":2227895,"avatar_url":"https://avatars3.githubusercontent.com/u/2227895?v=4","gravatar_id":"","url":"https://api.github.com/users/frustaci","html_url":"https://github.com/frustaci","followers_url":"https://api.github.com/users/frustaci/followers","following_url":"https://api.github.com/users/frustaci/following{/other_user}","gists_url":"https://api.github.com/users/frustaci/gists{/gist_id}","starred_url":"https://api.github.com/users/frustaci/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/frustaci/subscriptions","organizations_url":"https://api.github.com/users/frustaci/orgs","repos_url":"https://api.github.com/users/frustaci/repos","events_url":"https://api.github.com/users/frustaci/events{/privacy}","received_events_url":"https://api.github.com/users/frustaci/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2015-05-22T00:27:39Z","updated_at":"2015-05-22T00:57:39Z","closed_at":"2015-05-22T00:57:39Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3155","html_url":"https://github.com/libgdx/libgdx/pull/3155","diff_url":"https://github.com/libgdx/libgdx/pull/3155.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3155.patch"},"body":"Im trying to pass a custom shader to the modelBatch render but it seems it will always take the shader from the shaderProvider. \nIsn't the whole point of these shader parameters to bypass the shaderProvider?\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3155/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3154","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3154/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3154/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3154/events","html_url":"https://github.com/libgdx/libgdx/pull/3154","id":79126828,"number":3154,"title":"Fix problem with running already finished actions by ParallelAction.","user":{"login":"centy","id":581714,"avatar_url":"https://avatars2.githubusercontent.com/u/581714?v=4","gravatar_id":"","url":"https://api.github.com/users/centy","html_url":"https://github.com/centy","followers_url":"https://api.github.com/users/centy/followers","following_url":"https://api.github.com/users/centy/following{/other_user}","gists_url":"https://api.github.com/users/centy/gists{/gist_id}","starred_url":"https://api.github.com/users/centy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/centy/subscriptions","organizations_url":"https://api.github.com/users/centy/orgs","repos_url":"https://api.github.com/users/centy/repos","events_url":"https://api.github.com/users/centy/events{/privacy}","received_events_url":"https://api.github.com/users/centy/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2015-05-21T19:20:00Z","updated_at":"2015-06-04T09:30:24Z","closed_at":"2015-06-04T09:30:24Z","author_association":"NONE","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3154","html_url":"https://github.com/libgdx/libgdx/pull/3154","diff_url":"https://github.com/libgdx/libgdx/pull/3154.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3154.patch"},"body":"When you have code like this: Actions.parallel(Actions.moveTo(x, y, 1f), Actions.addAction(Actions.moveTo(x2, y2, 1f), someActor)) then libgdx crahses.\n\nActions.addAction is executed several times. \"someActor\" has several references to same action, when first action is removed, all other have null pointer inside and crashes.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3154/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3153","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3153/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3153/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3153/events","html_url":"https://github.com/libgdx/libgdx/issues/3153","id":79020133,"number":3153,"title":"BitmapFont.draw() is drawing only a single \\n character in case of various subsequent \\n characters.","user":{"login":"AgrarPirat","id":8950110,"avatar_url":"https://avatars2.githubusercontent.com/u/8950110?v=4","gravatar_id":"","url":"https://api.github.com/users/AgrarPirat","html_url":"https://github.com/AgrarPirat","followers_url":"https://api.github.com/users/AgrarPirat/followers","following_url":"https://api.github.com/users/AgrarPirat/following{/other_user}","gists_url":"https://api.github.com/users/AgrarPirat/gists{/gist_id}","starred_url":"https://api.github.com/users/AgrarPirat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AgrarPirat/subscriptions","organizations_url":"https://api.github.com/users/AgrarPirat/orgs","repos_url":"https://api.github.com/users/AgrarPirat/repos","events_url":"https://api.github.com/users/AgrarPirat/events{/privacy}","received_events_url":"https://api.github.com/users/AgrarPirat/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2015-05-21T14:29:45Z","updated_at":"2015-05-21T14:33:20Z","closed_at":"2015-05-21T14:33:20Z","author_association":"NONE","body":"Hi libGDX Team,\n\nWhile migrating from 1.5.5 to 1.6.0, I've discovered that the new (1.6.0) BitmapFont.draw() method replaces an occurrence of various \\n characters with a single \\n character. For example, a call of:\n`font.draw(batch, \"Hello libGDX!\\n\\n\\nHello\\n \\nlibGDX\", xPos, yPos, 800, Align.center, true);`\nLeads to the following result:\n![libgdx](https://cloud.githubusercontent.com/assets/8950110/7750686/e228415c-ffd5-11e4-8252-0f455905bd16.png)\nVersion 1.5.5 printed two additional empty lines between the first and the second line of text.\nAs a workaround, placing a space character between the two \\n characters can be used to avoid the issue.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3153/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3152","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3152/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3152/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3152/events","html_url":"https://github.com/libgdx/libgdx/pull/3152","id":78992007,"number":3152,"title":"fixed broken build........","user":{"login":"dermetfan","id":4956158,"avatar_url":"https://avatars1.githubusercontent.com/u/4956158?v=4","gravatar_id":"","url":"https://api.github.com/users/dermetfan","html_url":"https://github.com/dermetfan","followers_url":"https://api.github.com/users/dermetfan/followers","following_url":"https://api.github.com/users/dermetfan/following{/other_user}","gists_url":"https://api.github.com/users/dermetfan/gists{/gist_id}","starred_url":"https://api.github.com/users/dermetfan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dermetfan/subscriptions","organizations_url":"https://api.github.com/users/dermetfan/orgs","repos_url":"https://api.github.com/users/dermetfan/repos","events_url":"https://api.github.com/users/dermetfan/events{/privacy}","received_events_url":"https://api.github.com/users/dermetfan/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2015-05-21T13:15:13Z","updated_at":"2015-05-21T13:16:33Z","closed_at":"2015-05-21T13:15:54Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3152","html_url":"https://github.com/libgdx/libgdx/pull/3152","diff_url":"https://github.com/libgdx/libgdx/pull/3152.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3152.patch"},"body":"Sorry, that happens if I don't double check seemingly simple changes..\nsee #3151\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3152/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3151","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3151/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3151/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3151/events","html_url":"https://github.com/libgdx/libgdx/pull/3151","id":78944734,"number":3151,"title":"added Polyline#setVertices(float[])","user":{"login":"dermetfan","id":4956158,"avatar_url":"https://avatars1.githubusercontent.com/u/4956158?v=4","gravatar_id":"","url":"https://api.github.com/users/dermetfan","html_url":"https://github.com/dermetfan","followers_url":"https://api.github.com/users/dermetfan/followers","following_url":"https://api.github.com/users/dermetfan/following{/other_user}","gists_url":"https://api.github.com/users/dermetfan/gists{/gist_id}","starred_url":"https://api.github.com/users/dermetfan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dermetfan/subscriptions","organizations_url":"https://api.github.com/users/dermetfan/orgs","repos_url":"https://api.github.com/users/dermetfan/repos","events_url":"https://api.github.com/users/dermetfan/events{/privacy}","received_events_url":"https://api.github.com/users/dermetfan/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2015-05-21T11:02:21Z","updated_at":"2015-05-21T13:10:26Z","closed_at":"2015-05-21T12:12:25Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3151","html_url":"https://github.com/libgdx/libgdx/pull/3151","diff_url":"https://github.com/libgdx/libgdx/pull/3151.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3151.patch"},"body":"no idea why this method was missing, someone probably just forgot it\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3151/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3150","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3150/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3150/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3150/events","html_url":"https://github.com/libgdx/libgdx/pull/3150","id":78935513,"number":3150,"title":"Bugfix: dispose never called in nested fragment","user":{"login":"domsu","id":4222441,"avatar_url":"https://avatars2.githubusercontent.com/u/4222441?v=4","gravatar_id":"","url":"https://api.github.com/users/domsu","html_url":"https://github.com/domsu","followers_url":"https://api.github.com/users/domsu/followers","following_url":"https://api.github.com/users/domsu/following{/other_user}","gists_url":"https://api.github.com/users/domsu/gists{/gist_id}","starred_url":"https://api.github.com/users/domsu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/domsu/subscriptions","organizations_url":"https://api.github.com/users/domsu/orgs","repos_url":"https://api.github.com/users/domsu/repos","events_url":"https://api.github.com/users/domsu/events{/privacy}","received_events_url":"https://api.github.com/users/domsu/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2015-05-21T10:34:49Z","updated_at":"2015-05-22T12:26:40Z","closed_at":"2015-05-22T12:26:40Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3150","html_url":"https://github.com/libgdx/libgdx/pull/3150","diff_url":"https://github.com/libgdx/libgdx/pull/3150.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3150.patch"},"body":"I have AndroidFragmentApplication that is attached into another fragment and dispose() method is never called.\n\nThe issue was that in nested fragments isRemoving() method always returns false.\n\nThe solution was to invoke isRemoving() on parent fragment that is attached directly to activity\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3150/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3149","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3149/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3149/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3149/events","html_url":"https://github.com/libgdx/libgdx/pull/3149","id":78457362,"number":3149,"title":"Do not scale NinePatch padding if not set","user":{"login":"greek1979","id":6195437,"avatar_url":"https://avatars0.githubusercontent.com/u/6195437?v=4","gravatar_id":"","url":"https://api.github.com/users/greek1979","html_url":"https://github.com/greek1979","followers_url":"https://api.github.com/users/greek1979/followers","following_url":"https://api.github.com/users/greek1979/following{/other_user}","gists_url":"https://api.github.com/users/greek1979/gists{/gist_id}","starred_url":"https://api.github.com/users/greek1979/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/greek1979/subscriptions","organizations_url":"https://api.github.com/users/greek1979/orgs","repos_url":"https://api.github.com/users/greek1979/repos","events_url":"https://api.github.com/users/greek1979/events{/privacy}","received_events_url":"https://api.github.com/users/greek1979/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2015-05-20T09:54:11Z","updated_at":"2015-06-25T14:55:32Z","closed_at":"2015-06-25T14:54:19Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3149","html_url":"https://github.com/libgdx/libgdx/pull/3149","diff_url":"https://github.com/libgdx/libgdx/pull/3149.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3149.patch"},"body":"Stumbled upon an easy-to-fix but hard-to-spot bug in NinePatch code. There is a public method _scale(float, float)_ which multiplies all corner and side patches, and padding by given factor. If there is no padding set for this NinePatch, however, all padding numbers are ruined as they get multiplied by _scaleX_ and _scaleY_ (floating-point numbers), then automatically truncated by Java (as class fields are declared as integers). Moreover, by essentially enabling padding for a NinePatch, its left/right/top/bottom sections and their dimensions are always ignored...\n\nUnless someone has a really good reason why we might want to mutliply \"magic number\" minus-one by an arbitrary floating-point scale factor, then let Java truncate the outcome, it is better to fix this asap.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3149/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3148","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3148/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3148/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3148/events","html_url":"https://github.com/libgdx/libgdx/issues/3148","id":78237426,"number":3148,"title":"Please fix the utterly useless docs (of GlyphLayout).","user":{"login":"AgrarPirat","id":8950110,"avatar_url":"https://avatars2.githubusercontent.com/u/8950110?v=4","gravatar_id":"","url":"https://api.github.com/users/AgrarPirat","html_url":"https://github.com/AgrarPirat","followers_url":"https://api.github.com/users/AgrarPirat/followers","following_url":"https://api.github.com/users/AgrarPirat/following{/other_user}","gists_url":"https://api.github.com/users/AgrarPirat/gists{/gist_id}","starred_url":"https://api.github.com/users/AgrarPirat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AgrarPirat/subscriptions","organizations_url":"https://api.github.com/users/AgrarPirat/orgs","repos_url":"https://api.github.com/users/AgrarPirat/repos","events_url":"https://api.github.com/users/AgrarPirat/events{/privacy}","received_events_url":"https://api.github.com/users/AgrarPirat/received_events","type":"User","site_admin":false},"labels":[{"id":213585995,"url":"https://api.github.com/repos/libgdx/libgdx/labels/How%20not%20to%20report%20an%20issue","name":"How not to report an issue","color":"006b75","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2015-05-19T20:22:25Z","updated_at":"2015-06-24T11:51:20Z","closed_at":"2015-05-19T20:25:55Z","author_association":"NONE","body":"Guys, \n\nI understand that making the API incompatible might be a necessary evil from time to time, but supplying utterly useless documentation is a major annoyance.\nFor example: What's a \"runs of glyphs for a piece of text\"? \nOr even more important: What are the parameters 'start' and 'end', used at one of the Ctors and setText(), used for?\n\nWhat I'm actually trying to figure out is how to replace a simple call like:\nint yOffset = (int) bitmapFont.getWrappedBounds(msg, contentWidth).height;\nBut the docs ain't much of a help. \n\nAs a side note, if you're using libGDX in a production environment, you're spending more time reading its source code than reading it's documentation, yes you're getting used to it, but it's annoying non the less...\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3148/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3147","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3147/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3147/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3147/events","html_url":"https://github.com/libgdx/libgdx/issues/3147","id":78136959,"number":3147,"title":"Intersector.intersectRayTriangle failures (again)","user":{"login":"fwolff","id":527445,"avatar_url":"https://avatars1.githubusercontent.com/u/527445?v=4","gravatar_id":"","url":"https://api.github.com/users/fwolff","html_url":"https://github.com/fwolff","followers_url":"https://api.github.com/users/fwolff/followers","following_url":"https://api.github.com/users/fwolff/following{/other_user}","gists_url":"https://api.github.com/users/fwolff/gists{/gist_id}","starred_url":"https://api.github.com/users/fwolff/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fwolff/subscriptions","organizations_url":"https://api.github.com/users/fwolff/orgs","repos_url":"https://api.github.com/users/fwolff/repos","events_url":"https://api.github.com/users/fwolff/events{/privacy}","received_events_url":"https://api.github.com/users/fwolff/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2015-05-19T15:32:32Z","updated_at":"2017-01-16T14:59:23Z","closed_at":"2015-07-22T15:50:25Z","author_association":"CONTRIBUTOR","body":"I have found another issue with intersectRayTriangle. How to reproduce:\n\n``` java\nVector3 t1 = new Vector3(90.0f, -150.0f, 1077.0f);\nVector3 t2 = new Vector3(90.0f, -120.0f, 1109.0f);\nVector3 t3 = new Vector3(120.0f, -150.0f, 1076.0f);\n\nRay ray = new Ray(new Vector3(90.0f, -150.0f, 1077.1f), new Vector3(-0.0f, 0.99503726f, 0.099503726f));\nSystem.out.println(Intersector.intersectRayTriangle(ray, t1, t2, t3, null); // error: print false\n```\n\nIt's not obvious there is an intersection, but it is at: [90.0, -149.89658, 1077.1104]\n\nSuggested fix (adapted from the [Möller-Trumbore algorithm](http://www.cs.virginia.edu/~gfx/Courses/2003/ImageSynthesis/papers/Acceleration/Fast%20MinimumStorage%20RayTriangle%20Intersection.pdf)):\n\n``` java\nprivate static final float epsilon = 0.00001f;\n\npublic static boolean intersectRayTriangle (Ray ray, Vector3 t1, Vector3 t2, Vector3 t3, Vector3 intersection) {\n    Vector3 edge1 = v0.set(t2).sub(t1);\n    Vector3 edge2 = v1.set(t3).sub(t1);\n\n    Vector3 pvec = v2.set(ray.direction).crs(edge2);\n    float det = edge1.dot(pvec);\n    if (det > -epsilon && det < epsilon) {\n        p.set(t1, t2, t3);\n        if (p.testPoint(ray.origin) == PlaneSide.OnPlane && isPointInTriangle(ray.origin, t1, t2, t3)) {\n            if (intersection != null) intersection.set(ray.origin);\n            return true;\n        }\n        return false;\n    }\n\n    det = 1.0f / det;\n\n    Vector3 tvec = i.set(ray.origin).sub(t1);\n    float u = tvec.dot(pvec) * det;\n    if (u < 0.0f || u > 1.0f) return false;\n\n    Vector3 qvec = tvec.crs(edge1);\n    float v = ray.direction.dot(qvec) * det;\n    if (v < 0.0f || u + v > 1.0f) return false;\n\n    float t = edge2.dot(qvec) * det;\n    if (t < 0) return false;\n\n    if (intersection != null) {\n        if (t < epsilon) {\n            intersection.set(ray.origin);\n        } else {\n            ray.getEndPoint(intersection, t);\n        }\n    }\n\n    return true;\n}\n```\n\nThe only difference with the original algorithm is that the method returns true when the ray origin is inside the triangle. It is clear this new code should be tested thoroughly to make sure it doesn't break existing applications.\n\nShould I send a new pull request?\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3147/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3146","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3146/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3146/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3146/events","html_url":"https://github.com/libgdx/libgdx/issues/3146","id":78057614,"number":3146,"title":"Empty IntIntMap contains 'zero' value","user":{"login":"alex-dorokhov","id":788340,"avatar_url":"https://avatars0.githubusercontent.com/u/788340?v=4","gravatar_id":"","url":"https://api.github.com/users/alex-dorokhov","html_url":"https://github.com/alex-dorokhov","followers_url":"https://api.github.com/users/alex-dorokhov/followers","following_url":"https://api.github.com/users/alex-dorokhov/following{/other_user}","gists_url":"https://api.github.com/users/alex-dorokhov/gists{/gist_id}","starred_url":"https://api.github.com/users/alex-dorokhov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alex-dorokhov/subscriptions","organizations_url":"https://api.github.com/users/alex-dorokhov/orgs","repos_url":"https://api.github.com/users/alex-dorokhov/repos","events_url":"https://api.github.com/users/alex-dorokhov/events{/privacy}","received_events_url":"https://api.github.com/users/alex-dorokhov/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2015-05-19T11:55:25Z","updated_at":"2015-08-07T00:27:55Z","closed_at":"2015-08-07T00:27:55Z","author_association":"CONTRIBUTOR","body":"Asserts below are failed:\n\n``` groovy\ndef intMap = new IntIntMap()\nassert !intMap.containsValue(0)\nassert intMap.findKey(0, -1) == -1\n\ndef floatMap = new IntFloatMap()\nassert !floatMap.containsValue(0)\n...\n```\n\nI guess this also happens for others Int*Map classes.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3146/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3145","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3145/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3145/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3145/events","html_url":"https://github.com/libgdx/libgdx/issues/3145","id":77964009,"number":3145,"title":"Is it correct that draw(Texture) behaves differently than draw(TextureRegion)?","user":{"login":"btd-f-lago","id":6994255,"avatar_url":"https://avatars1.githubusercontent.com/u/6994255?v=4","gravatar_id":"","url":"https://api.github.com/users/btd-f-lago","html_url":"https://github.com/btd-f-lago","followers_url":"https://api.github.com/users/btd-f-lago/followers","following_url":"https://api.github.com/users/btd-f-lago/following{/other_user}","gists_url":"https://api.github.com/users/btd-f-lago/gists{/gist_id}","starred_url":"https://api.github.com/users/btd-f-lago/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/btd-f-lago/subscriptions","organizations_url":"https://api.github.com/users/btd-f-lago/orgs","repos_url":"https://api.github.com/users/btd-f-lago/repos","events_url":"https://api.github.com/users/btd-f-lago/events{/privacy}","received_events_url":"https://api.github.com/users/btd-f-lago/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2015-05-19T06:51:00Z","updated_at":"2015-05-19T17:09:46Z","closed_at":"2015-05-19T17:09:46Z","author_association":"CONTRIBUTOR","body":"I stumbled across something I would consider weird:\n\nDrawing a texture region with:\npublic void draw (TextureRegion region, float x, float y, float originX, float originY, float width, float height,\n        float scaleX, float scaleY, float rotation)\n\nbehaves differently from:\npublic void draw (Texture texture, float x, float y, int srcX, int srcY, int srcWidth, int srcHeight)\n\ncalled with region.getTexture(), same x,y, region.getRegionOriginX(), region.getRegionOriginY(), same width and height parameters.\n\nThe former was called with scaleX = 1.0f, scaleY = 1.0f and rotation = 0.\n\nWhen called with a very small width (5 or 10 pixels) the drawn image shifts to the left by a few pixels, as the width gets closer to the actual region width, the problem gradually disappears.\n\nI was wondering if this might be a bug due to float point math in the rotation matrix, but I'd expect it still to be smaller than one pixel.\nI can't seem to find a clear problem with the code though, I was wondering if anyone had experienced the same problem.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3145/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3143","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3143/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3143/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3143/events","html_url":"https://github.com/libgdx/libgdx/issues/3143","id":77676646,"number":3143,"title":"No custom Json serialization of enum","user":{"login":"BlueRiverInteractive","id":5451631,"avatar_url":"https://avatars2.githubusercontent.com/u/5451631?v=4","gravatar_id":"","url":"https://api.github.com/users/BlueRiverInteractive","html_url":"https://github.com/BlueRiverInteractive","followers_url":"https://api.github.com/users/BlueRiverInteractive/followers","following_url":"https://api.github.com/users/BlueRiverInteractive/following{/other_user}","gists_url":"https://api.github.com/users/BlueRiverInteractive/gists{/gist_id}","starred_url":"https://api.github.com/users/BlueRiverInteractive/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/BlueRiverInteractive/subscriptions","organizations_url":"https://api.github.com/users/BlueRiverInteractive/orgs","repos_url":"https://api.github.com/users/BlueRiverInteractive/repos","events_url":"https://api.github.com/users/BlueRiverInteractive/events{/privacy}","received_events_url":"https://api.github.com/users/BlueRiverInteractive/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2015-05-18T14:25:29Z","updated_at":"2015-06-25T13:37:55Z","closed_at":"2015-06-25T13:37:55Z","author_association":"CONTRIBUTOR","body":"If you have a custom Serializer of an enum or if the enum implements Serializable the read method will never be called because it is already handled with the default readValue method. This makes sense for Serializable but for a Serializer it would be nice if we could handle it. \n\nConsider having a enum type that stores some additional info, for example a product ID and a price. By default only the enum constant name will be written and read. But we want to write the id and the price to the json. When reading the json we want to use the id to find the enum constant and update its price value.\n\nSomething like:\n\n``` Java\nString id = jsonData.getString(\"id\");\nProduct product = Product.findById(id);\nproduct.setPrice(jsonData.getDouble(\"price\");\nreturn product;\n```\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3143/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3142","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3142/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3142/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3142/events","html_url":"https://github.com/libgdx/libgdx/pull/3142","id":77508089,"number":3142,"title":"Bind server socket to a specific hostname or ip address (v2)","user":{"login":"btd-f-lago","id":6994255,"avatar_url":"https://avatars1.githubusercontent.com/u/6994255?v=4","gravatar_id":"","url":"https://api.github.com/users/btd-f-lago","html_url":"https://github.com/btd-f-lago","followers_url":"https://api.github.com/users/btd-f-lago/followers","following_url":"https://api.github.com/users/btd-f-lago/following{/other_user}","gists_url":"https://api.github.com/users/btd-f-lago/gists{/gist_id}","starred_url":"https://api.github.com/users/btd-f-lago/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/btd-f-lago/subscriptions","organizations_url":"https://api.github.com/users/btd-f-lago/orgs","repos_url":"https://api.github.com/users/btd-f-lago/repos","events_url":"https://api.github.com/users/btd-f-lago/events{/privacy}","received_events_url":"https://api.github.com/users/btd-f-lago/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2015-05-18T05:25:59Z","updated_at":"2015-05-18T12:25:23Z","closed_at":"2015-05-18T12:25:23Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3142","html_url":"https://github.com/libgdx/libgdx/pull/3142","diff_url":"https://github.com/libgdx/libgdx/pull/3142.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3142.patch"},"body":"I thought this might be useful for gdx-based applications that runs as a server on multi-domain platforms (i.e. game servers).\nAdded an optional argument \"hostname\" to method Net.newServerSocket to allow specific domain / ip address binding, it maps 1:1 to Java.net binding interface.\n\n(Re-opening from #3040 because I made a mess. Sorry about that.)\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3142/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3141","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3141/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3141/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3141/events","html_url":"https://github.com/libgdx/libgdx/issues/3141","id":77330288,"number":3141,"title":"ExtendViewport does not Always Preserve Aspect Ratio","user":{"login":"cogmind","id":10604003,"avatar_url":"https://avatars2.githubusercontent.com/u/10604003?v=4","gravatar_id":"","url":"https://api.github.com/users/cogmind","html_url":"https://github.com/cogmind","followers_url":"https://api.github.com/users/cogmind/followers","following_url":"https://api.github.com/users/cogmind/following{/other_user}","gists_url":"https://api.github.com/users/cogmind/gists{/gist_id}","starred_url":"https://api.github.com/users/cogmind/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cogmind/subscriptions","organizations_url":"https://api.github.com/users/cogmind/orgs","repos_url":"https://api.github.com/users/cogmind/repos","events_url":"https://api.github.com/users/cogmind/events{/privacy}","received_events_url":"https://api.github.com/users/cogmind/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2015-05-17T15:18:55Z","updated_at":"2015-06-24T04:20:28Z","closed_at":"2015-06-24T04:20:28Z","author_association":"NONE","body":"A square shape with x = y = 10 does not render as a square, when using ExtendViewport. Instead a y-stretched rectangle is presented. When switching to FitViewport with the same parameters, the aspect ratio is maintained.\n\n``` java\n    public void create () {\n        camera = new OrthographicCamera(800, 480);\n        viewport = new ExtendViewport(800, 480, camera);\n        stage = new Stage(viewport);\n```\n\n```\n        shapeRenderer.begin(ShapeType.Filled);\n        shapeRenderer.identity();\n        shapeRenderer.setColor( Colors.get(square.color));          \n        shapeRenderer.rect(square.x, square.y, square.width, square.height);\n        shapeRenderer.end();\n```\n\nI noticed that FitViewport extends ScalingViewport while ExtendViewport extends Viewport. The difference might be due to using enum _fit_ in ExtendViewport:\n\n``` java\n        Vector2 scaled = Scaling.fit.apply(worldWidth, worldHeight, screenWidth, screenHeight);\n```\n\nIn the FitViewport this is simply:\n\n``` java\n        Vector2 scaled = scaling.apply(getWorldWidth(), getWorldHeight(), screenWidth, screenHeight);\n```\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3141/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3140","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3140/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3140/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3140/events","html_url":"https://github.com/libgdx/libgdx/pull/3140","id":77301634,"number":3140,"title":"New TiledMapPacker output, fixes multiple tileset problem","user":{"login":"oddlydrawn","id":3712667,"avatar_url":"https://avatars2.githubusercontent.com/u/3712667?v=4","gravatar_id":"","url":"https://api.github.com/users/oddlydrawn","html_url":"https://github.com/oddlydrawn","followers_url":"https://api.github.com/users/oddlydrawn/followers","following_url":"https://api.github.com/users/oddlydrawn/following{/other_user}","gists_url":"https://api.github.com/users/oddlydrawn/gists{/gist_id}","starred_url":"https://api.github.com/users/oddlydrawn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/oddlydrawn/subscriptions","organizations_url":"https://api.github.com/users/oddlydrawn/orgs","repos_url":"https://api.github.com/users/oddlydrawn/repos","events_url":"https://api.github.com/users/oddlydrawn/events{/privacy}","received_events_url":"https://api.github.com/users/oddlydrawn/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":16,"created_at":"2015-05-17T12:36:59Z","updated_at":"2015-09-29T05:10:35Z","closed_at":"2015-09-29T05:10:35Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3140","html_url":"https://github.com/libgdx/libgdx/pull/3140","diff_url":"https://github.com/libgdx/libgdx/pull/3140.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3140.patch"},"body":"##### Adds/Changes the following\n- Searches for maps in nested folders, regardless of depth\n- Creates an individual atlas for each map (uses the map name sans extension)\n- Fixes loading/rendering problems with multiple tilesets\n- Removes isBlended checking and addition of blended property\n- Removes unused methods, broken methods, minor cleanup throughout TiledMapPacker class\n- Fixes the problem of not locating tilesets with ../ in the map Note: This has only been fixed with the      new functionality (not --combine-tilsets) The old method of combining tilesets into one atlas still has this problem.\n- Old functionality can be called with the option \"--combine-tilesets\"\n- Adds two classes to test the options and renders the processed maps\n- Changes usage to: Usage: INPUTDIR [OUTPUTDIR] [--strip-unused] [--combine-tilesets] [-v]\n- Adds a new usage prompt:\n  \n  ```\n  Usage: INPUTDIR [OUTPUTDIR] [--strip-unused] [--combine-tilesets] [-v] \n  Processes a directory of Tiled .tmx maps. Unable to process maps with XML tile layer format.\n  \n      --strip-unused \n           omits all tiles that are not used. Speeds up the processing. Smaller tilesets.           \n      --combine-tilesets \n           instead of creating a tileset for each map, this combines the tilesets into some kind of monster tileset. Has problems with tileset location. Has problems with nested folders. Not recommended. \n       -v \n           outputs which tiles are stripped and included\n  ```\n##### Example:\n\nRunning TiledMapPacker on \"./in ./out\" with an \"in\" directory with the following structure:\n- in/overworld.tmx\n- in/dawn/Examples/Blank.tmx\n- in/dawn/Examples/Dungeon.tmx\n- in/dawn/Examples/Logo.tmx\n- in/dawn/Examples/Mine.tmx\n- in/dawn/Examples/Town.tmx\n- in/dawn/Examples/Underworld.tmx\n- in/world1Maps/dungeon1.tmx\n- in/world1Maps/dungeon2.tmx\n- in/world2Maps/town1.tmx\n- in/world2Maps/town2.tmx\n\nwould have the following structure in the \"out\" directory:\n- out/Blank.tmx\n- out/dungeon1.tmx\n- out/dungeon2.tmx\n- out/Dungeon.tmx\n- out/Logo.tmx\n- out/Mine.tmx\n- out/overworld.tmx\n- out/town1.tmx\n- out/town2.tmx\n- out/Town.tmx\n- out/Underworld.tmx\n- out/tileset/Blank.atlas\n- out/tileset/dungeon1.atlas\n- out/tileset/dungeon1.png\n- out/tileset/dungeon2.atlas\n- out/tileset/dungeon2.png\n- out/tileset/Dungeon.atlas\n- out/tileset/Dungeon.png\n- out/tileset/Logo.atlas\n- out/tileset/Logo.png\n- out/tileset/Mine.atlas\n- out/tileset/Mine.png\n- out/tileset/overworld.atlas\n- out/tileset/overworld.png\n- out/tileset/town1.atlas\n- out/tileset/town2.atlas\n- out/tileset/town2.png\n- out/tileset/Town.atlas\n- out/tileset/Town.png\n- out/tileset/Underworld.atlas\n- out/tileset/Underworld.png\n\n(Note: maps without a tileset .png were completely empty maps)\n\nOld functionality (now --combine-tilesets) can't handle the nested directories or parent (../) paths for tilesets but if it could run on the same in/out directories it would have the following output:\n- out/{same maps here}\n- out/tileset/packed.atlas\n- out/tileset/packed.png\n\nWith all of the tiles from every map inside the packed.png.\n##### TL;DR\n\nChanges TiledMapPacker to create one texture atlas per map, adds two classes to\ntest that I haven't messed things up more than they were.. I think. Fixes multiple tileset loading/rendering problem. Removes isBlended checking, property addition.\n- modified:   CHANGES\n- modified:   extensions/gdx-tools/src/com/badlogic/gdx/tiledmappacker/TiledMapPacker.java\n- new file:   extensions/gdx-tools/src/com/badlogic/gdx/tiledmappacker/TiledMapPackerTest.java\n- new file:   extensions/gdx-tools/src/com/badlogic/gdx/tiledmappacker/TiledMapPackerTestRender.java\n- modified: gdx/src/com/badlogic/gdx/maps/tiled/AtlasTmxMapLoader.java\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3140/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3139","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3139/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3139/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3139/events","html_url":"https://github.com/libgdx/libgdx/pull/3139","id":77130337,"number":3139,"title":"Fixed a NPE.","user":{"login":"nooone","id":5896510,"avatar_url":"https://avatars3.githubusercontent.com/u/5896510?v=4","gravatar_id":"","url":"https://api.github.com/users/nooone","html_url":"https://github.com/nooone","followers_url":"https://api.github.com/users/nooone/followers","following_url":"https://api.github.com/users/nooone/following{/other_user}","gists_url":"https://api.github.com/users/nooone/gists{/gist_id}","starred_url":"https://api.github.com/users/nooone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nooone/subscriptions","organizations_url":"https://api.github.com/users/nooone/orgs","repos_url":"https://api.github.com/users/nooone/repos","events_url":"https://api.github.com/users/nooone/events{/privacy}","received_events_url":"https://api.github.com/users/nooone/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2015-05-16T20:58:33Z","updated_at":"2015-05-16T21:22:12Z","closed_at":"2015-05-16T21:22:12Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3139","html_url":"https://github.com/libgdx/libgdx/pull/3139","diff_url":"https://github.com/libgdx/libgdx/pull/3139.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3139.patch"},"body":"Added the same check as in `getResultAsString()`, for the same reason...\n\n```\njava.lang.NullPointerException\n    at com.badlogic.gdx.utils.StreamUtils.copyStream(StreamUtils.java:49)\n    at com.badlogic.gdx.utils.StreamUtils.copyStream(StreamUtils.java:36)\n    at com.badlogic.gdx.utils.StreamUtils.copyStreamToByteArray(StreamUtils.java:91)\n    at com.badlogic.gdx.net.NetJavaImpl$HttpClientResponse.getResult(NetJavaImpl.java:61)\n```\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3139/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3138","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3138/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3138/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3138/events","html_url":"https://github.com/libgdx/libgdx/issues/3138","id":76987519,"number":3138,"title":"scene2d.utils.Align missing from 1.6.0","user":{"login":"shvelo","id":1080798,"avatar_url":"https://avatars0.githubusercontent.com/u/1080798?v=4","gravatar_id":"","url":"https://api.github.com/users/shvelo","html_url":"https://github.com/shvelo","followers_url":"https://api.github.com/users/shvelo/followers","following_url":"https://api.github.com/users/shvelo/following{/other_user}","gists_url":"https://api.github.com/users/shvelo/gists{/gist_id}","starred_url":"https://api.github.com/users/shvelo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/shvelo/subscriptions","organizations_url":"https://api.github.com/users/shvelo/orgs","repos_url":"https://api.github.com/users/shvelo/repos","events_url":"https://api.github.com/users/shvelo/events{/privacy}","received_events_url":"https://api.github.com/users/shvelo/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2015-05-16T09:01:24Z","updated_at":"2015-05-16T09:38:46Z","closed_at":"2015-05-16T09:38:46Z","author_association":"NONE","body":"I'm trying to build my game with Gradle 2.4, `$gdxVersion 1.6.0`, task `:core:compileJava`  and I get the following error message \n\n```\n  error: cannot find symbol \n  import com.badlogic.gdx.scenes.scene2d.utils.Align;\n                                               ^\n  symbol:   class Align\n  location: package com.badlogic.gdx.scenes.scene2d.utils\n```\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3138/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}}],"meta":{"x-ratelimit-limit":"5000","x-ratelimit-remaining":"4941","x-ratelimit-reset":"1506844633","x-github-request-id":"ECCC:028A:1AB284F:2EC9E6E:59D094E5","x-github-media-type":"github.squirrel-girl-preview","link":"<https://api.github.com/repositories/5373551/issues?state=all&page=60>; rel=\"next\", <https://api.github.com/repositories/5373551/issues?state=all&page=164>; rel=\"last\", <https://api.github.com/repositories/5373551/issues?state=all&page=1>; rel=\"first\", <https://api.github.com/repositories/5373551/issues?state=all&page=58>; rel=\"prev\"","etag":"\"782d4f515fcca1f491035552d0924218\"","status":"200 OK"}}
