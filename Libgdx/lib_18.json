{"data":[{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4398","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4398/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4398/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4398/events","html_url":"https://github.com/libgdx/libgdx/issues/4398","id":186986967,"number":4398,"title":"[Feature request] Bind many textures at once in SpriteBatch","user":{"login":"magicgoose","id":1442206,"avatar_url":"https://avatars1.githubusercontent.com/u/1442206?v=4","gravatar_id":"","url":"https://api.github.com/users/magicgoose","html_url":"https://github.com/magicgoose","followers_url":"https://api.github.com/users/magicgoose/followers","following_url":"https://api.github.com/users/magicgoose/following{/other_user}","gists_url":"https://api.github.com/users/magicgoose/gists{/gist_id}","starred_url":"https://api.github.com/users/magicgoose/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/magicgoose/subscriptions","organizations_url":"https://api.github.com/users/magicgoose/orgs","repos_url":"https://api.github.com/users/magicgoose/repos","events_url":"https://api.github.com/users/magicgoose/events{/privacy}","received_events_url":"https://api.github.com/users/magicgoose/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":11,"created_at":"2016-11-03T06:31:16Z","updated_at":"2016-12-05T07:11:47Z","closed_at":"2016-12-04T11:41:02Z","author_association":"CONTRIBUTOR","body":"Since introduction of programmable pipeline, it's possible to use several textures without re-binding them, instead of binding different textures to one texture unit.\r\n\r\nAFAIK OpenGL ES 2.0 guarantees that at least 8 texture units may be used, and even simultaneously from one GLSL program. (can't find a good source on this, OpenGL ES spec is not explicit about it, but I guess, it needs to be checked at runtime anyway)\r\n\r\nSo that's a lot of space to use, most games can probably free themselves from binding any textures during gameplay at all. It can also solve the dilemma of sprite rendering order when all sprites do not fit in 1 texture atlas and also are translucent.\r\n\r\nFrom what I see from the code, SpriteBatch doesn't take any advantage of multiple texture units.\r\n\r\nSo right now they can be exploited only by going lower level (doing explicit OpenGL calls and writing GLSL code), right? Or I'm missing something?\r\n\r\nI think it can be done like this:\r\n• add another vertex attribute (texture id) to the geometry that the SpriteBatch emits\r\n• in fragment shader, use that index to choose the right texture\r\n• instead of field `Texture lastTexture = null;` in SpriteBatch use some data structure which keeps at most `MAX_TEXTURE_IMAGE_UNITS` textures and purges them based on some criteria (last used, etc); when a sprite is requested to render, check if the needed texture is in this structure and if yes, use it; otherwise do `flush();` and bind&add the new texture to the structure (freeing and reusing some other texture unit if needed)\r\n\r\nThis implies that the support for fixed function pipeline is dropped (who needs it anyway), but I guess it's also not hard to make this thing optional.\r\n\r\nWhat do you think about it?","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4398/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4397","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4397/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4397/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4397/events","html_url":"https://github.com/libgdx/libgdx/issues/4397","id":186784685,"number":4397,"title":"First Textfield initialization 3-5ms longer than the rest","user":{"login":"spectre329","id":21193590,"avatar_url":"https://avatars2.githubusercontent.com/u/21193590?v=4","gravatar_id":"","url":"https://api.github.com/users/spectre329","html_url":"https://github.com/spectre329","followers_url":"https://api.github.com/users/spectre329/followers","following_url":"https://api.github.com/users/spectre329/following{/other_user}","gists_url":"https://api.github.com/users/spectre329/gists{/gist_id}","starred_url":"https://api.github.com/users/spectre329/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/spectre329/subscriptions","organizations_url":"https://api.github.com/users/spectre329/orgs","repos_url":"https://api.github.com/users/spectre329/repos","events_url":"https://api.github.com/users/spectre329/events{/privacy}","received_events_url":"https://api.github.com/users/spectre329/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-11-02T12:14:04Z","updated_at":"2016-11-02T15:18:27Z","closed_at":"2016-11-02T15:18:27Z","author_association":"NONE","body":"#### Issue details\r\nFor example:\r\nWe have pre-loaded graphics, fonts so loading a textfield is just a matter of nanoseconds, simple objects creation.\r\n\r\nWe have 4 textfields: tf1, tf2, tf3, tf4\r\nWhen we initialize them via 'new', first Textfield will initialize in 3-5 milliseconds and the rest in ~30000 nanoseconds = 0.03 ms.\r\n\r\nNo matter how many textfields are there, only the first one gets the lag.\r\n\r\n#### Reproduction steps/code\r\n\r\nSo, I have a little bit custom Textfield (with textfieldstyle in constructor) but there's no leak - I'm sitting here for 2 days and I checked everything.\r\n\r\n```\r\n  public TextField(String text) {\r\n       // this super lasts max 10 000 nano (assets are pre-loaded) (but 1st time it lasts 3ms)\r\n        super(text, new TextFieldStyle(AssetsLoader.getDefaultFont(), AssetsLoader.getDefaultColor(), null, null, null));\r\n        setFocusTraversal(false);\r\n  }\r\n\r\n```\r\ngetDefaultFont execution time is max 3000ns, it's just a static reference (tested 12312313524534 times)\r\ngetDefaultColor - same\r\n\r\n\r\nSo there's only one thing left - the super() textfield constructor:\r\n```\r\n\tsetStyle(style);\r\n\tclipboard = Gdx.app.getClipboard();\r\n\tinitialize();\r\n\tsetText(text);\r\n\tsetSize(getPrefWidth(), getPrefHeight());\r\n```\r\n\r\nTested it, execution of this constructor takes longer with the first textfield in code (but still not 3-5 ms), something around 1ms, when normally it takes 0.01 at max. I have already tested each of these methods by overriding them.\r\n\r\nSo, if you could look at this, I would be grateful, cause I don't know if I'm retarded since monday (I proved that I'm not) or there's something wrong.\r\n\r\n#### Version of LibGDX and/or relevant dependencies\r\n        gdxVersion = '1.9.4'\r\n        roboVMVersion = '2.2.0'\r\n        box2DLightsVersion = '1.4'\r\n        ashleyVersion = '1.7.0'\r\n        aiVersion = '1.8.0'\r\n\r\n\r\n#### Please select the affected platforms\r\n- [x] Android\r\n- [x] Windows\r\nTested on these\r\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4397/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4396","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4396/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4396/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4396/events","html_url":"https://github.com/libgdx/libgdx/pull/4396","id":186722439,"number":4396,"title":"Fixed IOSMusic dispose","user":{"login":"rolandvigh","id":18005418,"avatar_url":"https://avatars1.githubusercontent.com/u/18005418?v=4","gravatar_id":"","url":"https://api.github.com/users/rolandvigh","html_url":"https://github.com/rolandvigh","followers_url":"https://api.github.com/users/rolandvigh/followers","following_url":"https://api.github.com/users/rolandvigh/following{/other_user}","gists_url":"https://api.github.com/users/rolandvigh/gists{/gist_id}","starred_url":"https://api.github.com/users/rolandvigh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rolandvigh/subscriptions","organizations_url":"https://api.github.com/users/rolandvigh/orgs","repos_url":"https://api.github.com/users/rolandvigh/repos","events_url":"https://api.github.com/users/rolandvigh/events{/privacy}","received_events_url":"https://api.github.com/users/rolandvigh/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-11-02T06:28:32Z","updated_at":"2016-11-06T04:38:20Z","closed_at":"2016-11-06T04:38:20Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4396","html_url":"https://github.com/libgdx/libgdx/pull/4396","diff_url":"https://github.com/libgdx/libgdx/pull/4396.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4396.patch"},"body":"","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4396/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4395","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4395/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4395/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4395/events","html_url":"https://github.com/libgdx/libgdx/pull/4395","id":186692755,"number":4395,"title":"Clean up VertexAttribute and expose expert constructors","user":{"login":"cypherdare","id":1843131,"avatar_url":"https://avatars2.githubusercontent.com/u/1843131?v=4","gravatar_id":"","url":"https://api.github.com/users/cypherdare","html_url":"https://github.com/cypherdare","followers_url":"https://api.github.com/users/cypherdare/followers","following_url":"https://api.github.com/users/cypherdare/following{/other_user}","gists_url":"https://api.github.com/users/cypherdare/gists{/gist_id}","starred_url":"https://api.github.com/users/cypherdare/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cypherdare/subscriptions","organizations_url":"https://api.github.com/users/cypherdare/orgs","repos_url":"https://api.github.com/users/cypherdare/repos","events_url":"https://api.github.com/users/cypherdare/events{/privacy}","received_events_url":"https://api.github.com/users/cypherdare/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2016-11-02T01:47:26Z","updated_at":"2017-01-06T22:41:43Z","closed_at":"2017-01-06T22:41:41Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4395","html_url":"https://github.com/libgdx/libgdx/pull/4395","diff_url":"https://github.com/libgdx/libgdx/pull/4395.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4395.patch"},"body":"This builds off of #3936. The expert constructors can be made public with a bit of clean-up to avoid potential pitfalls and clarify the docs. Users will still need to understand the parameters that go into `glVertexAttribPointer`, but I don't think people will try to use any of the constructors unless they know what they're for.\r\n\r\n@xoppa \r\nI think MeshBuilder might be incompatible with customized VertexAttributes, based on a quick look at its `begin()` method. I'm not very familiar with MeshBuilder, but you might want to add a doc clarifying that it only supports the built-in VertexAttributes. I didn't test it, but maybe it would be compatible so long as one of the built-in Usages is used.\r\n\r\nMost people will never need these features, but they might open up some ways to optimize mesh vertex sizes. I've tried doing that before and this would have helped.\r\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4395/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4394","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4394/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4394/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4394/events","html_url":"https://github.com/libgdx/libgdx/issues/4394","id":186677142,"number":4394,"title":"Getting core and desktop build jar added to dependencies of theirself","user":{"login":"Litarvan","id":8712146,"avatar_url":"https://avatars3.githubusercontent.com/u/8712146?v=4","gravatar_id":"","url":"https://api.github.com/users/Litarvan","html_url":"https://github.com/Litarvan","followers_url":"https://api.github.com/users/Litarvan/followers","following_url":"https://api.github.com/users/Litarvan/following{/other_user}","gists_url":"https://api.github.com/users/Litarvan/gists{/gist_id}","starred_url":"https://api.github.com/users/Litarvan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Litarvan/subscriptions","organizations_url":"https://api.github.com/users/Litarvan/orgs","repos_url":"https://api.github.com/users/Litarvan/repos","events_url":"https://api.github.com/users/Litarvan/events{/privacy}","received_events_url":"https://api.github.com/users/Litarvan/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":12,"created_at":"2016-11-01T23:38:46Z","updated_at":"2016-11-04T23:08:05Z","closed_at":"2016-11-02T12:46:57Z","author_association":"NONE","body":"#### Issue details\r\nI saw on IntelliJ that desktop/build/libs/desktop-1.0.jar was in the dependencies of the 'desktop' project, and core/build/libs/core-1.0.jar was in the dependencies of the 'core' project, it causes a lot of problems, i need to manually delete it from the dependencies when i do a Gradle sync, i searched i didn't found anything on the gradle files causing this issue. If i don't delete the dependency, i need to build to refresh code completion/error detection/etc...\r\n\r\n#### Reproduction steps/code\r\nCreate a project with gdx-setup, (adding scala ? and vis-ui ?), building desktop and core, import the project and do gradle sync on IntelliJ.\r\n\r\n#### Version of LibGDX and/or relevant dependencies\r\n1.9.4 (with IntelliJ 2016.3 EAP)\r\n\r\n#### Please select the affected platforms\r\n- [ ] Android\r\n- [ ] iOS (robovm)\r\n- [ ] iOS (MOE)\r\n- [ ] HTML/GWT\r\n- [ ] Windows\r\n- [x] Linux (The only one i tested)\r\n- [ ] MacOS\r\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4394/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4393","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4393/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4393/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4393/events","html_url":"https://github.com/libgdx/libgdx/issues/4393","id":186653658,"number":4393,"title":"Tilesets with margin/spaces cause flickering when rendering while camera moves","user":{"login":"PojahnM","id":5539893,"avatar_url":"https://avatars0.githubusercontent.com/u/5539893?v=4","gravatar_id":"","url":"https://api.github.com/users/PojahnM","html_url":"https://github.com/PojahnM","followers_url":"https://api.github.com/users/PojahnM/followers","following_url":"https://api.github.com/users/PojahnM/following{/other_user}","gists_url":"https://api.github.com/users/PojahnM/gists{/gist_id}","starred_url":"https://api.github.com/users/PojahnM/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/PojahnM/subscriptions","organizations_url":"https://api.github.com/users/PojahnM/orgs","repos_url":"https://api.github.com/users/PojahnM/repos","events_url":"https://api.github.com/users/PojahnM/events{/privacy}","received_events_url":"https://api.github.com/users/PojahnM/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-11-01T21:33:25Z","updated_at":"2016-11-01T21:35:05Z","closed_at":"2016-11-01T21:35:05Z","author_association":"NONE","body":"I am using Tiled to create a TMX map which I render in LibGDX. The tiles in the tileset have 1 pixel margin. This cause the rendering unit to flicker while rendering the tiles when the camera moves. You can actually see the margin color. \r\n\r\nUsing the latest on nightly as of this date. Testing on Windows 10 using LWJGL3 backend. \r\n\r\nThis is how the flickering looks:\r\nhttps://s11.postimg.org/xr702rtgj/line.png\r\n\r\nThe vertical line the two arrows point at are visible when the camera moves. \r\n\r\nThis is the tile image:\r\nhttps://s15.postimg.org/mnyg4wh57/report.png\r\n\r\nIn Tiled, both space and margin is set to 1.","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4393/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4392","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4392/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4392/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4392/events","html_url":"https://github.com/libgdx/libgdx/issues/4392","id":186534395,"number":4392,"title":"[FreeTypeFontGenerator] doesn't work for russian (cyrillic) characters","user":{"login":"JFixby","id":1580663,"avatar_url":"https://avatars0.githubusercontent.com/u/1580663?v=4","gravatar_id":"","url":"https://api.github.com/users/JFixby","html_url":"https://github.com/JFixby","followers_url":"https://api.github.com/users/JFixby/followers","following_url":"https://api.github.com/users/JFixby/following{/other_user}","gists_url":"https://api.github.com/users/JFixby/gists{/gist_id}","starred_url":"https://api.github.com/users/JFixby/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JFixby/subscriptions","organizations_url":"https://api.github.com/users/JFixby/orgs","repos_url":"https://api.github.com/users/JFixby/repos","events_url":"https://api.github.com/users/JFixby/events{/privacy}","received_events_url":"https://api.github.com/users/JFixby/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2016-11-01T13:32:09Z","updated_at":"2016-11-01T15:45:34Z","closed_at":"2016-11-01T15:44:51Z","author_association":"CONTRIBUTOR","body":"#### Issue details\r\n\r\nWorks fine for latine chars. Fails to render cyrillic.\r\n\r\nTracking the call I discovered that FreeTypeFontGenerator calls the line 423 and receives null for cyrillic characters:\r\n```\r\nGlyph glyph = createGlyph(c, data, parameter, stroker, baseLine, packer);\r\n```\r\nwhere createGlyph returns null at line 492\r\n```\r\nboolean missing = face.getCharIndex(c) == 0 && c != 0;\r\n\t\tif (missing) return null;\r\n```\r\n\r\nafter making JNI-call getCharIndex:\r\n```\r\nprivate static native int getCharIndex(long face, int charCode);\r\n// return FT_Get_Char_Index((FT_Face)face, charCode);\r\n```\r\n\r\nSee \r\nhttps://github.com/libgdx/libgdx/blob/master/extensions/gdx-freetype/src/com/badlogic/gdx/graphics/g2d/freetype/FreeTypeFontGenerator.java#L423\r\n\r\n\r\n#### Version of LibGDX and/or relevant dependencies\r\nCurrent code 1.9.5 (1-Nov-2016)\r\n\r\n\r\n#### affected platforms\r\n- [X ] Windows\r\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4392/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4391","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4391/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4391/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4391/events","html_url":"https://github.com/libgdx/libgdx/pull/4391","id":186439793,"number":4391,"title":"Buttons keep skin reference","user":{"login":"cypherdare","id":1843131,"avatar_url":"https://avatars2.githubusercontent.com/u/1843131?v=4","gravatar_id":"","url":"https://api.github.com/users/cypherdare","html_url":"https://github.com/cypherdare","followers_url":"https://api.github.com/users/cypherdare/followers","following_url":"https://api.github.com/users/cypherdare/following{/other_user}","gists_url":"https://api.github.com/users/cypherdare/gists{/gist_id}","starred_url":"https://api.github.com/users/cypherdare/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cypherdare/subscriptions","organizations_url":"https://api.github.com/users/cypherdare/orgs","repos_url":"https://api.github.com/users/cypherdare/repos","events_url":"https://api.github.com/users/cypherdare/events{/privacy}","received_events_url":"https://api.github.com/users/cypherdare/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-11-01T01:02:29Z","updated_at":"2016-11-01T06:32:44Z","closed_at":"2016-11-01T06:32:39Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4391","html_url":"https://github.com/libgdx/libgdx/pull/4391","diff_url":"https://github.com/libgdx/libgdx/pull/4391.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4391.patch"},"body":"Fixes #4387 \r\n\r\nThese few constructors (out of all the Button and Button subclass constructors) were missing this pass-through of the Skin reference, causing `getSkin()` to return null when it shouldn't (that is, when a skin was passed to the constructor).","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4391/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4390","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4390/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4390/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4390/events","html_url":"https://github.com/libgdx/libgdx/issues/4390","id":186208888,"number":4390,"title":"There's no secure way to get gdx-setup.jar except building from source","user":{"login":"magicgoose","id":1442206,"avatar_url":"https://avatars1.githubusercontent.com/u/1442206?v=4","gravatar_id":"","url":"https://api.github.com/users/magicgoose","html_url":"https://github.com/magicgoose","followers_url":"https://api.github.com/users/magicgoose/followers","following_url":"https://api.github.com/users/magicgoose/following{/other_user}","gists_url":"https://api.github.com/users/magicgoose/gists{/gist_id}","starred_url":"https://api.github.com/users/magicgoose/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/magicgoose/subscriptions","organizations_url":"https://api.github.com/users/magicgoose/orgs","repos_url":"https://api.github.com/users/magicgoose/repos","events_url":"https://api.github.com/users/magicgoose/events{/privacy}","received_events_url":"https://api.github.com/users/magicgoose/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-10-31T05:45:14Z","updated_at":"2016-11-03T16:15:57Z","closed_at":"2016-11-03T16:15:07Z","author_association":"CONTRIBUTOR","body":"#### Issue details\r\nThe download of gdx-setup.jar is served over plain text connection (http), which is not suitable for executable code.\r\n\r\n#### Reproduction steps/code\r\nTry to download it from the location given in Wiki, notice the redirect to `http://libgdx.badlogicgames.com/nightlies/dist/gdx-setup.jar`\r\n\r\n\t$ curl -L -v https://bitly.com/1i3C7i3\r\n\t* Connected to bitly.com (67.199.248.14) port 443 (#0)\r\n\t* TLS 1.2 connection using TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\r\n\t* Server certificate: *.bitly.com\r\n\t* Server certificate: DigiCert SHA2 High Assurance Server CA\r\n\t* Server certificate: DigiCert High Assurance EV Root CA\r\n\t> GET /1i3C7i3 HTTP/1.1\r\n\t> Host: bitly.com\r\n\t> User-Agent: curl/7.43.0\r\n\t> Accept: */*\r\n\t>\r\n\t< HTTP/1.1 301 Moved Permanently\r\n\t< Server: nginx\r\n\t< Date: Mon, 31 Oct 2016 05:36:42 GMT\r\n\t< Content-Type: text/html; charset=utf-8\r\n\t< Content-Length: 147\r\n\t< Connection: keep-alive\r\n\t< Cache-Control: private, max-age=90\r\n\t< Content-Security-Policy: referrer always;\r\n\t< Location: http://libgdx.badlogicgames.com/nightlies/dist/gdx-setup.jar\r\n\t< Referrer-Policy: unsafe-url\r\n\t< Set-Cookie: _bit=g9v5AG-4efa2ea0d48fc2213d-00i; Domain=bitly.com; Expires=Sat, 29 Apr 2017 05:36:42 GMT\r\n\t<\r\n\t* Ignoring the response-body\r\n\t{ [147 bytes data]\r\n\t100   147  100   147    0     0     37      0  0:00:03  0:00:03 --:--:--    37\r\n\t* Connection #0 to host bitly.com left intact\r\n\t* Issue another request to this URL: 'http://libgdx.badlogicgames.com/nightlies/dist/gdx-setup.jar'\r\n\t*   Trying 144.76.220.132...\r\n\t* Connected to libgdx.badlogicgames.com (144.76.220.132) port 80 (#1)\r\n\t> GET /nightlies/dist/gdx-setup.jar HTTP/1.1\r\n\t> Host: libgdx.badlogicgames.com\r\n\t> User-Agent: curl/7.43.0\r\n\t> Accept: */*\r\n\t>\r\n\t< HTTP/1.1 200 OK\r\n\t< Server: nginx/1.4.6 (Ubuntu)\r\n\t< Date: Mon, 31 Oct 2016 05:36:43 GMT\r\n\t< Content-Type: application/java-archive\r\n\t< Content-Length: 1493634\r\n\t< Last-Modified: Thu, 27 Oct 2016 21:12:39 GMT\r\n\t< Connection: keep-alive\r\n\t< ETag: \"58126dc7-16ca82\"\r\n\t< Accept-Ranges: bytes\r\n\t<\r\n\r\nAnd building from source would be OK, if it was in a separate repo… unfortunately git has to download >100MB of data even if I need only single folder (yes I tried using depth=1 and sparse mode)","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4390/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4389","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4389/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4389/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4389/events","html_url":"https://github.com/libgdx/libgdx/issues/4389","id":186168685,"number":4389,"title":"Update GWT to 2.8","user":{"login":"barkholt","id":16083107,"avatar_url":"https://avatars3.githubusercontent.com/u/16083107?v=4","gravatar_id":"","url":"https://api.github.com/users/barkholt","html_url":"https://github.com/barkholt","followers_url":"https://api.github.com/users/barkholt/followers","following_url":"https://api.github.com/users/barkholt/following{/other_user}","gists_url":"https://api.github.com/users/barkholt/gists{/gist_id}","starred_url":"https://api.github.com/users/barkholt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/barkholt/subscriptions","organizations_url":"https://api.github.com/users/barkholt/orgs","repos_url":"https://api.github.com/users/barkholt/repos","events_url":"https://api.github.com/users/barkholt/events{/privacy}","received_events_url":"https://api.github.com/users/barkholt/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":12,"created_at":"2016-10-30T22:15:49Z","updated_at":"2016-12-04T11:41:45Z","closed_at":"2016-12-04T11:41:45Z","author_association":"CONTRIBUTOR","body":"Is anyone working on upgrading the GWT backend to 2.8? \n\nThe 2.6 release of GWT is almost three years old now, and missing lots of fixes and improvements in GWT. I have more than once had to work around issues in GWT that are fixed in newer versions.\n\nIf no one is working on it, and the maintainers are open to upgrading, I'm willing to investigate how to update the project. I'm just unsure about the libGDX maintainers plans concerning the GWT backend - some of the patches I have been submitting attempting to improve the GWT backend, haven't really gotten much response.\n#### Please select the affected platforms\n- [ ] Android\n- [ ] iOS (robovm)\n- [ ] iOS (MOE)\n- [x] HTML/GWT\n- [ ] Windows\n- [ ] Linux\n- [ ] MacOS\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4389/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4388","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4388/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4388/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4388/events","html_url":"https://github.com/libgdx/libgdx/issues/4388","id":186120177,"number":4388,"title":"[Feature request] Support S3TC (aka DXT1-5) texture loading on Desktop","user":{"login":"magicgoose","id":1442206,"avatar_url":"https://avatars1.githubusercontent.com/u/1442206?v=4","gravatar_id":"","url":"https://api.github.com/users/magicgoose","html_url":"https://github.com/magicgoose","followers_url":"https://api.github.com/users/magicgoose/followers","following_url":"https://api.github.com/users/magicgoose/following{/other_user}","gists_url":"https://api.github.com/users/magicgoose/gists{/gist_id}","starred_url":"https://api.github.com/users/magicgoose/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/magicgoose/subscriptions","organizations_url":"https://api.github.com/users/magicgoose/orgs","repos_url":"https://api.github.com/users/magicgoose/repos","events_url":"https://api.github.com/users/magicgoose/events{/privacy}","received_events_url":"https://api.github.com/users/magicgoose/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2016-10-30T06:36:38Z","updated_at":"2016-11-24T19:09:25Z","closed_at":"2016-11-24T19:09:25Z","author_association":"CONTRIBUTOR","body":"It seems that it's the most widely supported format on desktop GPUs, so it would be very useful.\n\nThere's an old forum post where Mario said it's doable: http://www.badlogicgames.com/forum/viewtopic.php?f=11&t=10482\n\nBut also this:\n\n> Integration with TextureAtlas would be a bit more work.\n\nWhy it'll be more work?\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4388/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4387","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4387/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4387/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4387/events","html_url":"https://github.com/libgdx/libgdx/issues/4387","id":186112192,"number":4387,"title":"getSkin() returns null in Button subclasses","user":{"login":"cypherdare","id":1843131,"avatar_url":"https://avatars2.githubusercontent.com/u/1843131?v=4","gravatar_id":"","url":"https://api.github.com/users/cypherdare","html_url":"https://github.com/cypherdare","followers_url":"https://api.github.com/users/cypherdare/followers","following_url":"https://api.github.com/users/cypherdare/following{/other_user}","gists_url":"https://api.github.com/users/cypherdare/gists{/gist_id}","starred_url":"https://api.github.com/users/cypherdare/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cypherdare/subscriptions","organizations_url":"https://api.github.com/users/cypherdare/orgs","repos_url":"https://api.github.com/users/cypherdare/repos","events_url":"https://api.github.com/users/cypherdare/events{/privacy}","received_events_url":"https://api.github.com/users/cypherdare/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-10-30T02:06:01Z","updated_at":"2016-11-01T06:32:39Z","closed_at":"2016-11-01T06:32:39Z","author_association":"CONTRIBUTOR","body":"The documentation for `Table.getSkin()` says it will return the skin that was passed into the constructor. However, some/all of the subclasses of Button that have a Skin parameter in their constructors do not pass this skin to the super constructor in Button. This makes `getSkin()` return null, thereby contradicting the documentation and making these classes a bit less handy when subclassing them.\n\nTo reproduce: \nCreate an ImageButton using a constructor that takes a Skin. Call `getSkin()` on it and observe that it returns null.\n\nI'll take a stab at a PR in the next few days.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4387/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4386","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4386/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4386/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4386/events","html_url":"https://github.com/libgdx/libgdx/issues/4386","id":186102499,"number":4386,"title":"Introduce PooledList implementation","user":{"login":"Try4W","id":5736157,"avatar_url":"https://avatars1.githubusercontent.com/u/5736157?v=4","gravatar_id":"","url":"https://api.github.com/users/Try4W","html_url":"https://github.com/Try4W","followers_url":"https://api.github.com/users/Try4W/followers","following_url":"https://api.github.com/users/Try4W/following{/other_user}","gists_url":"https://api.github.com/users/Try4W/gists{/gist_id}","starred_url":"https://api.github.com/users/Try4W/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Try4W/subscriptions","organizations_url":"https://api.github.com/users/Try4W/orgs","repos_url":"https://api.github.com/users/Try4W/repos","events_url":"https://api.github.com/users/Try4W/events{/privacy}","received_events_url":"https://api.github.com/users/Try4W/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2016-10-29T21:39:01Z","updated_at":"2016-10-30T12:56:58Z","closed_at":"2016-10-30T12:35:19Z","author_association":"NONE","body":"It will be nice to have a default implementation of something like `PooledList` for long lists with images and other heavy widgets.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4386/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4385","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4385/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4385/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4385/events","html_url":"https://github.com/libgdx/libgdx/pull/4385","id":186051730,"number":4385,"title":"Restore ParticleEffect scale when returning to pool (Fixes #2893)","user":{"login":"cypherdare","id":1843131,"avatar_url":"https://avatars2.githubusercontent.com/u/1843131?v=4","gravatar_id":"","url":"https://api.github.com/users/cypherdare","html_url":"https://github.com/cypherdare","followers_url":"https://api.github.com/users/cypherdare/followers","following_url":"https://api.github.com/users/cypherdare/following{/other_user}","gists_url":"https://api.github.com/users/cypherdare/gists{/gist_id}","starred_url":"https://api.github.com/users/cypherdare/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cypherdare/subscriptions","organizations_url":"https://api.github.com/users/cypherdare/orgs","repos_url":"https://api.github.com/users/cypherdare/repos","events_url":"https://api.github.com/users/cypherdare/events{/privacy}","received_events_url":"https://api.github.com/users/cypherdare/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-10-29T01:26:55Z","updated_at":"2017-06-25T13:52:13Z","closed_at":"2017-06-25T13:52:13Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4385","html_url":"https://github.com/libgdx/libgdx/pull/4385","diff_url":"https://github.com/libgdx/libgdx/pull/4385.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4385.patch"},"body":"Fixes #2893.\n\nThe scaleEffect() method is not easily reversible in the ParticleEffect class, unfortunately. But the PooledEffect class has easy access to the original parameters in the prototype effect in the pool, which is the common way ParticleEffects are used anyway.\n\nSince the ParticleEffect super class is unchanged, this fix won't break code that was relying on `reset()` not affecting scale.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4385/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4384","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4384/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4384/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4384/events","html_url":"https://github.com/libgdx/libgdx/pull/4384","id":186048221,"number":4384,"title":"Fix ProgressBar rounding and allow it to be disabled","user":{"login":"cypherdare","id":1843131,"avatar_url":"https://avatars2.githubusercontent.com/u/1843131?v=4","gravatar_id":"","url":"https://api.github.com/users/cypherdare","html_url":"https://github.com/cypherdare","followers_url":"https://api.github.com/users/cypherdare/followers","following_url":"https://api.github.com/users/cypherdare/following{/other_user}","gists_url":"https://api.github.com/users/cypherdare/gists{/gist_id}","starred_url":"https://api.github.com/users/cypherdare/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cypherdare/subscriptions","organizations_url":"https://api.github.com/users/cypherdare/orgs","repos_url":"https://api.github.com/users/cypherdare/repos","events_url":"https://api.github.com/users/cypherdare/events{/privacy}","received_events_url":"https://api.github.com/users/cypherdare/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-10-29T00:27:27Z","updated_at":"2016-11-25T01:39:10Z","closed_at":"2016-11-25T01:39:07Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4384","html_url":"https://github.com/libgdx/libgdx/pull/4384","diff_url":"https://github.com/libgdx/libgdx/pull/4384.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4384.patch"},"body":"ProgressBar currently always rounds positions and sizes towards zero when drawing its drawables. Also, there was a request to allow rounding to be disabled in #2820, which can be useful if the UI is not pixel perfect. For example, you might be drawing your UI elements enlarged on a high resolution screen, but want to keep the motion of the progress bar looking smooth. Or you might be drawing it scaled down with trilinear filtering and want smoother looking motion.\n\nI kept the same rounding behavior as Table, which doesn't try to round its own bounds (leaving that to the parent). So in the case of  a vertical progress bar, this means the background drawable's vertical position and height are not rounded. And vice versa for horizontal.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4384/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4383","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4383/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4383/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4383/events","html_url":"https://github.com/libgdx/libgdx/issues/4383","id":185887406,"number":4383,"title":"Add a function in Controller to get the number of buttons / axis","user":{"login":"CreamyCookie","id":3063858,"avatar_url":"https://avatars2.githubusercontent.com/u/3063858?v=4","gravatar_id":"","url":"https://api.github.com/users/CreamyCookie","html_url":"https://github.com/CreamyCookie","followers_url":"https://api.github.com/users/CreamyCookie/followers","following_url":"https://api.github.com/users/CreamyCookie/following{/other_user}","gists_url":"https://api.github.com/users/CreamyCookie/gists{/gist_id}","starred_url":"https://api.github.com/users/CreamyCookie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CreamyCookie/subscriptions","organizations_url":"https://api.github.com/users/CreamyCookie/orgs","repos_url":"https://api.github.com/users/CreamyCookie/repos","events_url":"https://api.github.com/users/CreamyCookie/events{/privacy}","received_events_url":"https://api.github.com/users/CreamyCookie/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-10-28T10:13:51Z","updated_at":"2016-12-04T11:49:04Z","closed_at":"2016-12-04T11:49:04Z","author_association":"CONTRIBUTOR","body":"I don't know about LWJGL and others, but GLFW (which is used in LWJGL 3) has methods for getting the number of [buttons](http://www.glfw.org/docs/latest/group__input.html#gace54cd930dcd502e118fe4021384ce1b) and [axis](http://www.glfw.org/docs/latest/group__input.html#ga6271d46a5901ec2c99601ccf4dd14731).\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4383/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4382","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4382/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4382/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4382/events","html_url":"https://github.com/libgdx/libgdx/pull/4382","id":185811548,"number":4382,"title":"Fixes #4495 (wrong Label pref height)","user":{"login":"obigu","id":1794492,"avatar_url":"https://avatars0.githubusercontent.com/u/1794492?v=4","gravatar_id":"","url":"https://api.github.com/users/obigu","html_url":"https://github.com/obigu","followers_url":"https://api.github.com/users/obigu/followers","following_url":"https://api.github.com/users/obigu/following{/other_user}","gists_url":"https://api.github.com/users/obigu/gists{/gist_id}","starred_url":"https://api.github.com/users/obigu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/obigu/subscriptions","organizations_url":"https://api.github.com/users/obigu/orgs","repos_url":"https://api.github.com/users/obigu/repos","events_url":"https://api.github.com/users/obigu/events{/privacy}","received_events_url":"https://api.github.com/users/obigu/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2016-10-28T00:19:12Z","updated_at":"2017-03-09T22:23:43Z","closed_at":"2017-03-09T22:23:01Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4382","html_url":"https://github.com/libgdx/libgdx/pull/4382","diff_url":"https://github.com/libgdx/libgdx/pull/4382.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4382.patch"},"body":"Pref height is not correctly calculated if BitmapFont scale Y is different to 1.\r\n\r\nLabel only takes into account fontScaleY correction for the descent value assuming the underlying Bitmap y font scale is 1. The correction should be the relation between the BitmapFont and Label scales.\r\n\r\nFind SSCCE test attached that illustrates the issue\r\n\r\nhttp://pastebin.com/EB7mv2AU\r\n\r\nBefore the fix\r\n\r\n![java 2016-10-30 14-24-51-818](https://cloud.githubusercontent.com/assets/1794492/19836838/d28cff7c-9eac-11e6-8f78-d9334ddc8097.png)\r\n\r\nAfter the fix\r\n\r\n![java 2016-10-30 14-23-17-652](https://cloud.githubusercontent.com/assets/1794492/19836843/e2d22826-9eac-11e6-9e57-e782ad46f036.png)\r\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4382/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4381","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4381/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4381/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4381/events","html_url":"https://github.com/libgdx/libgdx/issues/4381","id":185761173,"number":4381,"title":"[feature] gdx-setup : Keep Android SDK path in cache...","user":{"login":"nbourre","id":2332679,"avatar_url":"https://avatars2.githubusercontent.com/u/2332679?v=4","gravatar_id":"","url":"https://api.github.com/users/nbourre","html_url":"https://github.com/nbourre","followers_url":"https://api.github.com/users/nbourre/followers","following_url":"https://api.github.com/users/nbourre/following{/other_user}","gists_url":"https://api.github.com/users/nbourre/gists{/gist_id}","starred_url":"https://api.github.com/users/nbourre/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nbourre/subscriptions","organizations_url":"https://api.github.com/users/nbourre/orgs","repos_url":"https://api.github.com/users/nbourre/repos","events_url":"https://api.github.com/users/nbourre/events{/privacy}","received_events_url":"https://api.github.com/users/nbourre/received_events","type":"User","site_admin":false},"labels":[{"id":11336982,"url":"https://api.github.com/repos/libgdx/libgdx/labels/enhancement","name":"enhancement","color":"84b6eb","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2016-10-27T19:39:20Z","updated_at":"2016-12-04T12:04:17Z","closed_at":"2016-12-04T12:04:17Z","author_association":"NONE","body":"As a teacher, I create a lot of small projects.\n\nI think this is a simple feature, would it be a complicated task to keep the android SDK path in cache for GDX-SETUP?\n\nEach time we create a project, we need to browse all the way to the Android SDK which does not change much over time.\n\nThis would save a bit of frustration everytime. ;)\n\nKeep doing a great job guys!\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4381/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4380","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4380/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4380/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4380/events","html_url":"https://github.com/libgdx/libgdx/issues/4380","id":185614781,"number":4380,"title":"FreeTypeFontGenerator - add margin parameter","user":{"login":"Betalord","id":22757675,"avatar_url":"https://avatars3.githubusercontent.com/u/22757675?v=4","gravatar_id":"","url":"https://api.github.com/users/Betalord","html_url":"https://github.com/Betalord","followers_url":"https://api.github.com/users/Betalord/followers","following_url":"https://api.github.com/users/Betalord/following{/other_user}","gists_url":"https://api.github.com/users/Betalord/gists{/gist_id}","starred_url":"https://api.github.com/users/Betalord/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Betalord/subscriptions","organizations_url":"https://api.github.com/users/Betalord/orgs","repos_url":"https://api.github.com/users/Betalord/repos","events_url":"https://api.github.com/users/Betalord/events{/privacy}","received_events_url":"https://api.github.com/users/Betalord/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-10-27T09:17:57Z","updated_at":"2016-10-27T09:47:00Z","closed_at":"2016-10-27T09:46:41Z","author_association":"NONE","body":"I believe that the FreeTypeFontGenerator needs another parameter passed via FreeTypeFontParameter (or otherwise) that would specify margins when creating BitmapFont. Let me explain. When the generator creates the font, the bitmaps created are exactly the height of the highest letter, hence not leaving any spacing above and bellow. However, some users (like myself) may want to have some additional spacing because of blending issues. Let's look at my concrete example:\n\nhttps://vid.me/RWxo\n\nIn this video, the text \"50\" is moving. Its filters are GL_LINEAR. Now, the upper pixel row and bottom pixel row seem to be \"blinking\". This is because the blending function has no \"space\" at those borders to draw the gradiant.\nNow, the same problem can be seen even better in this image:\nhttps://raw.githubusercontent.com/wiki/mattdesl/lwjgl-basics/images/vAVHc.png\n![vavhc](https://cloud.githubusercontent.com/assets/22757675/19761500/919ed33c-9c36-11e6-905b-cbba059bcbc9.png)\nThe borders at GL_LINEAR look \"cut out\", because there isn't any space in the texture to draw the blended border.\n\nThis is why I propose a margin parameter to be added to the FreeTypeFontGenerator, in order for the user to specify these extra borders to avoid blending issues as described here.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4380/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4379","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4379/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4379/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4379/events","html_url":"https://github.com/libgdx/libgdx/issues/4379","id":185487695,"number":4379,"title":"Add excludes to Android Gradle files to prevent common errors due to expected duplicates","user":{"login":"czyzby","id":11707612,"avatar_url":"https://avatars0.githubusercontent.com/u/11707612?v=4","gravatar_id":"","url":"https://api.github.com/users/czyzby","html_url":"https://github.com/czyzby","followers_url":"https://api.github.com/users/czyzby/followers","following_url":"https://api.github.com/users/czyzby/following{/other_user}","gists_url":"https://api.github.com/users/czyzby/gists{/gist_id}","starred_url":"https://api.github.com/users/czyzby/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/czyzby/subscriptions","organizations_url":"https://api.github.com/users/czyzby/orgs","repos_url":"https://api.github.com/users/czyzby/repos","events_url":"https://api.github.com/users/czyzby/events{/privacy}","received_events_url":"https://api.github.com/users/czyzby/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":10,"created_at":"2016-10-26T19:29:50Z","updated_at":"2016-10-27T07:35:46Z","closed_at":"2016-10-27T07:35:36Z","author_association":"CONTRIBUTOR","body":"#### Issue details\n\nCurrently the Android project can fail to compile (due to detected duplicate files in included libraries) even if the files are somewhat expected - like licenses or RoboVM meta-data.\n\nProposed solution: add something along [these lines](https://github.com/czyzby/gdx-setup/blob/master/src/main/kotlin/com/github/czyzby/setup/data/platforms/android.kt#L116-L130) to Android `build.gradle` files.\n#### Reproduction steps/code\n\nYou can easily reproduce this issue by including two libraries with `robovm.xml`, like `gdx-kiwi` and `gdx-lml`. See https://github.com/czyzby/gdx-lml/issues/46\n\nUse these dependencies in the `core` or `android` Gradle project to reproduce the issue due to duplicate `META-INF/robovm/ios/robovm.xml` file:\n\n``` Groovy\n    dependencies {\n        // ...\n        compile \"com.github.czyzby:gdx-lml:1.9.1.9.4-SNAPSHOT\"\n        compile \"com.github.czyzby:gdx-autumn:1.9.1.9.4-SNAPSHOT\"\n        compile \"com.kotcrab.vis:vis-ui:1.1.1\"\n    }\n```\n#### Version of LibGDX and/or relevant dependencies\n\n`gdx-setup` 1.9.4 (and below).\n#### Affected platforms\n- [x] Android\n- [ ] iOS (robovm)\n- [ ] iOS (MOE)\n- [ ] HTML/GWT\n- [ ] Windows\n- [ ] Linux\n- [ ] MacOS\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4379/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4378","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4378/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4378/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4378/events","html_url":"https://github.com/libgdx/libgdx/pull/4378","id":185146188,"number":4378,"title":"Add new iPhone 7 models","user":{"login":"mikemee","id":550990,"avatar_url":"https://avatars3.githubusercontent.com/u/550990?v=4","gravatar_id":"","url":"https://api.github.com/users/mikemee","html_url":"https://github.com/mikemee","followers_url":"https://api.github.com/users/mikemee/followers","following_url":"https://api.github.com/users/mikemee/following{/other_user}","gists_url":"https://api.github.com/users/mikemee/gists{/gist_id}","starred_url":"https://api.github.com/users/mikemee/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikemee/subscriptions","organizations_url":"https://api.github.com/users/mikemee/orgs","repos_url":"https://api.github.com/users/mikemee/repos","events_url":"https://api.github.com/users/mikemee/events{/privacy}","received_events_url":"https://api.github.com/users/mikemee/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-10-25T15:09:13Z","updated_at":"2016-11-01T08:14:32Z","closed_at":"2016-11-01T08:14:32Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4378","html_url":"https://github.com/libgdx/libgdx/pull/4378","diff_url":"https://github.com/libgdx/libgdx/pull/4378.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4378.patch"},"body":"Sources: https://www.theiphonewiki.com/wiki/Models and https://www.techwalls.com/iphone-7-plus-model-differences/. \n\nNote that the higher N in \"iPhone 9,N\" is flipped from previous versions and now represents the non-CDMA versions. (_For those who look for symmetry in these things!_)\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4378/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4377","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4377/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4377/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4377/events","html_url":"https://github.com/libgdx/libgdx/pull/4377","id":184993918,"number":4377,"title":"Optimized getFirstKeyframeIndexAtTime() to use a Binary Search","user":{"login":"gf11speed","id":6288783,"avatar_url":"https://avatars3.githubusercontent.com/u/6288783?v=4","gravatar_id":"","url":"https://api.github.com/users/gf11speed","html_url":"https://github.com/gf11speed","followers_url":"https://api.github.com/users/gf11speed/followers","following_url":"https://api.github.com/users/gf11speed/following{/other_user}","gists_url":"https://api.github.com/users/gf11speed/gists{/gist_id}","starred_url":"https://api.github.com/users/gf11speed/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gf11speed/subscriptions","organizations_url":"https://api.github.com/users/gf11speed/orgs","repos_url":"https://api.github.com/users/gf11speed/repos","events_url":"https://api.github.com/users/gf11speed/events{/privacy}","received_events_url":"https://api.github.com/users/gf11speed/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-10-25T01:08:14Z","updated_at":"2016-10-25T01:50:27Z","closed_at":null,"author_association":"NONE","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4377","html_url":"https://github.com/libgdx/libgdx/pull/4377","diff_url":"https://github.com/libgdx/libgdx/pull/4377.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4377.patch"},"body":"This is a 3D animation optimization that helps the performance of animation updates that happen every frame. The function getFirstKeyframeIndexAtTime() was very slow when iterating through to get keyframe indices when called every frame. Converting this to a Binary Search helps animation performance, especially in more complex models with more joints/bones.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4377/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4376","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4376/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4376/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4376/events","html_url":"https://github.com/libgdx/libgdx/issues/4376","id":184166412,"number":4376,"title":"Quaternion setFromCross is error  when vectors are opposite ","user":{"login":"ACrsm","id":5477740,"avatar_url":"https://avatars3.githubusercontent.com/u/5477740?v=4","gravatar_id":"","url":"https://api.github.com/users/ACrsm","html_url":"https://github.com/ACrsm","followers_url":"https://api.github.com/users/ACrsm/followers","following_url":"https://api.github.com/users/ACrsm/following{/other_user}","gists_url":"https://api.github.com/users/ACrsm/gists{/gist_id}","starred_url":"https://api.github.com/users/ACrsm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ACrsm/subscriptions","organizations_url":"https://api.github.com/users/ACrsm/orgs","repos_url":"https://api.github.com/users/ACrsm/repos","events_url":"https://api.github.com/users/ACrsm/events{/privacy}","received_events_url":"https://api.github.com/users/ACrsm/received_events","type":"User","site_admin":false},"labels":[{"id":11336980,"url":"https://api.github.com/repos/libgdx/libgdx/labels/bug","name":"bug","color":"fc2929","default":true}],"state":"open","locked":false,"assignee":{"login":"xoppa","id":2349087,"avatar_url":"https://avatars3.githubusercontent.com/u/2349087?v=4","gravatar_id":"","url":"https://api.github.com/users/xoppa","html_url":"https://github.com/xoppa","followers_url":"https://api.github.com/users/xoppa/followers","following_url":"https://api.github.com/users/xoppa/following{/other_user}","gists_url":"https://api.github.com/users/xoppa/gists{/gist_id}","starred_url":"https://api.github.com/users/xoppa/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xoppa/subscriptions","organizations_url":"https://api.github.com/users/xoppa/orgs","repos_url":"https://api.github.com/users/xoppa/repos","events_url":"https://api.github.com/users/xoppa/events{/privacy}","received_events_url":"https://api.github.com/users/xoppa/received_events","type":"User","site_admin":false},"assignees":[{"login":"xoppa","id":2349087,"avatar_url":"https://avatars3.githubusercontent.com/u/2349087?v=4","gravatar_id":"","url":"https://api.github.com/users/xoppa","html_url":"https://github.com/xoppa","followers_url":"https://api.github.com/users/xoppa/followers","following_url":"https://api.github.com/users/xoppa/following{/other_user}","gists_url":"https://api.github.com/users/xoppa/gists{/gist_id}","starred_url":"https://api.github.com/users/xoppa/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xoppa/subscriptions","organizations_url":"https://api.github.com/users/xoppa/orgs","repos_url":"https://api.github.com/users/xoppa/repos","events_url":"https://api.github.com/users/xoppa/events{/privacy}","received_events_url":"https://api.github.com/users/xoppa/received_events","type":"User","site_admin":false}],"milestone":null,"comments":3,"created_at":"2016-10-20T08:34:10Z","updated_at":"2016-12-04T12:05:44Z","closed_at":null,"author_association":"NONE","body":"Please ensure you have given all the following requested information in your report.\n#### Issue details\n\nQuaternion setFromCross (final Vector3 v1, final Vector3 v2)\nIf v1 and v2 are exactly opposite, it will return q = [0.0|0.0|0.0|1.0].\n#### Reproduction steps/code\n\nQuaternion q = new Quaternion();\nq.setFromCross(0, 0, 1, 0, 0, -1);\nSystem.out.println(\"q = \"+q.toString());\n#### Version of LibGDX and/or relevant dependencies\n\n1.9.4\n#### Please select the affected platforms\n- [x] Android\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4376/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4375","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4375/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4375/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4375/events","html_url":"https://github.com/libgdx/libgdx/issues/4375","id":183828203,"number":4375,"title":"import package de native android  in package core","user":{"login":"zhao-zilong","id":12551377,"avatar_url":"https://avatars2.githubusercontent.com/u/12551377?v=4","gravatar_id":"","url":"https://api.github.com/users/zhao-zilong","html_url":"https://github.com/zhao-zilong","followers_url":"https://api.github.com/users/zhao-zilong/followers","following_url":"https://api.github.com/users/zhao-zilong/following{/other_user}","gists_url":"https://api.github.com/users/zhao-zilong/gists{/gist_id}","starred_url":"https://api.github.com/users/zhao-zilong/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhao-zilong/subscriptions","organizations_url":"https://api.github.com/users/zhao-zilong/orgs","repos_url":"https://api.github.com/users/zhao-zilong/repos","events_url":"https://api.github.com/users/zhao-zilong/events{/privacy}","received_events_url":"https://api.github.com/users/zhao-zilong/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-10-18T23:21:16Z","updated_at":"2016-10-19T01:57:08Z","closed_at":"2016-10-19T01:57:08Z","author_association":"NONE","body":"Hi All\n\nwhen I created a libgdx project, I can not import android.os Bundle,  I can only create in android folder, but in folder core, I can not access the class in android, so, who has an idea?\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4375/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4374","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4374/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4374/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4374/events","html_url":"https://github.com/libgdx/libgdx/issues/4374","id":183738636,"number":4374,"title":"Video Play Support","user":{"login":"vanimarcos","id":12186306,"avatar_url":"https://avatars2.githubusercontent.com/u/12186306?v=4","gravatar_id":"","url":"https://api.github.com/users/vanimarcos","html_url":"https://github.com/vanimarcos","followers_url":"https://api.github.com/users/vanimarcos/followers","following_url":"https://api.github.com/users/vanimarcos/following{/other_user}","gists_url":"https://api.github.com/users/vanimarcos/gists{/gist_id}","starred_url":"https://api.github.com/users/vanimarcos/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vanimarcos/subscriptions","organizations_url":"https://api.github.com/users/vanimarcos/orgs","repos_url":"https://api.github.com/users/vanimarcos/repos","events_url":"https://api.github.com/users/vanimarcos/events{/privacy}","received_events_url":"https://api.github.com/users/vanimarcos/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2016-10-18T16:32:02Z","updated_at":"2016-10-18T17:16:27Z","closed_at":"2016-10-18T16:35:46Z","author_association":"NONE","body":"Include a the ability to play videos on the library using multiples video files format with no platform dependency, its hard to develop a game with a library that does not have this functionality. Right now we need to include another library that increases the application layers, and consequently the size. I can contribute.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4374/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4373","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4373/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4373/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4373/events","html_url":"https://github.com/libgdx/libgdx/pull/4373","id":183701173,"number":4373,"title":"Update moe version to 1.2.3","user":{"login":"liliomk","id":1080033,"avatar_url":"https://avatars1.githubusercontent.com/u/1080033?v=4","gravatar_id":"","url":"https://api.github.com/users/liliomk","html_url":"https://github.com/liliomk","followers_url":"https://api.github.com/users/liliomk/followers","following_url":"https://api.github.com/users/liliomk/following{/other_user}","gists_url":"https://api.github.com/users/liliomk/gists{/gist_id}","starred_url":"https://api.github.com/users/liliomk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/liliomk/subscriptions","organizations_url":"https://api.github.com/users/liliomk/orgs","repos_url":"https://api.github.com/users/liliomk/repos","events_url":"https://api.github.com/users/liliomk/events{/privacy}","received_events_url":"https://api.github.com/users/liliomk/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-10-18T14:22:12Z","updated_at":"2016-10-18T14:23:43Z","closed_at":"2016-10-18T14:23:43Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4373","html_url":"https://github.com/libgdx/libgdx/pull/4373","diff_url":"https://github.com/libgdx/libgdx/pull/4373.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4373.patch"},"body":"","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4373/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4372","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4372/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4372/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4372/events","html_url":"https://github.com/libgdx/libgdx/pull/4372","id":183676935,"number":4372,"title":"IndexBufferObject error and docs cleanup","user":{"login":"cypherdare","id":1843131,"avatar_url":"https://avatars2.githubusercontent.com/u/1843131?v=4","gravatar_id":"","url":"https://api.github.com/users/cypherdare","html_url":"https://github.com/cypherdare","followers_url":"https://api.github.com/users/cypherdare/followers","following_url":"https://api.github.com/users/cypherdare/following{/other_user}","gists_url":"https://api.github.com/users/cypherdare/gists{/gist_id}","starred_url":"https://api.github.com/users/cypherdare/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cypherdare/subscriptions","organizations_url":"https://api.github.com/users/cypherdare/orgs","repos_url":"https://api.github.com/users/cypherdare/repos","events_url":"https://api.github.com/users/cypherdare/events{/privacy}","received_events_url":"https://api.github.com/users/cypherdare/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-10-18T12:49:32Z","updated_at":"2016-10-18T13:16:24Z","closed_at":"2016-10-18T13:16:20Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4372","html_url":"https://github.com/libgdx/libgdx/pull/4372","diff_url":"https://github.com/libgdx/libgdx/pull/4372.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4372.patch"},"body":"See http://badlogicgames.com/forum/viewtopic.php?f=11&t=23869\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4372/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4371","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4371/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4371/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4371/events","html_url":"https://github.com/libgdx/libgdx/issues/4371","id":183469629,"number":4371,"title":"Jumpy when using subpixel-movement and spritebatch","user":{"login":"Bytekeeper","id":5885673,"avatar_url":"https://avatars3.githubusercontent.com/u/5885673?v=4","gravatar_id":"","url":"https://api.github.com/users/Bytekeeper","html_url":"https://github.com/Bytekeeper","followers_url":"https://api.github.com/users/Bytekeeper/followers","following_url":"https://api.github.com/users/Bytekeeper/following{/other_user}","gists_url":"https://api.github.com/users/Bytekeeper/gists{/gist_id}","starred_url":"https://api.github.com/users/Bytekeeper/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Bytekeeper/subscriptions","organizations_url":"https://api.github.com/users/Bytekeeper/orgs","repos_url":"https://api.github.com/users/Bytekeeper/repos","events_url":"https://api.github.com/users/Bytekeeper/events{/privacy}","received_events_url":"https://api.github.com/users/Bytekeeper/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-10-17T16:52:02Z","updated_at":"2016-10-17T17:27:52Z","closed_at":"2016-10-17T17:27:52Z","author_association":"NONE","body":"#### Issue details\n\nUsing pixel perfect SpriteBatch with a mipmapped texture and subpixel movement.\nIf the draw \"size\" >= the texture size the texture seems to jump. If drawn smaller, the movement is smooth.\n#### Reproduction steps/code\n\n``` java\nimport com.badlogic.gdx.*;\nimport com.badlogic.gdx.backends.lwjgl.LwjglApplication;\nimport com.badlogic.gdx.graphics.*;\nimport com.badlogic.gdx.graphics.g2d.SpriteBatch;\n\npublic class BarebonesBatch extends ApplicationAdapter {\n    SpriteBatch batch;\n    Texture texture;\n    float x = 100;\n\n    public void create () {\n        batch = new SpriteBatch();\n        texture = new Texture(Gdx.files.internal(\"particle.png\"), true);\n        texture.setFilter(Texture.TextureFilter.MipMapLinearLinear, Texture.TextureFilter.MipMapLinearLinear);\n    }\n\n    public void render () {\n        x += Gdx.graphics.getDeltaTime();\n        Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);\n        batch.begin();\n        batch.draw(texture, x, 80);\n        batch.draw(texture, x, 110, 16, 16);\n        batch.draw(texture, x, 150, 66, 66);\n        batch.draw(texture, x, 240, 64, 64);\n        batch.end();\n    }\n\n    public static void main (String[] args) throws Exception {\n        new LwjglApplication(new BarebonesBatch());\n    }\n}\n```\n#### Version of LibGDX and/or relevant dependencies\n\n1.9.4\n#### Stacktrace\n#### Please select the affected platforms\n- [ ] Android\n- [ ] iOS (robovm)\n- [ ] iOS (MOE)\n- [ ] HTML/GWT\n- [X] Windows\n- [ ] Linux\n- [ ] MacOS\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4371/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4370","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4370/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4370/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4370/events","html_url":"https://github.com/libgdx/libgdx/issues/4370","id":183414698,"number":4370,"title":"AndroidApplicationConfiguration.useWakeLock is misleading","user":{"login":"Betalord","id":22757675,"avatar_url":"https://avatars3.githubusercontent.com/u/22757675?v=4","gravatar_id":"","url":"https://api.github.com/users/Betalord","html_url":"https://github.com/Betalord","followers_url":"https://api.github.com/users/Betalord/followers","following_url":"https://api.github.com/users/Betalord/following{/other_user}","gists_url":"https://api.github.com/users/Betalord/gists{/gist_id}","starred_url":"https://api.github.com/users/Betalord/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Betalord/subscriptions","organizations_url":"https://api.github.com/users/Betalord/orgs","repos_url":"https://api.github.com/users/Betalord/repos","events_url":"https://api.github.com/users/Betalord/events{/privacy}","received_events_url":"https://api.github.com/users/Betalord/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2016-10-17T13:22:49Z","updated_at":"2016-12-04T12:07:27Z","closed_at":"2016-12-04T12:07:27Z","author_association":"NONE","body":"The use of \"useWakeLock\" seems misleading to me; let me explain:\n\nAndroid uses two different mechanisms to keep the screen on at all times (so that it doesn't dim out or turn off due to inactivity). One of them is via FLAG_KEEP_SCREEN_ON flag and is done this way:\n\ngetWindow().addFlags(WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON);\n\nThe other, more complex (which needs a special permission in the manifest) is called Wakelock and is achieved like this:\n\nmWakeLock = mPowerManager.newWakeLock(PowerManager.SCREEN_BRIGHT_WAKE_LOCK, \n                getClass().getName());\n\n(and needs to be released as well).\n\nNow, the \"useWakelock\" modifier that libgdx uses obviously seems to apply use of Wakelock mechanism. However, it turns out this is not the case. If you look at the AndroidApplication.java (libgdx/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidApplication.java), you will see it calls createWakeLock() method in it's init() method. Now let's see it's implementation:\n\n```\nprotected void createWakeLock (boolean use) {\n    if (use) {\n        getWindow().addFlags(WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON);\n    }\n}\n```\n\nAs can be seen from this source code, it uses the FLAG_KEEP_SCREEN_ON mechanism which has nothing to do with the Wakelock mechanism (which offers much more control, requires a permission in the application's manifest etc.).\n\nSo, can someone verify this? I think this is an issue and needs to be taken care of.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4370/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4369","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4369/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4369/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4369/events","html_url":"https://github.com/libgdx/libgdx/issues/4369","id":183293709,"number":4369,"title":"MultipleRenderTargetTest error message when running from LwjglTestStarter","user":{"login":"jlnguy","id":14570128,"avatar_url":"https://avatars2.githubusercontent.com/u/14570128?v=4","gravatar_id":"","url":"https://api.github.com/users/jlnguy","html_url":"https://github.com/jlnguy","followers_url":"https://api.github.com/users/jlnguy/followers","following_url":"https://api.github.com/users/jlnguy/following{/other_user}","gists_url":"https://api.github.com/users/jlnguy/gists{/gist_id}","starred_url":"https://api.github.com/users/jlnguy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jlnguy/subscriptions","organizations_url":"https://api.github.com/users/jlnguy/orgs","repos_url":"https://api.github.com/users/jlnguy/repos","events_url":"https://api.github.com/users/jlnguy/events{/privacy}","received_events_url":"https://api.github.com/users/jlnguy/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-10-16T21:43:13Z","updated_at":"2016-10-16T21:53:43Z","closed_at":"2016-10-16T21:53:43Z","author_association":"NONE","body":"#### Issue details\n\nRunning the test demo \"MultipleRenderTestTarget\" included in LibGDX test examples runs the application and then crashes with an exception message. \n\nWe tested this issue on three laptops that run Windows and one Mac. \n#### Reproduction steps/code\n- Run LwjglTestStarter.java (in Eclipse)\n- Select MultipleRenderTestTarget in the window that pops up\n#### Version of LibGDX and/or relevant dependencies\n\nI believe I'm using 1.9.4.\n#### Stacktrace\n\n``` java\nException in thread \"LWJGL Application\" java.lang.NullPointerException\n    at com.badlogic.gdx.tests.g3d.MultipleRenderTargetTest$MRTFrameBuffer.build(MultipleRenderTargetTest.java:561)\n    at com.badlogic.gdx.tests.g3d.MultipleRenderTargetTest$MRTFrameBuffer.<init>(MultipleRenderTargetTest.java:483)\n    at com.badlogic.gdx.tests.g3d.MultipleRenderTargetTest.create(MultipleRenderTargetTest.java:146)\n    at com.badlogic.gdx.backends.lwjgl.LwjglApplication.mainLoop(LwjglApplication.java:149)\n    at com.badlogic.gdx.backends.lwjgl.LwjglApplication$1.run(LwjglApplication.java:126)\n\n```\n#### Please select the affected platforms\n- [ ] Android\n- [ ] iOS (robovm)\n- [ ] iOS (MOE)\n- [ ] HTML/GWT\n- [x] Windows\n- [ ] Linux\n- [x] MacOS\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4369/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}}],"meta":{"x-ratelimit-limit":"5000","x-ratelimit-remaining":"4982","x-ratelimit-reset":"1506844633","x-github-request-id":"ABD6:028B:DD98AD:2EB111A:59D09353","x-github-media-type":"github.squirrel-girl-preview","link":"<https://api.github.com/repositories/5373551/issues?state=all&page=19>; rel=\"next\", <https://api.github.com/repositories/5373551/issues?state=all&page=164>; rel=\"last\", <https://api.github.com/repositories/5373551/issues?state=all&page=1>; rel=\"first\", <https://api.github.com/repositories/5373551/issues?state=all&page=17>; rel=\"prev\"","etag":"\"3822e3d7daed6532852bb6295456d054\"","status":"200 OK"}}
