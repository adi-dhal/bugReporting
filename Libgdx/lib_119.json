{"data":[{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1365","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1365/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1365/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1365/events","html_url":"https://github.com/libgdx/libgdx/pull/1365","id":27797549,"number":1365,"title":"Fix casting android application to base interface","user":{"login":"andzdroid","id":525795,"avatar_url":"https://avatars3.githubusercontent.com/u/525795?v=4","gravatar_id":"","url":"https://api.github.com/users/andzdroid","html_url":"https://github.com/andzdroid","followers_url":"https://api.github.com/users/andzdroid/followers","following_url":"https://api.github.com/users/andzdroid/following{/other_user}","gists_url":"https://api.github.com/users/andzdroid/gists{/gist_id}","starred_url":"https://api.github.com/users/andzdroid/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andzdroid/subscriptions","organizations_url":"https://api.github.com/users/andzdroid/orgs","repos_url":"https://api.github.com/users/andzdroid/repos","events_url":"https://api.github.com/users/andzdroid/events{/privacy}","received_events_url":"https://api.github.com/users/andzdroid/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-02-18T14:40:24Z","updated_at":"2014-02-19T21:34:28Z","closed_at":"2014-02-19T21:33:56Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/1365","html_url":"https://github.com/libgdx/libgdx/pull/1365","diff_url":"https://github.com/libgdx/libgdx/pull/1365.diff","patch_url":"https://github.com/libgdx/libgdx/pull/1365.patch"},"body":"Casting to AndroidApplication instead of AndroidApplicationBase is causing crashes on Android, when using the new AndroidFragmentApplication class.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1365/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1364","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1364/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1364/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1364/events","html_url":"https://github.com/libgdx/libgdx/pull/1364","id":27769574,"number":1364,"title":"added getter for executeTime","user":{"login":"NimbusBP1729","id":2457956,"avatar_url":"https://avatars2.githubusercontent.com/u/2457956?v=4","gravatar_id":"","url":"https://api.github.com/users/NimbusBP1729","html_url":"https://github.com/NimbusBP1729","followers_url":"https://api.github.com/users/NimbusBP1729/followers","following_url":"https://api.github.com/users/NimbusBP1729/following{/other_user}","gists_url":"https://api.github.com/users/NimbusBP1729/gists{/gist_id}","starred_url":"https://api.github.com/users/NimbusBP1729/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NimbusBP1729/subscriptions","organizations_url":"https://api.github.com/users/NimbusBP1729/orgs","repos_url":"https://api.github.com/users/NimbusBP1729/repos","events_url":"https://api.github.com/users/NimbusBP1729/events{/privacy}","received_events_url":"https://api.github.com/users/NimbusBP1729/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2014-02-18T04:58:10Z","updated_at":"2014-02-20T00:46:00Z","closed_at":"2014-02-18T11:31:27Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/1364","html_url":"https://github.com/libgdx/libgdx/pull/1364","diff_url":"https://github.com/libgdx/libgdx/pull/1364.diff","patch_url":"https://github.com/libgdx/libgdx/pull/1364.patch"},"body":"without this there's no exposure to time execution on timers outside of package access\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1364/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1363","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1363/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1363/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1363/events","html_url":"https://github.com/libgdx/libgdx/pull/1363","id":27767240,"number":1363,"title":"Headless: Avoid unnecessary exception allocation. Better logging in HeadlessNet","user":{"login":"johnnyapol","id":5902494,"avatar_url":"https://avatars1.githubusercontent.com/u/5902494?v=4","gravatar_id":"","url":"https://api.github.com/users/johnnyapol","html_url":"https://github.com/johnnyapol","followers_url":"https://api.github.com/users/johnnyapol/followers","following_url":"https://api.github.com/users/johnnyapol/following{/other_user}","gists_url":"https://api.github.com/users/johnnyapol/gists{/gist_id}","starred_url":"https://api.github.com/users/johnnyapol/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/johnnyapol/subscriptions","organizations_url":"https://api.github.com/users/johnnyapol/orgs","repos_url":"https://api.github.com/users/johnnyapol/repos","events_url":"https://api.github.com/users/johnnyapol/events{/privacy}","received_events_url":"https://api.github.com/users/johnnyapol/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2014-02-18T03:34:39Z","updated_at":"2014-06-28T00:42:21Z","closed_at":"2014-02-19T21:40:19Z","author_association":"OWNER","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/1363","html_url":"https://github.com/libgdx/libgdx/pull/1363","diff_url":"https://github.com/libgdx/libgdx/pull/1363.diff","patch_url":"https://github.com/libgdx/libgdx/pull/1363.patch"},"body":"","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1363/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1362","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1362/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1362/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1362/events","html_url":"https://github.com/libgdx/libgdx/pull/1362","id":27762623,"number":1362,"title":"Allow SO_TIMEOUT to be set on client sockets","user":{"login":"skunktrading","id":6710255,"avatar_url":"https://avatars0.githubusercontent.com/u/6710255?v=4","gravatar_id":"","url":"https://api.github.com/users/skunktrading","html_url":"https://github.com/skunktrading","followers_url":"https://api.github.com/users/skunktrading/followers","following_url":"https://api.github.com/users/skunktrading/following{/other_user}","gists_url":"https://api.github.com/users/skunktrading/gists{/gist_id}","starred_url":"https://api.github.com/users/skunktrading/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/skunktrading/subscriptions","organizations_url":"https://api.github.com/users/skunktrading/orgs","repos_url":"https://api.github.com/users/skunktrading/repos","events_url":"https://api.github.com/users/skunktrading/events{/privacy}","received_events_url":"https://api.github.com/users/skunktrading/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-02-18T01:44:06Z","updated_at":"2014-06-24T18:07:07Z","closed_at":"2014-02-19T21:39:42Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/1362","html_url":"https://github.com/libgdx/libgdx/pull/1362","diff_url":"https://github.com/libgdx/libgdx/pull/1362.diff","patch_url":"https://github.com/libgdx/libgdx/pull/1362.patch"},"body":"This change allows the SO_TIMEOUT option on client sockets to be set.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1362/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1361","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1361/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1361/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1361/events","html_url":"https://github.com/libgdx/libgdx/issues/1361","id":27757060,"number":1361,"title":"Java 1.8 compatibility (OS X)","user":{"login":"Freezerburn","id":1703084,"avatar_url":"https://avatars0.githubusercontent.com/u/1703084?v=4","gravatar_id":"","url":"https://api.github.com/users/Freezerburn","html_url":"https://github.com/Freezerburn","followers_url":"https://api.github.com/users/Freezerburn/followers","following_url":"https://api.github.com/users/Freezerburn/following{/other_user}","gists_url":"https://api.github.com/users/Freezerburn/gists{/gist_id}","starred_url":"https://api.github.com/users/Freezerburn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Freezerburn/subscriptions","organizations_url":"https://api.github.com/users/Freezerburn/orgs","repos_url":"https://api.github.com/users/Freezerburn/repos","events_url":"https://api.github.com/users/Freezerburn/events{/privacy}","received_events_url":"https://api.github.com/users/Freezerburn/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2014-02-17T23:40:54Z","updated_at":"2014-03-18T21:29:36Z","closed_at":"2014-03-18T21:29:36Z","author_association":"NONE","body":"I'm not 100% certain if the following scenario is entirely the fault of Java 1.8, but it seems to be the only differing point I could find when going through the source.\nJava 1.8 seems to expect .dylibs when loading libraries, so when LWJGL attempts to load liblwjgl via System.mapLibraryName, it looks for liblwjgl.dylib instead of liblwjgl.jnilib. This causes an exception to immediately be thrown due to that file not existing. I've locally modified LibGDX's code to rename the jnilib to a dylib, (since they seem to be the same type of file) but it would be nice to have a branch of code for OS X that renames the jnilib to a dylib if Java 1.8 is running the code.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1361/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1360","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1360/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1360/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1360/events","html_url":"https://github.com/libgdx/libgdx/pull/1360","id":27752856,"number":1360,"title":"Workaround for Android bug 10515463 on pre-4.4 devices","user":{"login":"greek1979","id":6195437,"avatar_url":"https://avatars0.githubusercontent.com/u/6195437?v=4","gravatar_id":"","url":"https://api.github.com/users/greek1979","html_url":"https://github.com/greek1979","followers_url":"https://api.github.com/users/greek1979/followers","following_url":"https://api.github.com/users/greek1979/following{/other_user}","gists_url":"https://api.github.com/users/greek1979/gists{/gist_id}","starred_url":"https://api.github.com/users/greek1979/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/greek1979/subscriptions","organizations_url":"https://api.github.com/users/greek1979/orgs","repos_url":"https://api.github.com/users/greek1979/repos","events_url":"https://api.github.com/users/greek1979/events{/privacy}","received_events_url":"https://api.github.com/users/greek1979/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-02-17T22:15:39Z","updated_at":"2014-02-21T07:44:43Z","closed_at":"2014-02-19T21:36:23Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/1360","html_url":"https://github.com/libgdx/libgdx/pull/1360","diff_url":"https://github.com/libgdx/libgdx/pull/1360.diff","patch_url":"https://github.com/libgdx/libgdx/pull/1360.patch"},"body":"Just to add a more meaningful description to code change in Android Application subclasses. There is a confirmed bug in all pre-4.4 Android devices, which occurs rarely but could be very annoying to application developer. The reason for a bug is a racing condition in creating app private directory on first launch; Android Open Source project team member has suggested to try the Context.getFilesDir() method again after first one failed with a \"null\" return value.\n\nThere is no impact on runtime performance as figuring out the private directory location and creation of necessary files is done only once; subsequent calls get the internally cached location (path).\n\nRefer to pull request #1313 for previous discussion of this topic.\n\nOriginal discussion can be found here:\nhttps://code.google.com/p/android/issues/detail?id=8886\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1360/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1359","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1359/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1359/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1359/events","html_url":"https://github.com/libgdx/libgdx/pull/1359","id":27720345,"number":1359,"title":"Added a ProgressBar widget, essentially a non-interactive Slider","user":{"login":"greek1979","id":6195437,"avatar_url":"https://avatars0.githubusercontent.com/u/6195437?v=4","gravatar_id":"","url":"https://api.github.com/users/greek1979","html_url":"https://github.com/greek1979","followers_url":"https://api.github.com/users/greek1979/followers","following_url":"https://api.github.com/users/greek1979/following{/other_user}","gists_url":"https://api.github.com/users/greek1979/gists{/gist_id}","starred_url":"https://api.github.com/users/greek1979/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/greek1979/subscriptions","organizations_url":"https://api.github.com/users/greek1979/orgs","repos_url":"https://api.github.com/users/greek1979/repos","events_url":"https://api.github.com/users/greek1979/events{/privacy}","received_events_url":"https://api.github.com/users/greek1979/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2014-02-17T13:58:33Z","updated_at":"2014-06-16T16:33:05Z","closed_at":"2014-02-17T16:09:38Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/1359","html_url":"https://github.com/libgdx/libgdx/pull/1359","diff_url":"https://github.com/libgdx/libgdx/pull/1359.diff","patch_url":"https://github.com/libgdx/libgdx/pull/1359.patch"},"body":"Created a ProgressBar widget that behaves and looks like a non-interactive Slider, which in fact it is. All the source code from Slider class has been brought over here, except the user interaction part, which was intentionally left in the Slider class, which now extends the ProgressBar class by adding event listeners and rest of interactivity to the component.\n\nThis approach, I believe, is more logical than simply extending existing Slider class and suppressing all event  listeners and user interaction there by overloading constructors and public methods. However, if you believe the Slider class should be kept absolutely intact as is, and ProgressBar added on top of it, I can submit that code change as well.\n\nThe reason I am not willing to simply take a Slider and disable its touch listeners (or remove them after creation) as suggested in libGDX wiki is the desire to keep the widget logic clean and separate.\n\nAs usual, I am open to all thoughts, comments, suggestions, and constructive criticism.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1359/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1358","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1358/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1358/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1358/events","html_url":"https://github.com/libgdx/libgdx/pull/1358","id":27685510,"number":1358,"title":"Fix javadocs","user":{"login":"xoppa","id":2349087,"avatar_url":"https://avatars3.githubusercontent.com/u/2349087?v=4","gravatar_id":"","url":"https://api.github.com/users/xoppa","html_url":"https://github.com/xoppa","followers_url":"https://api.github.com/users/xoppa/followers","following_url":"https://api.github.com/users/xoppa/following{/other_user}","gists_url":"https://api.github.com/users/xoppa/gists{/gist_id}","starred_url":"https://api.github.com/users/xoppa/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xoppa/subscriptions","organizations_url":"https://api.github.com/users/xoppa/orgs","repos_url":"https://api.github.com/users/xoppa/repos","events_url":"https://api.github.com/users/xoppa/events{/privacy}","received_events_url":"https://api.github.com/users/xoppa/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2014-02-16T23:35:25Z","updated_at":"2014-06-24T16:01:03Z","closed_at":"2014-02-16T23:35:28Z","author_association":"OWNER","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/1358","html_url":"https://github.com/libgdx/libgdx/pull/1358","diff_url":"https://github.com/libgdx/libgdx/pull/1358.diff","patch_url":"https://github.com/libgdx/libgdx/pull/1358.patch"},"body":"","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1358/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1357","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1357/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1357/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1357/events","html_url":"https://github.com/libgdx/libgdx/issues/1357","id":27684795,"number":1357,"title":"Plz delete this issue, was not able to do it myself here on github. :)","user":{"login":"ghost","id":10137,"avatar_url":"https://avatars3.githubusercontent.com/u/10137?v=4","gravatar_id":"","url":"https://api.github.com/users/ghost","html_url":"https://github.com/ghost","followers_url":"https://api.github.com/users/ghost/followers","following_url":"https://api.github.com/users/ghost/following{/other_user}","gists_url":"https://api.github.com/users/ghost/gists{/gist_id}","starred_url":"https://api.github.com/users/ghost/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ghost/subscriptions","organizations_url":"https://api.github.com/users/ghost/orgs","repos_url":"https://api.github.com/users/ghost/repos","events_url":"https://api.github.com/users/ghost/events{/privacy}","received_events_url":"https://api.github.com/users/ghost/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-02-16T22:57:10Z","updated_at":"2014-02-20T23:16:17Z","closed_at":"2014-02-17T00:20:19Z","author_association":"NONE","body":"","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1357/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1356","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1356/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1356/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1356/events","html_url":"https://github.com/libgdx/libgdx/pull/1356","id":27681680,"number":1356,"title":"Small changes in AnimationController","user":{"login":"xoppa","id":2349087,"avatar_url":"https://avatars3.githubusercontent.com/u/2349087?v=4","gravatar_id":"","url":"https://api.github.com/users/xoppa","html_url":"https://github.com/xoppa","followers_url":"https://api.github.com/users/xoppa/followers","following_url":"https://api.github.com/users/xoppa/following{/other_user}","gists_url":"https://api.github.com/users/xoppa/gists{/gist_id}","starred_url":"https://api.github.com/users/xoppa/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xoppa/subscriptions","organizations_url":"https://api.github.com/users/xoppa/orgs","repos_url":"https://api.github.com/users/xoppa/repos","events_url":"https://api.github.com/users/xoppa/events{/privacy}","received_events_url":"https://api.github.com/users/xoppa/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2014-02-16T21:00:18Z","updated_at":"2014-06-24T16:01:04Z","closed_at":"2014-02-16T21:00:28Z","author_association":"OWNER","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/1356","html_url":"https://github.com/libgdx/libgdx/pull/1356","diff_url":"https://github.com/libgdx/libgdx/pull/1356.diff","patch_url":"https://github.com/libgdx/libgdx/pull/1356.patch"},"body":"- Add AnimationController#paused\n- Add AnimationController#allowSameAnimation\n- Lerp previous animations with current node transform if new animation doesn't affect that node\n  See #1351 and #1353\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1356/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1355","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1355/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1355/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1355/events","html_url":"https://github.com/libgdx/libgdx/issues/1355","id":27681552,"number":1355,"title":"RoboVm Application Visibility","user":{"login":"brthornbury","id":3271382,"avatar_url":"https://avatars0.githubusercontent.com/u/3271382?v=4","gravatar_id":"","url":"https://api.github.com/users/brthornbury","html_url":"https://github.com/brthornbury","followers_url":"https://api.github.com/users/brthornbury/followers","following_url":"https://api.github.com/users/brthornbury/following{/other_user}","gists_url":"https://api.github.com/users/brthornbury/gists{/gist_id}","starred_url":"https://api.github.com/users/brthornbury/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/brthornbury/subscriptions","organizations_url":"https://api.github.com/users/brthornbury/orgs","repos_url":"https://api.github.com/users/brthornbury/repos","events_url":"https://api.github.com/users/brthornbury/events{/privacy}","received_events_url":"https://api.github.com/users/brthornbury/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2014-02-16T20:55:40Z","updated_at":"2014-03-01T04:07:54Z","closed_at":"2014-02-28T20:14:34Z","author_association":"NONE","body":"In: libgdx / backends / gdx-backend-robovm / src / com / badlogic / gdx / backends / iosrobovm / IOSApplication.java\n\nInside of the delgate class, app should be protected visibility. This allows access to the uiScreen for drawing on top of the game for things like ads. Specifically I am implementing BlueRiver's Mopub bindings and need access to app.uiWindow\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1355/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1354","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1354/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1354/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1354/events","html_url":"https://github.com/libgdx/libgdx/pull/1354","id":27678002,"number":1354,"title":"Added support for dynamic resources to SkinLoader","user":{"login":"davebaol","id":2366334,"avatar_url":"https://avatars3.githubusercontent.com/u/2366334?v=4","gravatar_id":"","url":"https://api.github.com/users/davebaol","html_url":"https://github.com/davebaol","followers_url":"https://api.github.com/users/davebaol/followers","following_url":"https://api.github.com/users/davebaol/following{/other_user}","gists_url":"https://api.github.com/users/davebaol/gists{/gist_id}","starred_url":"https://api.github.com/users/davebaol/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davebaol/subscriptions","organizations_url":"https://api.github.com/users/davebaol/orgs","repos_url":"https://api.github.com/users/davebaol/repos","events_url":"https://api.github.com/users/davebaol/events{/privacy}","received_events_url":"https://api.github.com/users/davebaol/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2014-02-16T18:07:52Z","updated_at":"2014-02-16T18:29:11Z","closed_at":"2014-02-16T18:29:11Z","author_association":"MEMBER","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/1354","html_url":"https://github.com/libgdx/libgdx/pull/1354","diff_url":"https://github.com/libgdx/libgdx/pull/1354.diff","patch_url":"https://github.com/libgdx/libgdx/pull/1354.patch"},"body":"Now SkinParameter allows one to specify a set of named resources that will be added to the skin before loading the json file, meaning that they can be referenced from inside the json file itself.\nThis is extremely useful for dynamic resources such as a BitmapFont generated through a FreeTypeFontGenerator.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1354/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1353","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1353/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1353/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1353/events","html_url":"https://github.com/libgdx/libgdx/issues/1353","id":27674819,"number":1353,"title":"Proposal to change behaviour of AnimationController.animate","user":{"login":"titovmaxim","id":1524918,"avatar_url":"https://avatars0.githubusercontent.com/u/1524918?v=4","gravatar_id":"","url":"https://api.github.com/users/titovmaxim","html_url":"https://github.com/titovmaxim","followers_url":"https://api.github.com/users/titovmaxim/followers","following_url":"https://api.github.com/users/titovmaxim/following{/other_user}","gists_url":"https://api.github.com/users/titovmaxim/gists{/gist_id}","starred_url":"https://api.github.com/users/titovmaxim/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/titovmaxim/subscriptions","organizations_url":"https://api.github.com/users/titovmaxim/orgs","repos_url":"https://api.github.com/users/titovmaxim/repos","events_url":"https://api.github.com/users/titovmaxim/events{/privacy}","received_events_url":"https://api.github.com/users/titovmaxim/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2014-02-16T15:34:38Z","updated_at":"2014-02-17T18:32:44Z","closed_at":"2014-02-17T18:32:44Z","author_association":"CONTRIBUTOR","body":"AnimationController animate method has a check where the new animation is the same as current one. If so, it does not allow to make a transition and also does not start new animation from the beginning. Indeed, such behavior could be useful.\n\nHowever it spoils the other often usage case: if animate command is directly given, the model SHOULD animate. For example - the canon has fire animation with a long post-fire movements. If the user fires again during this post-fire state, the canon should play animation from the beginning, i.e. fire again. Obviously it is better to do this with transition to prevent a sudden jerk (we do not know when the user will fire again so we could not now the exact canon state).\n\nIf one want to preserve the current animation in the case a new one is the same, it could be done with a simple check. Reverse is not that simple and requires inheriting from AnimationController and method override.\n\nThe proposal is to remove \n        else if (anim != null && current.animation == anim.animation) {\n            anim.time = current.time;\n            animationPool.free(current);\n            current = anim;\n        }\n\npart from method\n    protected AnimationDesc animate(final AnimationDesc anim, float transitionTime)\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1353/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1352","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1352/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1352/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1352/events","html_url":"https://github.com/libgdx/libgdx/pull/1352","id":27673479,"number":1352,"title":"GWT Reflection: Create Type information on Demand","user":{"login":"hneuer","id":1545118,"avatar_url":"https://avatars3.githubusercontent.com/u/1545118?v=4","gravatar_id":"","url":"https://api.github.com/users/hneuer","html_url":"https://github.com/hneuer","followers_url":"https://api.github.com/users/hneuer/followers","following_url":"https://api.github.com/users/hneuer/following{/other_user}","gists_url":"https://api.github.com/users/hneuer/gists{/gist_id}","starred_url":"https://api.github.com/users/hneuer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hneuer/subscriptions","organizations_url":"https://api.github.com/users/hneuer/orgs","repos_url":"https://api.github.com/users/hneuer/repos","events_url":"https://api.github.com/users/hneuer/events{/privacy}","received_events_url":"https://api.github.com/users/hneuer/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-02-16T14:13:37Z","updated_at":"2014-06-20T12:08:33Z","closed_at":"2014-02-19T21:35:29Z","author_association":"OWNER","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/1352","html_url":"https://github.com/libgdx/libgdx/pull/1352","diff_url":"https://github.com/libgdx/libgdx/pull/1352.diff","patch_url":"https://github.com/libgdx/libgdx/pull/1352.patch"},"body":"To reduce startup time and memory footprint it is better to create the Type information on demand and not to create all types on startup and put them into a big HashMap.\n\nExample for the generated code of the boolean type:\n\n  private static Type c0;\n  private static Type c0() {\n  if(c0!=null) return c0;\n  c0 = new Type(\"boolean\", 0, boolean.class, null, null);\n  c0.isPrimitive = true;\n  return c0;\n  }\n\nAnd in forName a switch statement is used:\n\n```\n  case 64711720:\n      if(name.equals(\"boolean\"))return c0();\n  break;\n```\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1352/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1351","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1351/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1351/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1351/events","html_url":"https://github.com/libgdx/libgdx/issues/1351","id":27672844,"number":1351,"title":"Issue in 3D animation transition","user":{"login":"titovmaxim","id":1524918,"avatar_url":"https://avatars0.githubusercontent.com/u/1524918?v=4","gravatar_id":"","url":"https://api.github.com/users/titovmaxim","html_url":"https://github.com/titovmaxim","followers_url":"https://api.github.com/users/titovmaxim/followers","following_url":"https://api.github.com/users/titovmaxim/following{/other_user}","gists_url":"https://api.github.com/users/titovmaxim/gists{/gist_id}","starred_url":"https://api.github.com/users/titovmaxim/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/titovmaxim/subscriptions","organizations_url":"https://api.github.com/users/titovmaxim/orgs","repos_url":"https://api.github.com/users/titovmaxim/repos","events_url":"https://api.github.com/users/titovmaxim/events{/privacy}","received_events_url":"https://api.github.com/users/titovmaxim/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2014-02-16T13:34:15Z","updated_at":"2014-05-04T13:17:36Z","closed_at":"2014-02-17T18:32:14Z","author_association":"CONTRIBUTOR","body":"Introduction. The described below is connected to combination of logic of BaseAnimationController and fbx-converter. So one have to decide which part would be fixed. Currently I've made a quick fix of fbx-conv part to solve the issue.\n\nIn complex skinning animation transition could lead to a very strange result. For example there are two animations where the hero stands just close (but different) poses. In one animation it move hands, in another - head. During transition (as it was in my case) the leg start to move to the side during the transition time and then immediately returns to the correct position exactly when the transitions was finished.\n\nBaseAnimationController has  the method:\n\n```\n/** Apply two animations, blending the second onto to first using weight. */\nprotected void applyAnimations(final Animation anim1, final float time1, final Animation anim2, final float time2, final float weight) {\n    if (anim2 == null || weight == 0.f)\n        applyAnimation(anim1, time1);\n    else if (anim1 == null || weight == 1.f)\n        applyAnimation(anim2, time2);\n    else if (applying)\n        throw new GdxRuntimeException(\"Call end() first\");\n    else {\n        begin();\n        apply(anim1, time1, 1.f);\n        apply(anim2, time2, weight);\n        end();\n    }\n}\n```\n\nwhere in the last lines we apply the previous animation with weight 1, and then directly apply new (current) animation with specific weight. Under the hood the method make linear interpolation of everything like prev_(1-weight) + curr_weight.\n\nKeep in mind, that we first apply previous animation at the full weight, and only then reduce it weight to (1-weight) when applying the current animation. So, if some bones will not be present in the current animation, but will present in prev animation we will have very strange results (like described in the beginning).\n\nWhat's the deal? We could just add the correct initial values of all bones to the first animation key in Blender (or whatever) to all animations. Then all animations will have exactly the same amount of bones in use.\n\nThis it true, but fbx-conv bring another surprise. In FbxConverter.h, line 633 we have\n\n// Only add keyframes really needed\naddKeyframes(nodeAnim, frames);\nif (nodeAnim->rotate || nodeAnim->scale || nodeAnim->translate)\n    animation->nodeAnimations.push_back(nodeAnim);\nelse\n    delete nodeAnim;\n\nSo, if the animation does not use the bone, and if the initial bone state is zero (no rotation, transition, etc.) it will not be included in the g3db file. So, disregarding we have added all initial bone states in Blender, we will have very funny transitions.\n\nIt take some time for me to understand the problem. I have fixed it by removing this check in fbx-conv and leaving only one line:\n\nanimation->nodeAnimations.push_back(nodeAnim);\n\ndisregarding if the bone have some transformation.\n\nAnother, probably more proper solution, will be initially apply prev and curr animation with (1-weight) and (weight) coefficients. Or apply some \"zero\" bone to the transformations, which are present in prev, but absent in curr animations. Just to scale them down to (1-weight).\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1351/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1350","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1350/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1350/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1350/events","html_url":"https://github.com/libgdx/libgdx/issues/1350","id":27665024,"number":1350,"title":"Getters for useful fields in TextArea","user":{"login":"Rsgm","id":2313751,"avatar_url":"https://avatars0.githubusercontent.com/u/2313751?v=4","gravatar_id":"","url":"https://api.github.com/users/Rsgm","html_url":"https://github.com/Rsgm","followers_url":"https://api.github.com/users/Rsgm/followers","following_url":"https://api.github.com/users/Rsgm/following{/other_user}","gists_url":"https://api.github.com/users/Rsgm/gists{/gist_id}","starred_url":"https://api.github.com/users/Rsgm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Rsgm/subscriptions","organizations_url":"https://api.github.com/users/Rsgm/orgs","repos_url":"https://api.github.com/users/Rsgm/repos","events_url":"https://api.github.com/users/Rsgm/events{/privacy}","received_events_url":"https://api.github.com/users/Rsgm/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2014-02-16T06:06:30Z","updated_at":"2014-02-16T14:16:18Z","closed_at":"2014-02-16T14:16:18Z","author_association":"NONE","body":"I was working on a simple scroll bar for a TextArea object in my game, but I needed to be able to access the cursorLine field. Some people may also find the firstLineShowing and linesShowing fileds useful.\n\nIf possible, could a contributer reading this add these three getters to the class?\n\nI would give this an enhancement tag, but I am not sure how.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1350/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1349","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1349/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1349/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1349/events","html_url":"https://github.com/libgdx/libgdx/issues/1349","id":27655205,"number":1349,"title":"Gesture detection while touching screen","user":{"login":"Spidey86","id":6692087,"avatar_url":"https://avatars0.githubusercontent.com/u/6692087?v=4","gravatar_id":"","url":"https://api.github.com/users/Spidey86","html_url":"https://github.com/Spidey86","followers_url":"https://api.github.com/users/Spidey86/followers","following_url":"https://api.github.com/users/Spidey86/following{/other_user}","gists_url":"https://api.github.com/users/Spidey86/gists{/gist_id}","starred_url":"https://api.github.com/users/Spidey86/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Spidey86/subscriptions","organizations_url":"https://api.github.com/users/Spidey86/orgs","repos_url":"https://api.github.com/users/Spidey86/repos","events_url":"https://api.github.com/users/Spidey86/events{/privacy}","received_events_url":"https://api.github.com/users/Spidey86/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2014-02-15T19:21:48Z","updated_at":"2014-03-18T21:25:12Z","closed_at":"2014-03-18T21:25:12Z","author_association":"NONE","body":"At the moment (at least I haven't been able to do it) it is not possible to detect gestures like fing if performed with other finger appart from the one that is touching (and kept over it) the screen at that moment. I think that it would be a nice complement to the GestureListener.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1349/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1348","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1348/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1348/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1348/events","html_url":"https://github.com/libgdx/libgdx/issues/1348","id":27641045,"number":1348,"title":"audiorecord and translate to decibel","user":{"login":"benzkuai","id":6656314,"avatar_url":"https://avatars3.githubusercontent.com/u/6656314?v=4","gravatar_id":"","url":"https://api.github.com/users/benzkuai","html_url":"https://github.com/benzkuai","followers_url":"https://api.github.com/users/benzkuai/followers","following_url":"https://api.github.com/users/benzkuai/following{/other_user}","gists_url":"https://api.github.com/users/benzkuai/gists{/gist_id}","starred_url":"https://api.github.com/users/benzkuai/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/benzkuai/subscriptions","organizations_url":"https://api.github.com/users/benzkuai/orgs","repos_url":"https://api.github.com/users/benzkuai/repos","events_url":"https://api.github.com/users/benzkuai/events{/privacy}","received_events_url":"https://api.github.com/users/benzkuai/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-02-15T02:30:45Z","updated_at":"2014-02-15T08:37:07Z","closed_at":"2014-02-15T08:37:07Z","author_association":"NONE","body":"I found the \"AudioRecorder\" in com.badlogic.gdx.audio, but I have no idea how I can get record from MIC and translate to decibel.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1348/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1347","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1347/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1347/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1347/events","html_url":"https://github.com/libgdx/libgdx/issues/1347","id":27626188,"number":1347,"title":"Can't turn culling off","user":{"login":"Dancovich","id":1204296,"avatar_url":"https://avatars1.githubusercontent.com/u/1204296?v=4","gravatar_id":"","url":"https://api.github.com/users/Dancovich","html_url":"https://github.com/Dancovich","followers_url":"https://api.github.com/users/Dancovich/followers","following_url":"https://api.github.com/users/Dancovich/following{/other_user}","gists_url":"https://api.github.com/users/Dancovich/gists{/gist_id}","starred_url":"https://api.github.com/users/Dancovich/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Dancovich/subscriptions","organizations_url":"https://api.github.com/users/Dancovich/orgs","repos_url":"https://api.github.com/users/Dancovich/repos","events_url":"https://api.github.com/users/Dancovich/events{/privacy}","received_events_url":"https://api.github.com/users/Dancovich/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-02-14T21:27:15Z","updated_at":"2014-02-16T18:55:04Z","closed_at":"2014-02-16T18:55:04Z","author_association":"NONE","body":"[Here is the G3DJ model I'm using.](http://pastebin.com/hTpeHBVm) This model is two cubes one inside the other and the outer cube has a hole so you can see the inner cube.\n\nWhen rendering this model, even with backface culling off I'm getting this result:\n![test_no_culling](https://f.cloud.github.com/assets/1204296/2175330/5dbe0aec-95bd-11e3-98fe-4533dc2b7954.jpg)\n\n[This is the code I'm using to render this model.](http://pastebin.com/EQrBt26W) Notice at line 72 (render method) that I'm disabling culling before rendering the model instance.\n\nHere is the code I'm using to start the test, I'm using GLES 2.0.\n\n``` java\nLwjglApplicationConfiguration cfg = new LwjglApplicationConfiguration();\ncfg.title = \"test-fbx\";\ncfg.useGL20 = true;\ncfg.width = 640;\ncfg.height = 480;\n\nnew LwjglApplication(new LoadModelsTest(), cfg);\n```\n\nIs there something I'm doing wrong?\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1347/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1346","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1346/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1346/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1346/events","html_url":"https://github.com/libgdx/libgdx/issues/1346","id":27624858,"number":1346,"title":"Vertices not associated to bones are not rendered","user":{"login":"Dancovich","id":1204296,"avatar_url":"https://avatars1.githubusercontent.com/u/1204296?v=4","gravatar_id":"","url":"https://api.github.com/users/Dancovich","html_url":"https://github.com/Dancovich","followers_url":"https://api.github.com/users/Dancovich/followers","following_url":"https://api.github.com/users/Dancovich/following{/other_user}","gists_url":"https://api.github.com/users/Dancovich/gists{/gist_id}","starred_url":"https://api.github.com/users/Dancovich/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Dancovich/subscriptions","organizations_url":"https://api.github.com/users/Dancovich/orgs","repos_url":"https://api.github.com/users/Dancovich/repos","events_url":"https://api.github.com/users/Dancovich/events{/privacy}","received_events_url":"https://api.github.com/users/Dancovich/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2014-02-14T21:03:54Z","updated_at":"2014-02-17T18:37:55Z","closed_at":"2014-02-17T18:37:55Z","author_association":"NONE","body":"Steps to reproduce.\n- Create a model\n- Create an armature node with at least one bone\n- Use the BLENDWEIGHT vertex attribute to give a weight to some vertices\n- Leave others with no weights at all\n- Render this model\n\nThe vertices with no weights don't get rendered at all.\n\n[Here is an example](http://pastebin.com/tsjHp0CQ). This G3DJ model has 6 vertices but only four of them have associated bone weights, the other 2 have zero weight.\n\nHere is the resulting render. Notice only four vertices are rendered.\n![test_no_weights](https://f.cloud.github.com/assets/1204296/2175123/dc781b74-95b9-11e3-9eda-b4c0118bec6d.jpg)\n\nAlso this is the same render but from the back. Notice that instead of backface culling we get this weird artifact as if the 2 remaining vertices are being translated to the bone location.\n![test_no_weights backface](https://f.cloud.github.com/assets/1204296/2175127/ea9bb616-95b9-11e3-950e-d9ef79052acf.jpg)\n\n[Here is the same model](http://pastebin.com/cNtU8Xf8) with all vertices having weights associated to them.\n\nHere is the render, notice all 6 vertices are rendered.\n![test_all_weights](https://f.cloud.github.com/assets/1204296/2175130/f4248910-95b9-11e3-8f33-49a49f3a165e.jpg)\n\nSame render from back. Backface culling kicks in and works perfectly, no artifacts whatsoever.\n![test_all_weights backface](https://f.cloud.github.com/assets/1204296/2175134/0022a328-95ba-11e3-96fb-d38ad9117eda.jpg)\n\nBelow is the code I'm using to render these models.\n[LibGDX Armature Bug](http://pastebin.com/CeAhdmEW)\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1346/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1345","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1345/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1345/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1345/events","html_url":"https://github.com/libgdx/libgdx/pull/1345","id":27611810,"number":1345,"title":"Code formatting (curly braces) and extra constructor for Container","user":{"login":"greek1979","id":6195437,"avatar_url":"https://avatars0.githubusercontent.com/u/6195437?v=4","gravatar_id":"","url":"https://api.github.com/users/greek1979","html_url":"https://github.com/greek1979","followers_url":"https://api.github.com/users/greek1979/followers","following_url":"https://api.github.com/users/greek1979/following{/other_user}","gists_url":"https://api.github.com/users/greek1979/gists{/gist_id}","starred_url":"https://api.github.com/users/greek1979/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/greek1979/subscriptions","organizations_url":"https://api.github.com/users/greek1979/orgs","repos_url":"https://api.github.com/users/greek1979/repos","events_url":"https://api.github.com/users/greek1979/events{/privacy}","received_events_url":"https://api.github.com/users/greek1979/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2014-02-14T17:34:20Z","updated_at":"2014-02-16T04:03:10Z","closed_at":"2014-02-14T17:43:55Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/1345","html_url":"https://github.com/libgdx/libgdx/pull/1345","diff_url":"https://github.com/libgdx/libgdx/pull/1345.diff","patch_url":"https://github.com/libgdx/libgdx/pull/1345.patch"},"body":"","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1345/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1344","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1344/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1344/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1344/events","html_url":"https://github.com/libgdx/libgdx/pull/1344","id":27605915,"number":1344,"title":"Added Container to GWT module","user":{"login":"hneuer","id":1545118,"avatar_url":"https://avatars3.githubusercontent.com/u/1545118?v=4","gravatar_id":"","url":"https://api.github.com/users/hneuer","html_url":"https://github.com/hneuer","followers_url":"https://api.github.com/users/hneuer/followers","following_url":"https://api.github.com/users/hneuer/following{/other_user}","gists_url":"https://api.github.com/users/hneuer/gists{/gist_id}","starred_url":"https://api.github.com/users/hneuer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hneuer/subscriptions","organizations_url":"https://api.github.com/users/hneuer/orgs","repos_url":"https://api.github.com/users/hneuer/repos","events_url":"https://api.github.com/users/hneuer/events{/privacy}","received_events_url":"https://api.github.com/users/hneuer/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2014-02-14T16:12:30Z","updated_at":"2014-06-20T12:08:34Z","closed_at":"2014-02-14T16:13:15Z","author_association":"OWNER","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/1344","html_url":"https://github.com/libgdx/libgdx/pull/1344","diff_url":"https://github.com/libgdx/libgdx/pull/1344.diff","patch_url":"https://github.com/libgdx/libgdx/pull/1344.patch"},"body":"","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1344/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1343","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1343/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1343/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1343/events","html_url":"https://github.com/libgdx/libgdx/pull/1343","id":27604693,"number":1343,"title":"3d api","user":{"login":"lordjone","id":6410722,"avatar_url":"https://avatars0.githubusercontent.com/u/6410722?v=4","gravatar_id":"","url":"https://api.github.com/users/lordjone","html_url":"https://github.com/lordjone","followers_url":"https://api.github.com/users/lordjone/followers","following_url":"https://api.github.com/users/lordjone/following{/other_user}","gists_url":"https://api.github.com/users/lordjone/gists{/gist_id}","starred_url":"https://api.github.com/users/lordjone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lordjone/subscriptions","organizations_url":"https://api.github.com/users/lordjone/orgs","repos_url":"https://api.github.com/users/lordjone/repos","events_url":"https://api.github.com/users/lordjone/events{/privacy}","received_events_url":"https://api.github.com/users/lordjone/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2014-02-14T15:55:27Z","updated_at":"2014-03-19T00:06:24Z","closed_at":"2014-03-18T20:34:33Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/1343","html_url":"https://github.com/libgdx/libgdx/pull/1343","diff_url":"https://github.com/libgdx/libgdx/pull/1343.diff","patch_url":"https://github.com/libgdx/libgdx/pull/1343.patch"},"body":"Added getRenderables, copy to Node/NodePart\nAdded function to set Renderable to a given Renderable\nAdded methods to ModelBuilder to create xyz axes and xz grid of lines models\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1343/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1342","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1342/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1342/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1342/events","html_url":"https://github.com/libgdx/libgdx/pull/1342","id":27604352,"number":1342,"title":"Math and Camera","user":{"login":"lordjone","id":6410722,"avatar_url":"https://avatars0.githubusercontent.com/u/6410722?v=4","gravatar_id":"","url":"https://api.github.com/users/lordjone","html_url":"https://github.com/lordjone","followers_url":"https://api.github.com/users/lordjone/followers","following_url":"https://api.github.com/users/lordjone/following{/other_user}","gists_url":"https://api.github.com/users/lordjone/gists{/gist_id}","starred_url":"https://api.github.com/users/lordjone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lordjone/subscriptions","organizations_url":"https://api.github.com/users/lordjone/orgs","repos_url":"https://api.github.com/users/lordjone/repos","events_url":"https://api.github.com/users/lordjone/events{/privacy}","received_events_url":"https://api.github.com/users/lordjone/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2014-02-14T15:51:12Z","updated_at":"2014-06-25T19:42:08Z","closed_at":"2014-02-16T22:51:35Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/1342","html_url":"https://github.com/libgdx/libgdx/pull/1342","diff_url":"https://github.com/libgdx/libgdx/pull/1342.diff","patch_url":"https://github.com/libgdx/libgdx/pull/1342.patch"},"body":"Added collinear,opposite,same direction function to vector3\nAdded extract/copy Matrix4x3 to Matrix4x4\nFixed Camera lookAt bug\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1342/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1341","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1341/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1341/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1341/events","html_url":"https://github.com/libgdx/libgdx/issues/1341","id":27602342,"number":1341,"title":"Action.OnCompletionListener","user":{"login":"ghost","id":10137,"avatar_url":"https://avatars3.githubusercontent.com/u/10137?v=4","gravatar_id":"","url":"https://api.github.com/users/ghost","html_url":"https://github.com/ghost","followers_url":"https://api.github.com/users/ghost/followers","following_url":"https://api.github.com/users/ghost/following{/other_user}","gists_url":"https://api.github.com/users/ghost/gists{/gist_id}","starred_url":"https://api.github.com/users/ghost/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ghost/subscriptions","organizations_url":"https://api.github.com/users/ghost/orgs","repos_url":"https://api.github.com/users/ghost/repos","events_url":"https://api.github.com/users/ghost/events{/privacy}","received_events_url":"https://api.github.com/users/ghost/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2014-02-14T15:23:24Z","updated_at":"2014-02-14T18:10:41Z","closed_at":"2014-02-14T18:10:41Z","author_association":"NONE","body":"I wasn't able to find a way to check if a special Action (parallel to some others on the same actor) has finished. Something like an Interface Action.OnCompletionListener like Music.OnCompletionListener would be really nice.\n\nAction a = Actions.fadeOut(10);\na.setOnCompletionListener(new Action.OnCompletionListener() {\n    //do something.\n})\n\nIs there a special reason why there is nothing like this integrated?\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1341/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1340","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1340/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1340/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1340/events","html_url":"https://github.com/libgdx/libgdx/pull/1340","id":27596619,"number":1340,"title":"Math and Camera fixes","user":{"login":"lordjone","id":6410722,"avatar_url":"https://avatars0.githubusercontent.com/u/6410722?v=4","gravatar_id":"","url":"https://api.github.com/users/lordjone","html_url":"https://github.com/lordjone","followers_url":"https://api.github.com/users/lordjone/followers","following_url":"https://api.github.com/users/lordjone/following{/other_user}","gists_url":"https://api.github.com/users/lordjone/gists{/gist_id}","starred_url":"https://api.github.com/users/lordjone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lordjone/subscriptions","organizations_url":"https://api.github.com/users/lordjone/orgs","repos_url":"https://api.github.com/users/lordjone/repos","events_url":"https://api.github.com/users/lordjone/events{/privacy}","received_events_url":"https://api.github.com/users/lordjone/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2014-02-14T13:55:44Z","updated_at":"2014-07-19T18:43:03Z","closed_at":"2014-02-14T14:16:26Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/1340","html_url":"https://github.com/libgdx/libgdx/pull/1340","diff_url":"https://github.com/libgdx/libgdx/pull/1340.diff","patch_url":"https://github.com/libgdx/libgdx/pull/1340.patch"},"body":"Added collinear,opposite,same direction function to vector3\nAdded extract/copy Matrix4x3 to Matrix4x4\nFixed Camera lookAt bug\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1340/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1339","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1339/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1339/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1339/events","html_url":"https://github.com/libgdx/libgdx/issues/1339","id":27575699,"number":1339,"title":"Cannot compile IOS app with robovm 0.0.9","user":{"login":"loriopatrick","id":1400322,"avatar_url":"https://avatars3.githubusercontent.com/u/1400322?v=4","gravatar_id":"","url":"https://api.github.com/users/loriopatrick","html_url":"https://github.com/loriopatrick","followers_url":"https://api.github.com/users/loriopatrick/followers","following_url":"https://api.github.com/users/loriopatrick/following{/other_user}","gists_url":"https://api.github.com/users/loriopatrick/gists{/gist_id}","starred_url":"https://api.github.com/users/loriopatrick/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/loriopatrick/subscriptions","organizations_url":"https://api.github.com/users/loriopatrick/orgs","repos_url":"https://api.github.com/users/loriopatrick/repos","events_url":"https://api.github.com/users/loriopatrick/events{/privacy}","received_events_url":"https://api.github.com/users/loriopatrick/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-02-14T05:51:03Z","updated_at":"2014-02-14T16:30:27Z","closed_at":"2014-02-14T16:30:27Z","author_association":"NONE","body":"I have been able to compile my project with robovm 0.0.7 (and run on device and simulator). More details: http://stackoverflow.com/questions/21769943/libgdx-robovm-to-app-store\n\nI'm using Intellij IDEA. My robovm parameters:\n\n```\n-verbose -jar $OutputPath$/../../artifacts/ios_jar/ios.jar -config robovm.xml -sdk 7.0 -signidentity \"***\" -run $FileClass$\n```\n\nMy robovm.xml\n\n```\n<config>\n    <executableName>IOS</executableName>\n    <mainClass>IOSMain</mainClass>\n    <os>ios</os>\n    <arch>x86</arch>\n    <target>ios</target>\n    <iosInfoPList>Info.plist.xml</iosInfoPList>\n    <resources>\n        <resource>\n            <directory>../application/assets</directory>\n            <includes>\n                <include>levels/**</include>\n                <include>sounds/**</include>\n                <include>images/title.png</include>\n            </includes>\n            <skipPngCrush>true</skipPngCrush>\n        </resource>\n        <resource>\n            <directory>../application/assets/ios</directory>\n            <includes>\n                <include>**</include>\n            </includes>\n        </resource>\n    </resources>\n    <libs>\n        <lib>/Users/plorio/lib/libgdx-0.9.9/ios/libgdx.a</lib>\n        <lib>/Users/plorio/lib/libgdx-0.9.9/ios/libObjectAL.a</lib>\n    </libs>\n    <frameworks>\n        <framework>UIKit</framework>\n        <framework>OpenGLES</framework>\n        <framework>QuartzCore</framework>\n        <framework>CoreGraphics</framework>\n        <framework>OpenAL</framework>\n        <framework>AudioToolbox</framework>\n        <framework>AVFoundation</framework>\n    </frameworks>\n</config>\n```\n\nMy IOSMain.java\n\n```\nimport game.GameHandler;\nimport org.robovm.cocoatouch.foundation.NSAutoreleasePool;\nimport org.robovm.cocoatouch.uikit.UIApplication;\n\nimport com.badlogic.gdx.backends.iosrobovm.IOSApplication;\nimport com.badlogic.gdx.backends.iosrobovm.IOSApplicationConfiguration;\n\npublic class IOSMain extends IOSApplication.Delegate {\n    @Override\n    protected IOSApplication createApplication() {\n        IOSApplicationConfiguration config = new IOSApplicationConfiguration();\n        config.useAccelerometer = false;\n        config.useCompass = false;\n        config.allowIpod = true;\n        return new IOSApplication(new GameHandler(), config);\n    }\n\n    public static void main(String[] argv) {\n        NSAutoreleasePool pool = new NSAutoreleasePool();\n        UIApplication.main(argv, null, IOSMain.class);\n        pool.drain();\n    }\n}\n```\n\nThe error\n\n```\njava.lang.IllegalArgumentException: No @Marshaler found for parameter 1 of @Callback method <com.badlogic.gdx.backends.iosrobovm.objectal.AVAudioPlayerDelegate$Callbacks: void didFinishPlaying(com.badlogic.gdx.backends.iosrobovm.objectal.AVAudioPlayerDelegate,org.robovm.objc.Selector,org.robovm.cocoatouch.foundation.NSObject,boolean)>\n    at org.robovm.compiler.MarshalerLookup.findMarshalerMethod(MarshalerLookup.java:167)\n    at org.robovm.compiler.BroMethodCompiler.getParameterType(BroMethodCompiler.java:492)\n    at org.robovm.compiler.BroMethodCompiler.getBridgeOrCallbackFunctionType(BroMethodCompiler.java:513)\n    at org.robovm.compiler.BroMethodCompiler.getCallbackFunctionType(BroMethodCompiler.java:505)\n    at org.robovm.compiler.CallbackMethodCompiler.callback(CallbackMethodCompiler.java:78)\n    at org.robovm.compiler.CallbackMethodCompiler.compileCallback(CallbackMethodCompiler.java:107)\n    at org.robovm.compiler.CallbackMethodCompiler.doCompile(CallbackMethodCompiler.java:74)\n    at org.robovm.compiler.AbstractMethodCompiler.compile(AbstractMethodCompiler.java:74)\n    at org.robovm.compiler.ClassCompiler.callbackMethod(ClassCompiler.java:1070)\n    at org.robovm.compiler.ClassCompiler.compile(ClassCompiler.java:566)\n    at org.robovm.compiler.ClassCompiler.compile(ClassCompiler.java:283)\n    at org.robovm.compiler.AppCompiler.compile(AppCompiler.java:198)\n    at org.robovm.compiler.AppCompiler.compile(AppCompiler.java:216)\n    at org.robovm.compiler.AppCompiler.main(AppCompiler.java:438)\n```\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1339/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1338","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1338/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1338/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1338/events","html_url":"https://github.com/libgdx/libgdx/issues/1338","id":27560094,"number":1338,"title":"AtlasTmxMapLoader does not load tiles","user":{"login":"iJ0N45","id":1114119,"avatar_url":"https://avatars0.githubusercontent.com/u/1114119?v=4","gravatar_id":"","url":"https://api.github.com/users/iJ0N45","html_url":"https://github.com/iJ0N45","followers_url":"https://api.github.com/users/iJ0N45/followers","following_url":"https://api.github.com/users/iJ0N45/following{/other_user}","gists_url":"https://api.github.com/users/iJ0N45/gists{/gist_id}","starred_url":"https://api.github.com/users/iJ0N45/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/iJ0N45/subscriptions","organizations_url":"https://api.github.com/users/iJ0N45/orgs","repos_url":"https://api.github.com/users/iJ0N45/repos","events_url":"https://api.github.com/users/iJ0N45/events{/privacy}","received_events_url":"https://api.github.com/users/iJ0N45/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2014-02-13T22:58:28Z","updated_at":"2014-02-14T11:05:47Z","closed_at":"2014-02-14T11:05:47Z","author_association":"NONE","body":"Hi there,\nI am new to libgdx, so I am not sure, if its really a bug, or just me, not knowing the library:\n#### Setup:\n- libgdx (latest stable)\n- Tiled map (.tmx) ('atlas' property is set)\n- packed textures (packet with 'TexturePacker' from gdx-tools.jar (nightly))\n#### Problem:\n\nWhen loading a map with 'AtlasTmxMapLoader', it does not load any tiles. [Line 357](https://github.com/libgdx/libgdx/blob/master/gdx/src/com/badlogic/gdx/maps/tiled/AtlasTmxMapLoader.java#L357), no exception is thrown\n(TiledMapTileSet.tiles is empty)\n\nWhen loading a map with 'TmxMapLoader', there is no problem [Line 338](https://github.com/libgdx/libgdx/blob/master/gdx/src/com/badlogic/gdx/maps/tiled/TmxMapLoader.java#L338)\n(TiledMapTileSet.tiles is filled)\n#### code:\n\n``` java\nAtlasTmxMapLoader loader = new AtlasTmxMapLoader(); // Not working\n//TmxMapLoader loader = new TmxMapLoader(); // working\nmap = loader.load(\"data/maps/testmap.tmx\");\nmapRenderer = new OrthogonalTiledMapRenderer(map);\n```\n\nCheers\nJonas\n\n**Ps**: My refactoring sense is tingling: 'AtlasTmxMapLoader' is almost screaming to extend from 'TmxMapLoader', because the only difference is (correct me, if I am wrong) the image loading. Should I take a look at it?\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1338/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1337","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1337/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1337/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1337/events","html_url":"https://github.com/libgdx/libgdx/pull/1337","id":27552683,"number":1337,"title":"Android (Fragment): Added Immersive Mode support","user":{"login":"johnnyapol","id":5902494,"avatar_url":"https://avatars1.githubusercontent.com/u/5902494?v=4","gravatar_id":"","url":"https://api.github.com/users/johnnyapol","html_url":"https://github.com/johnnyapol","followers_url":"https://api.github.com/users/johnnyapol/followers","following_url":"https://api.github.com/users/johnnyapol/following{/other_user}","gists_url":"https://api.github.com/users/johnnyapol/gists{/gist_id}","starred_url":"https://api.github.com/users/johnnyapol/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/johnnyapol/subscriptions","organizations_url":"https://api.github.com/users/johnnyapol/orgs","repos_url":"https://api.github.com/users/johnnyapol/repos","events_url":"https://api.github.com/users/johnnyapol/events{/privacy}","received_events_url":"https://api.github.com/users/johnnyapol/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2014-02-13T21:11:02Z","updated_at":"2014-06-16T15:15:07Z","closed_at":"2014-02-14T19:01:20Z","author_association":"OWNER","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/1337","html_url":"https://github.com/libgdx/libgdx/pull/1337","diff_url":"https://github.com/libgdx/libgdx/pull/1337.diff","patch_url":"https://github.com/libgdx/libgdx/pull/1337.patch"},"body":"While looking into the Android tests, I noticed fragments where using Immersive Mode in some tests. I decided to port the immersive mode function to fragments. \n- Formatting\n- Minor changes to AndroidApplicationBase\n- Worked in my tests. Probably best if someone else confirmed as well.\n- Better logging for AndroidVisibilityHandler exceptions\n- (Off topic: issue 1337!)\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1337/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1336","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1336/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1336/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1336/events","html_url":"https://github.com/libgdx/libgdx/issues/1336","id":27547893,"number":1336,"title":"VerticalGroup ignores Width of children","user":{"login":"ghost","id":10137,"avatar_url":"https://avatars3.githubusercontent.com/u/10137?v=4","gravatar_id":"","url":"https://api.github.com/users/ghost","html_url":"https://github.com/ghost","followers_url":"https://api.github.com/users/ghost/followers","following_url":"https://api.github.com/users/ghost/following{/other_user}","gists_url":"https://api.github.com/users/ghost/gists{/gist_id}","starred_url":"https://api.github.com/users/ghost/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ghost/subscriptions","organizations_url":"https://api.github.com/users/ghost/orgs","repos_url":"https://api.github.com/users/ghost/repos","events_url":"https://api.github.com/users/ghost/events{/privacy}","received_events_url":"https://api.github.com/users/ghost/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":18,"created_at":"2014-02-13T20:06:28Z","updated_at":"2014-02-20T21:51:54Z","closed_at":"2014-02-14T20:32:33Z","author_association":"NONE","body":"Put a TextField into an VerticalGroup and the TextField will be drawn with a width of 150px regardless of its set width (eg. 300px), even if the VerticalGroups width is set much higher (eg. 500px).\nPut the TextField instead directly onto the stage and it will be drawn with the correct size.\n\nI used setWidth(...) to set the width of each actor.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1336/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}}],"meta":{"x-ratelimit-limit":"5000","x-ratelimit-remaining":"4880","x-ratelimit-reset":"1506844633","x-github-request-id":"E9BA:0285:103B2CF:1FD46E1:59D0970C","x-github-media-type":"github.squirrel-girl-preview","link":"<https://api.github.com/repositories/5373551/issues?state=all&page=120>; rel=\"next\", <https://api.github.com/repositories/5373551/issues?state=all&page=164>; rel=\"last\", <https://api.github.com/repositories/5373551/issues?state=all&page=1>; rel=\"first\", <https://api.github.com/repositories/5373551/issues?state=all&page=118>; rel=\"prev\"","etag":"\"154b6b4682cd47e26dedd587dbaf5d1b\"","status":"200 OK"}}
