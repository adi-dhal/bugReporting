{"data":[{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3077","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3077/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3077/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3077/events","html_url":"https://github.com/libgdx/libgdx/pull/3077","id":72783468,"number":3077,"title":"Adds animated tiles to output texture atlas","user":{"login":"oddlydrawn","id":3712667,"avatar_url":"https://avatars2.githubusercontent.com/u/3712667?v=4","gravatar_id":"","url":"https://api.github.com/users/oddlydrawn","html_url":"https://github.com/oddlydrawn","followers_url":"https://api.github.com/users/oddlydrawn/followers","following_url":"https://api.github.com/users/oddlydrawn/following{/other_user}","gists_url":"https://api.github.com/users/oddlydrawn/gists{/gist_id}","starred_url":"https://api.github.com/users/oddlydrawn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/oddlydrawn/subscriptions","organizations_url":"https://api.github.com/users/oddlydrawn/orgs","repos_url":"https://api.github.com/users/oddlydrawn/repos","events_url":"https://api.github.com/users/oddlydrawn/events{/privacy}","received_events_url":"https://api.github.com/users/oddlydrawn/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2015-05-03T10:14:51Z","updated_at":"2015-05-04T17:30:11Z","closed_at":"2015-05-04T09:35:53Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3077","html_url":"https://github.com/libgdx/libgdx/pull/3077","diff_url":"https://github.com/libgdx/libgdx/pull/3077.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3077.patch"},"body":"This allows TiledMapPacker to add animated Tiled map tiles. \n\nCurrently, if you try to process a Tiled map containing animated tiles with TiledMapPacker you'd get an NPE since it only adds the base tile and none of the animated tiles.\n\nThe extra formatted lines were formatted according to the libGDX Eclipse formatter since I have a save action, format all lines. I also have organize imports save action.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3077/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3076","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3076/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3076/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3076/events","html_url":"https://github.com/libgdx/libgdx/pull/3076","id":72662101,"number":3076,"title":"Updating VisUI version","user":{"login":"kotcrab","id":4594081,"avatar_url":"https://avatars1.githubusercontent.com/u/4594081?v=4","gravatar_id":"","url":"https://api.github.com/users/kotcrab","html_url":"https://github.com/kotcrab","followers_url":"https://api.github.com/users/kotcrab/followers","following_url":"https://api.github.com/users/kotcrab/following{/other_user}","gists_url":"https://api.github.com/users/kotcrab/gists{/gist_id}","starred_url":"https://api.github.com/users/kotcrab/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kotcrab/subscriptions","organizations_url":"https://api.github.com/users/kotcrab/orgs","repos_url":"https://api.github.com/users/kotcrab/repos","events_url":"https://api.github.com/users/kotcrab/events{/privacy}","received_events_url":"https://api.github.com/users/kotcrab/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2015-05-02T15:39:52Z","updated_at":"2015-05-26T20:08:56Z","closed_at":"2015-05-02T15:40:29Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3076","html_url":"https://github.com/libgdx/libgdx/pull/3076","diff_url":"https://github.com/libgdx/libgdx/pull/3076.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3076.patch"},"body":"","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3076/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3075","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3075/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3075/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3075/events","html_url":"https://github.com/libgdx/libgdx/issues/3075","id":72601969,"number":3075,"title":"\"Pixmap already disposed \"error during FreeTypeFontGenerator.dispose","user":{"login":"bill-lin","id":1042949,"avatar_url":"https://avatars2.githubusercontent.com/u/1042949?v=4","gravatar_id":"","url":"https://api.github.com/users/bill-lin","html_url":"https://github.com/bill-lin","followers_url":"https://api.github.com/users/bill-lin/followers","following_url":"https://api.github.com/users/bill-lin/following{/other_user}","gists_url":"https://api.github.com/users/bill-lin/gists{/gist_id}","starred_url":"https://api.github.com/users/bill-lin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bill-lin/subscriptions","organizations_url":"https://api.github.com/users/bill-lin/orgs","repos_url":"https://api.github.com/users/bill-lin/repos","events_url":"https://api.github.com/users/bill-lin/events{/privacy}","received_events_url":"https://api.github.com/users/bill-lin/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2015-05-02T07:12:31Z","updated_at":"2015-05-17T21:02:17Z","closed_at":"2015-05-17T21:02:17Z","author_association":"NONE","body":"Hi,\n\nI added a generated BitmapFonts (by using the latest FreeTypeFontGenerator) into several different skin styles.\nThen I got following error when Skin disposed:\n\n```\ncom.badlogic.gdx.utils.GdxRuntimeException: Pixmap already disposed!\n    at com.badlogic.gdx.graphics.Pixmap.dispose(Pixmap.java:307)\n    at com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$1.dispose(FreeTypeFontGenerator.java:457)\n    at com.badlogic.gdx.graphics.g2d.BitmapFont.dispose(BitmapFont.java:313)\n    at com.badlogic.gdx.scenes.scene2d.ui.Skin.dispose(Skin.java:392)\n    at com.badlogic.gdx.assets.AssetManager.unload(AssetManager.java:192)\n    at com.badlogic.gdx.assets.AssetManager.clear(AssetManager.java:619)\n    at com.badlogic.gdx.assets.AssetManager.dispose(AssetManager.java:587)\n```\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3075/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3074","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3074/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3074/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3074/events","html_url":"https://github.com/libgdx/libgdx/issues/3074","id":72264096,"number":3074,"title":"no support for BMFont's (.fnt) padding - xHeight & capHeight invalid for padded fonts","user":{"login":"FyiurAmron","id":11016998,"avatar_url":"https://avatars1.githubusercontent.com/u/11016998?v=4","gravatar_id":"","url":"https://api.github.com/users/FyiurAmron","html_url":"https://github.com/FyiurAmron","followers_url":"https://api.github.com/users/FyiurAmron/followers","following_url":"https://api.github.com/users/FyiurAmron/following{/other_user}","gists_url":"https://api.github.com/users/FyiurAmron/gists{/gist_id}","starred_url":"https://api.github.com/users/FyiurAmron/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/FyiurAmron/subscriptions","organizations_url":"https://api.github.com/users/FyiurAmron/orgs","repos_url":"https://api.github.com/users/FyiurAmron/repos","events_url":"https://api.github.com/users/FyiurAmron/events{/privacy}","received_events_url":"https://api.github.com/users/FyiurAmron/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2015-04-30T19:48:39Z","updated_at":"2015-05-01T20:55:48Z","closed_at":"2015-05-01T17:56:06Z","author_association":"CONTRIBUTOR","body":"Current BitmapFont.java implementation just ignores the `padding=` field; it makes using fonts with e.g. shadow/glow very hard, since both _xHeight_ & _capHeight_ are calculated based on actual texture size, not the size minus padding one. Since for shadowed/glowed fonts the texture size is often 2-3x bigger than the proper _xHeight_/_capHeight_ calculated from of the \"core\" of the glyph, this results in very poor vertical positioning of the glyphs during text compositing (i.e. it's almost impossible to calculate where the actual glyph will appear due to offseting from padding). Horizontal positioning is unaffected, since it's directly based on raw .fnt data.\n\nThe solution I used to work around this was replacing https://github.com/libgdx/libgdx/blob/master/gdx/src/com/badlogic/gdx/graphics/g2d/BitmapFont.java#L472 line with\n\n```\n// private static final int paddingCount = 4;\n                String line = reader.readLine();\n                String keyword = \"padding=\";\n                String substr = line.substring( line.indexOf( keyword ) + keyword.length() );\n                String[] paddingStr = substr.substring( 0, substr.indexOf( ' ' ) ).split( \",\", paddingCount );\n                if ( paddingStr.length != paddingCount ) {\n                    throw new IOException();\n                }\n                int[] padding = new int[paddingCount];\n                for( int i = 0; i < paddingCount; i++ ) {\n                    padding[i] = Integer.parseInt( paddingStr[i] );\n                }\n                // up, right, down, left\n                int paddingHorizontal = padding[1] + padding[3], // currently unused\n                        paddingVertical = padding[0] + padding[2];\n```\n\nand then, in lines 606 through 628, all occurences of `xGlyph.height`/`capGlyph.height`/`glyph.height` with the respective `.height - paddingVertical`.\n\nI don't know if this is the best way to do this, but it seems that it fixes the issue. Any suggestions/patches are most welcome.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3074/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3073","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3073/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3073/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3073/events","html_url":"https://github.com/libgdx/libgdx/issues/3073","id":72225235,"number":3073,"title":"getPrefHeight() in Label class not taking fontScaleY into account.","user":{"login":"FyiurAmron","id":11016998,"avatar_url":"https://avatars1.githubusercontent.com/u/11016998?v=4","gravatar_id":"","url":"https://api.github.com/users/FyiurAmron","html_url":"https://github.com/FyiurAmron","followers_url":"https://api.github.com/users/FyiurAmron/followers","following_url":"https://api.github.com/users/FyiurAmron/following{/other_user}","gists_url":"https://api.github.com/users/FyiurAmron/gists{/gist_id}","starred_url":"https://api.github.com/users/FyiurAmron/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/FyiurAmron/subscriptions","organizations_url":"https://api.github.com/users/FyiurAmron/orgs","repos_url":"https://api.github.com/users/FyiurAmron/repos","events_url":"https://api.github.com/users/FyiurAmron/events{/privacy}","received_events_url":"https://api.github.com/users/FyiurAmron/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2015-04-30T17:20:57Z","updated_at":"2015-04-30T18:37:28Z","closed_at":"2015-04-30T18:28:04Z","author_association":"CONTRIBUTOR","body":"Label allows setting font scale, which, by itself, works by setting two fields (X,Y) which temporarily replace the font's scale with themselves. Most of the fontsize-related code (`scaleAndComputePrefSize()`, `layout()`) is thus wrapped into\n\n```\nfloat oldScaleX = font.getScaleX();\nfloat oldScaleY = font.getScaleY();\nif (fontScaleX != 1 || fontScaleY != 1) font.getData().setScale(fontScaleX, fontScaleY);\n//actual code\nif (fontScaleX != 1 || fontScaleY != 1) font.getData().setScale(oldScaleX, oldScaleY);\n```\n\nwhich does it job good. There is one exception: `getPrefHeight()` (also called by `pack()`), which uses https://github.com/libgdx/libgdx/blob/master/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Label.java#L230 , i.e. it has `style.font.getDescent()` - which is derived from font's scale by itself. Thus, changing the font size on the Label still generates the pref. height of a font with descent of font with no Label's Y scaling applied. With large font scale values used (i.e. 0.1) this generates a huge visual offset.\n\nSuggested solution is to use\n\n```\nfloat height = prefSize.y - style.font.getDescent() * fontScaleY * 2;\n```\n\ninstead.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3073/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3072","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3072/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3072/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3072/events","html_url":"https://github.com/libgdx/libgdx/issues/3072","id":72167713,"number":3072,"title":"new Label(text,style); produces different result than new Label(null,style);setText(text);","user":{"login":"FyiurAmron","id":11016998,"avatar_url":"https://avatars1.githubusercontent.com/u/11016998?v=4","gravatar_id":"","url":"https://api.github.com/users/FyiurAmron","html_url":"https://github.com/FyiurAmron","followers_url":"https://api.github.com/users/FyiurAmron/followers","following_url":"https://api.github.com/users/FyiurAmron/following{/other_user}","gists_url":"https://api.github.com/users/FyiurAmron/gists{/gist_id}","starred_url":"https://api.github.com/users/FyiurAmron/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/FyiurAmron/subscriptions","organizations_url":"https://api.github.com/users/FyiurAmron/orgs","repos_url":"https://api.github.com/users/FyiurAmron/repos","events_url":"https://api.github.com/users/FyiurAmron/events{/privacy}","received_events_url":"https://api.github.com/users/FyiurAmron/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2015-04-30T13:49:27Z","updated_at":"2015-04-30T16:33:57Z","closed_at":"2015-04-30T16:33:57Z","author_association":"CONTRIBUTOR","body":"I believe those two should produce the same result, yet the current implementation makes the two situations quite different:\n1) executes\n\n```\nthis.text.append(text);\nsetStyle(style); //calls invalidateHierarchy();\nsetSize(getPrefWidth(), getPrefHeight());\n```\n\n2) executes\n\n```\nsetStyle(style); //calls invalidateHierarchy();\nthis.text.append(text);\ninvalidateHierarchy();\n```\n\nThis wouldn't be a problem, because behaviourally those two are quite similar - if not for the fact that the two resulting `Label`-s can (and quite often will) have different resulting placements, mainly due to the `setSize()` call on the former and lack of it on the latter.\n\nI honestly don't know which behaviour is the \"correct\" one, but I reckon that both cases shouldn't generate different Label-s.\n\nAs a side note, we could probably use\n\n```\n       if ( text != null ) {\n            if ( text instanceof StringBuilder ) {\n                this.text.append( (StringBuilder) text );\n            } else {\n                this.text.append( text );\n            }\n        }\n```\n\non https://github.com/libgdx/libgdx/blob/master/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Label.java#L70 for minor performance optimization (AFAIR libGDX's StringBuilder has some fast `append(StringBuilder)` method).\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3072/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3071","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3071/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3071/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3071/events","html_url":"https://github.com/libgdx/libgdx/pull/3071","id":72125130,"number":3071,"title":"Add distance field support to font rendering, second try","user":{"login":"florianf","id":396450,"avatar_url":"https://avatars0.githubusercontent.com/u/396450?v=4","gravatar_id":"","url":"https://api.github.com/users/florianf","html_url":"https://github.com/florianf","followers_url":"https://api.github.com/users/florianf/followers","following_url":"https://api.github.com/users/florianf/following{/other_user}","gists_url":"https://api.github.com/users/florianf/gists{/gist_id}","starred_url":"https://api.github.com/users/florianf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/florianf/subscriptions","organizations_url":"https://api.github.com/users/florianf/orgs","repos_url":"https://api.github.com/users/florianf/repos","events_url":"https://api.github.com/users/florianf/events{/privacy}","received_events_url":"https://api.github.com/users/florianf/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2015-04-30T10:40:19Z","updated_at":"2015-05-08T17:58:07Z","closed_at":"2015-05-07T16:40:22Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3071","html_url":"https://github.com/libgdx/libgdx/pull/3071","diff_url":"https://github.com/libgdx/libgdx/pull/3071.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3071.patch"},"body":"Hi folks,\n\nsecond PR as discussed in #3058, please review.\n\nOpen question:\nSupport in Skin? Currently only BitmapFont is understood by Skin. \nShould a separate ReadOnlySerializer for DistanceFieldBitmapFont be implemented? \nThe only new property is distanceFieldSmoothing, so it would be necessary to refactor the common parts out into a helper method.\n\nThx,\nFlorian\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3071/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3070","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3070/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3070/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3070/events","html_url":"https://github.com/libgdx/libgdx/issues/3070","id":72011948,"number":3070,"title":"x/y rounding causes text jumps in Label","user":{"login":"FyiurAmron","id":11016998,"avatar_url":"https://avatars1.githubusercontent.com/u/11016998?v=4","gravatar_id":"","url":"https://api.github.com/users/FyiurAmron","html_url":"https://github.com/FyiurAmron","followers_url":"https://api.github.com/users/FyiurAmron/followers","following_url":"https://api.github.com/users/FyiurAmron/following{/other_user}","gists_url":"https://api.github.com/users/FyiurAmron/gists{/gist_id}","starred_url":"https://api.github.com/users/FyiurAmron/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/FyiurAmron/subscriptions","organizations_url":"https://api.github.com/users/FyiurAmron/orgs","repos_url":"https://api.github.com/users/FyiurAmron/repos","events_url":"https://api.github.com/users/FyiurAmron/events{/privacy}","received_events_url":"https://api.github.com/users/FyiurAmron/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2015-04-29T22:58:43Z","updated_at":"2015-04-30T01:14:38Z","closed_at":"2015-04-30T01:12:29Z","author_association":"CONTRIBUTOR","body":"https://github.com/libgdx/libgdx/blob/master/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Label.java#L181\nhttps://github.com/libgdx/libgdx/blob/master/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Label.java#L195\n\nBoth `width`, `height`, `textWidth` & `textHeight` are float values. With e.g. https://github.com/libgdx/libgdx/blob/master/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Label.java#L179 , this causes desired behaviour - the actual positioning of the text is linearly dependent on those values. However, when L181 is triggered, the average is clamped to int, resulting in accuracy loss & discrete, nonlinear jump - extremely visible when the positioning is done in e.g. (0,0)-(1,1) coordinate system.\n\nThe simplest way to reproduce it is to tween the font scale of label from e.g. 0.001 to 0.1 in such coordinate system - it will trigger a \"jump\" in e.g. Y direction each time when a treshold value has been reached.\n\nProposed solution is to drop the `(int)` casting in both of those lines or to provide an explicit way to trigger that behaviour, i.e. no truncation on the floats. Dropping the casts fixes the issue without any apparent side-effects.\n\nNote: I am aware of the `BitmapFont#setUseIntegerPositions( boolean integer )` etc. If the truncation is provided here for the same or similar reason (doubful, since e.g. L179 does no such rounding), it still should be possible to disable the rounding in a similar way here.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3070/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3069","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3069/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3069/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3069/events","html_url":"https://github.com/libgdx/libgdx/pull/3069","id":71910483,"number":3069,"title":"Add spotlight to default shader","user":{"login":"realitix","id":6367936,"avatar_url":"https://avatars1.githubusercontent.com/u/6367936?v=4","gravatar_id":"","url":"https://api.github.com/users/realitix","html_url":"https://github.com/realitix","followers_url":"https://api.github.com/users/realitix/followers","following_url":"https://api.github.com/users/realitix/following{/other_user}","gists_url":"https://api.github.com/users/realitix/gists{/gist_id}","starred_url":"https://api.github.com/users/realitix/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/realitix/subscriptions","organizations_url":"https://api.github.com/users/realitix/orgs","repos_url":"https://api.github.com/users/realitix/repos","events_url":"https://api.github.com/users/realitix/events{/privacy}","received_events_url":"https://api.github.com/users/realitix/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2015-04-29T15:36:49Z","updated_at":"2015-06-30T14:47:40Z","closed_at":"2015-06-08T12:30:48Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3069","html_url":"https://github.com/libgdx/libgdx/pull/3069","diff_url":"https://github.com/libgdx/libgdx/pull/3069.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3069.patch"},"body":"Add the spotlight to default shader.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3069/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3068","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3068/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3068/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3068/events","html_url":"https://github.com/libgdx/libgdx/issues/3068","id":71897770,"number":3068,"title":"SpriteBatch.draw not correct or documentation wrong","user":{"login":"gmgunderground","id":3244031,"avatar_url":"https://avatars3.githubusercontent.com/u/3244031?v=4","gravatar_id":"","url":"https://api.github.com/users/gmgunderground","html_url":"https://github.com/gmgunderground","followers_url":"https://api.github.com/users/gmgunderground/followers","following_url":"https://api.github.com/users/gmgunderground/following{/other_user}","gists_url":"https://api.github.com/users/gmgunderground/gists{/gist_id}","starred_url":"https://api.github.com/users/gmgunderground/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gmgunderground/subscriptions","organizations_url":"https://api.github.com/users/gmgunderground/orgs","repos_url":"https://api.github.com/users/gmgunderground/repos","events_url":"https://api.github.com/users/gmgunderground/events{/privacy}","received_events_url":"https://api.github.com/users/gmgunderground/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2015-04-29T14:55:31Z","updated_at":"2015-04-29T14:57:21Z","closed_at":"2015-04-29T14:57:21Z","author_association":"NONE","body":"I'm using Android, I have to rotate a TextureRegion but the point of rotation originX and originY is not relative to the screen space coordinates but relative to x and y coordinates.\n\nFor example: if I put my image at 100, 100 (image with=10, image height=10) and I want to rotate it on its center I have to put originX and originY at 5,5 but as I understand from documentation originX and originY must be 105,105\n\noriginX - the x-coordinate of the scaling and rotation origin relative to the screen space coordinates\noriginY - the y-coordinate of the scaling and rotation origin relative to the screen space coordinates\n\nI'm doing somthing wrong or I have understand something wrong or is a libgdx bug?\n\nTanks\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3068/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3067","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3067/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3067/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3067/events","html_url":"https://github.com/libgdx/libgdx/issues/3067","id":71868324,"number":3067,"title":"Simpler method to rotate Textures","user":{"login":"calanti","id":12170223,"avatar_url":"https://avatars3.githubusercontent.com/u/12170223?v=4","gravatar_id":"","url":"https://api.github.com/users/calanti","html_url":"https://github.com/calanti","followers_url":"https://api.github.com/users/calanti/followers","following_url":"https://api.github.com/users/calanti/following{/other_user}","gists_url":"https://api.github.com/users/calanti/gists{/gist_id}","starred_url":"https://api.github.com/users/calanti/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/calanti/subscriptions","organizations_url":"https://api.github.com/users/calanti/orgs","repos_url":"https://api.github.com/users/calanti/repos","events_url":"https://api.github.com/users/calanti/events{/privacy}","received_events_url":"https://api.github.com/users/calanti/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2015-04-29T12:57:32Z","updated_at":"2015-04-29T14:35:28Z","closed_at":"2015-04-29T14:35:28Z","author_association":"NONE","body":"Hello!\n\nThere is currenty one SpriteBatch.draw method that allows rotation of Textures which requires many other variables to be sent to the method. Currently it is easier to put the Texture into a Sprite and then setOrigin and setRotation at render time. It would be nice if there was an easier solution for just rotating Textures, e.g.\n\nSpriteBatch.draw(Texture texture, float x, float y, float originx, float originy, float rotation(degrees));\n\nHope this is a good suggestion :)\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3067/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3066","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3066/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3066/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3066/events","html_url":"https://github.com/libgdx/libgdx/issues/3066","id":71706428,"number":3066,"title":"Keyboard Return Crash","user":{"login":"k3v","id":3507526,"avatar_url":"https://avatars3.githubusercontent.com/u/3507526?v=4","gravatar_id":"","url":"https://api.github.com/users/k3v","html_url":"https://github.com/k3v","followers_url":"https://api.github.com/users/k3v/followers","following_url":"https://api.github.com/users/k3v/following{/other_user}","gists_url":"https://api.github.com/users/k3v/gists{/gist_id}","starred_url":"https://api.github.com/users/k3v/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/k3v/subscriptions","organizations_url":"https://api.github.com/users/k3v/orgs","repos_url":"https://api.github.com/users/k3v/repos","events_url":"https://api.github.com/users/k3v/events{/privacy}","received_events_url":"https://api.github.com/users/k3v/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2015-04-28T21:25:12Z","updated_at":"2015-04-29T21:18:15Z","closed_at":"2015-04-29T21:18:15Z","author_association":"NONE","body":"I got this when I hit return on the Gdx.input.setOnscreenKeyboardVisible(true); for iPhone 4s Simulator.\n\n```\njava.lang.NullPointerException\n\n        at com.badlogic.gdx.backends.iosrobovm.IOSInput$3.shouldReturn(IOSInput.java)\n        at org.robovm.apple.uikit.UITextFieldDelegate$ObjCProxy.$cb$textFieldShouldReturn$(Unknown Source)\n        at org.robovm.apple.uikit.UIApplication.main(Native Method)\n        at org.robovm.apple.uikit.UIApplication.main(UIApplication.java)\n        at com.furryfaust.patterns.IOSLauncher.main(IOSLauncher.java)\n\n```\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3066/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3065","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3065/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3065/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3065/events","html_url":"https://github.com/libgdx/libgdx/issues/3065","id":71607390,"number":3065,"title":"OnePlusOne 4.4.4 music setLooping bug","user":{"login":"souldown","id":5637659,"avatar_url":"https://avatars2.githubusercontent.com/u/5637659?v=4","gravatar_id":"","url":"https://api.github.com/users/souldown","html_url":"https://github.com/souldown","followers_url":"https://api.github.com/users/souldown/followers","following_url":"https://api.github.com/users/souldown/following{/other_user}","gists_url":"https://api.github.com/users/souldown/gists{/gist_id}","starred_url":"https://api.github.com/users/souldown/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/souldown/subscriptions","organizations_url":"https://api.github.com/users/souldown/orgs","repos_url":"https://api.github.com/users/souldown/repos","events_url":"https://api.github.com/users/souldown/events{/privacy}","received_events_url":"https://api.github.com/users/souldown/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2015-04-28T14:35:37Z","updated_at":"2015-04-28T16:27:17Z","closed_at":"2015-04-28T16:27:17Z","author_association":"NONE","body":"Hi,Theres a playback bug with setLooping.\nIts on OnePlusOne phone - cynagen mod (11.0-XNPHO5Q) 64gb model A0001 android 4.4.4.\nIt has to do with using the Music class, particularly the .setLooping method. \n\nBasically after you set a track looping, after some time, it goes quiet, then the libgdx activity freezes. \n\nIve grabbed a Gist from ADT - https://gist.githubusercontent.com/souldown/1c9b9bb6a392def5d996/raw/Audio%20mutes\n\nIt seems like something is going a bit odd with the audio on the phone (not just my activity) then at 04-27 09:31:21.667 it goes mute and just outputs E/AudioPlayerï¹• Ignore seek and post seek complete. Then when the audio track gets to the end to be looped, the app freezes. Although the log cat still just writes the same message (above) over again.\n\nIve also tried using wav, mp3 and ogg.\nTried not using the asset manager.\nthe music track is 1:15 long.\n\nI also posted in the badlogic forumns about this bug but had no help there, just another user with the same issue (http://www.badlogicgames.com/forum/viewtopic.php?t=19156)\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3065/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3064","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3064/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3064/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3064/events","html_url":"https://github.com/libgdx/libgdx/pull/3064","id":71420521,"number":3064,"title":"Updated ashley version to 1.4.0","user":{"login":"NTARelix","id":1240214,"avatar_url":"https://avatars2.githubusercontent.com/u/1240214?v=4","gravatar_id":"","url":"https://api.github.com/users/NTARelix","html_url":"https://github.com/NTARelix","followers_url":"https://api.github.com/users/NTARelix/followers","following_url":"https://api.github.com/users/NTARelix/following{/other_user}","gists_url":"https://api.github.com/users/NTARelix/gists{/gist_id}","starred_url":"https://api.github.com/users/NTARelix/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NTARelix/subscriptions","organizations_url":"https://api.github.com/users/NTARelix/orgs","repos_url":"https://api.github.com/users/NTARelix/repos","events_url":"https://api.github.com/users/NTARelix/events{/privacy}","received_events_url":"https://api.github.com/users/NTARelix/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2015-04-27T22:31:33Z","updated_at":"2015-04-28T00:24:39Z","closed_at":"2015-04-28T00:24:39Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3064","html_url":"https://github.com/libgdx/libgdx/pull/3064","diff_url":"https://github.com/libgdx/libgdx/pull/3064.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3064.patch"},"body":"Newest Ashley docs were inconsistent with included version of Ashley.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3064/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3063","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3063/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3063/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3063/events","html_url":"https://github.com/libgdx/libgdx/issues/3063","id":71290687,"number":3063,"title":"updateRoboVMXML strips 3rd party libraries from robovm.xml","user":{"login":"obigu","id":1794492,"avatar_url":"https://avatars0.githubusercontent.com/u/1794492?v=4","gravatar_id":"","url":"https://api.github.com/users/obigu","html_url":"https://github.com/obigu","followers_url":"https://api.github.com/users/obigu/followers","following_url":"https://api.github.com/users/obigu/following{/other_user}","gists_url":"https://api.github.com/users/obigu/gists{/gist_id}","starred_url":"https://api.github.com/users/obigu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/obigu/subscriptions","organizations_url":"https://api.github.com/users/obigu/orgs","repos_url":"https://api.github.com/users/obigu/repos","events_url":"https://api.github.com/users/obigu/events{/privacy}","received_events_url":"https://api.github.com/users/obigu/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2015-04-27T13:53:11Z","updated_at":"2015-05-25T06:49:57Z","closed_at":"2015-05-25T06:49:57Z","author_association":"CONTRIBUTOR","body":"I'm using libGDX 1.5.6 and RoboVM 1.1.0 and Android Studio.\n\nIf you have 3rd party .a libraries (with frameworks it's ok) defined in the robovm.xml file such as:\n\n```\n<libs>\n    <lib>build/libs/ios/libgdx.a</lib>\n    <lib>build/libs/ios/libObjectAL.a</lib>\n    <!-- Flurry Version 5.4.0 -->\n    <lib>libs/libflurry.a</lib>\n    <!-- AdMob -->\n     <lib>libs/libadmob.a</lib>\n  </libs>\n```\n\nThey get stripped when building the project and then runtime execution fails because of missing dependencies. This is due to \"build\" task depending on \"updateRoboVMXML\" which doesn't keep the non libGDX native libraries and also, it strips all the comments from the file.\n\nThis is the output of running updateRoboVMXML task:\n\n```\n<libs>\n    <lib>build/libs/ios/libgdx.a</lib>\n    <lib>build/libs/ios/libObjectAL.a</lib>\n  </libs>\n```\n\nAs a workaround you can comment out the following line not to run the task automatically every time it builds.\n\n```\n// build.dependsOn updateRoboVMXML\n```\n\nThe updateRoboVMXML is a non modified one as generated by the Setup Gradle UI.\n\n```\n// Updates a robovm.xml file.\ntask updateRoboVMXML << {\n def xml = file('robovm.xml')\n\n if (!xml.exists()) {\n   return\n }\n\n  // Find all native (*.a) libraries beneath libs\n  def libtree = fileTree(dir: 'build/libs', include: '**/*.a')\n\n  def config = new groovy.util.XmlParser().parse(xml)\n  config.libs.each {libs ->\n      libs.children().clear()\n      libtree.each { File file ->\n          libs.appendNode('lib', 'build/libs/ios/' + file.getName())\n      }\n  }\n\n  def writer = new FileWriter(xml)\n  def printer = new XmlNodePrinter(new PrintWriter(writer))\n  printer.setPreserveWhitespace true\n  printer.print(config)\n}\n```\n\nIt's hard to believe that this is the default behaviour as I'm sure other people are building iOS with Gradle and have 3rd party .a dependencies what makes me think there may be some misconfiguration on my side but my configuration is pretty standard.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3063/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3062","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3062/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3062/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3062/events","html_url":"https://github.com/libgdx/libgdx/issues/3062","id":71198119,"number":3062,"title":"iOS Keyboard won't show","user":{"login":"k3v","id":3507526,"avatar_url":"https://avatars3.githubusercontent.com/u/3507526?v=4","gravatar_id":"","url":"https://api.github.com/users/k3v","html_url":"https://github.com/k3v","followers_url":"https://api.github.com/users/k3v/followers","following_url":"https://api.github.com/users/k3v/following{/other_user}","gists_url":"https://api.github.com/users/k3v/gists{/gist_id}","starred_url":"https://api.github.com/users/k3v/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/k3v/subscriptions","organizations_url":"https://api.github.com/users/k3v/orgs","repos_url":"https://api.github.com/users/k3v/repos","events_url":"https://api.github.com/users/k3v/events{/privacy}","received_events_url":"https://api.github.com/users/k3v/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2015-04-27T07:08:48Z","updated_at":"2015-04-28T21:22:09Z","closed_at":"2015-04-28T21:20:44Z","author_association":"NONE","body":"This is my code. The keyboard just won't show for some reason. I am using iPhone 4s Simulator via\n./gradlew ios:launchIPhoneSimulator.\n\n```\npackage com.furryfaust.patterns.multiplayer.screens;\n\nimport com.badlogic.gdx.Gdx;\nimport com.badlogic.gdx.Screen;\nimport com.badlogic.gdx.graphics.GL20;\nimport com.furryfaust.patterns.Core;\n\npublic class MultiplayerScreen implements Screen {\n\n    Core core;\n\n    public MultiplayerScreen(Core core) {\n        this.core = core;\n    }\n\n    @Override\n    public void show() {\n        Gdx.input.setOnscreenKeyboardVisible(true);\n    }\n\n    @Override\n    public void render(float delta) {\n        Gdx.graphics.getGL20().glClearColor(237 / 255F, 237 / 255F, 213 / 255F, 1);\n        Gdx.graphics.getGL20().glClear(GL20.GL_COLOR_BUFFER_BIT);\n    }\n\n    @Override\n    public void resize(int width, int height) {\n\n    }\n\n    @Override\n    public void pause() {\n\n    }\n\n    @Override\n    public void resume() {\n\n    }\n\n    @Override\n    public void hide() {\n\n    }\n\n    @Override\n    public void dispose() {\n\n    }\n}\n\n```\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3062/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3061","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3061/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3061/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3061/events","html_url":"https://github.com/libgdx/libgdx/issues/3061","id":71195885,"number":3061,"title":"Exception in AnimationController","user":{"login":"mk1x86","id":4849383,"avatar_url":"https://avatars2.githubusercontent.com/u/4849383?v=4","gravatar_id":"","url":"https://api.github.com/users/mk1x86","html_url":"https://github.com/mk1x86","followers_url":"https://api.github.com/users/mk1x86/followers","following_url":"https://api.github.com/users/mk1x86/following{/other_user}","gists_url":"https://api.github.com/users/mk1x86/gists{/gist_id}","starred_url":"https://api.github.com/users/mk1x86/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mk1x86/subscriptions","organizations_url":"https://api.github.com/users/mk1x86/orgs","repos_url":"https://api.github.com/users/mk1x86/repos","events_url":"https://api.github.com/users/mk1x86/events{/privacy}","received_events_url":"https://api.github.com/users/mk1x86/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2015-04-27T06:53:30Z","updated_at":"2015-04-27T18:31:13Z","closed_at":"2015-04-27T18:31:13Z","author_association":"NONE","body":"In AnimationController.java line 288 there's a check if the update method is currently running. This line along with some others is marked with _FIXME_.\nThe exception occurs when starting a new animation in AnimationController.AnimationListener.onEnd.\nSince the comment say \"Remove this? Just intended for debugging\" I guess it has just been forgotten?\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3061/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3060","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3060/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3060/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3060/events","html_url":"https://github.com/libgdx/libgdx/issues/3060","id":71146226,"number":3060,"title":"TextButton is not resized to viewport","user":{"login":"david-mccann","id":12129212,"avatar_url":"https://avatars1.githubusercontent.com/u/12129212?v=4","gravatar_id":"","url":"https://api.github.com/users/david-mccann","html_url":"https://github.com/david-mccann","followers_url":"https://api.github.com/users/david-mccann/followers","following_url":"https://api.github.com/users/david-mccann/following{/other_user}","gists_url":"https://api.github.com/users/david-mccann/gists{/gist_id}","starred_url":"https://api.github.com/users/david-mccann/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/david-mccann/subscriptions","organizations_url":"https://api.github.com/users/david-mccann/orgs","repos_url":"https://api.github.com/users/david-mccann/repos","events_url":"https://api.github.com/users/david-mccann/events{/privacy}","received_events_url":"https://api.github.com/users/david-mccann/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2015-04-27T01:22:55Z","updated_at":"2015-04-27T20:31:21Z","closed_at":"2015-04-27T10:46:24Z","author_association":"NONE","body":"Varying the value of the variable \"scale\" in the following example should not have any visible effect since all coordinates are viewport coordinates and the scale factor is applied to all coordinates. The Image is correctly resized to viewport coordinates and stays invariant when changing the scale factor. The TextButton however isn't. The text seems to be in device coordinates and the button is pixelated. The screenshots show the output for scale=1 and scale=4.\nI observed the problem on desktop and android, using gdxVersion 1.5.5 and 1.5.7-SNAPSHOT.\n\n```\nimport com.badlogic.gdx.ApplicationAdapter;\nimport com.badlogic.gdx.Gdx;\nimport com.badlogic.gdx.graphics.GL20;\nimport com.badlogic.gdx.graphics.Texture;\nimport com.badlogic.gdx.scenes.scene2d.Stage;\nimport com.badlogic.gdx.scenes.scene2d.ui.Image;\nimport com.badlogic.gdx.scenes.scene2d.ui.Skin;\nimport com.badlogic.gdx.scenes.scene2d.ui.TextButton;\nimport com.badlogic.gdx.utils.viewport.ExtendViewport;\n\npublic class GdxGame extends ApplicationAdapter {\n\n    private Skin skin;\n    private Stage stage;\n\n    public void create () {\n        float scale = 4f;\n\n        skin = new Skin(Gdx.files.internal(\"skin.json\"));\n        stage = new Stage(new ExtendViewport(600f / scale, 300f / scale));\n\n        TextButton button = new TextButton(\"Click\", skin, \"default\");\n        button.setWidth(200f / scale);\n        button.setHeight(35f / scale);\n        button.setPosition(0, 0);\n        stage.addActor(button);\n\n        Image image = new Image(new Texture(Gdx.files.internal(\"blue.png\")));\n        image.setWidth(80f / scale);\n        image.setHeight(80f / scale);\n        image.setPosition(100f / scale, 100f / scale);\n        stage.addActor(image);\n    }\n\n    public void render() {\n        Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);\n        stage.draw();\n    }\n\n    public void resize(int width, int height) {\n        stage.getViewport().update(width, height, true);\n    }\n}\n```\n\n![scale_1](https://cloud.githubusercontent.com/assets/12129212/7340331/8a0f7178-ec8b-11e4-8776-f7256193b676.png)\n![scale_4](https://cloud.githubusercontent.com/assets/12129212/7340330/8a0cb848-ec8b-11e4-81ce-5564cec72d2f.png)\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3060/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3059","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3059/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3059/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3059/events","html_url":"https://github.com/libgdx/libgdx/pull/3059","id":71127448,"number":3059,"title":"Added SpriteDebugRenderer, additions to Animation and TextureRegion","user":{"login":"danielchristopher1","id":7663198,"avatar_url":"https://avatars3.githubusercontent.com/u/7663198?v=4","gravatar_id":"","url":"https://api.github.com/users/danielchristopher1","html_url":"https://github.com/danielchristopher1","followers_url":"https://api.github.com/users/danielchristopher1/followers","following_url":"https://api.github.com/users/danielchristopher1/following{/other_user}","gists_url":"https://api.github.com/users/danielchristopher1/gists{/gist_id}","starred_url":"https://api.github.com/users/danielchristopher1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/danielchristopher1/subscriptions","organizations_url":"https://api.github.com/users/danielchristopher1/orgs","repos_url":"https://api.github.com/users/danielchristopher1/repos","events_url":"https://api.github.com/users/danielchristopher1/events{/privacy}","received_events_url":"https://api.github.com/users/danielchristopher1/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2015-04-26T22:19:10Z","updated_at":"2017-01-16T14:53:01Z","closed_at":"2015-04-27T17:53:23Z","author_association":"NONE","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3059","html_url":"https://github.com/libgdx/libgdx/pull/3059","diff_url":"https://github.com/libgdx/libgdx/pull/3059.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3059.patch"},"body":"I have added a class known as SpriteDebugRenderer which acts much like the box2d debug renderer but for sprites. It draws rectangles around sprites to represent their bounding box and can help for things like watching how sprites collide On top of that, I added a copy constructor to the Animation class which constructs an animation with the same properties and keyframes as another. The constructed animation has shallow copies of every keyframe. I also added a method to Animation class that will flip every frame in a specified direction, and a static method to the TextureRegion class that will perform a shallow copy of an array of TextureRegion. Thanks!\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3059/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3058","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3058/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3058/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3058/events","html_url":"https://github.com/libgdx/libgdx/pull/3058","id":71097193,"number":3058,"title":"Add distance field support to font rendering","user":{"login":"florianf","id":396450,"avatar_url":"https://avatars0.githubusercontent.com/u/396450?v=4","gravatar_id":"","url":"https://api.github.com/users/florianf","html_url":"https://github.com/florianf","followers_url":"https://api.github.com/users/florianf/followers","following_url":"https://api.github.com/users/florianf/following{/other_user}","gists_url":"https://api.github.com/users/florianf/gists{/gist_id}","starred_url":"https://api.github.com/users/florianf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/florianf/subscriptions","organizations_url":"https://api.github.com/users/florianf/orgs","repos_url":"https://api.github.com/users/florianf/repos","events_url":"https://api.github.com/users/florianf/events{/privacy}","received_events_url":"https://api.github.com/users/florianf/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2015-04-26T17:36:15Z","updated_at":"2015-04-28T12:25:44Z","closed_at":"2015-04-28T12:25:44Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3058","html_url":"https://github.com/libgdx/libgdx/pull/3058","diff_url":"https://github.com/libgdx/libgdx/pull/3058.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3058.patch"},"body":"Hi folks,\n\nthis pull request would add direct support for distance field fonts to libgdx. Added a new DistanceFieldBitmapFontCache class that renders the distance field font and a flag to BitmapFont when it should be rendered by  DistanceFieldBitmapFontCache. Shader and info was taken from the great Wiki entry about distance font fields https://github.com/libgdx/libgdx/wiki/Distance-field-fonts.\n\nI needed to overload quite some BitmapFont constructors, because the cache is always generated in the constructor.\n\nI originally wrote & tested this patch against 1.5.3 and now ported it to current master. \n\nTake a look if it feeds your needs and adheres to your standards, would be great if this could be merged.\n\nRegards,\nFlorian\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3058/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3057","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3057/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3057/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3057/events","html_url":"https://github.com/libgdx/libgdx/issues/3057","id":71079572,"number":3057,"title":"com.badlogic.gdx.reflect.Method is missing annotation methods","user":{"login":"dermetfan","id":4956158,"avatar_url":"https://avatars1.githubusercontent.com/u/4956158?v=4","gravatar_id":"","url":"https://api.github.com/users/dermetfan","html_url":"https://github.com/dermetfan","followers_url":"https://api.github.com/users/dermetfan/followers","following_url":"https://api.github.com/users/dermetfan/following{/other_user}","gists_url":"https://api.github.com/users/dermetfan/gists{/gist_id}","starred_url":"https://api.github.com/users/dermetfan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dermetfan/subscriptions","organizations_url":"https://api.github.com/users/dermetfan/orgs","repos_url":"https://api.github.com/users/dermetfan/repos","events_url":"https://api.github.com/users/dermetfan/events{/privacy}","received_events_url":"https://api.github.com/users/dermetfan/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2015-04-26T15:01:05Z","updated_at":"2015-04-26T16:09:09Z","closed_at":"2015-04-26T16:03:58Z","author_association":"CONTRIBUTOR","body":"I'm missing the following methods in particular:\n\n``` java\ncom.badlogic.gdx.reflect.Method#getDeclaredAnnotations()\ncom.badlogic.gdx.reflect.Method#getDeclaredAnnotation(Class<? extends Annotation>)\ncom.badlogic.gdx.reflect.Method#isAnnotationPresent(Class<? extends Annotation>)\n```\n\nI would really appreciate it if someone took the time to implement them. Thanks!\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3057/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3056","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3056/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3056/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3056/events","html_url":"https://github.com/libgdx/libgdx/pull/3056","id":71064610,"number":3056,"title":"Added isDisabled() to Disableable.","user":{"login":"nooone","id":5896510,"avatar_url":"https://avatars3.githubusercontent.com/u/5896510?v=4","gravatar_id":"","url":"https://api.github.com/users/nooone","html_url":"https://github.com/nooone","followers_url":"https://api.github.com/users/nooone/followers","following_url":"https://api.github.com/users/nooone/following{/other_user}","gists_url":"https://api.github.com/users/nooone/gists{/gist_id}","starred_url":"https://api.github.com/users/nooone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nooone/subscriptions","organizations_url":"https://api.github.com/users/nooone/orgs","repos_url":"https://api.github.com/users/nooone/repos","events_url":"https://api.github.com/users/nooone/events{/privacy}","received_events_url":"https://api.github.com/users/nooone/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2015-04-26T13:06:17Z","updated_at":"2015-04-26T13:22:20Z","closed_at":"2015-04-26T13:20:16Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3056","html_url":"https://github.com/libgdx/libgdx/pull/3056","diff_url":"https://github.com/libgdx/libgdx/pull/3056.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3056.patch"},"body":"A small addition to the `Disableable` interface. All but a single implementation of this class had this anyway, but the interface is not that useful without that method I think.\n\nIn my case I wanted to have a generic method that sets the colour of actors to `Colour.GRAY` when an actor is disabled, and to `Color.WHITE` when it's not. I was searching and found that neat interface for exactly that usecase. However, without the getter I would have to do lots of `instanceof` tests.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3056/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3055","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3055/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3055/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3055/events","html_url":"https://github.com/libgdx/libgdx/pull/3055","id":70983188,"number":3055,"title":"Add merge button to ParticleEditor","user":{"login":"cypherdare","id":1843131,"avatar_url":"https://avatars2.githubusercontent.com/u/1843131?v=4","gravatar_id":"","url":"https://api.github.com/users/cypherdare","html_url":"https://github.com/cypherdare","followers_url":"https://api.github.com/users/cypherdare/followers","following_url":"https://api.github.com/users/cypherdare/following{/other_user}","gists_url":"https://api.github.com/users/cypherdare/gists{/gist_id}","starred_url":"https://api.github.com/users/cypherdare/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cypherdare/subscriptions","organizations_url":"https://api.github.com/users/cypherdare/orgs","repos_url":"https://api.github.com/users/cypherdare/repos","events_url":"https://api.github.com/users/cypherdare/events{/privacy}","received_events_url":"https://api.github.com/users/cypherdare/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2015-04-25T23:52:48Z","updated_at":"2015-04-26T13:20:52Z","closed_at":"2015-04-26T13:20:52Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3055","html_url":"https://github.com/libgdx/libgdx/pull/3055","diff_url":"https://github.com/libgdx/libgdx/pull/3055.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3055.patch"},"body":"This is for ease of use when making many variations of a ParticleEffect, or when reusing particular ParticleEmitters in several different ParticleEffects. The Merge button opens a particle file and adds all its emitters to the ParticleEffect that is already loaded.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3055/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3054","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3054/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3054/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3054/events","html_url":"https://github.com/libgdx/libgdx/pull/3054","id":70960854,"number":3054,"title":"ParticleEditor - Ctrl to drag all points, ctrl-shift to do so proportionally","user":{"login":"cypherdare","id":1843131,"avatar_url":"https://avatars2.githubusercontent.com/u/1843131?v=4","gravatar_id":"","url":"https://api.github.com/users/cypherdare","html_url":"https://github.com/cypherdare","followers_url":"https://api.github.com/users/cypherdare/followers","following_url":"https://api.github.com/users/cypherdare/following{/other_user}","gists_url":"https://api.github.com/users/cypherdare/gists{/gist_id}","starred_url":"https://api.github.com/users/cypherdare/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cypherdare/subscriptions","organizations_url":"https://api.github.com/users/cypherdare/orgs","repos_url":"https://api.github.com/users/cypherdare/repos","events_url":"https://api.github.com/users/cypherdare/events{/privacy}","received_events_url":"https://api.github.com/users/cypherdare/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2015-04-25T20:03:06Z","updated_at":"2015-04-25T20:04:06Z","closed_at":"2015-04-25T20:04:06Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3054","html_url":"https://github.com/libgdx/libgdx/pull/3054","diff_url":"https://github.com/libgdx/libgdx/pull/3054.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3054.patch"},"body":"I've found that I frequently need to adjust the overall transparency of a ParticleEmitter, but it is very tedious to drag all the points on the chart one by one. Usually, there are several points, because I want a nice fade-in/fade-out. The proportional drag is especially useful for this purpose.\n\nProportional drag works best when the chart is expanded.\n\nDragging all points only affects Y, not X.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3054/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3053","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3053/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3053/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3053/events","html_url":"https://github.com/libgdx/libgdx/pull/3053","id":70890700,"number":3053,"title":"Updating VisUI extension version","user":{"login":"kotcrab","id":4594081,"avatar_url":"https://avatars1.githubusercontent.com/u/4594081?v=4","gravatar_id":"","url":"https://api.github.com/users/kotcrab","html_url":"https://github.com/kotcrab","followers_url":"https://api.github.com/users/kotcrab/followers","following_url":"https://api.github.com/users/kotcrab/following{/other_user}","gists_url":"https://api.github.com/users/kotcrab/gists{/gist_id}","starred_url":"https://api.github.com/users/kotcrab/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kotcrab/subscriptions","organizations_url":"https://api.github.com/users/kotcrab/orgs","repos_url":"https://api.github.com/users/kotcrab/repos","events_url":"https://api.github.com/users/kotcrab/events{/privacy}","received_events_url":"https://api.github.com/users/kotcrab/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2015-04-25T10:31:37Z","updated_at":"2015-05-02T15:37:48Z","closed_at":"2015-04-25T13:00:02Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3053","html_url":"https://github.com/libgdx/libgdx/pull/3053","diff_url":"https://github.com/libgdx/libgdx/pull/3053.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3053.patch"},"body":"","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3053/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3052","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3052/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3052/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3052/events","html_url":"https://github.com/libgdx/libgdx/issues/3052","id":70738513,"number":3052,"title":"Random performance issue with box2d","user":{"login":"neopraveen","id":3517494,"avatar_url":"https://avatars3.githubusercontent.com/u/3517494?v=4","gravatar_id":"","url":"https://api.github.com/users/neopraveen","html_url":"https://github.com/neopraveen","followers_url":"https://api.github.com/users/neopraveen/followers","following_url":"https://api.github.com/users/neopraveen/following{/other_user}","gists_url":"https://api.github.com/users/neopraveen/gists{/gist_id}","starred_url":"https://api.github.com/users/neopraveen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/neopraveen/subscriptions","organizations_url":"https://api.github.com/users/neopraveen/orgs","repos_url":"https://api.github.com/users/neopraveen/repos","events_url":"https://api.github.com/users/neopraveen/events{/privacy}","received_events_url":"https://api.github.com/users/neopraveen/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2015-04-24T16:53:20Z","updated_at":"2015-04-24T18:30:35Z","closed_at":"2015-04-24T18:30:35Z","author_association":"NONE","body":"HI,\nAbout my game - \nIt is a super Mario type game using box2d. I am using rube to design and load my level. It is also available on playstore - https://play.google.com/store/apps/details?id=com.pieteams.the.exit.gate\n\nAbout the Problem - \nThe performance of game is random. The rendering sticks most of the time. The strange point is, if their is an issue and I put the game background and again brings to foreground the game goes smooth (some time). First I was checking for memory leaks, but the problem is reproducible in the very first launch(I think memory leak can't reproduce in very first launch).\nI diagnose the issue using debugger, but the memory is not increasing after many of relaunches.\n\nTest device used - \nSamsung Grans Quattro(Quad-core processor with 1 GB ram)\niPhone 5c(The Robovm build produces same issue)\n\nMoto-G (game performance is better than other.)\n\nSorry for my bad english.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3052/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3051","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3051/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3051/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3051/events","html_url":"https://github.com/libgdx/libgdx/pull/3051","id":70678520,"number":3051,"title":"Correct error in VertexBufferObjectWithVAO","user":{"login":"realitix","id":6367936,"avatar_url":"https://avatars1.githubusercontent.com/u/6367936?v=4","gravatar_id":"","url":"https://api.github.com/users/realitix","html_url":"https://github.com/realitix","followers_url":"https://api.github.com/users/realitix/followers","following_url":"https://api.github.com/users/realitix/following{/other_user}","gists_url":"https://api.github.com/users/realitix/gists{/gist_id}","starred_url":"https://api.github.com/users/realitix/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/realitix/subscriptions","organizations_url":"https://api.github.com/users/realitix/orgs","repos_url":"https://api.github.com/users/realitix/repos","events_url":"https://api.github.com/users/realitix/events{/privacy}","received_events_url":"https://api.github.com/users/realitix/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2015-04-24T12:32:54Z","updated_at":"2015-06-08T12:28:54Z","closed_at":"2015-04-24T15:52:45Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3051","html_url":"https://github.com/libgdx/libgdx/pull/3051","diff_url":"https://github.com/libgdx/libgdx/pull/3051.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3051.patch"},"body":"Move \"bindAttributes\" out of the condition in \"bind\" function.\n\nThis Pull Request is linked to this issue: https://github.com/libgdx/libgdx/issues/3050\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3051/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3050","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3050/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3050/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3050/events","html_url":"https://github.com/libgdx/libgdx/issues/3050","id":70638953,"number":3050,"title":"Issue With VertexBufferObjectWithVAO","user":{"login":"realitix","id":6367936,"avatar_url":"https://avatars1.githubusercontent.com/u/6367936?v=4","gravatar_id":"","url":"https://api.github.com/users/realitix","html_url":"https://github.com/realitix","followers_url":"https://api.github.com/users/realitix/followers","following_url":"https://api.github.com/users/realitix/following{/other_user}","gists_url":"https://api.github.com/users/realitix/gists{/gist_id}","starred_url":"https://api.github.com/users/realitix/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/realitix/subscriptions","organizations_url":"https://api.github.com/users/realitix/orgs","repos_url":"https://api.github.com/users/realitix/repos","events_url":"https://api.github.com/users/realitix/events{/privacy}","received_events_url":"https://api.github.com/users/realitix/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2015-04-24T09:30:09Z","updated_at":"2015-04-24T15:52:51Z","closed_at":"2015-04-24T15:52:51Z","author_association":"CONTRIBUTOR","body":"Hello everyone, this bug is completely strange and it takes me several hours to find the source.\n\nYou can see two pictures, on the second, some object are just black.\nI have a Framebuffer that renders the scene from another point of view, if I don't enable the framebuffer, the objects are OK, if I use my Framebuffer, the objects are KO.\n\nSo I deep into libgdx (very deep!) and I found that in the `VertexBufferObjectWithVAO`:\n\n```\n\n\n    VertexBufferObjectWithVAO\n\n    @Override\n            public void bind(ShaderProgram shader, int[] locations) {\n\n                    GL30 gl = Gdx.gl30;\n                    if (vaoDirty || !gl.glIsVertexArray(vaoHandle)) {\n\n                            tmpHandle.clear();\n                            gl.glGenVertexArrays(1, tmpHandle);\n                            vaoHandle = tmpHandle.get(0);\n                            gl.glBindVertexArray(vaoHandle);\n\n                            //initialize the VAO with our vertex attributes and buffer:\n                            bindAttributes(shader, locations);\n\n                            // HERE IS THE BUG\n                            vaoDirty = false;\n\n                    } else {\n                            //else simply bind the VAO.\n                            gl.glBindVertexArray(vaoHandle);\n                    }\n                    //if our data has changed upload it:\n                    bindData(gl);\n\n                    isBound = true;\n\n            }\n```\n\nIf I disable `vaoDirty = false` only for the rendering in the framebuffer, it works.\n\nIt's very difficult for me to understand because there is a lot of mecanisms involved.\n\nXoppa, can you take a look?\n\nThank you.\n\n![capture_ok](https://cloud.githubusercontent.com/assets/6367936/7316186/27e99018-ea75-11e4-8699-948eb65bfaf9.png)\n\n![capture_ko](https://cloud.githubusercontent.com/assets/6367936/7316188/309ffc42-ea75-11e4-825c-dfd0fd482ef3.png)\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3050/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3049","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3049/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3049/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3049/events","html_url":"https://github.com/libgdx/libgdx/issues/3049","id":70540892,"number":3049,"title":"Box2D: Box2DDebugRenderer Render call before RayHandler Render call.","user":{"login":"CoderMusgrove","id":5943031,"avatar_url":"https://avatars2.githubusercontent.com/u/5943031?v=4","gravatar_id":"","url":"https://api.github.com/users/CoderMusgrove","html_url":"https://github.com/CoderMusgrove","followers_url":"https://api.github.com/users/CoderMusgrove/followers","following_url":"https://api.github.com/users/CoderMusgrove/following{/other_user}","gists_url":"https://api.github.com/users/CoderMusgrove/gists{/gist_id}","starred_url":"https://api.github.com/users/CoderMusgrove/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CoderMusgrove/subscriptions","organizations_url":"https://api.github.com/users/CoderMusgrove/orgs","repos_url":"https://api.github.com/users/CoderMusgrove/repos","events_url":"https://api.github.com/users/CoderMusgrove/events{/privacy}","received_events_url":"https://api.github.com/users/CoderMusgrove/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2015-04-23T23:37:19Z","updated_at":"2015-05-09T17:44:37Z","closed_at":"2015-05-09T17:44:37Z","author_association":"NONE","body":"Yesterday, I was working on re-learning Box2D, and I had a previous example before-hand. When I was doing this, I was having trouble rendering the fixture that I have created, and I had no idea why.\n\nWhat it turned out to be was that I was calling code in this order:\n\n```\nbox2dDebugRenderer.render(world, camera.combined);\nrayHandler.render();\n```\n\nCalling the code this way, without having any _Light_ objects in my _RayHandler_ would keep my _Box2DDebugRenderer_ from rending my _Body_.\n\nFull _working_ Code (if necessary):\n\n``` java\npublic class TestBox2D extends EGGame {\n\n    int width;\n    int height;\n\n    static final Vector2 ZERO_GRAVITY = new Vector2(0f, 0f);\n\n    OrthographicCamera camera;\n    World world;\n    Body body;\n    Box2DDebugRenderer box2dDebugRenderer;\n    RayHandler rayHandler;\n    Array<Body> bodies;\n\n    public TestBox2D(EGVersion version, String dataFolderName, LwjglApplicationConfiguration config) {\n        super(version, dataFolderName, config);\n    }\n\n    @Override\n    protected void init() {\n        width = Gdx.graphics.getWidth()/4;\n        height = Gdx.graphics.getHeight()/4;\n        camera = new OrthographicCamera(width, height);\n        camera.position.set(width / 2, height / 2, 0);\n        camera.update();\n\n        world = new World(ZERO_GRAVITY, true);\n        box2dDebugRenderer = new Box2DDebugRenderer();\n        rayHandler = new RayHandler(world);\n        rayHandler.setCombinedMatrix(camera.combined);\n\n        BodyDef bodyDef = new BodyDef();\n        bodyDef.type = BodyDef.BodyType.StaticBody;\n         bodyDef.position.set(width / 2, height / 2);\n\n        body = world.createBody(bodyDef);\n\n        CircleShape shape = new CircleShape();\n        shape.setRadius(1f);\n\n        FixtureDef fixtureDef = new FixtureDef();\n        fixtureDef.shape = shape;\n        body.createFixture(fixtureDef);\n\n        bodies = new Array<>();\n\n//      new PointLight(rayHandler, 500, Color.GREEN, 50, 20, 20);\n    }\n\n    @Override\n    protected void updateGame() {\n        world.step(1f / 30f, 6, 2);\n        world.getBodies(bodies);\n        rayHandler.update();\n    }\n\n    @Override\n    protected void renderGame() {\n//      rayHandler.render();\n        box2dDebugRenderer.render(world, camera.combined);\n    }\n\n    @Override\n    public void dispose() {\n        world.dispose();\n    }\n\n    public static void main(String... args) {\n        new TestBox2D(null, null, new LwjglApplicationConfiguration());\n    }\n}\n```\n\n**The Issue is**:\n\nWhen rendering, if the code is called like:\n\n``` java\nbox2dDebugRenderer.render(world, camera.combined);\nrayHandler.render();\n```\n\nand there are no _Light_ objects associated with the _RayHandler_, the _Box2DDebugRenderer_ doesn't render (at least) the fixtures.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3049/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3048","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3048/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3048/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3048/events","html_url":"https://github.com/libgdx/libgdx/issues/3048","id":70482981,"number":3048,"title":"issues with debug draw on libGDX 1.5.6","user":{"login":"Mur4ik","id":204883,"avatar_url":"https://avatars2.githubusercontent.com/u/204883?v=4","gravatar_id":"","url":"https://api.github.com/users/Mur4ik","html_url":"https://github.com/Mur4ik","followers_url":"https://api.github.com/users/Mur4ik/followers","following_url":"https://api.github.com/users/Mur4ik/following{/other_user}","gists_url":"https://api.github.com/users/Mur4ik/gists{/gist_id}","starred_url":"https://api.github.com/users/Mur4ik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Mur4ik/subscriptions","organizations_url":"https://api.github.com/users/Mur4ik/orgs","repos_url":"https://api.github.com/users/Mur4ik/repos","events_url":"https://api.github.com/users/Mur4ik/events{/privacy}","received_events_url":"https://api.github.com/users/Mur4ik/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2015-04-23T18:41:27Z","updated_at":"2015-04-23T23:59:27Z","closed_at":"2015-04-23T23:59:27Z","author_association":"NONE","body":"stage.setDebugUnderMouse(true) or actor.setDebug(true) does not work after update to 1.5.6, but the same project reverted to 1.5.5 work as expected, but in libGDX 1.5.6 version something went wrong.\n\nAm I missing something or its a bug?\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3048/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}}],"meta":{"x-ratelimit-limit":"5000","x-ratelimit-remaining":"4938","x-ratelimit-reset":"1506844633","x-github-request-id":"82E2:028A:1AB31E0:2ECAE87:59D094F9","x-github-media-type":"github.squirrel-girl-preview","link":"<https://api.github.com/repositories/5373551/issues?state=all&page=63>; rel=\"next\", <https://api.github.com/repositories/5373551/issues?state=all&page=164>; rel=\"last\", <https://api.github.com/repositories/5373551/issues?state=all&page=1>; rel=\"first\", <https://api.github.com/repositories/5373551/issues?state=all&page=61>; rel=\"prev\"","etag":"\"76f590d9da688cbf3ca48fde3e55724b\"","status":"200 OK"}}
