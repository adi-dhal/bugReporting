{"data":[{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2235","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2235/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2235/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2235/events","html_url":"https://github.com/libgdx/libgdx/pull/2235","id":40402712,"number":2235,"title":"LwjglAWTCanvas: Allow Texture disposal during stop().","user":{"login":"tommycli","id":157358,"avatar_url":"https://avatars0.githubusercontent.com/u/157358?v=4","gravatar_id":"","url":"https://api.github.com/users/tommycli","html_url":"https://github.com/tommycli","followers_url":"https://api.github.com/users/tommycli/followers","following_url":"https://api.github.com/users/tommycli/following{/other_user}","gists_url":"https://api.github.com/users/tommycli/gists{/gist_id}","starred_url":"https://api.github.com/users/tommycli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tommycli/subscriptions","organizations_url":"https://api.github.com/users/tommycli/orgs","repos_url":"https://api.github.com/users/tommycli/repos","events_url":"https://api.github.com/users/tommycli/events{/privacy}","received_events_url":"https://api.github.com/users/tommycli/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-08-16T03:54:42Z","updated_at":"2014-08-31T19:36:17Z","closed_at":"2014-08-31T19:36:17Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2235","html_url":"https://github.com/libgdx/libgdx/pull/2235","diff_url":"https://github.com/libgdx/libgdx/pull/2235.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2235.patch"},"body":"- Update SwingLwjglTest to test proper cleanup of LwjglAWTCanvas. \n- Make LwjglAWTCanvas OpenGL context current during stop() to allow disposal of Texture resources.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2235/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2234","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2234/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2234/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2234/events","html_url":"https://github.com/libgdx/libgdx/issues/2234","id":40402188,"number":2234,"title":"Problem with displaying alfa textures on meshes with deafult shader from 1.2","user":{"login":"primero","id":2679778,"avatar_url":"https://avatars0.githubusercontent.com/u/2679778?v=4","gravatar_id":"","url":"https://api.github.com/users/primero","html_url":"https://github.com/primero","followers_url":"https://api.github.com/users/primero/followers","following_url":"https://api.github.com/users/primero/following{/other_user}","gists_url":"https://api.github.com/users/primero/gists{/gist_id}","starred_url":"https://api.github.com/users/primero/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/primero/subscriptions","organizations_url":"https://api.github.com/users/primero/orgs","repos_url":"https://api.github.com/users/primero/repos","events_url":"https://api.github.com/users/primero/events{/privacy}","received_events_url":"https://api.github.com/users/primero/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-08-16T03:27:24Z","updated_at":"2014-08-16T23:01:49Z","closed_at":"2014-08-16T22:47:28Z","author_association":"NONE","body":"Hi, first I'd like to apologize if this isn't a real issue, but I found out that alpha textures up from version 1.2 don't show up even if I use BlendindAttribute when I load the model (and using default shader):\n\n``` java\nlevel.materials.get(3).set(new BlendingAttribute(GL20.GL_SRC_ALPHA, GL20.GL_ONE_MINUS_SRC_ALPHA));\nlevel.materials.get(3).set(new FloatAttribute(FloatAttribute.AlphaTest, 0.5f));\n```\n\nI tried with lightning shader from xoppa: http://www.badlogicgames.com/forum/viewtopic.php?f=11&t=14040 and textures show up  but if I have one mesh with alpha texture above another then this line doesnt work either:\n\n``` java\nlevel.materials.get(3).set(new FloatAttribute(FloatAttribute.AlphaTest, 0.5f));\n```\n\nAt the beginning of the render method I call: \n\n``` java\nGdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT | GL20.GL_DEPTH_BUFFER_BIT);\nGdx.gl.glClearColor(bgColor.r, bgColor.g, bgColor.b, bgColor.a);\nGdx.gl.glEnable(GL20.GL_DEPTH_TEST);//this doesn't appear to affect the issue\nGdx.gl.glEnable(GL20.GL_CULL_FACE);//this doesn't appear to affect the issue\n\n```\n\nI'm still quite new to libgdx and maybe I'm doing something wrong, but I haven't found any relevant topic considering changes that could affect this so someone might take that in considerations if he's building a level with tree's model having leafes with alpha textures for example.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2234/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2233","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2233/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2233/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2233/events","html_url":"https://github.com/libgdx/libgdx/issues/2233","id":40392600,"number":2233,"title":"Music memory leak","user":{"login":"Badazdz","id":1550507,"avatar_url":"https://avatars3.githubusercontent.com/u/1550507?v=4","gravatar_id":"","url":"https://api.github.com/users/Badazdz","html_url":"https://github.com/Badazdz","followers_url":"https://api.github.com/users/Badazdz/followers","following_url":"https://api.github.com/users/Badazdz/following{/other_user}","gists_url":"https://api.github.com/users/Badazdz/gists{/gist_id}","starred_url":"https://api.github.com/users/Badazdz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Badazdz/subscriptions","organizations_url":"https://api.github.com/users/Badazdz/orgs","repos_url":"https://api.github.com/users/Badazdz/repos","events_url":"https://api.github.com/users/Badazdz/events{/privacy}","received_events_url":"https://api.github.com/users/Badazdz/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2014-08-15T22:41:57Z","updated_at":"2014-08-26T16:50:43Z","closed_at":"2014-08-26T15:38:25Z","author_association":"CONTRIBUTOR","body":"I am using AssetManager.\nI am loading music (ogg) between screens and unloading it when not used anymore.\nBut when I change the screens few times memory goes up every change of screen.\nI tried to comment out music loading and memory increasing stopped.\nI am using AssetManager#load for loading and unload for disposing...\nIt only happens on PC, tried same thing on Android and memory is ok.\nBelow is Eclipse Memory Analyzer leak suspect. When I first run the app this leak suspect is not there\n\n![f](https://cloud.githubusercontent.com/assets/1550507/3939736/7fbe33f8-24cc-11e4-850f-d81c813fcb9a.JPG)\n\nThese are leak suspects too, but I think that it's 6 music files I am using in that screen. So this should be ok.\n![g](https://cloud.githubusercontent.com/assets/1550507/3939763/e5df4686-24cc-11e4-9d45-5e7f35fa0c73.JPG)\n\nI can provide you those snapshots\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2233/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2232","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2232/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2232/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2232/events","html_url":"https://github.com/libgdx/libgdx/issues/2232","id":40387583,"number":2232,"title":"Window title bar doesn't scale to the height of the font","user":{"login":"Robitx","id":8431097,"avatar_url":"https://avatars3.githubusercontent.com/u/8431097?v=4","gravatar_id":"","url":"https://api.github.com/users/Robitx","html_url":"https://github.com/Robitx","followers_url":"https://api.github.com/users/Robitx/followers","following_url":"https://api.github.com/users/Robitx/following{/other_user}","gists_url":"https://api.github.com/users/Robitx/gists{/gist_id}","starred_url":"https://api.github.com/users/Robitx/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Robitx/subscriptions","organizations_url":"https://api.github.com/users/Robitx/orgs","repos_url":"https://api.github.com/users/Robitx/repos","events_url":"https://api.github.com/users/Robitx/events{/privacy}","received_events_url":"https://api.github.com/users/Robitx/received_events","type":"User","site_admin":false},"labels":[{"id":11336982,"url":"https://api.github.com/repos/libgdx/libgdx/labels/enhancement","name":"enhancement","color":"84b6eb","default":true},{"id":89047068,"url":"https://api.github.com/repos/libgdx/libgdx/labels/scene2d","name":"scene2d","color":"ff00ff","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2014-08-15T21:45:11Z","updated_at":"2015-02-02T18:11:29Z","closed_at":"2015-02-02T18:11:29Z","author_association":"NONE","body":"Dear Nathan,\nwould it be possible to make the height of title bar in window class automatically scalable according to the height of the titlefont? (One would expect such behavior).\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2232/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2231","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2231/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2231/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2231/events","html_url":"https://github.com/libgdx/libgdx/issues/2231","id":40284665,"number":2231,"title":"Rename GamepadTest as ControllerTest (please)","user":{"login":"Pragmataraxia","id":6215821,"avatar_url":"https://avatars2.githubusercontent.com/u/6215821?v=4","gravatar_id":"","url":"https://api.github.com/users/Pragmataraxia","html_url":"https://github.com/Pragmataraxia","followers_url":"https://api.github.com/users/Pragmataraxia/followers","following_url":"https://api.github.com/users/Pragmataraxia/following{/other_user}","gists_url":"https://api.github.com/users/Pragmataraxia/gists{/gist_id}","starred_url":"https://api.github.com/users/Pragmataraxia/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Pragmataraxia/subscriptions","organizations_url":"https://api.github.com/users/Pragmataraxia/orgs","repos_url":"https://api.github.com/users/Pragmataraxia/repos","events_url":"https://api.github.com/users/Pragmataraxia/events{/privacy}","received_events_url":"https://api.github.com/users/Pragmataraxia/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2014-08-14T18:38:00Z","updated_at":"2014-08-27T12:53:02Z","closed_at":"2014-08-27T12:53:02Z","author_association":"NONE","body":"This is a pretty shit issue, but the interface calls them Controllers everywhere, and then test is called GamepadTest.  Like I said, it's a pretty tiny nit, but I was momentarily dismayed that there was no ControllerTest, and I'm probably not the first.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2231/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2230","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2230/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2230/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2230/events","html_url":"https://github.com/libgdx/libgdx/issues/2230","id":40276737,"number":2230,"title":"setDisplayMode produces error in native library ","user":{"login":"carsten-engelke","id":3676573,"avatar_url":"https://avatars0.githubusercontent.com/u/3676573?v=4","gravatar_id":"","url":"https://api.github.com/users/carsten-engelke","html_url":"https://github.com/carsten-engelke","followers_url":"https://api.github.com/users/carsten-engelke/followers","following_url":"https://api.github.com/users/carsten-engelke/following{/other_user}","gists_url":"https://api.github.com/users/carsten-engelke/gists{/gist_id}","starred_url":"https://api.github.com/users/carsten-engelke/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/carsten-engelke/subscriptions","organizations_url":"https://api.github.com/users/carsten-engelke/orgs","repos_url":"https://api.github.com/users/carsten-engelke/repos","events_url":"https://api.github.com/users/carsten-engelke/events{/privacy}","received_events_url":"https://api.github.com/users/carsten-engelke/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-08-14T17:12:46Z","updated_at":"2014-08-15T00:32:34Z","closed_at":"2014-08-15T00:31:00Z","author_association":"NONE","body":"Since updating to 1.3.0 I get an error message upon setting the display mode (in LWJGL) with\n\n```\nGdx.graphics.setDisplayMode(mode);\n```\n\nor\n\n```\nGdx.graphics.setDisplayMode(800, 600, false);\n```\n\nresults in:\n\n```\nError: AL lib: (EE) alc_cleanup: 1 device not closed\n```\n\nHow to recreate this error: Create an empty gdx project with gdx-setup.jar -> import into eclipse -> Add above line of code -> Run as LWJGL java application.\n\nI do have an error log created by the jvm (since it occured in native code). Should it be posted here?\n\n```\nJava frames: (J=compiled Java code, j=interpreted, Vv=VM code)\nj  org.lwjgl.opengl.WindowsContextImplementation.nMakeCurrent(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)V+0\nj  org.lwjgl.opengl.WindowsContextImplementation.makeCurrent(Lorg/lwjgl/opengl/PeerInfo;Ljava/nio/ByteBuffer;)V+7\nj  org.lwjgl.opengl.ContextGL.makeCurrent()V+46\nj  org.lwjgl.opengl.DrawableGL.makeCurrent()V+14\nj  org.lwjgl.opengl.Display.makeCurrent()V+3\nj  org.lwjgl.opengl.Display.makeCurrentAndSetSwapInterval()V+0\nj  org.lwjgl.opengl.Display.setDisplayMode(Lorg/lwjgl/opengl/DisplayMode;)V+70\nj  com.badlogic.gdx.backends.lwjgl.LwjglGraphics.setDisplayMode(IIZ)Z+184\nj  org.engine.test.TestStart.create()V+34\nj  com.badlogic.gdx.backends.lwjgl.LwjglApplication.mainLoop()V+29\nj  com.badlogic.gdx.backends.lwjgl.LwjglApplication$1.run()V+27\nv  ~StubRoutines::call_stub\n\nOS: Windows 8.1 , 64 bit Build 9600´´´\n\nIs the used LWJGL release corrupted maybe?\n```\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2230/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2229","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2229/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2229/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2229/events","html_url":"https://github.com/libgdx/libgdx/pull/2229","id":40178877,"number":2229,"title":"Stage.act() calls requestRendering() if any actions are added or fired","user":{"login":"sehugg","id":84127,"avatar_url":"https://avatars3.githubusercontent.com/u/84127?v=4","gravatar_id":"","url":"https://api.github.com/users/sehugg","html_url":"https://github.com/sehugg","followers_url":"https://api.github.com/users/sehugg/followers","following_url":"https://api.github.com/users/sehugg/following{/other_user}","gists_url":"https://api.github.com/users/sehugg/gists{/gist_id}","starred_url":"https://api.github.com/users/sehugg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sehugg/subscriptions","organizations_url":"https://api.github.com/users/sehugg/orgs","repos_url":"https://api.github.com/users/sehugg/repos","events_url":"https://api.github.com/users/sehugg/events{/privacy}","received_events_url":"https://api.github.com/users/sehugg/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2014-08-13T17:35:01Z","updated_at":"2014-09-27T15:33:03Z","closed_at":"2014-09-27T15:33:03Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2229","html_url":"https://github.com/libgdx/libgdx/pull/2229","diff_url":"https://github.com/libgdx/libgdx/pull/2229.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2229.patch"},"body":"Keeps animations going even if setContinuousRendering() is set to false (fixes #2228)\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2229/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2228","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2228/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2228/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2228/events","html_url":"https://github.com/libgdx/libgdx/issues/2228","id":40160158,"number":2228,"title":"Cannot use Actions with setContinuousRendering(false)","user":{"login":"sehugg","id":84127,"avatar_url":"https://avatars3.githubusercontent.com/u/84127?v=4","gravatar_id":"","url":"https://api.github.com/users/sehugg","html_url":"https://github.com/sehugg","followers_url":"https://api.github.com/users/sehugg/followers","following_url":"https://api.github.com/users/sehugg/following{/other_user}","gists_url":"https://api.github.com/users/sehugg/gists{/gist_id}","starred_url":"https://api.github.com/users/sehugg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sehugg/subscriptions","organizations_url":"https://api.github.com/users/sehugg/orgs","repos_url":"https://api.github.com/users/sehugg/repos","events_url":"https://api.github.com/users/sehugg/events{/privacy}","received_events_url":"https://api.github.com/users/sehugg/received_events","type":"User","site_admin":false},"labels":[{"id":11336982,"url":"https://api.github.com/repos/libgdx/libgdx/labels/enhancement","name":"enhancement","color":"84b6eb","default":true},{"id":89047068,"url":"https://api.github.com/repos/libgdx/libgdx/labels/scene2d","name":"scene2d","color":"ff00ff","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-08-13T14:31:21Z","updated_at":"2014-09-27T15:33:03Z","closed_at":"2014-09-27T15:33:03Z","author_association":"CONTRIBUTOR","body":"When setContinuousRendering(false) is set, animations that are controlled by Actions do not run. TweenEngine solves this with a function called getRunningTweensCount() which can be used to turn setContinousRendering() on and off, like this:\n\n```\n    float dt = Gdx.graphics.isContinuousRendering() ? deltaTime : 1f/60;\n    manager.update(dt); // update tweens\n    Gdx.graphics.setContinuousRendering(manager.getRunningTweensCount() > 0);\n```\n\nThere doesn't seem to be an equivalent function to getRunningTweensCount() for Actions. One possible implementation is to add a static counter in Actor.act() that's incremented when actions are fired and have a function in Stage that checks to see if this counter changed since the last frame.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2228/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2227","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2227/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2227/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2227/events","html_url":"https://github.com/libgdx/libgdx/issues/2227","id":40151229,"number":2227,"title":"G3DJ specification do not match implementation","user":{"login":"VinceAngel","id":3493075,"avatar_url":"https://avatars0.githubusercontent.com/u/3493075?v=4","gravatar_id":"","url":"https://api.github.com/users/VinceAngel","html_url":"https://github.com/VinceAngel","followers_url":"https://api.github.com/users/VinceAngel/followers","following_url":"https://api.github.com/users/VinceAngel/following{/other_user}","gists_url":"https://api.github.com/users/VinceAngel/gists{/gist_id}","starred_url":"https://api.github.com/users/VinceAngel/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/VinceAngel/subscriptions","organizations_url":"https://api.github.com/users/VinceAngel/orgs","repos_url":"https://api.github.com/users/VinceAngel/repos","events_url":"https://api.github.com/users/VinceAngel/events{/privacy}","received_events_url":"https://api.github.com/users/VinceAngel/received_events","type":"User","site_admin":false},"labels":[{"id":11336982,"url":"https://api.github.com/repos/libgdx/libgdx/labels/enhancement","name":"enhancement","color":"84b6eb","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2014-08-13T12:55:03Z","updated_at":"2014-10-31T11:19:33Z","closed_at":"2014-10-31T11:19:33Z","author_association":"CONTRIBUTOR","body":"In the specifications https://github.com/libgdx/fbx-conv/wiki/Version-0.1-(libgdx-0.9.9) meshes are not mandatory in a model file.\nBut in the implementation of the loader https://github.com/libgdx/libgdx/blob/master/gdx/src/com/badlogic/gdx/graphics/g3d/loader/G3dModelLoader.java#L82 it does not match it.\n(Same thing for nodes, maybe the other too)\n\nThanks !\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2227/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2226","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2226/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2226/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2226/events","html_url":"https://github.com/libgdx/libgdx/issues/2226","id":40089731,"number":2226,"title":"Selection.java misleading comment","user":{"login":"Robitx","id":8431097,"avatar_url":"https://avatars3.githubusercontent.com/u/8431097?v=4","gravatar_id":"","url":"https://api.github.com/users/Robitx","html_url":"https://github.com/Robitx","followers_url":"https://api.github.com/users/Robitx/followers","following_url":"https://api.github.com/users/Robitx/following{/other_user}","gists_url":"https://api.github.com/users/Robitx/gists{/gist_id}","starred_url":"https://api.github.com/users/Robitx/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Robitx/subscriptions","organizations_url":"https://api.github.com/users/Robitx/orgs","repos_url":"https://api.github.com/users/Robitx/repos","events_url":"https://api.github.com/users/Robitx/events{/privacy}","received_events_url":"https://api.github.com/users/Robitx/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-08-12T19:24:05Z","updated_at":"2014-08-13T14:14:41Z","closed_at":"2014-08-13T14:14:41Z","author_association":"NONE","body":"```\n/** If true, prevents {@link #choose(Object)} from selecting multiple. Default is false. */\npublic void setMultiple (boolean multiple) {\n    this.multiple = multiple;\n}\n```\n\ncomment doesn't seems to fit with what is happening in choose function\n\n```\n        if (!multiple || (!toggle && !UIUtils.ctrl())) {\n            modified = selected.size > 0;\n            selected.clear();\n        }\n```\n\n-> multiple if false prevents from selecting multiple...\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2226/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2225","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2225/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2225/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2225/events","html_url":"https://github.com/libgdx/libgdx/issues/2225","id":40009545,"number":2225,"title":"Issue with timer thread dieing when a user initiated signin for GPGS is executed.","user":{"login":"Mmclind","id":8422066,"avatar_url":"https://avatars2.githubusercontent.com/u/8422066?v=4","gravatar_id":"","url":"https://api.github.com/users/Mmclind","html_url":"https://github.com/Mmclind","followers_url":"https://api.github.com/users/Mmclind/followers","following_url":"https://api.github.com/users/Mmclind/following{/other_user}","gists_url":"https://api.github.com/users/Mmclind/gists{/gist_id}","starred_url":"https://api.github.com/users/Mmclind/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Mmclind/subscriptions","organizations_url":"https://api.github.com/users/Mmclind/orgs","repos_url":"https://api.github.com/users/Mmclind/repos","events_url":"https://api.github.com/users/Mmclind/events{/privacy}","received_events_url":"https://api.github.com/users/Mmclind/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-08-11T22:58:50Z","updated_at":"2014-08-12T12:15:51Z","closed_at":"2014-08-12T12:15:51Z","author_association":"NONE","body":"I have a task scheduled with the timer thread. the task survives activity pauses and everything (I believe something to do with this was fixed in the last few months with libgdx). The problem is that my task doesn't survive GPGS user initiated signin, for god knows why.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2225/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2224","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2224/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2224/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2224/events","html_url":"https://github.com/libgdx/libgdx/issues/2224","id":39957589,"number":2224,"title":"can we add some mobile device api plugin like phoneGap?","user":{"login":"ourcd","id":836517,"avatar_url":"https://avatars3.githubusercontent.com/u/836517?v=4","gravatar_id":"","url":"https://api.github.com/users/ourcd","html_url":"https://github.com/ourcd","followers_url":"https://api.github.com/users/ourcd/followers","following_url":"https://api.github.com/users/ourcd/following{/other_user}","gists_url":"https://api.github.com/users/ourcd/gists{/gist_id}","starred_url":"https://api.github.com/users/ourcd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ourcd/subscriptions","organizations_url":"https://api.github.com/users/ourcd/orgs","repos_url":"https://api.github.com/users/ourcd/repos","events_url":"https://api.github.com/users/ourcd/events{/privacy}","received_events_url":"https://api.github.com/users/ourcd/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-08-11T13:25:45Z","updated_at":"2014-08-11T13:27:07Z","closed_at":"2014-08-11T13:27:07Z","author_association":"NONE","body":"can we add some mobile device api plugin like phoneGap?\nfor example:contact\\gps\\camera\\media....\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2224/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2223","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2223/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2223/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2223/events","html_url":"https://github.com/libgdx/libgdx/issues/2223","id":39950381,"number":2223,"title":"How to edit gradle build file?","user":{"login":"truonguit2010","id":4622117,"avatar_url":"https://avatars0.githubusercontent.com/u/4622117?v=4","gravatar_id":"","url":"https://api.github.com/users/truonguit2010","html_url":"https://github.com/truonguit2010","followers_url":"https://api.github.com/users/truonguit2010/followers","following_url":"https://api.github.com/users/truonguit2010/following{/other_user}","gists_url":"https://api.github.com/users/truonguit2010/gists{/gist_id}","starred_url":"https://api.github.com/users/truonguit2010/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/truonguit2010/subscriptions","organizations_url":"https://api.github.com/users/truonguit2010/orgs","repos_url":"https://api.github.com/users/truonguit2010/repos","events_url":"https://api.github.com/users/truonguit2010/events{/privacy}","received_events_url":"https://api.github.com/users/truonguit2010/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-08-11T11:41:51Z","updated_at":"2014-08-11T11:53:17Z","closed_at":"2014-08-11T11:53:17Z","author_association":"NONE","body":"My libs folder look like below image. How can I update gradle build file to meet it. Thanks.\n![libs](https://cloud.githubusercontent.com/assets/4622117/3875104/a52725a6-214c-11e4-9fdf-a506d77df1d0.png)\n\nMy xml file is:\n\n```\n    <config>\n<executableName>${app.executable}</executableName>\n<mainClass>${app.mainclass}</mainClass>\n<os>ios</os>\n<arch>thumbv7</arch>\n<target>ios</target>\n<iosInfoPList>Info.plist.xml</iosInfoPList>\n<resources>\n    <resource>\n        <directory>../iWinOnline/assets</directory>\n        <includes>\n            <include>**/320480/**</include>\n            <include>**/640960/**</include>\n            <include>sound/**</include>\n            <include>music/**</include>\n            <include>config.properties</include>\n        </includes>\n        <skipPngCrush>true</skipPngCrush>\n    </resource>\n    <resource>\n        <directory>resources</directory>\n        <skipPngCrush>true</skipPngCrush>\n    </resource>\n    <resource>\n        <directory>icons</directory>\n    </resource>\n</resources>\n<libs>\n    <lib>libs/ios/libgdx.a</lib>\n    <lib>libs/ios/libObjectAL.a</lib>\n    <lib>libs/ios/libarclite.a</lib>\n    <lib>libs/ios/libIWinIosLib.a</lib>\n    <lib>libs/ios/libgoogleanalytics.a</lib>\n    <lib>libs/ios/libgdx-box2d.a</lib>\n    <lib>c++</lib>\n</libs>\n<forceLinkClasses>\n    <pattern>com.badlogic.gdx.scenes.scene2d.ui.SplitPane$SplitPaneStyle</pattern>\n    <pattern>org.apache.harmony.security.provider.**</pattern>\n    <pattern>com.android.org.bouncycastle.jce.provider.**</pattern>\n    <pattern>org.apache.harmony.xnet.provider.jsse.**</pattern>\n    <pattern>com.badlogic.gdx.sqlite.robovm.RobovmDatabaseManager</pattern>\n    <pattern>SQLite.**</pattern>\n    <!-- for http: support use -->\n    <pattern>com.android.okhttp.HttpHandler</pattern>\n    <!-- for https: support use -->\n    <pattern>com.android.okhttp.HttpsHandler</pattern>\n    <pattern>com.android.org.conscrypt.OpenSSLSocketFactoryImpl</pattern>\n    <pattern>com.android.org.conscrypt.OpenSSLProvider</pattern>\n    <pattern>com.android.org.conscrypt.JSSEProvider</pattern>\n</forceLinkClasses>\n<frameworkPaths>\n    <path>libs/ios</path>\n</frameworkPaths>\n<frameworks>\n    <framework>Security</framework>\n    <framework>MediaPlayer</framework>\n    <framework>CoreText</framework>\n    <framework>CoreMotion</framework>\n    <framework>AssetsLibrary</framework>\n    <framework>AddressBook</framework>\n    <framework>UIKit</framework>\n    <framework>OpenGLES</framework>\n    <framework>QuartzCore</framework>\n    <framework>CoreGraphics</framework>\n    <framework>OpenAL</framework>\n    <framework>AudioToolbox</framework>\n    <framework>AVFoundation</framework>\n    <framework>GameKit</framework>\n    <framework>CoreLocation</framework>\n    <framework>Foundation</framework>\n    <framework>CoreData</framework>\n    <framework>StoreKit</framework>\n    <framework>SystemConfiguration</framework>\n    <framework>AdSupport</framework>\n    <framework>MessageUI</framework>\n    <framework>ImageIO</framework>\n    <framework>CoreMedia</framework>\n    <framework>CoreVideo</framework>\n    <framework>FacebookSDK</framework>\n    <framework>GooglePlus</framework>\n    <framework>GoogleOpenSource</framework>\n    <framework>GooglePlayGames</framework>\n</frameworks>\n    </config>\n```\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2223/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2222","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2222/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2222/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2222/events","html_url":"https://github.com/libgdx/libgdx/issues/2222","id":39947416,"number":2222,"title":"Ashley v1.0.1 JAR is missing ComponentMapper class","user":{"login":"danielheim","id":3598949,"avatar_url":"https://avatars0.githubusercontent.com/u/3598949?v=4","gravatar_id":"","url":"https://api.github.com/users/danielheim","html_url":"https://github.com/danielheim","followers_url":"https://api.github.com/users/danielheim/followers","following_url":"https://api.github.com/users/danielheim/following{/other_user}","gists_url":"https://api.github.com/users/danielheim/gists{/gist_id}","starred_url":"https://api.github.com/users/danielheim/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/danielheim/subscriptions","organizations_url":"https://api.github.com/users/danielheim/orgs","repos_url":"https://api.github.com/users/danielheim/repos","events_url":"https://api.github.com/users/danielheim/events{/privacy}","received_events_url":"https://api.github.com/users/danielheim/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-08-11T10:52:30Z","updated_at":"2014-08-11T12:02:10Z","closed_at":"2014-08-11T12:00:53Z","author_association":"CONTRIBUTOR","body":"As per https://github.com/libgdx/ashley/issues/45\n\nWhen including Ashley extension, Libgdx Project Builder generates dependencies to Ashley v1.0.1. As a work-around, you can manually modify your build.gradle file so Ashley dependencies point to version 1.1.0 or 1.1.1-SNAPSHOT.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2222/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2221","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2221/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2221/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2221/events","html_url":"https://github.com/libgdx/libgdx/issues/2221","id":39936168,"number":2221,"title":"Missing libgdx-image64.dylib in gdx-image-native.jar","user":{"login":"windlord0408","id":3015362,"avatar_url":"https://avatars1.githubusercontent.com/u/3015362?v=4","gravatar_id":"","url":"https://api.github.com/users/windlord0408","html_url":"https://github.com/windlord0408","followers_url":"https://api.github.com/users/windlord0408/followers","following_url":"https://api.github.com/users/windlord0408/following{/other_user}","gists_url":"https://api.github.com/users/windlord0408/gists{/gist_id}","starred_url":"https://api.github.com/users/windlord0408/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/windlord0408/subscriptions","organizations_url":"https://api.github.com/users/windlord0408/orgs","repos_url":"https://api.github.com/users/windlord0408/repos","events_url":"https://api.github.com/users/windlord0408/events{/privacy}","received_events_url":"https://api.github.com/users/windlord0408/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2014-08-11T08:05:35Z","updated_at":"2014-08-16T18:57:10Z","closed_at":"2014-08-16T14:47:40Z","author_association":"NONE","body":"Hi, I want to build my game with libgdx on my Mac 64 bit. The problem's that when I run it, I got this problem: Unable to read file for extraction: libgdx-image64.dylib. Please fix it. Thanks\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2221/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2220","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2220/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2220/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2220/events","html_url":"https://github.com/libgdx/libgdx/pull/2220","id":39914429,"number":2220,"title":"SplitViewport added","user":{"login":"nooone","id":5896510,"avatar_url":"https://avatars3.githubusercontent.com/u/5896510?v=4","gravatar_id":"","url":"https://api.github.com/users/nooone","html_url":"https://github.com/nooone","followers_url":"https://api.github.com/users/nooone/followers","following_url":"https://api.github.com/users/nooone/following{/other_user}","gists_url":"https://api.github.com/users/nooone/gists{/gist_id}","starred_url":"https://api.github.com/users/nooone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nooone/subscriptions","organizations_url":"https://api.github.com/users/nooone/orgs","repos_url":"https://api.github.com/users/nooone/repos","events_url":"https://api.github.com/users/nooone/events{/privacy}","received_events_url":"https://api.github.com/users/nooone/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":11,"created_at":"2014-08-10T19:16:42Z","updated_at":"2014-08-30T12:01:50Z","closed_at":"2014-08-12T12:24:22Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2220","html_url":"https://github.com/libgdx/libgdx/pull/2220","diff_url":"https://github.com/libgdx/libgdx/pull/2220.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2220.patch"},"body":"I have seen a few people in the IRC channel struggling with the `Viewport` classes trying to get some split screens working. The ones currently available cannot do anything like this.\n\nThis new `SplitViewport` is supposed to help with the problem of split screens with variable screen sizes. It gets initialized with a \"root\" viewport which determines the area that the sub views can use. Those sub views can be constructed in a pretty simple way by adding rows and cells (viewports) with size informations. It is a bit similar to `Table`. To show how it works I have added a test as well.\n\nA preview with 4 different viewports:\n![split](https://cloud.githubusercontent.com/assets/5896510/3869887/d5f80b0e-20ad-11e4-927f-bd0ae2557b46.png)\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2220/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2219","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2219/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2219/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2219/events","html_url":"https://github.com/libgdx/libgdx/issues/2219","id":39911133,"number":2219,"title":"Android: Perfomance of FrameBuffer","user":{"login":"rakam","id":2814366,"avatar_url":"https://avatars3.githubusercontent.com/u/2814366?v=4","gravatar_id":"","url":"https://api.github.com/users/rakam","html_url":"https://github.com/rakam","followers_url":"https://api.github.com/users/rakam/followers","following_url":"https://api.github.com/users/rakam/following{/other_user}","gists_url":"https://api.github.com/users/rakam/gists{/gist_id}","starred_url":"https://api.github.com/users/rakam/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rakam/subscriptions","organizations_url":"https://api.github.com/users/rakam/orgs","repos_url":"https://api.github.com/users/rakam/repos","events_url":"https://api.github.com/users/rakam/events{/privacy}","received_events_url":"https://api.github.com/users/rakam/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2014-08-10T16:30:34Z","updated_at":"2014-08-10T20:24:29Z","closed_at":"2014-08-10T20:24:29Z","author_association":"NONE","body":"Hi everyone,\n\nI have encountered a weird issue when I was developing an Android Game.\nThe execution time of the FrameBuffer.begin() method is about 0.06ms on a Galaxy Nexus against 16ms on a Nexus 7 (2013 edition). Both with Android 4.4.4 and libGdx 1.2.0\n\nAlso, occasionally, when my application is put in the background and the restarted (so the OpenGl context is recreated), the issue seems to disappear and the execution time comes down to 0.xxx milliseconds.\n\nThe code I use to reproduce the issue:\n\n``` java\npublic class MyGdxGame extends ApplicationAdapter {\n    SpriteBatch batch;\n    Texture img;\n    FrameBuffer frameBuffer;\n\n    @Override\n    public void create() {\n        batch = new SpriteBatch();\n        img = new Texture(\"badlogic.jpg\");\n        frameBuffer = new FrameBuffer(Pixmap.Format.RGBA8888, 800, 480, false);\n    }\n\n    @Override\n    public void render() {\n        Gdx.gl.glClearColor(1, 0, 0, 1);\n        Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);\n\n        batch.begin();\n        batch.draw(img, 0, 0);\n        batch.end();\n\n        long startTime = System.nanoTime();\n        frameBuffer.begin();\n        long endTime = System.nanoTime();\n        double delta = (endTime - startTime) / 1000000.;\n        Gdx.app.log(\"delta\", delta + \" ms\");\n        frameBuffer.end();\n    }\n}\n```\n\nAnother thing : if I comment the batch.draw() line, the execution time comes back in normal?\n\nWhy a so big difference? It's a huge bug or it's due to the way I measure the execution time?\n\n(this issue is a copy/paste of http://www.badlogicgames.com/forum/viewtopic.php?f=11&t=15345)\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2219/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2218","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2218/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2218/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2218/events","html_url":"https://github.com/libgdx/libgdx/pull/2218","id":39900632,"number":2218,"title":"fix useImmersiveMode","user":{"login":"m4b","id":1920204,"avatar_url":"https://avatars2.githubusercontent.com/u/1920204?v=4","gravatar_id":"","url":"https://api.github.com/users/m4b","html_url":"https://github.com/m4b","followers_url":"https://api.github.com/users/m4b/followers","following_url":"https://api.github.com/users/m4b/following{/other_user}","gists_url":"https://api.github.com/users/m4b/gists{/gist_id}","starred_url":"https://api.github.com/users/m4b/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/m4b/subscriptions","organizations_url":"https://api.github.com/users/m4b/orgs","repos_url":"https://api.github.com/users/m4b/repos","events_url":"https://api.github.com/users/m4b/events{/privacy}","received_events_url":"https://api.github.com/users/m4b/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2014-08-10T04:15:02Z","updated_at":"2014-08-30T15:38:57Z","closed_at":"2014-08-30T15:38:57Z","author_association":"NONE","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2218","html_url":"https://github.com/libgdx/libgdx/pull/2218","diff_url":"https://github.com/libgdx/libgdx/pull/2218.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2218.patch"},"body":"The previous implementation was not properly fullscreening on my kitkat devices (the kitkat immersive mode is distinct in that first entering it shows a blue overlay which tells you how to leave it, by swiping down from the menu bar area).  The previous method xor'd the UI flags, which does not make sense; they should be inclusive or'd and sent into the setSystemUiVisibility method; testing with this method yields the correct fullscreen kitkat \"immersive\" mode, with a swipe down from the top to redisplay the navigation controls, and menu bar, etc.\n\nI'm also unsure why reflection was being used; calling the method normally on the view object is completely sufficient; using this approach removes the need for a try catch block (the view should not be null anyway, or you have major problems regardless).\n\nThe KITKAT version codes were also used, instead of hardcoding 19.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2218/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2217","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2217/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2217/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2217/events","html_url":"https://github.com/libgdx/libgdx/issues/2217","id":39889791,"number":2217,"title":"TexturePacker does not overwrite anymore","user":{"login":"daranus","id":8322297,"avatar_url":"https://avatars3.githubusercontent.com/u/8322297?v=4","gravatar_id":"","url":"https://api.github.com/users/daranus","html_url":"https://github.com/daranus","followers_url":"https://api.github.com/users/daranus/followers","following_url":"https://api.github.com/users/daranus/following{/other_user}","gists_url":"https://api.github.com/users/daranus/gists{/gist_id}","starred_url":"https://api.github.com/users/daranus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/daranus/subscriptions","organizations_url":"https://api.github.com/users/daranus/orgs","repos_url":"https://api.github.com/users/daranus/repos","events_url":"https://api.github.com/users/daranus/events{/privacy}","received_events_url":"https://api.github.com/users/daranus/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2014-08-09T17:16:57Z","updated_at":"2014-08-10T13:08:22Z","closed_at":"2014-08-10T13:08:22Z","author_association":"NONE","body":"The new TexturePacker (Nightly 07/31/2014) does not overwrite current texture Atlases anymore but errors out with:\n\nCaused by: com.badlogic.gdx.utils.GdxRuntimeException: A region with the name \"endlessModeAll\" has already been packed: endlessModeAll\n\nUsually I could just change pictures in my source folder and run the Texturepacker again to overwrite current atlases.\n\nTestcase:\n\nhttp://pastebin.com/quUy5iPn\n\nPicture in the source Folder:\n\n![endlessmodeall](https://cloud.githubusercontent.com/assets/8322297/3866941/e8ac80d8-1fe8-11e4-868f-14f76fc771e7.png)\n\nResult Folder: Empty.\n\nRunning the code once: No Problem.\n\nRunning the code again: Caused by: com.badlogic.gdx.utils.GdxRuntimeException: A region with the name \"endlessModeAll\" has already been packed: endlessModeAll\n\nIs that working as intended?\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2217/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2216","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2216/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2216/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2216/events","html_url":"https://github.com/libgdx/libgdx/issues/2216","id":39887279,"number":2216,"title":"Texture Atlas not rotating regions","user":{"login":"MonsterOfCookie","id":2905478,"avatar_url":"https://avatars2.githubusercontent.com/u/2905478?v=4","gravatar_id":"","url":"https://api.github.com/users/MonsterOfCookie","html_url":"https://github.com/MonsterOfCookie","followers_url":"https://api.github.com/users/MonsterOfCookie/followers","following_url":"https://api.github.com/users/MonsterOfCookie/following{/other_user}","gists_url":"https://api.github.com/users/MonsterOfCookie/gists{/gist_id}","starred_url":"https://api.github.com/users/MonsterOfCookie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MonsterOfCookie/subscriptions","organizations_url":"https://api.github.com/users/MonsterOfCookie/orgs","repos_url":"https://api.github.com/users/MonsterOfCookie/repos","events_url":"https://api.github.com/users/MonsterOfCookie/events{/privacy}","received_events_url":"https://api.github.com/users/MonsterOfCookie/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2014-08-09T15:18:40Z","updated_at":"2014-08-25T07:24:25Z","closed_at":"2014-08-25T07:24:25Z","author_association":"NONE","body":"Hey!\n\nI turned on rotation in TexturePacker, but I found that libgdx wasn't rotating them back. Looking at the code, I think this condition is wrong:\n\nTextureAtlas ln 378:\n\n```\nprivate Sprite newSprite (AtlasRegion region) {\n        if (region.packedWidth == region.originalWidth && region.packedHeight == region.originalHeight) {\n            if (region.rotate) {\n                Sprite sprite = new Sprite(region);\n                sprite.setBounds(0, 0, region.getRegionHeight(), region.getRegionWidth());\n                sprite.rotate90(true);\n                return sprite;\n            }\n            return new Sprite(region);\n        }\n        return new AtlasSprite(region);\n    }\n```\n\nSure the widths and heights don't match, then there is a chance it was rotated?\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2216/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2215","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2215/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2215/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2215/events","html_url":"https://github.com/libgdx/libgdx/pull/2215","id":39869921,"number":2215,"title":"Proposal: annotation support in reflection wrapper","user":{"login":"code-disaster","id":4644167,"avatar_url":"https://avatars1.githubusercontent.com/u/4644167?v=4","gravatar_id":"","url":"https://api.github.com/users/code-disaster","html_url":"https://github.com/code-disaster","followers_url":"https://api.github.com/users/code-disaster/followers","following_url":"https://api.github.com/users/code-disaster/following{/other_user}","gists_url":"https://api.github.com/users/code-disaster/gists{/gist_id}","starred_url":"https://api.github.com/users/code-disaster/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/code-disaster/subscriptions","organizations_url":"https://api.github.com/users/code-disaster/orgs","repos_url":"https://api.github.com/users/code-disaster/repos","events_url":"https://api.github.com/users/code-disaster/events{/privacy}","received_events_url":"https://api.github.com/users/code-disaster/received_events","type":"User","site_admin":false},"labels":[{"id":11336982,"url":"https://api.github.com/repos/libgdx/libgdx/labels/enhancement","name":"enhancement","color":"84b6eb","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2014-08-08T22:54:14Z","updated_at":"2014-10-14T15:22:00Z","closed_at":"2014-09-07T16:25:38Z","author_association":"MEMBER","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2215","html_url":"https://github.com/libgdx/libgdx/pull/2215","diff_url":"https://github.com/libgdx/libgdx/pull/2215.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2215.patch"},"body":"Hey ho,\n\nwith this PR it is possible to query annotation information at runtime via the reflection wrapper. It supports class and field annotations. The annotation interfaces themselves must be annotated with RetentionPolicy.RUNTIME to become available.\n\nI've already finished adding wrapper functions to the non-GWT versions before I discovered the insanity that lies behind IReflectionCache...\n\nAnyway, it seems to work now, so some of you might be interested in skim through the changes.\n\nThe ReflectionCacheSourceCreator for GWT now basically embeds and returns anonymous implementations of the annotation interfaces, fetching the values from source during compilation. I recommend to just try an example and peek at the generated code.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2215/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2214","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2214/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2214/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2214/events","html_url":"https://github.com/libgdx/libgdx/issues/2214","id":39814440,"number":2214,"title":"Music/Sound has delay before playing on desktop","user":{"login":"ashes999","id":18432,"avatar_url":"https://avatars1.githubusercontent.com/u/18432?v=4","gravatar_id":"","url":"https://api.github.com/users/ashes999","html_url":"https://github.com/ashes999","followers_url":"https://api.github.com/users/ashes999/followers","following_url":"https://api.github.com/users/ashes999/following{/other_user}","gists_url":"https://api.github.com/users/ashes999/gists{/gist_id}","starred_url":"https://api.github.com/users/ashes999/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ashes999/subscriptions","organizations_url":"https://api.github.com/users/ashes999/orgs","repos_url":"https://api.github.com/users/ashes999/repos","events_url":"https://api.github.com/users/ashes999/events{/privacy}","received_events_url":"https://api.github.com/users/ashes999/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2014-08-08T11:36:15Z","updated_at":"2014-08-09T13:11:51Z","closed_at":"2014-08-09T13:10:29Z","author_association":"NONE","body":"When you call `play` on a `Music` or `Sound` instance, there's a short delay in the desktop version before the sound plays. It's noticeable. \n\nI used to work around this a couple of years ago by pre-loading everything into `Music` instances, but that doesn't seem to resolve the issue. Maybe I never noticed that this was always broken?\n\nRepro steps:\n- Call `Gdx.audio.newMusic(fileName)` and save the instance (`newSound` also exhibits this)\n- Wait. You can wait a full minute and load a small sound-effect if you want to be sure.\n- Call `play`. Instead of playing immediately, there's a short delay. Subsequent calls to `play` also are delayed.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2214/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2213","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2213/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2213/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2213/events","html_url":"https://github.com/libgdx/libgdx/issues/2213","id":39808545,"number":2213,"title":"How to make use of Group?","user":{"login":"manishbannur","id":7879245,"avatar_url":"https://avatars1.githubusercontent.com/u/7879245?v=4","gravatar_id":"","url":"https://api.github.com/users/manishbannur","html_url":"https://github.com/manishbannur","followers_url":"https://api.github.com/users/manishbannur/followers","following_url":"https://api.github.com/users/manishbannur/following{/other_user}","gists_url":"https://api.github.com/users/manishbannur/gists{/gist_id}","starred_url":"https://api.github.com/users/manishbannur/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/manishbannur/subscriptions","organizations_url":"https://api.github.com/users/manishbannur/orgs","repos_url":"https://api.github.com/users/manishbannur/repos","events_url":"https://api.github.com/users/manishbannur/events{/privacy}","received_events_url":"https://api.github.com/users/manishbannur/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2014-08-08T10:00:33Z","updated_at":"2014-08-08T11:15:42Z","closed_at":"2014-08-08T11:15:42Z","author_association":"NONE","body":"Hi , is there any piece of code or tutorial as to how to use group for adding child images to group as it is not possible to add child sprite to parent sprite.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2213/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2212","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2212/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2212/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2212/events","html_url":"https://github.com/libgdx/libgdx/issues/2212","id":39804260,"number":2212,"title":"Make ability in I18NBundle to not throw an exception when no key found","user":{"login":"vlaaad","id":732554,"avatar_url":"https://avatars2.githubusercontent.com/u/732554?v=4","gravatar_id":"","url":"https://api.github.com/users/vlaaad","html_url":"https://github.com/vlaaad","followers_url":"https://api.github.com/users/vlaaad/followers","following_url":"https://api.github.com/users/vlaaad/following{/other_user}","gists_url":"https://api.github.com/users/vlaaad/gists{/gist_id}","starred_url":"https://api.github.com/users/vlaaad/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vlaaad/subscriptions","organizations_url":"https://api.github.com/users/vlaaad/orgs","repos_url":"https://api.github.com/users/vlaaad/repos","events_url":"https://api.github.com/users/vlaaad/events{/privacy}","received_events_url":"https://api.github.com/users/vlaaad/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":16,"created_at":"2014-08-08T08:56:38Z","updated_at":"2014-08-24T18:35:10Z","closed_at":"2014-08-24T18:31:26Z","author_association":"NONE","body":"Sometimes it is easier to just see what keys are missing and then add them. If there are many missing keys, app will die on every missing key. It will be better to allow not throwing an exception. This can be achieved by passing to bundle missing key provider (with api `String get(String key)`), which can default to throwing exception, but can be replaced with something that just returns missing key.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2212/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2211","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2211/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2211/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2211/events","html_url":"https://github.com/libgdx/libgdx/pull/2211","id":39798719,"number":2211,"title":"Repaced \"Done\" key for \"Return\" in IOS Keyboard (updated)","user":{"login":"dhex-","id":8392316,"avatar_url":"https://avatars3.githubusercontent.com/u/8392316?v=4","gravatar_id":"","url":"https://api.github.com/users/dhex-","html_url":"https://github.com/dhex-","followers_url":"https://api.github.com/users/dhex-/followers","following_url":"https://api.github.com/users/dhex-/following{/other_user}","gists_url":"https://api.github.com/users/dhex-/gists{/gist_id}","starred_url":"https://api.github.com/users/dhex-/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dhex-/subscriptions","organizations_url":"https://api.github.com/users/dhex-/orgs","repos_url":"https://api.github.com/users/dhex-/repos","events_url":"https://api.github.com/users/dhex-/events{/privacy}","received_events_url":"https://api.github.com/users/dhex-/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":17,"created_at":"2014-08-08T07:31:26Z","updated_at":"2014-12-04T21:05:39Z","closed_at":"2014-12-04T21:05:39Z","author_association":"NONE","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2211","html_url":"https://github.com/libgdx/libgdx/pull/2211","diff_url":"https://github.com/libgdx/libgdx/pull/2211.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2211.patch"},"body":"Done key is unhelpfull.. it just closes the keyboard (easily done by code) and doesn't triggers anything, its a big useless button on the user keyboard. I want to experiment with the \"return\" key (default) and see if it can be mapped and usefull instead.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2211/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2210","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2210/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2210/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2210/events","html_url":"https://github.com/libgdx/libgdx/pull/2210","id":39599005,"number":2210,"title":"Headless model","user":{"login":"jrenner","id":1393288,"avatar_url":"https://avatars1.githubusercontent.com/u/1393288?v=4","gravatar_id":"","url":"https://api.github.com/users/jrenner","html_url":"https://github.com/jrenner","followers_url":"https://api.github.com/users/jrenner/followers","following_url":"https://api.github.com/users/jrenner/following{/other_user}","gists_url":"https://api.github.com/users/jrenner/gists{/gist_id}","starred_url":"https://api.github.com/users/jrenner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jrenner/subscriptions","organizations_url":"https://api.github.com/users/jrenner/orgs","repos_url":"https://api.github.com/users/jrenner/repos","events_url":"https://api.github.com/users/jrenner/events{/privacy}","received_events_url":"https://api.github.com/users/jrenner/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2014-08-06T08:16:42Z","updated_at":"2014-08-06T08:48:43Z","closed_at":"2014-08-06T08:48:43Z","author_association":"OWNER","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2210","html_url":"https://github.com/libgdx/libgdx/pull/2210","diff_url":"https://github.com/libgdx/libgdx/pull/2210.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2210.patch"},"body":"This PR adds some modified versions of the Model class and associated classes.\nThey are identical to the regular classes except they ignore anything related to Textures, Materials and VBOs to avoid exceptions.\n\nTheir reason for existence is because a headless app cannot load Models or Textures since it has no gl context.  However, there are times when the headless app needs to load the models for access to its data. For example, my use case is using Bullet to create btBvhTriangleMesh collision shapes.  These shapes take an array of MeshParts as an argument to construct the shape.  Usually, one loads a Model and passes model.meshParts.\n\nI didn't feel good about the copy+paste job, but I didn't see a more elegant solution, since it would have meant hacking up the Model class itself.\n\nI realize there's a good chance we won't want this in libgdx, but on the other hand I want to put it up for consideration since having a headless server that uses bullet physics seems like a resonable thing to support.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2210/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2209","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2209/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2209/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2209/events","html_url":"https://github.com/libgdx/libgdx/pull/2209","id":39586770,"number":2209,"title":"Proposal: A UDP networking extension for libGDX, 'gdx-udp'","user":{"login":"johnnyapol","id":5902494,"avatar_url":"https://avatars1.githubusercontent.com/u/5902494?v=4","gravatar_id":"","url":"https://api.github.com/users/johnnyapol","html_url":"https://github.com/johnnyapol","followers_url":"https://api.github.com/users/johnnyapol/followers","following_url":"https://api.github.com/users/johnnyapol/following{/other_user}","gists_url":"https://api.github.com/users/johnnyapol/gists{/gist_id}","starred_url":"https://api.github.com/users/johnnyapol/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/johnnyapol/subscriptions","organizations_url":"https://api.github.com/users/johnnyapol/orgs","repos_url":"https://api.github.com/users/johnnyapol/repos","events_url":"https://api.github.com/users/johnnyapol/events{/privacy}","received_events_url":"https://api.github.com/users/johnnyapol/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":15,"created_at":"2014-08-06T03:31:05Z","updated_at":"2016-01-18T10:57:40Z","closed_at":"2014-08-31T19:43:57Z","author_association":"OWNER","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2209","html_url":"https://github.com/libgdx/libgdx/pull/2209","diff_url":"https://github.com/libgdx/libgdx/pull/2209.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2209.patch"},"body":"## Introduction\n\nThis is a simple UDP library that abstracts as much as possible away from the networking part making the developer's life easier and limiting the requirement of the knowledge in the area. It makes working with UDP a lot like TCP in the sense. This also was designed in mind to limit allocations to conserve memory.\n\nTL;DR This allows an allocation-efficient use of UDP in libGDX and making it very like working with TCP.\n\nNotes: This project has been in on/off development for ~7 months, (mostly off), but I have tested this and my tests have shown this will transfer the data and do what it is supposed to do.\n\nI have modified the build files and I did run a build run on my Windows 8.1 x64 machine and it succeeded\n## Library Features\n- Several utility packages for reading/writing datagrams. These basically mimic the DataInputStream and DataOutputStream classes you can use in TCP. So instead of messing with raw byte buffers in datagrams you can use Packet.writeInt(131);\n- A basic client and server implementation that can be used as a proof-of-concept for data transfer. It was designed to be very simple. This client/server are utility packages that were built for people who can't cope with networking and just want a simple networked game for them and a few others without the hassle. If you want to build an MMO or multiplayer FPS I would recommend that you write your own client and server implementations. \n- For more advanced users it allows you to build your own client and server implementations while giving you allocation-optimized classes to work with datagrams so that you can easily read/write from them. I also have some various socket options that can be configured. I wanted the extension to be able to be customized to others needs without having to do some dirty hacks\n## Final notes\n- Unfortunately at this time GWT will not be supported and is unlikely to in the near future due to lack of java.net support.\n- I will be more than happy to write tests, help users with it, maintain the library, add wiki entries, and handle pull requests/issues relating to the library (But before I do that, I need the :+1:  ;) )\n## Future plans\n- A reliability layer over UDP to handle packet loss\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2209/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2208","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2208/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2208/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2208/events","html_url":"https://github.com/libgdx/libgdx/issues/2208","id":39572761,"number":2208,"title":"Add support linux x86_64 to the gdx-freetype-platform","user":{"login":"kles4enko","id":1761252,"avatar_url":"https://avatars0.githubusercontent.com/u/1761252?v=4","gravatar_id":"","url":"https://api.github.com/users/kles4enko","html_url":"https://github.com/kles4enko","followers_url":"https://api.github.com/users/kles4enko/followers","following_url":"https://api.github.com/users/kles4enko/following{/other_user}","gists_url":"https://api.github.com/users/kles4enko/gists{/gist_id}","starred_url":"https://api.github.com/users/kles4enko/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kles4enko/subscriptions","organizations_url":"https://api.github.com/users/kles4enko/orgs","repos_url":"https://api.github.com/users/kles4enko/repos","events_url":"https://api.github.com/users/kles4enko/events{/privacy}","received_events_url":"https://api.github.com/users/kles4enko/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2014-08-05T22:37:52Z","updated_at":"2014-08-06T06:33:24Z","closed_at":"2014-08-05T23:23:22Z","author_association":"NONE","body":"gdx-freetype-platform do not support x86-64 platforms. \nIf I run project with uses that dependency it will crashed with error like this:\n\n```\nlibgdx-freetype64.so' for target: Linux, 64-bit\n        at com.badlogic.gdx.utils.SharedLibraryLoader.load(SharedLibraryLoader.java:116)\n        at com.badlogic.gdx.graphics.g2d.freetype.FreeType.initFreeType(FreeType.java:541)\n        at com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator.<init>(FreeTypeFontGenerator.java:102)\n        at by.kles4enko.game.core.state.PlayState.init(PlayState.java:45)\n        at by.kles4enko.game.core.state.GameState.<init>(GameState.java:11)\n        at by.kles4enko.game.core.state.PlayState.<init>(PlayState.java:36)\n        at by.kles4enko.game.core.service.GameStateService.setState(GameStateService.java:26)\n        at by.kles4enko.game.core.service.GameStateService.<init>(GameStateService.java:14)\n        at by.kles4enko.game.core.AsteroidsGame.create(AsteroidsGame.java:32)\n        at com.badlogic.gdx.backends.lwjgl.LwjglApplication.mainLoop(LwjglApplication.java:136)\n        at com.badlogic.gdx.backends.lwjgl.LwjglApplication$1.run(LwjglApplication.java:114)\nCaused by: com.badlogic.gdx.utils.GdxRuntimeException: Unable to read file for extraction: libgdx-freetype64.so\n        at com.badlogic.gdx.utils.SharedLibraryLoader.readFile(SharedLibraryLoader.java:125)\n        at com.badlogic.gdx.utils.SharedLibraryLoader.loadFile(SharedLibraryLoader.java:255)\n        at com.badlogic.gdx.utils.SharedLibraryLoader.load(SharedLibraryLoader.java:114)\n        ... 10 more\nkles4enko@ii8-laptop:~/Workspaces/GameDev/libgdx-ast\n```\n\nmaster pom like this:\n\n```\n <properties>\n        <android.version>4.1.1.4</android.version>\n        <android.maven.version>3.8.1</android.maven.version>\n        <gwt.version>2.6.0</gwt.version>\n        <gwt.maven.version>2.6.0</gwt.maven.version>\n        <gdx.platform.version>1.2.0</gdx.platform.version>\n    </properties>\n    <dependencyManagement>\n        <dependencies>\n            <!-- core dependencies -->\n            <dependency>\n                <groupId>com.badlogicgames.gdx</groupId>\n                <artifactId>gdx</artifactId>\n                <version>${gdx.platform.version}</version>\n            </dependency>\n\n            <!-- desktop-specific dependencies -->\n            <dependency>\n                <groupId>com.badlogicgames.gdx</groupId>\n                <artifactId>gdx-backend-lwjgl</artifactId>\n                <version>${gdx.platform.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.badlogicgames.gdx</groupId>\n                <artifactId>gdx-platform</artifactId>\n                <version>${gdx.platform.version}</version>\n                <classifier>natives-desktop</classifier>\n            </dependency>\n\n            <dependency>\n                <groupId>com.badlogicgames.gdx</groupId>\n                <artifactId>gdx-freetype</artifactId>\n                <version>${gdx.platform.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.badlogicgames.gdx</groupId>\n                <artifactId>gdx-freetype-platform</artifactId>\n                <version>${gdx.platform.version}</version>\n            </dependency>\n\n\n            <dependency>\n                <groupId>com.badlogicgames.gdx</groupId>\n                <artifactId>gdx-platform</artifactId>\n                <version>${gdx.platform.version}</version>\n                <classifier>natives-armeabi-v7a</classifier>\n                <scope>provided</scope>\n            </dependency>\n        </dependencies>\n    </dependencyManagement>\n```\n\nThanks\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2208/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2207","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2207/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2207/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2207/events","html_url":"https://github.com/libgdx/libgdx/issues/2207","id":39559669,"number":2207,"title":"Unexpected JSON Serialization of long Number Strings","user":{"login":"kutoman","id":5825645,"avatar_url":"https://avatars3.githubusercontent.com/u/5825645?v=4","gravatar_id":"","url":"https://api.github.com/users/kutoman","html_url":"https://github.com/kutoman","followers_url":"https://api.github.com/users/kutoman/followers","following_url":"https://api.github.com/users/kutoman/following{/other_user}","gists_url":"https://api.github.com/users/kutoman/gists{/gist_id}","starred_url":"https://api.github.com/users/kutoman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kutoman/subscriptions","organizations_url":"https://api.github.com/users/kutoman/orgs","repos_url":"https://api.github.com/users/kutoman/repos","events_url":"https://api.github.com/users/kutoman/events{/privacy}","received_events_url":"https://api.github.com/users/kutoman/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-08-05T20:08:07Z","updated_at":"2014-08-05T20:53:47Z","closed_at":"2014-08-05T20:53:47Z","author_association":"NONE","body":"Hi,\nI had to notice that long number Strings are malformed when they are retrieved from JSON Strings since they are treated as numbers. I don't know a real workaround for this because I do need to keep such numbers as Strings as they are IDs which also may contain letters.\nAs the following test shows:\n\npublic class TestJson {\n\n```\n@Test\npublic void longNumberString() {\n    DummyContainer c1 = new DummyContainer();\n    c1.str = \"450664875374410013\";\n\n    Json json = new Json();\n\n    String jsonStr = json.toJson(c1);\n\n    DummyContainer c2 = json.fromJson(DummyContainer.class, jsonStr);\n\n    assertThat(c2.str, equalTo(c1.str));\n    //=> java.lang.AssertionError: Expected: \"450664875374410013\" but: was \"4.50664871E17\"\n\n\n}\n\nprivate static class DummyContainer {\n    String str;\n}\n```\n\n}\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2207/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2206","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2206/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2206/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2206/events","html_url":"https://github.com/libgdx/libgdx/pull/2206","id":39533150,"number":2206,"title":"Reuse heap and off-heap buffers when looping .ogg stream.","user":{"login":"code-disaster","id":4644167,"avatar_url":"https://avatars1.githubusercontent.com/u/4644167?v=4","gravatar_id":"","url":"https://api.github.com/users/code-disaster","html_url":"https://github.com/code-disaster","followers_url":"https://api.github.com/users/code-disaster/followers","following_url":"https://api.github.com/users/code-disaster/following{/other_user}","gists_url":"https://api.github.com/users/code-disaster/gists{/gist_id}","starred_url":"https://api.github.com/users/code-disaster/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/code-disaster/subscriptions","organizations_url":"https://api.github.com/users/code-disaster/orgs","repos_url":"https://api.github.com/users/code-disaster/repos","events_url":"https://api.github.com/users/code-disaster/events{/privacy}","received_events_url":"https://api.github.com/users/code-disaster/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-08-05T15:51:08Z","updated_at":"2014-10-10T09:50:46Z","closed_at":"2014-08-06T08:13:30Z","author_association":"MEMBER","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2206","html_url":"https://github.com/libgdx/libgdx/pull/2206","diff_url":"https://github.com/libgdx/libgdx/pull/2206.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2206.patch"},"body":"Hi, \n\nin my crusade against all things heap & off-heap I noticed that each OggInputStream instance creates - amongst other things - a 2 MB off-heap buffer, even in case the music is just looping.\n\nI'm not yet convinced that we aren't doing something wrong application-side (dangling references somewhere), but it looks like this memory isn't regained soon after. In my brief test with a short looping .ogg, the game's memory consumption did raise pretty much linearly.\n\nAnyway, the PR just adds some code to reuse the buffers of the previous instance when the stream starts over. I didn't dare to do a more aggressive change, like reusing the whole OggInputStream instance. The largest memory consumption I'm now tracking is inside Jorbis - a can of worms I don't want to open right now. :)\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2206/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}}],"meta":{"x-ratelimit-limit":"5000","x-ratelimit-remaining":"4909","x-ratelimit-reset":"1506844633","x-github-request-id":"B1C4:028A:1ABB87B:2ED88FC:59D095FB","x-github-media-type":"github.squirrel-girl-preview","link":"<https://api.github.com/repositories/5373551/issues?state=all&page=91>; rel=\"next\", <https://api.github.com/repositories/5373551/issues?state=all&page=164>; rel=\"last\", <https://api.github.com/repositories/5373551/issues?state=all&page=1>; rel=\"first\", <https://api.github.com/repositories/5373551/issues?state=all&page=89>; rel=\"prev\"","etag":"\"31e7a918995892697471e161aedf30a9\"","status":"200 OK"}}
