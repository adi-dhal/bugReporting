{"data":[{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3258","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3258/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3258/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3258/events","html_url":"https://github.com/libgdx/libgdx/issues/3258","id":93142640,"number":3258,"title":"add no-arg constructor for VertexAttribute _or_ make the class non-final.","user":{"login":"FyiurAmron","id":11016998,"avatar_url":"https://avatars1.githubusercontent.com/u/11016998?v=4","gravatar_id":"","url":"https://api.github.com/users/FyiurAmron","html_url":"https://github.com/FyiurAmron","followers_url":"https://api.github.com/users/FyiurAmron/followers","following_url":"https://api.github.com/users/FyiurAmron/following{/other_user}","gists_url":"https://api.github.com/users/FyiurAmron/gists{/gist_id}","starred_url":"https://api.github.com/users/FyiurAmron/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/FyiurAmron/subscriptions","organizations_url":"https://api.github.com/users/FyiurAmron/orgs","repos_url":"https://api.github.com/users/FyiurAmron/repos","events_url":"https://api.github.com/users/FyiurAmron/events{/privacy}","received_events_url":"https://api.github.com/users/FyiurAmron/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":14,"created_at":"2015-07-05T20:07:49Z","updated_at":"2015-07-05T20:57:48Z","closed_at":"2015-07-05T20:31:51Z","author_association":"CONTRIBUTOR","body":"VertexAttribute is currently little more than a POJO with a couple of static utility methods, yet it can't be deserialized because it misses a no-arg constructor, and it's impossible to provide one by derivation since the class is final. I am aware that the no-arg would be useless without reflective change of usageIndex, but that's not a problem for deserialization, while lack of no-arg obviously is.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3258/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3257","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3257/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3257/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3257/events","html_url":"https://github.com/libgdx/libgdx/pull/3257","id":93079867,"number":3257,"title":"Make all worker threads daemon, so they can't prevent termination","user":{"login":"antag99","id":7714919,"avatar_url":"https://avatars3.githubusercontent.com/u/7714919?v=4","gravatar_id":"","url":"https://api.github.com/users/antag99","html_url":"https://github.com/antag99","followers_url":"https://api.github.com/users/antag99/followers","following_url":"https://api.github.com/users/antag99/following{/other_user}","gists_url":"https://api.github.com/users/antag99/gists{/gist_id}","starred_url":"https://api.github.com/users/antag99/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/antag99/subscriptions","organizations_url":"https://api.github.com/users/antag99/orgs","repos_url":"https://api.github.com/users/antag99/repos","events_url":"https://api.github.com/users/antag99/events{/privacy}","received_events_url":"https://api.github.com/users/antag99/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2015-07-05T05:35:05Z","updated_at":"2015-07-05T18:24:58Z","closed_at":"2015-07-05T18:15:43Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3257","html_url":"https://github.com/libgdx/libgdx/pull/3257","diff_url":"https://github.com/libgdx/libgdx/pull/3257.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3257.patch"},"body":"This pull request makes all worker threads daemon, so they can't prevent termination of the application if the main thread unexpectedly exits. Fixes #3240, fixes #3226.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3257/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3256","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3256/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3256/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3256/events","html_url":"https://github.com/libgdx/libgdx/issues/3256","id":92998041,"number":3256,"title":"Music loop stops after a while","user":{"login":"utgarda","id":15115,"avatar_url":"https://avatars0.githubusercontent.com/u/15115?v=4","gravatar_id":"","url":"https://api.github.com/users/utgarda","html_url":"https://github.com/utgarda","followers_url":"https://api.github.com/users/utgarda/followers","following_url":"https://api.github.com/users/utgarda/following{/other_user}","gists_url":"https://api.github.com/users/utgarda/gists{/gist_id}","starred_url":"https://api.github.com/users/utgarda/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/utgarda/subscriptions","organizations_url":"https://api.github.com/users/utgarda/orgs","repos_url":"https://api.github.com/users/utgarda/repos","events_url":"https://api.github.com/users/utgarda/events{/privacy}","received_events_url":"https://api.github.com/users/utgarda/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2015-07-04T10:04:10Z","updated_at":"2015-09-27T17:06:33Z","closed_at":"2015-09-27T17:06:33Z","author_association":"NONE","body":"Background music loop starts ok and eventually stops after a minute or so, without provocation. Doesn't depend on playing any sfx sounds over it - same thing even if it's the only sound played at all.\n\n``` java\n    Music music = Assets.getMusic(bgMusicName)\n    music.setLooping(true)\n    music.play()\n```\n\n```\nD/audio_hw_primary(  189): out_set_parameters: enter: usecase(0: deep-buffer-playback) kvpairs: routing=2\nI/NuPlayerDecoder(  189): [OMX.google.vorbis.decoder] resubmitting CSD\nW/SoftVorbis(  189): vorbis_dsp_synthesis returned -135\nI/NuPlayerDecoder(  189): [OMX.google.vorbis.decoder] resubmitting CSD\nW/SoftVorbis(  189): vorbis_dsp_synthesis returned -135\nI/AudioFlinger(  189): BUFFER TIMEOUT: remove(4096) from active list on thread 0xb5a96000\nD/audio_hw_primary(  189): disable_audio_route: reset and update mixer path: deep-buffer-playback\nD/audio_hw_primary(  189): disable_snd_device: snd_device(2: speaker)\n```\n\nAndroid 5.1.1, LG Nexus 5, LibGDX v1.6.3 , but same on other versions and devices.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3256/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3255","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3255/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3255/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3255/events","html_url":"https://github.com/libgdx/libgdx/issues/3255","id":92884782,"number":3255,"title":"add support for URL-safe base64 encoding","user":{"login":"FyiurAmron","id":11016998,"avatar_url":"https://avatars1.githubusercontent.com/u/11016998?v=4","gravatar_id":"","url":"https://api.github.com/users/FyiurAmron","html_url":"https://github.com/FyiurAmron","followers_url":"https://api.github.com/users/FyiurAmron/followers","following_url":"https://api.github.com/users/FyiurAmron/following{/other_user}","gists_url":"https://api.github.com/users/FyiurAmron/gists{/gist_id}","starred_url":"https://api.github.com/users/FyiurAmron/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/FyiurAmron/subscriptions","organizations_url":"https://api.github.com/users/FyiurAmron/orgs","repos_url":"https://api.github.com/users/FyiurAmron/repos","events_url":"https://api.github.com/users/FyiurAmron/events{/privacy}","received_events_url":"https://api.github.com/users/FyiurAmron/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2015-07-03T14:20:08Z","updated_at":"2015-08-18T18:33:00Z","closed_at":"2015-08-18T18:33:00Z","author_association":"CONTRIBUTOR","body":"Similarily to https://docs.oracle.com/javase/8/docs/api/java/util/Base64.html , libGDX's base64 encoder should provide a way to encode with URL-safe (Table 2 of RFC 4648) charset. The change to existing code would be essentially trivial (e.g. adding another map with two last entries changed from `+`/`/` to `-`/`_` in https://github.com/libgdx/libgdx/blob/master/gdx/src/com/badlogic/gdx/utils/Base64Coder.java#L45 and providing a method to allow using those different maps here). Possibly allowing selecting other index 63/64 chars, because custom values are often needed, as shown in https://en.wikipedia.org/wiki/Base64#Implementations_and_history, would be great.\n\nI can do a PR with my code implementing those changes, if anyone's interested.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3255/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3254","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3254/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3254/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3254/events","html_url":"https://github.com/libgdx/libgdx/issues/3254","id":92702608,"number":3254,"title":"GlyphLayout with Align.center should respect BitmapFont.usesIntegerPositions()","user":{"login":"dan-fitzgerald-av","id":3443800,"avatar_url":"https://avatars0.githubusercontent.com/u/3443800?v=4","gravatar_id":"","url":"https://api.github.com/users/dan-fitzgerald-av","html_url":"https://github.com/dan-fitzgerald-av","followers_url":"https://api.github.com/users/dan-fitzgerald-av/followers","following_url":"https://api.github.com/users/dan-fitzgerald-av/following{/other_user}","gists_url":"https://api.github.com/users/dan-fitzgerald-av/gists{/gist_id}","starred_url":"https://api.github.com/users/dan-fitzgerald-av/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dan-fitzgerald-av/subscriptions","organizations_url":"https://api.github.com/users/dan-fitzgerald-av/orgs","repos_url":"https://api.github.com/users/dan-fitzgerald-av/repos","events_url":"https://api.github.com/users/dan-fitzgerald-av/events{/privacy}","received_events_url":"https://api.github.com/users/dan-fitzgerald-av/received_events","type":"User","site_admin":false},"labels":[{"id":172870364,"url":"https://api.github.com/repos/libgdx/libgdx/labels/need%20more%20info","name":"need more info","color":"bfdadc","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2015-07-02T18:32:46Z","updated_at":"2017-01-16T14:43:38Z","closed_at":"2015-07-05T18:18:08Z","author_association":"NONE","body":"I'm running into an issue with nearest-neighbor filtered BitmapFonts with integer positioning, center alignment, and multi-line wrapping:\n![java 2015-07-02 13-17-35-49](https://cloud.githubusercontent.com/assets/3443800/8484609/301b3abe-20be-11e5-83eb-05185cdc83e4.png)\n![java 2015-07-02 13-17-41-73](https://cloud.githubusercontent.com/assets/3443800/8484610/3185bffa-20be-11e5-8f59-ac2e20f0fbdb.png)\n\nI think it could be solved around lines 210 and 218 of GlyphLayout (looking at 1.6.3) by rounding the `shift` variable in both places if `font.usesIntegerPositions()` is true. Not sure, though!\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3254/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3253","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3253/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3253/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3253/events","html_url":"https://github.com/libgdx/libgdx/issues/3253","id":92698822,"number":3253,"title":"update OpenAL to OpenAL Soft 1.16.0","user":{"login":"FyiurAmron","id":11016998,"avatar_url":"https://avatars1.githubusercontent.com/u/11016998?v=4","gravatar_id":"","url":"https://api.github.com/users/FyiurAmron","html_url":"https://github.com/FyiurAmron","followers_url":"https://api.github.com/users/FyiurAmron/followers","following_url":"https://api.github.com/users/FyiurAmron/following{/other_user}","gists_url":"https://api.github.com/users/FyiurAmron/gists{/gist_id}","starred_url":"https://api.github.com/users/FyiurAmron/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/FyiurAmron/subscriptions","organizations_url":"https://api.github.com/users/FyiurAmron/orgs","repos_url":"https://api.github.com/users/FyiurAmron/repos","events_url":"https://api.github.com/users/FyiurAmron/events{/privacy}","received_events_url":"https://api.github.com/users/FyiurAmron/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2015-07-02T18:10:59Z","updated_at":"2015-07-05T19:33:48Z","closed_at":"2015-07-05T19:33:48Z","author_association":"CONTRIBUTOR","body":"Since 1.16.0 has been around for about a year already (http://kcat.strangesoft.net/openal-releases/), I think it can be considered pretty stable. Is there a chance of updating the 1.15.1 DLLs to the newest ones? (I've also filed this on https://github.com/LWJGL/lwjgl/issues/117, yet the DLLs can be updated out-of-the-box without any LWJGL hassle by just renaming the 32/64-bit binaries got from the official http://kcat.strangesoft.net/openal-soft-1.16.0-bin.zip link)\n\nnote: you may try latest \"nightlies\" from http://repo.or.cz/w/openal-soft.git/ if you're feeling adventurous; they patch quite a lot of things vs 1.16.0; I think that (well, if preceded with some testing with some reference libGDX apps) using those shouldn't bring more trouble with OpenAL than we already have. Anyway, I have a hunch that 1.16.1 or 1.17 ain't that far away anyway.\n\nAs a side note: what's our status on LWJGL 3? AFAIK, it's 100% completed & stable, and it integrates newest OpenAL-Soft out-of-the-box.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3253/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3252","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3252/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3252/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3252/events","html_url":"https://github.com/libgdx/libgdx/issues/3252","id":92662324,"number":3252,"title":"OpenAL startup crash (Windows XP related?)","user":{"login":"ChetRippo","id":1483832,"avatar_url":"https://avatars3.githubusercontent.com/u/1483832?v=4","gravatar_id":"","url":"https://api.github.com/users/ChetRippo","html_url":"https://github.com/ChetRippo","followers_url":"https://api.github.com/users/ChetRippo/followers","following_url":"https://api.github.com/users/ChetRippo/following{/other_user}","gists_url":"https://api.github.com/users/ChetRippo/gists{/gist_id}","starred_url":"https://api.github.com/users/ChetRippo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ChetRippo/subscriptions","organizations_url":"https://api.github.com/users/ChetRippo/orgs","repos_url":"https://api.github.com/users/ChetRippo/repos","events_url":"https://api.github.com/users/ChetRippo/events{/privacy}","received_events_url":"https://api.github.com/users/ChetRippo/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2015-07-02T15:14:54Z","updated_at":"2015-08-18T18:37:41Z","closed_at":"2015-08-18T18:37:41Z","author_association":"CONTRIBUTOR","body":"I have a Windows XP user reporting a crash when opening my game. Their log says this:\n\n EXCEPTION_ACCESS_VIOLATION (0xc0000005) at pc=0x1f27de7a, pid=1572, tid=2580\n\n JRE version: 7.0_15-b03\n Java VM: Java HotSpot(TM) Client VM (23.7-b01 mixed mode windows-x86 )\n Problematic frame:\n C [OpenAL32.dll+0xde7a] alProcessUpdatesSOFT+0x122f\n\n Failed to write core dump. Minidumps are not enabled by default on client versions of Windows\n\nDoes LibGDX officially support this version of Windows?\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3252/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3251","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3251/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3251/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3251/events","html_url":"https://github.com/libgdx/libgdx/pull/3251","id":92478451,"number":3251,"title":"gdx-setup: Updated libgdx-utils 3rd party extension (again)","user":{"login":"dermetfan","id":4956158,"avatar_url":"https://avatars1.githubusercontent.com/u/4956158?v=4","gravatar_id":"","url":"https://api.github.com/users/dermetfan","html_url":"https://github.com/dermetfan","followers_url":"https://api.github.com/users/dermetfan/followers","following_url":"https://api.github.com/users/dermetfan/following{/other_user}","gists_url":"https://api.github.com/users/dermetfan/gists{/gist_id}","starred_url":"https://api.github.com/users/dermetfan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dermetfan/subscriptions","organizations_url":"https://api.github.com/users/dermetfan/orgs","repos_url":"https://api.github.com/users/dermetfan/repos","events_url":"https://api.github.com/users/dermetfan/events{/privacy}","received_events_url":"https://api.github.com/users/dermetfan/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2015-07-01T20:28:12Z","updated_at":"2015-07-01T21:10:36Z","closed_at":"2015-07-01T21:04:01Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3251","html_url":"https://github.com/libgdx/libgdx/pull/3251","diff_url":"https://github.com/libgdx/libgdx/pull/3251.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3251.patch"},"body":"Sorry, the version you just merged didn't work with HTML5. This release is just a fix.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3251/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3250","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3250/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3250/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3250/events","html_url":"https://github.com/libgdx/libgdx/issues/3250","id":92420228,"number":3250,"title":"Matrix4#getRotation() is calculating incorrect rotation for one particular matrix","user":{"login":"vinaysshenoy","id":1978065,"avatar_url":"https://avatars0.githubusercontent.com/u/1978065?v=4","gravatar_id":"","url":"https://api.github.com/users/vinaysshenoy","html_url":"https://github.com/vinaysshenoy","followers_url":"https://api.github.com/users/vinaysshenoy/followers","following_url":"https://api.github.com/users/vinaysshenoy/following{/other_user}","gists_url":"https://api.github.com/users/vinaysshenoy/gists{/gist_id}","starred_url":"https://api.github.com/users/vinaysshenoy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vinaysshenoy/subscriptions","organizations_url":"https://api.github.com/users/vinaysshenoy/orgs","repos_url":"https://api.github.com/users/vinaysshenoy/repos","events_url":"https://api.github.com/users/vinaysshenoy/events{/privacy}","received_events_url":"https://api.github.com/users/vinaysshenoy/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2015-07-01T15:58:16Z","updated_at":"2015-07-02T08:36:57Z","closed_at":"2015-07-02T08:11:27Z","author_association":"NONE","body":"We use a custom model format(extracted from a collada version of the asset) where the node transforms (translation, rotation and scale) are saved as a single 4x4 matrix in row major order(similar to collada). We have written a custom model loader that parses this out into models.\n\nWe use a `Matrix4` to extract the individual components out and set it to the model, like so.\n\n``` java\n            Matrix4 nodeMatrixCache = new Matrix4();\n\n            //Convert to column order. node.matrix.matrix is a float array of size 16\n            nodeMatrixCache.set(node.matrix.matrix).tra();\n\n            final Vector3 translation = new Vector3();\n            final Vector3 scale = new Vector3();\n            final Quaternion rotation = new Quaternion();\n\n            nodeMatrixCache.getRotation(rotation, true);\n            nodeMatrixCache.getTranslation(translation);\n            nodeMatrixCache.getScale(scale);\n\n            modelNode.rotation = rotation;\n            modelNode.scale = scale;\n            modelNode.translation = translation;\n```\n\nWe are using the exact same code for multiple assets, and all are loading perfectly fine, except for one. The matrix is `[-0.003857 -2.209997 0.000000 0.000000  0.000000 0.000000 2.210000 0.012000  -2.209997 0.003858 0.000000 0.000000  0.000000 0.000000 0.000000 1.000000]` (in row-major order). \n\nThis one particular asset gives a rotation of `[-0.49956352 0.22691926 0.5004361 0.49956352]` when we extract the rotation.\n\nHowever, if we convert the collada to G3DJ, the rotation that we see in the node is `[-0.499563 0.500436 0.500436 0.499563]`. Index 1 of the rotation matrix has a drastically different value, and it's screwing up the model's rotation when it appears.\n\nAny idea what the problem could be?\n\nP.S: The reason we are not using G3DB is because we need to stream the assets from the network, so we have a custom format that is much smaller than G3DB.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3250/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3249","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3249/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3249/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3249/events","html_url":"https://github.com/libgdx/libgdx/issues/3249","id":92348100,"number":3249,"title":"[v1.6.3] Crash sometimes with textField.setText(\"\")","user":{"login":"omicroh","id":1964289,"avatar_url":"https://avatars0.githubusercontent.com/u/1964289?v=4","gravatar_id":"","url":"https://api.github.com/users/omicroh","html_url":"https://github.com/omicroh","followers_url":"https://api.github.com/users/omicroh/followers","following_url":"https://api.github.com/users/omicroh/following{/other_user}","gists_url":"https://api.github.com/users/omicroh/gists{/gist_id}","starred_url":"https://api.github.com/users/omicroh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/omicroh/subscriptions","organizations_url":"https://api.github.com/users/omicroh/orgs","repos_url":"https://api.github.com/users/omicroh/repos","events_url":"https://api.github.com/users/omicroh/events{/privacy}","received_events_url":"https://api.github.com/users/omicroh/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2015-07-01T10:51:32Z","updated_at":"2015-09-01T07:12:21Z","closed_at":"2015-07-01T12:19:57Z","author_association":"NONE","body":"Hi there!\n\nI use a chat in my online game. When we put a message in the chat, the textfield empties with textField.setText(\"\") but sometimes it crashs.\n\nHere is the error :\n\njava.lang.IndexOutOfBoundsException: index can't be >= size: 1 >= 0\n09:38  INFO: [kryonet] Connection 1 disconnected.   at com.badlogic.gdx.utils.Array.get(Array.java:127)\n    at com.badlogic.gdx.graphics.g2d.GlyphLayout.setText(GlyphLayout.java:197)\n    at com.badlogic.gdx.graphics.g2d.GlyphLayout.setText(GlyphLayout.java:63)\n    at com.badlogic.gdx.scenes.scene2d.ui.TextField.updateDisplayText(TextField.java:377)\n    at com.badlogic.gdx.scenes.scene2d.ui.TextField.paste(TextField.java:446)\n    at com.badlogic.gdx.scenes.scene2d.ui.TextField.setText(TextField.java:564)\n    at com.mygdx.Game.Chat.Chat.emptyTextField(Chat.java:491)\n    at com.mygdx.Game.KeyListener.listen(KeyListener.java:35)\n    at com.mygdx.Screens.GameScreen.render(GameScreen.java:255)\n    at com.badlogic.gdx.Game.render(Game.java:46)\n    at com.badlogic.gdx.backends.lwjgl.LwjglApplication.mainLoop(LwjglApplication.java:215)\n    at com.badlogic.gdx.backends.lwjgl.LwjglApplication$1.run(LwjglApplication.java:120)\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3249/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3248","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3248/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3248/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3248/events","html_url":"https://github.com/libgdx/libgdx/pull/3248","id":92302276,"number":3248,"title":"Font rendering problem in Label","user":{"login":"anserran","id":1515738,"avatar_url":"https://avatars1.githubusercontent.com/u/1515738?v=4","gravatar_id":"","url":"https://api.github.com/users/anserran","html_url":"https://github.com/anserran","followers_url":"https://api.github.com/users/anserran/followers","following_url":"https://api.github.com/users/anserran/following{/other_user}","gists_url":"https://api.github.com/users/anserran/gists{/gist_id}","starred_url":"https://api.github.com/users/anserran/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/anserran/subscriptions","organizations_url":"https://api.github.com/users/anserran/orgs","repos_url":"https://api.github.com/users/anserran/repos","events_url":"https://api.github.com/users/anserran/events{/privacy}","received_events_url":"https://api.github.com/users/anserran/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2015-07-01T07:37:29Z","updated_at":"2015-07-02T08:32:33Z","closed_at":"2015-07-02T08:32:33Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3248","html_url":"https://github.com/libgdx/libgdx/pull/3248","diff_url":"https://github.com/libgdx/libgdx/pull/3248.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3248.patch"},"body":"When a Label has its text vertically aligned in the center and the difference between the label height and text height is an uneven number, the text is displaced by X.5, which provokes the same effect in the font rendering produced when the label's position is not an integer.\n\n![Problem](http://i.imgur.com/Hc9VxkV.png)\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3248/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3247","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3247/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3247/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3247/events","html_url":"https://github.com/libgdx/libgdx/pull/3247","id":92296079,"number":3247,"title":"Json.readValue() ignores default value","user":{"login":"anserran","id":1515738,"avatar_url":"https://avatars1.githubusercontent.com/u/1515738?v=4","gravatar_id":"","url":"https://api.github.com/users/anserran","html_url":"https://github.com/anserran","followers_url":"https://api.github.com/users/anserran/followers","following_url":"https://api.github.com/users/anserran/following{/other_user}","gists_url":"https://api.github.com/users/anserran/gists{/gist_id}","starred_url":"https://api.github.com/users/anserran/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/anserran/subscriptions","organizations_url":"https://api.github.com/users/anserran/orgs","repos_url":"https://api.github.com/users/anserran/repos","events_url":"https://api.github.com/users/anserran/events{/privacy}","received_events_url":"https://api.github.com/users/anserran/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2015-07-01T07:10:52Z","updated_at":"2015-07-03T16:29:54Z","closed_at":"2015-07-03T16:29:54Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3247","html_url":"https://github.com/libgdx/libgdx/pull/3247","diff_url":"https://github.com/libgdx/libgdx/pull/3247.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3247.patch"},"body":"","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3247/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3246","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3246/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3246/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3246/events","html_url":"https://github.com/libgdx/libgdx/pull/3246","id":92248799,"number":3246,"title":"gdx-setup: Updated libgdx-utils 3rd party extension","user":{"login":"dermetfan","id":4956158,"avatar_url":"https://avatars1.githubusercontent.com/u/4956158?v=4","gravatar_id":"","url":"https://api.github.com/users/dermetfan","html_url":"https://github.com/dermetfan","followers_url":"https://api.github.com/users/dermetfan/followers","following_url":"https://api.github.com/users/dermetfan/following{/other_user}","gists_url":"https://api.github.com/users/dermetfan/gists{/gist_id}","starred_url":"https://api.github.com/users/dermetfan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dermetfan/subscriptions","organizations_url":"https://api.github.com/users/dermetfan/orgs","repos_url":"https://api.github.com/users/dermetfan/repos","events_url":"https://api.github.com/users/dermetfan/events{/privacy}","received_events_url":"https://api.github.com/users/dermetfan/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2015-07-01T02:31:05Z","updated_at":"2015-07-01T21:11:04Z","closed_at":"2015-07-01T13:36:17Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3246","html_url":"https://github.com/libgdx/libgdx/pull/3246","diff_url":"https://github.com/libgdx/libgdx/pull/3246.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3246.patch"},"body":"not much to say about this\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3246/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3245","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3245/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3245/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3245/events","html_url":"https://github.com/libgdx/libgdx/issues/3245","id":92215547,"number":3245,"title":"FrameBuffer.getColorTexture() not work on desktop ","user":{"login":"d954mas","id":2655263,"avatar_url":"https://avatars2.githubusercontent.com/u/2655263?v=4","gravatar_id":"","url":"https://api.github.com/users/d954mas","html_url":"https://github.com/d954mas","followers_url":"https://api.github.com/users/d954mas/followers","following_url":"https://api.github.com/users/d954mas/following{/other_user}","gists_url":"https://api.github.com/users/d954mas/gists{/gist_id}","starred_url":"https://api.github.com/users/d954mas/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/d954mas/subscriptions","organizations_url":"https://api.github.com/users/d954mas/orgs","repos_url":"https://api.github.com/users/d954mas/repos","events_url":"https://api.github.com/users/d954mas/events{/privacy}","received_events_url":"https://api.github.com/users/d954mas/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2015-06-30T22:29:21Z","updated_at":"2015-07-01T10:33:31Z","closed_at":"2015-07-01T10:33:31Z","author_association":"NONE","body":"fboA.getColorBufferTexture() -not work on desktop after libgdx 1.6.2\n\nException in thread \"LWJGL Application\" com.badlogic.gdx.utils.GdxRuntimeException: java.lang.NoSuchMethodError: com.badlogic.gdx.graphics.glutils.FrameBuffer.getColorBufferTexture()Lcom/badlogic/gdx/graphics/GLTexture;\n    at com.badlogic.gdx.backends.lwjgl.LwjglApplication$1.run(LwjglApplication.java:127)\n\nCaused by: java.lang.NoSuchMethodError: com.badlogic.gdx.graphics.glutils.FrameBuffer.getColorBufferTexture()Lcom/badlogic/gdx/graphics/GLTexture;\n\nOS: Debian 8\nVGA: Intel HD Graphics 4600 \nOpenGL 3.0\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3245/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3244","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3244/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3244/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3244/events","html_url":"https://github.com/libgdx/libgdx/issues/3244","id":92029887,"number":3244,"title":"Increase source level in gdx-setup","user":{"login":"nooone","id":5896510,"avatar_url":"https://avatars3.githubusercontent.com/u/5896510?v=4","gravatar_id":"","url":"https://api.github.com/users/nooone","html_url":"https://github.com/nooone","followers_url":"https://api.github.com/users/nooone/followers","following_url":"https://api.github.com/users/nooone/following{/other_user}","gists_url":"https://api.github.com/users/nooone/gists{/gist_id}","starred_url":"https://api.github.com/users/nooone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nooone/subscriptions","organizations_url":"https://api.github.com/users/nooone/orgs","repos_url":"https://api.github.com/users/nooone/repos","events_url":"https://api.github.com/users/nooone/events{/privacy}","received_events_url":"https://api.github.com/users/nooone/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2015-06-30T08:55:27Z","updated_at":"2015-08-19T09:34:45Z","closed_at":"2015-08-19T09:34:45Z","author_association":"CONTRIBUTOR","body":"AFAIK the android build tools, as well as GWT support Java 7 these days. A project generated by gdx-setup is still set to 1.6 though. For example [here](https://github.com/libgdx/libgdx/blob/master/extensions/gdx-setup/src/com/badlogic/gdx/setup/resources/android/build.gradle#L76).\n\nIMHO it should be safe to set it to 1.7. @MobiDevelop says that he already works with 1.7 for a while and didn't run into problems.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3244/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3243","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3243/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3243/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3243/events","html_url":"https://github.com/libgdx/libgdx/issues/3243","id":91910038,"number":3243,"title":"[HTML/GWT Backend] HttpRequest doesn't return any response headers","user":{"login":"JFixby","id":1580663,"avatar_url":"https://avatars0.githubusercontent.com/u/1580663?v=4","gravatar_id":"","url":"https://api.github.com/users/JFixby","html_url":"https://github.com/JFixby","followers_url":"https://api.github.com/users/JFixby/followers","following_url":"https://api.github.com/users/JFixby/following{/other_user}","gists_url":"https://api.github.com/users/JFixby/gists{/gist_id}","starred_url":"https://api.github.com/users/JFixby/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JFixby/subscriptions","organizations_url":"https://api.github.com/users/JFixby/orgs","repos_url":"https://api.github.com/users/JFixby/repos","events_url":"https://api.github.com/users/JFixby/events{/privacy}","received_events_url":"https://api.github.com/users/JFixby/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2015-06-29T21:07:17Z","updated_at":"2015-07-07T17:54:21Z","closed_at":"2015-07-07T17:54:21Z","author_association":"CONTRIBUTOR","body":"Example code with a simple default-formatted HttpRequest:\n\n```\npublic class HttpRequestTest extends ApplicationAdapter {\n\n    @Override\n    public void create() {\n        go();\n    }\n\n    public static void go() {\n        Gdx.app.setLogLevel(Application.LOG_DEBUG);\n\n        com.badlogic.gdx.Net.HttpRequest gdx_request = new com.badlogic.gdx.Net.HttpRequest();\n\n        gdx_request.setUrl(\"http://localhost:31676/entry-point\");\n        gdx_request.setMethod(\"GET\");\n\n        HttpResponseListener httpResponseListener = new com.badlogic.gdx.Net.HttpResponseListener() {\n\n            @Override\n            public void handleHttpResponse(\n                    com.badlogic.gdx.Net.HttpResponse httpResponse) {\n                com.badlogic.gdx.net.HttpStatus status = httpResponse\n                        .getStatus();\n                log(\"status\", status);\n                int statusCode = status.getStatusCode();\n                log(\"statusCode\", statusCode);\n\n                log(\"httpResponse\", httpResponse);\n\n                java.util.Map<String, java.util.List<String>> gdx_result_headers = httpResponse\n                        .getHeaders();\n\n                log(\"gdx_result_headers\", gdx_result_headers);\n\n                log(\"headers.size\", gdx_result_headers.size());\n\n                for (Iterator<String> i = gdx_result_headers.keySet()\n                        .iterator(); i.hasNext();) {\n                    String key = i.next();\n                    java.util.List<String> values = gdx_result_headers.get(key);\n                    log(\" \" + i, values);\n                }\n\n                exit();\n            }\n\n            @Override\n            public void failed(Throwable t) {\n                log(\"failed\", t);\n                t.printStackTrace();\n                exit();\n            }\n\n            @Override\n            public void cancelled() {\n                log(\"cancelled\");\n                exit();\n            }\n\n        };\n        Gdx.net.sendHttpRequest(gdx_request, httpResponseListener);\n\n    }\n\n    public static void log(String string) {\n        Gdx.app.error(\"G\", string + \"\");\n    }\n\n    public static void log(String name, Object value) {\n        Gdx.app.error(\"G\", name + \" > \" + value);\n    }\n\n    private static void exit() {\n        System.exit(0);\n    }\n\n}\n```\n\nWeb server successfully process the request.\n\nNo errors reported in browser/gwt console:\n![gwt-console](https://cloud.githubusercontent.com/assets/1580663/8418330/b35ce3fe-1eb2-11e5-9af7-44dad1c68d97.jpg)\n\nExpected output (as on a desktop):\n\n```\nG: status > com.badlogic.gdx.net.HttpStatus@a014437\nG: statusCode > 200\nG: httpResponse > com.badlogic.gdx.net.NetJavaImpl$HttpClientResponse@63d20e85\nG: gdx_result_headers > {Transfer-Encoding=[chunked], A1=[Go!], null=[HTTP/1.1 200 OK], A2=[Go!], A3=[Go!], Server=[GlassFish Server Open Source Edition  4.1], Access-Control-Allow-Origin=[*], Set-Cookie=[JSESSIONID=119936620244e1d181f061c6c6f8; Path=/; HttpOnly], Date=[Mon, 29 Jun 2015 20:54:33 GMT], Access-Control-Allow-Headers=[*], X-Powered-By=[Servlet/3.1 JSP/2.3 (GlassFish Server Open Source Edition  4.1  Java/Oracle Corporation/1.8)]}\nG: headers.size > 11\nG:  java.util.Collections$UnmodifiableCollection$1@5bdf87f6 > [chunked]\nG:  java.util.Collections$UnmodifiableCollection$1@5bdf87f6 > [Go!]\nG:  java.util.Collections$UnmodifiableCollection$1@5bdf87f6 > [HTTP/1.1 200 OK]\nG:  java.util.Collections$UnmodifiableCollection$1@5bdf87f6 > [Go!]\nG:  java.util.Collections$UnmodifiableCollection$1@5bdf87f6 > [Go!]\nG:  java.util.Collections$UnmodifiableCollection$1@5bdf87f6 > [GlassFish Server Open Source Edition  4.1]\nG:  java.util.Collections$UnmodifiableCollection$1@5bdf87f6 > [*]\nG:  java.util.Collections$UnmodifiableCollection$1@5bdf87f6 > [JSESSIONID=119936620244e1d181f061c6c6f8; Path=/; HttpOnly]\nG:  java.util.Collections$UnmodifiableCollection$1@5bdf87f6 > [Mon, 29 Jun 2015 20:54:33 GMT]\nG:  java.util.Collections$UnmodifiableCollection$1@5bdf87f6 > [*]\nG:  java.util.Collections$UnmodifiableCollection$1@5bdf87f6 > [Servlet/3.1 JSP/2.3 (GlassFish Server Open Source Edition  4.1  Java/Oracle Corporation/1.8)]\n```\n\nActual GWT output: \n![gwt-output](https://cloud.githubusercontent.com/assets/1580663/8418333/b752703c-1eb2-11e5-9620-da701ed9f202.jpg)\n\nDebugging with breakpoints shows that the HttpClientResponse.getHeaders() method \nhttps://github.com/libgdx/libgdx/blob/master/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/GwtNet.java#L90\nactually receives response headers but later returns an empty Map.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3243/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3242","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3242/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3242/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3242/events","html_url":"https://github.com/libgdx/libgdx/issues/3242","id":91907238,"number":3242,"title":"[HTML/GWT Backend] HttpRequest doesn't work with custom headers","user":{"login":"JFixby","id":1580663,"avatar_url":"https://avatars0.githubusercontent.com/u/1580663?v=4","gravatar_id":"","url":"https://api.github.com/users/JFixby","html_url":"https://github.com/JFixby","followers_url":"https://api.github.com/users/JFixby/followers","following_url":"https://api.github.com/users/JFixby/following{/other_user}","gists_url":"https://api.github.com/users/JFixby/gists{/gist_id}","starred_url":"https://api.github.com/users/JFixby/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JFixby/subscriptions","organizations_url":"https://api.github.com/users/JFixby/orgs","repos_url":"https://api.github.com/users/JFixby/repos","events_url":"https://api.github.com/users/JFixby/events{/privacy}","received_events_url":"https://api.github.com/users/JFixby/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2015-06-29T20:50:53Z","updated_at":"2015-07-04T00:01:07Z","closed_at":"2015-07-03T14:46:47Z","author_association":"CONTRIBUTOR","body":"Example code:\n\n```\npublic class HttpRequestTest extends ApplicationAdapter {\n\n    @Override\n    public void create() {\n        go();\n    }\n\n    public static void go() {\n        Gdx.app.setLogLevel(Application.LOG_DEBUG);\n\n        com.badlogic.gdx.Net.HttpRequest gdx_request = new com.badlogic.gdx.Net.HttpRequest();\n\n        gdx_request.setUrl(\"http://localhost:31676/entry-point\");\n        gdx_request.setMethod(\"GET\");\n        gdx_request.setHeader(\"Custom-Header\", \"Hello\");\n\n        HttpResponseListener httpResponseListener = new com.badlogic.gdx.Net.HttpResponseListener() {\n\n            @Override\n            public void handleHttpResponse(\n                    com.badlogic.gdx.Net.HttpResponse httpResponse) {\n                com.badlogic.gdx.net.HttpStatus status = httpResponse\n                        .getStatus();\n                log(\"status\", status);\n                int statusCode = status.getStatusCode();\n                log(\"statusCode\", statusCode);\n\n                log(\"httpResponse\", httpResponse);\n\n                java.util.Map<String, java.util.List<String>> gdx_result_headers = httpResponse\n                        .getHeaders();\n\n                log(\"gdx_result_headers\", gdx_result_headers);\n\n                log(\"headers.size\", gdx_result_headers.size());\n\n                for (Iterator<String> i = gdx_result_headers.keySet()\n                        .iterator(); i.hasNext();) {\n                    String key = i.next();\n                    java.util.List<String> values = gdx_result_headers.get(key);\n                    log(\" \" + i, values);\n                }\n\n                exit();\n            }\n\n            @Override\n            public void failed(Throwable t) {\n                log(\"failed\", t);\n                t.printStackTrace();\n                exit();\n            }\n\n            @Override\n            public void cancelled() {\n                log(\"cancelled\");\n                exit();\n            }\n\n        };\n        Gdx.net.sendHttpRequest(gdx_request, httpResponseListener);\n\n    }\n\n    public static void log(String string) {\n        Gdx.app.error(\"G\", string + \"\");\n    }\n\n    public static void log(String name, Object value) {\n        Gdx.app.error(\"G\", name + \" > \" + value);\n    }\n\n    private static void exit() {\n        System.exit(0);\n    }\n\n}\n```\n\nError message:\n![gdx](https://cloud.githubusercontent.com/assets/1580663/8418062/eac93484-1eb0-11e5-8676-add3eb73f5e9.jpg)\n\nThe web server (http://localhost:31676/entry-point) didn't receive any incoming connections. So the request stuck somewhere at the backend side.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3242/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3241","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3241/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3241/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3241/events","html_url":"https://github.com/libgdx/libgdx/issues/3241","id":91801687,"number":3241,"title":"eglSwapBuffers failed: EGL_BAD_ALLOC","user":{"login":"panli32811","id":8217836,"avatar_url":"https://avatars0.githubusercontent.com/u/8217836?v=4","gravatar_id":"","url":"https://api.github.com/users/panli32811","html_url":"https://github.com/panli32811","followers_url":"https://api.github.com/users/panli32811/followers","following_url":"https://api.github.com/users/panli32811/following{/other_user}","gists_url":"https://api.github.com/users/panli32811/gists{/gist_id}","starred_url":"https://api.github.com/users/panli32811/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/panli32811/subscriptions","organizations_url":"https://api.github.com/users/panli32811/orgs","repos_url":"https://api.github.com/users/panli32811/repos","events_url":"https://api.github.com/users/panli32811/events{/privacy}","received_events_url":"https://api.github.com/users/panli32811/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2015-06-29T13:20:22Z","updated_at":"2015-06-29T14:07:04Z","closed_at":"2015-06-29T14:07:04Z","author_association":"NONE","body":"Since my game published to Google Play, many crashing was reported to console.The error stack was:\njava.lang.RuntimeException: eglSwapBuffers failed: EGL_BAD_ALLOC\n    at android.opengl.GLSurfaceView$EglHelper.throwEglException(GLSurfaceView.java:1178)\n    at android.opengl.GLSurfaceView$EglHelper.swap(GLSurfaceView.java:1136)\n    at android.opengl.GLSurfaceView$GLThread.guardedRun(GLSurfaceView.java:1463)\n    at android.opengl.GLSurfaceView$GLThread.run(GLSurfaceView.java:1216)\nUsually this error occurs in Sony Xperia series devices.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3241/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3240","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3240/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3240/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3240/events","html_url":"https://github.com/libgdx/libgdx/issues/3240","id":91615568,"number":3240,"title":"implement better threading model vs crash (uncaught exception thrown) situations","user":{"login":"FyiurAmron","id":11016998,"avatar_url":"https://avatars1.githubusercontent.com/u/11016998?v=4","gravatar_id":"","url":"https://api.github.com/users/FyiurAmron","html_url":"https://github.com/FyiurAmron","followers_url":"https://api.github.com/users/FyiurAmron/followers","following_url":"https://api.github.com/users/FyiurAmron/following{/other_user}","gists_url":"https://api.github.com/users/FyiurAmron/gists{/gist_id}","starred_url":"https://api.github.com/users/FyiurAmron/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/FyiurAmron/subscriptions","organizations_url":"https://api.github.com/users/FyiurAmron/orgs","repos_url":"https://api.github.com/users/FyiurAmron/repos","events_url":"https://api.github.com/users/FyiurAmron/events{/privacy}","received_events_url":"https://api.github.com/users/FyiurAmron/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2015-06-28T16:52:30Z","updated_at":"2015-07-05T18:15:43Z","closed_at":"2015-07-05T18:15:43Z","author_association":"CONTRIBUTOR","body":"In current implementation, if the main app thread (e.g. the `render()` loop) throws an uncaught exception, it kills the main thread properly, but all the async threads (AssetManager's AsyncExecutor instances, Net's ExecutorService, Timers for input/gesture listener etc) are left hanging, with no real way to shutdown them. Sometimes it's desirable to let the exception propagate (e.g. Google Play Services report those nicely) - in theory it would be possible to catch this exception, kill all async threads and then rethrow the exception, closing the whole app. Currently it's impossible without heavy modifications to those (threading) classes.\n\nNote that e.g. calling `assetManager.dispose()` to kill the AsyncExecutor is often impossible - because the OpenGL context might have been lost already (e.g. by some crash in it), disposing OpenGL-managed resources will crash with \"OpenGL context lost\" exception, leaving the executor thread running. OTOH, for current Net class accessing the executor is completely impossible (private field, no shutdown method, see related link).\n\nCurrent behaviour might produce long \"freezes\" to the user after the crash (most visible on desktop) due to those executor threads waiting for timeout (about 30s to 1 minute in my experience). After manually extending all of the thread-creating classes with thread shutdown routines and calling them on exceptional situations, the freeze disappears.\n\nMy proposition would be to either implement a automatic libGDX thread \"manager\", simply keeping track of all libGDX-related threads running & allowing easy scheduled forced termination of them - or to implement a manual scheme (e.g. `GdxThreading` interface with method `shutdownThreads()` clearly documented as \"debug/crash usage only\" or something similar), allowing the programmer to easily schedule those by himself. This interface would be also a visible marker of the fact that the class _might_ create new threads.\n\nNB trying to `stop()`, `interrupt()` or otherwise kill those threads either doesn't work or produces even more exceptions along the way.\n\ntl;dr IMO the libGDX's threads cleanup should be either done by libGDX, or there should be an API facility allowing the programmer to do so.\n\nrelated: https://github.com/libgdx/libgdx/issues/3226\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3240/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3239","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3239/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3239/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3239/events","html_url":"https://github.com/libgdx/libgdx/issues/3239","id":91605161,"number":3239,"title":"BitmapFont.setFixedWidthGlyphs() does not fix width of first and last characters of text","user":{"login":"hyvas","id":2769000,"avatar_url":"https://avatars2.githubusercontent.com/u/2769000?v=4","gravatar_id":"","url":"https://api.github.com/users/hyvas","html_url":"https://github.com/hyvas","followers_url":"https://api.github.com/users/hyvas/followers","following_url":"https://api.github.com/users/hyvas/following{/other_user}","gists_url":"https://api.github.com/users/hyvas/gists{/gist_id}","starred_url":"https://api.github.com/users/hyvas/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hyvas/subscriptions","organizations_url":"https://api.github.com/users/hyvas/orgs","repos_url":"https://api.github.com/users/hyvas/repos","events_url":"https://api.github.com/users/hyvas/events{/privacy}","received_events_url":"https://api.github.com/users/hyvas/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2015-06-28T14:29:31Z","updated_at":"2017-01-16T14:43:30Z","closed_at":"2015-11-23T11:16:46Z","author_association":"NONE","body":"When using BitmapFont.setFixedWidthGlyphs() the first and last characters of the text being rendered are not drawn with a fixed width. This appears to have been broken since the changes related to #3074 in libGDX 1.6.0.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3239/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3238","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3238/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3238/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3238/events","html_url":"https://github.com/libgdx/libgdx/issues/3238","id":91510542,"number":3238,"title":"com.badlogic.gdx.tools.texturepacker.TexturePacker$Alias cannot be cast to java.lang.Comparable","user":{"login":"electronstudio","id":7192452,"avatar_url":"https://avatars0.githubusercontent.com/u/7192452?v=4","gravatar_id":"","url":"https://api.github.com/users/electronstudio","html_url":"https://github.com/electronstudio","followers_url":"https://api.github.com/users/electronstudio/followers","following_url":"https://api.github.com/users/electronstudio/following{/other_user}","gists_url":"https://api.github.com/users/electronstudio/gists{/gist_id}","starred_url":"https://api.github.com/users/electronstudio/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/electronstudio/subscriptions","organizations_url":"https://api.github.com/users/electronstudio/orgs","repos_url":"https://api.github.com/users/electronstudio/repos","events_url":"https://api.github.com/users/electronstudio/events{/privacy}","received_events_url":"https://api.github.com/users/electronstudio/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2015-06-27T20:28:54Z","updated_at":"2015-06-27T21:11:34Z","closed_at":"2015-06-27T21:11:34Z","author_association":"NONE","body":"Libgdx 1.6.3.  Error when using TexturePacker on images with duplicate images.\n\nCaused by: java.lang.ClassCastException: com.badlogic.gdx.tools.texturepacker.TexturePacker$Alias cannot be cast to java.lang.Comparable\n    at com.badlogic.gdx.utils.ComparableTimSort.countRunAndMakeAscending(ComparableTimSort.java:272)\n    at com.badlogic.gdx.utils.ComparableTimSort.doSort(ComparableTimSort.java:83)\n    at com.badlogic.gdx.utils.Sort.sort(Sort.java:42)\n    at com.badlogic.gdx.utils.Array.sort(Array.java:347)\n    at com.badlogic.gdx.tools.texturepacker.TexturePacker.writePackFile(TexturePacker.java:311)\n    at com.badlogic.gdx.tools.texturepacker.TexturePacker.pack(TexturePacker.java:109)\n    at com.badlogic.gdx.tools.texturepacker.TexturePackerFileProcessor.processDir(TexturePackerFileProcessor.java:218)\n    at com.badlogic.gdx.tools.FileProcessor.process(FileProcessor.java:155)\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3238/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3237","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3237/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3237/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3237/events","html_url":"https://github.com/libgdx/libgdx/issues/3237","id":91372278,"number":3237,"title":"Weird transform behavior.","user":{"login":"hickscorp","id":822933,"avatar_url":"https://avatars1.githubusercontent.com/u/822933?v=4","gravatar_id":"","url":"https://api.github.com/users/hickscorp","html_url":"https://github.com/hickscorp","followers_url":"https://api.github.com/users/hickscorp/followers","following_url":"https://api.github.com/users/hickscorp/following{/other_user}","gists_url":"https://api.github.com/users/hickscorp/gists{/gist_id}","starred_url":"https://api.github.com/users/hickscorp/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hickscorp/subscriptions","organizations_url":"https://api.github.com/users/hickscorp/orgs","repos_url":"https://api.github.com/users/hickscorp/repos","events_url":"https://api.github.com/users/hickscorp/events{/privacy}","received_events_url":"https://api.github.com/users/hickscorp/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2015-06-26T21:53:47Z","updated_at":"2015-06-26T22:43:38Z","closed_at":"2015-06-26T22:42:57Z","author_association":"NONE","body":"Hello,\n\nI'm pretty new to LibGDX, and i'm not sure wether i'm doing something wrong or if I discovered a bug.\nTo me, this looks like a floating point problem.\n\nI'm trying to use Universal Tween Engine with LibGDX in a 3D context, and i'm willing to animate both translation, rotation and scaling of some of my models. Therefore, i have created a rather straightforward tweening accessor, like follows:\n\n``` java\n\npackage tweeners;\n\nimport aurelienribon.tweenengine.TweenAccessor;\nimport com.badlogic.gdx.Gdx;\nimport com.badlogic.gdx.math.Quaternion;\nimport com.badlogic.gdx.math.Vector3;\nimport GameObject;\n\npublic class GameObjectAccessor implements TweenAccessor<GameObject> {\n  // Possible orders.\n  public final static   int           TransX      = 1;\n  public final static   int           TransY      = 2;\n  public final static   int           TransZ      = 4;\n  public final static   int           ScaleX      = 8;\n  public final static   int           ScaleY      = 16;\n  public final static   int           ScaleZ      = 32;\n  public final static   int           SLERP       = 64;\n  // Combinations.\n  public final static   int           TransXYZ    = TransX | TransY | TransZ;\n  public final static   int           ScaleXYZ    = ScaleX | ScaleY | ScaleZ;\n  // Those are temporaries.\n  private static        int           tmpInt      = 0;\n  private final static  Vector3       tmpPos      = new Vector3();\n  private final static  Vector3       tmpScl      = new Vector3();\n  private final static  Quaternion    tmpRot      = new Quaternion();\n\n  @Override public int getValues (final GameObject obj, final int type, final float[] retVals) {\n    tmpInt  = 0;\n    // Handle translations if required.\n    if ((type & TransX)!=0 || (type & TransY)!=0 || (type & TransZ)!=0) {\n      obj.transform.getTranslation(tmpPos);\n      if ((type & TransX)!=0)   retVals[tmpInt++] = tmpPos.x;\n      if ((type & TransY)!=0)   retVals[tmpInt++] = tmpPos.y;\n      if ((type & TransZ)!=0)   retVals[tmpInt++] = tmpPos.z;\n    }\n    // Handle scaling if required.\n    if ((type & ScaleX)!=0 || (type & ScaleY)!=0 || (type & ScaleZ)!=0) {\n      obj.transform.getScale(tmpPos);\n      if ((type & ScaleX)!=0)   retVals[tmpInt++] = tmpScl.x;\n      if ((type & ScaleY)!=0)   retVals[tmpInt++] = tmpScl.y;\n      if ((type & ScaleZ)!=0)   retVals[tmpInt++] = tmpScl.z;\n    }\n    // Handle transitions via SLERP extrapolation.\n    if ((type & SLERP)!=0)      retVals[tmpInt++] = obj.slerpFactor;\n    return tmpInt;\n  }\n  @Override\n  public void setValues (final GameObject obj, final int type, final float[] newVals) {\n    tmpInt          = 0;\n    // Handle translations, if any.\n    obj.transform.getTranslation(tmpPos);\n    if ((type & TransX)!=0 || (type & TransY)!=0 || (type & TransZ)!=0) {\n      if ((type & TransX)!=0)     tmpPos.x  = newVals[tmpInt++];\n      if ((type & TransY)!=0)     tmpPos.y  = newVals[tmpInt++];\n      if ((type & TransZ)!=0)     tmpPos.z  = newVals[tmpInt++];\n    }\n    // Handle scaling, if any.\n    //obj.transform.getScale(tmpScl);\n    tmpScl.set(1, 1, 1);\n    if ((type & ScaleX)!=0 || (type & ScaleY)!=0 || (type & ScaleZ)!=0) {\n      if ((type & ScaleX)!=0)     tmpScl.x  = newVals[tmpInt++];\n      if ((type & ScaleY)!=0)     tmpScl.y  = newVals[tmpInt++];\n      if ((type & ScaleZ)!=0)     tmpScl.z  = newVals[tmpInt++];\n    }\n    // Transitions by SLERP interpolation.\n    obj.transform.getRotation(tmpRot);\n    if ((type & SLERP)!=0 )\n      tmpRot.slerp(obj.targetRotation, ( obj.slerpFactor = newVals[tmpInt++] ));\n\n    // Apply all transforms.\n    obj.transform.set(tmpPos, tmpRot, tmpScl);\n  }\n}\n```\n\nWhen calling this with an un-rottated matrix, everythign is cool. I'm also able to translate and rotate model instances correctly.\n\nHowever, if i scale a model, rotate it, and then scale it again, the scaling factors goes off the roof.\n\nAlso, if i have a model that is rotated by 90 degrees and apply some scaling after that, then the rotation shifts to some 100 degrees after applying the scaling. Any idea of what i'm doing wrong?\n\nFor instance:\n\n``` java\n    Timeline.createSequence()\n      .push(\n        Tween\n          .to     (piece, GameObjectAccessor.ScaleX, 0.1f)\n          .target (2)\n          .ease   (Expo.OUT)\n      )\n      .push(\n          Tween\n          .to     (piece, GameObjectAccessor.ScaleX, 0.3f)\n          .target (1)\n          .ease   (Bounce.OUT)\n      )\n      .start(tweener);\n```\n\nThis looks great and works for a while. But if the model has been rotated, the scaling breaks everything and i end up with infinity in the tmpScl vector when getting it using the `transform.getScaling` call.\n\nHow do you guys keep the transform consistent across animations? Is that a bug? How do you guys proceed with animating your models using LibGDX?\n\nThanks!\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3237/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3236","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3236/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3236/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3236/events","html_url":"https://github.com/libgdx/libgdx/pull/3236","id":91284069,"number":3236,"title":"Implement equals/hashCode for collection classes","user":{"login":"antag99","id":7714919,"avatar_url":"https://avatars3.githubusercontent.com/u/7714919?v=4","gravatar_id":"","url":"https://api.github.com/users/antag99","html_url":"https://github.com/antag99","followers_url":"https://api.github.com/users/antag99/followers","following_url":"https://api.github.com/users/antag99/following{/other_user}","gists_url":"https://api.github.com/users/antag99/gists{/gist_id}","starred_url":"https://api.github.com/users/antag99/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/antag99/subscriptions","organizations_url":"https://api.github.com/users/antag99/orgs","repos_url":"https://api.github.com/users/antag99/repos","events_url":"https://api.github.com/users/antag99/events{/privacy}","received_events_url":"https://api.github.com/users/antag99/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":19,"created_at":"2015-06-26T15:45:46Z","updated_at":"2016-04-16T19:57:55Z","closed_at":"2015-07-05T18:05:17Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3236","html_url":"https://github.com/libgdx/libgdx/pull/3236","diff_url":"https://github.com/libgdx/libgdx/pull/3236.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3236.patch"},"body":"This pull request implements `equals()` and `hashCode()` for all array and map classes in libgdx. It omits the `com.badlogic.gdx.utils.PooledLinkedList` and `com.badlogic.gdx.utils.SortedIntList` classes. It does, however, not omit `BinaryHeap`, which is patched in commit 83d6777fc71311e5b437d6234198b55d3982920d along with the map classes. Fixes #3204.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3236/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3235","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3235/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3235/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3235/events","html_url":"https://github.com/libgdx/libgdx/issues/3235","id":91275305,"number":3235,"title":"Json serializer. Writing null values with a known type","user":{"login":"WillCalderwood","id":6973062,"avatar_url":"https://avatars1.githubusercontent.com/u/6973062?v=4","gravatar_id":"","url":"https://api.github.com/users/WillCalderwood","html_url":"https://github.com/WillCalderwood","followers_url":"https://api.github.com/users/WillCalderwood/followers","following_url":"https://api.github.com/users/WillCalderwood/following{/other_user}","gists_url":"https://api.github.com/users/WillCalderwood/gists{/gist_id}","starred_url":"https://api.github.com/users/WillCalderwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/WillCalderwood/subscriptions","organizations_url":"https://api.github.com/users/WillCalderwood/orgs","repos_url":"https://api.github.com/users/WillCalderwood/repos","events_url":"https://api.github.com/users/WillCalderwood/events{/privacy}","received_events_url":"https://api.github.com/users/WillCalderwood/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2015-06-26T15:11:43Z","updated_at":"2015-11-17T00:17:04Z","closed_at":"2015-11-17T00:17:04Z","author_association":"CONTRIBUTOR","body":"in Json.java writeValue can take a known type and an object, from which we get the actual type.\n\nThe first thing that writeValue does is check if the object is null, if it is it returns null. However, I believe if the value is null, it should do the following so that custom serializers are considered for null types.\n\n```\n    if (value == null) {\n        Serializer serializer = classToSerializer.get(knownType);\n        if (serializer != null) {\n            serializer.write(this, value, knownType);\n            return;\n        }\n        writer.value(null);\n        return;\n    }    \n```\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3235/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3234","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3234/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3234/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3234/events","html_url":"https://github.com/libgdx/libgdx/pull/3234","id":91187915,"number":3234,"title":"This allows user that can change wrap logic in custom glyph layout.","user":{"login":"scientistnm","id":933456,"avatar_url":"https://avatars3.githubusercontent.com/u/933456?v=4","gravatar_id":"","url":"https://api.github.com/users/scientistnm","html_url":"https://github.com/scientistnm","followers_url":"https://api.github.com/users/scientistnm/followers","following_url":"https://api.github.com/users/scientistnm/following{/other_user}","gists_url":"https://api.github.com/users/scientistnm/gists{/gist_id}","starred_url":"https://api.github.com/users/scientistnm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/scientistnm/subscriptions","organizations_url":"https://api.github.com/users/scientistnm/orgs","repos_url":"https://api.github.com/users/scientistnm/repos","events_url":"https://api.github.com/users/scientistnm/events{/privacy}","received_events_url":"https://api.github.com/users/scientistnm/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":12,"created_at":"2015-06-26T08:20:50Z","updated_at":"2015-06-30T11:20:42Z","closed_at":"2015-06-27T17:45:00Z","author_association":"NONE","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3234","html_url":"https://github.com/libgdx/libgdx/pull/3234","diff_url":"https://github.com/libgdx/libgdx/pull/3234.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3234.patch"},"body":"This allows user that can change wrap logic in custom glyph layout.\n(e.g. remove multiplewhite spaces omitting when glyph run is wrapped if needed)\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3234/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3233","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3233/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3233/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3233/events","html_url":"https://github.com/libgdx/libgdx/pull/3233","id":91180335,"number":3233,"title":"Correct Framebuffer error.","user":{"login":"realitix","id":6367936,"avatar_url":"https://avatars1.githubusercontent.com/u/6367936?v=4","gravatar_id":"","url":"https://api.github.com/users/realitix","html_url":"https://github.com/realitix","followers_url":"https://api.github.com/users/realitix/followers","following_url":"https://api.github.com/users/realitix/following{/other_user}","gists_url":"https://api.github.com/users/realitix/gists{/gist_id}","starred_url":"https://api.github.com/users/realitix/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/realitix/subscriptions","organizations_url":"https://api.github.com/users/realitix/orgs","repos_url":"https://api.github.com/users/realitix/repos","events_url":"https://api.github.com/users/realitix/events{/privacy}","received_events_url":"https://api.github.com/users/realitix/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2015-06-26T07:33:14Z","updated_at":"2015-06-30T14:47:59Z","closed_at":"2015-06-28T18:50:14Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3233","html_url":"https://github.com/libgdx/libgdx/pull/3233","diff_url":"https://github.com/libgdx/libgdx/pull/3233.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3233.patch"},"body":"See https://github.com/libgdx/libgdx/issues/3227\nFixes #3227\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3233/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3232","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3232/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3232/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3232/events","html_url":"https://github.com/libgdx/libgdx/issues/3232","id":91065399,"number":3232,"title":"Libgdx 1.6.2 + robovm 1.3.0 makes iOS app crash","user":{"login":"TMSantos","id":5798822,"avatar_url":"https://avatars2.githubusercontent.com/u/5798822?v=4","gravatar_id":"","url":"https://api.github.com/users/TMSantos","html_url":"https://github.com/TMSantos","followers_url":"https://api.github.com/users/TMSantos/followers","following_url":"https://api.github.com/users/TMSantos/following{/other_user}","gists_url":"https://api.github.com/users/TMSantos/gists{/gist_id}","starred_url":"https://api.github.com/users/TMSantos/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/TMSantos/subscriptions","organizations_url":"https://api.github.com/users/TMSantos/orgs","repos_url":"https://api.github.com/users/TMSantos/repos","events_url":"https://api.github.com/users/TMSantos/events{/privacy}","received_events_url":"https://api.github.com/users/TMSantos/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2015-06-25T20:18:39Z","updated_at":"2015-06-25T21:00:42Z","closed_at":"2015-06-25T21:00:42Z","author_association":"NONE","body":"Hello\n\nMy iOS launch used to work fine, but since I upgraded libgdx to 1.6.2 and robovm to 1.3.0 I started to have problems.\n\nFirst i had this error:\nld: file not found: /ios/build/libs/ios/libgdx-box2d.a\nclang: error: linker command failed with exit code 1 (use -v to see invocation)\n\nSo I changed robovm.xml libs to only a \"z\" as mentioned by one user in libgdx forums.\n(http://www.badlogicgames.com/forum/viewtopic.php?t=19642&p=82236)\n\nAfter this I can build, but the app is crashing on launch with this exception:\njava.lang.UnsatisfiedLinkError: com/badlogic/gdx/backends/iosrobovm/IOSGLES20.init()V\n\n```\nat com.badlogic.gdx.backends.iosrobovm.IOSGLES20.init(Native Method)\nat com.badlogic.gdx.backends.iosrobovm.IOSGLES20.<init>(IOSGLES20.java)\nat com.badlogic.gdx.backends.iosrobovm.IOSApplication.didFinishLaunching(IOSApplication.java)\nat com.badlogic.gdx.backends.iosrobovm.IOSApplication$Delegate.didFinishLaunching(IOSApplication.java)\nat com.badlogic.gdx.backends.iosrobovm.IOSApplication$Delegate.$cb$application$didFinishLaunchingWithOptions$(IOSApplication.java)\nat org.robovm.apple.uikit.UIApplication.main(Native Method)\nat org.robovm.apple.uikit.UIApplication.main(UIApplication.java)\nat ggj2015.game.IOSLauncher.main(IOSLauncher.java)\n```\n\nNote that I followed everything said here http://www.badlogicgames.com/wordpress/?p=3694 to update my project correctly.\n\nThank you \n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3232/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3231","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3231/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3231/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3231/events","html_url":"https://github.com/libgdx/libgdx/pull/3231","id":91011054,"number":3231,"title":"Add builder to lights.","user":{"login":"realitix","id":6367936,"avatar_url":"https://avatars1.githubusercontent.com/u/6367936?v=4","gravatar_id":"","url":"https://api.github.com/users/realitix","html_url":"https://github.com/realitix","followers_url":"https://api.github.com/users/realitix/followers","following_url":"https://api.github.com/users/realitix/following{/other_user}","gists_url":"https://api.github.com/users/realitix/gists{/gist_id}","starred_url":"https://api.github.com/users/realitix/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/realitix/subscriptions","organizations_url":"https://api.github.com/users/realitix/orgs","repos_url":"https://api.github.com/users/realitix/repos","events_url":"https://api.github.com/users/realitix/events{/privacy}","received_events_url":"https://api.github.com/users/realitix/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2015-06-25T16:30:23Z","updated_at":"2015-06-30T14:47:03Z","closed_at":"2015-06-29T21:18:38Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3231","html_url":"https://github.com/libgdx/libgdx/pull/3231","diff_url":"https://github.com/libgdx/libgdx/pull/3231.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3231.patch"},"body":"Allow to create lights more easily.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3231/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3230","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3230/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3230/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3230/events","html_url":"https://github.com/libgdx/libgdx/issues/3230","id":90952118,"number":3230,"title":"GlyphLayout unexpected whitespace omitted","user":{"login":"scientistnm","id":933456,"avatar_url":"https://avatars3.githubusercontent.com/u/933456?v=4","gravatar_id":"","url":"https://api.github.com/users/scientistnm","html_url":"https://github.com/scientistnm","followers_url":"https://api.github.com/users/scientistnm/followers","following_url":"https://api.github.com/users/scientistnm/following{/other_user}","gists_url":"https://api.github.com/users/scientistnm/gists{/gist_id}","starred_url":"https://api.github.com/users/scientistnm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/scientistnm/subscriptions","organizations_url":"https://api.github.com/users/scientistnm/orgs","repos_url":"https://api.github.com/users/scientistnm/repos","events_url":"https://api.github.com/users/scientistnm/events{/privacy}","received_events_url":"https://api.github.com/users/scientistnm/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2015-06-25T12:41:13Z","updated_at":"2015-06-25T15:43:48Z","closed_at":"2015-06-25T14:45:08Z","author_association":"NONE","body":"Hello,\n\nI will try to explain what I'm trying to do and what is the problem here.\nIf you don't consider this as a bug, then please explain how to overcome this behavior of GlyphLayout.\n\nI'm working on the 3D framework for TV platforms, than uses Libgdx underneath it.\nI'm trying to create 3D input field widget. It is basicallly a decal with texture that I've prepared in runtime while drawing BitmapFont into FBO.\n\nI noticed a problem that GlyphLayout omitts multiple whitespaces, and then my text isn't rendering correctly.\nAlso it omitts white spaces in the end and start of the run.\nThis is the problem for me because when I try to calculate position of the cursor in the input field...\nString that should be rendered and the count of Glyphs in GlyphLayout is not the same.\nSome of whitespaces are omitted during wrap, and those two are not in sync anymore.\n\nI sync the cursor index manually, RIGHT key (cursorIndex++), LEFT key (cursorIndex--).\nSo when I try to put cursor in the next line...the index of selected character in the string is not the same as the index of glyph in glyph layout...and I miss the correct position of where cursor should be.\n\nI have a workaround for it, but I'm not sure if this is the right way to do...\n\nIn the GlyphLayout class in wrap method, when I do this everything looks good in my usecase:\n\n// Determine index where first run ends, ignoring whitespace before the wrap index.\nint endIndex = wrapIndex;\n//for (; endIndex > 0; endIndex--)\n//  if (!fontData.isWhitespace((char)first.glyphs.get(endIndex - 1).id)) break;\n\n// Determine index where second run starts, ignoring whitespace after the wrap index.\n     int startIndex = wrapIndex;\n//for (; startIndex < glyphCount; startIndex++)\n//if (!fontData.isWhitespace((char)first.glyphs.get(startIndex).id)) break;\n\nSo basically I prevented the white space omittment, and everything draws correct if I have multiple whitespaces together, also the number of characters in String and the number of glyphs in GlyphLayout is the same, and caluclation of cursor position is correct.\nIs the the right way to achieve this?\n\nIf this is the only way...I can send a pull request that changes the visibility of this method from private to protected, and I can override this behaviour.\n\nWhat do you think about this?\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3230/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3229","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3229/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3229/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3229/events","html_url":"https://github.com/libgdx/libgdx/issues/3229","id":90813028,"number":3229,"title":"libGDX does not forceLink Box2D for RoboVM","user":{"login":"cpalsulich","id":3465186,"avatar_url":"https://avatars3.githubusercontent.com/u/3465186?v=4","gravatar_id":"","url":"https://api.github.com/users/cpalsulich","html_url":"https://github.com/cpalsulich","followers_url":"https://api.github.com/users/cpalsulich/followers","following_url":"https://api.github.com/users/cpalsulich/following{/other_user}","gists_url":"https://api.github.com/users/cpalsulich/gists{/gist_id}","starred_url":"https://api.github.com/users/cpalsulich/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cpalsulich/subscriptions","organizations_url":"https://api.github.com/users/cpalsulich/orgs","repos_url":"https://api.github.com/users/cpalsulich/repos","events_url":"https://api.github.com/users/cpalsulich/events{/privacy}","received_events_url":"https://api.github.com/users/cpalsulich/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2015-06-25T00:22:07Z","updated_at":"2015-07-05T22:02:12Z","closed_at":"2015-07-05T22:02:12Z","author_association":"NONE","body":"When using `<treeShaker>aggressive</treeShaker>`, Box2D code is pulled out if it is not manually force linked. Please see https://github.com/robovm/robovm/issues/1035#issuecomment-115045750\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3229/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}}],"meta":{"x-ratelimit-limit":"5000","x-ratelimit-remaining":"4944","x-ratelimit-reset":"1506844633","x-github-request-id":"E8BA:1109:13DD73E:28668D3:59D094CB","x-github-media-type":"github.squirrel-girl-preview","link":"<https://api.github.com/repositories/5373551/issues?state=all&page=57>; rel=\"next\", <https://api.github.com/repositories/5373551/issues?state=all&page=164>; rel=\"last\", <https://api.github.com/repositories/5373551/issues?state=all&page=1>; rel=\"first\", <https://api.github.com/repositories/5373551/issues?state=all&page=55>; rel=\"prev\"","etag":"\"957d5259920d611924c735ae9d2aac5a\"","status":"200 OK"}}
