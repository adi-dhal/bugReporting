{"data":[{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4428","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4428/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4428/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4428/events","html_url":"https://github.com/libgdx/libgdx/pull/4428","id":190473763,"number":4428,"title":"Added ShaderProgramLoader for AssetManager","user":{"login":"cypherdare","id":1843131,"avatar_url":"https://avatars2.githubusercontent.com/u/1843131?v=4","gravatar_id":"","url":"https://api.github.com/users/cypherdare","html_url":"https://github.com/cypherdare","followers_url":"https://api.github.com/users/cypherdare/followers","following_url":"https://api.github.com/users/cypherdare/following{/other_user}","gists_url":"https://api.github.com/users/cypherdare/gists{/gist_id}","starred_url":"https://api.github.com/users/cypherdare/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cypherdare/subscriptions","organizations_url":"https://api.github.com/users/cypherdare/orgs","repos_url":"https://api.github.com/users/cypherdare/repos","events_url":"https://api.github.com/users/cypherdare/events{/privacy}","received_events_url":"https://api.github.com/users/cypherdare/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-11-19T03:32:42Z","updated_at":"2016-12-04T09:41:42Z","closed_at":"2016-12-04T09:41:42Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4428","html_url":"https://github.com/libgdx/libgdx/pull/4428","diff_url":"https://github.com/libgdx/libgdx/pull/4428.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4428.patch"},"body":"It always bothers me that ShaderPrograms can't be managed along with the rest of the assets. And since they're a synchronously loaded type of asset, it would be nice for animated loading screens if they could also be included in step-by-step loading via AssetManager.\r\n\r\nSince typically two files are used, it provides various ways to specify the second file. The easiest (zero configuration) way would be to use .vert and .frag file name suffixes, and queue them to AssetManager.load() using either of the file names.\r\n\r\nI derived from AsynchronousAssetLoader for future flexibility. I saw that some other synchronous loaders do the same.","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4428/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4427","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4427/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4427/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4427/events","html_url":"https://github.com/libgdx/libgdx/issues/4427","id":190206236,"number":4427,"title":"Label.pack zeros the width !","user":{"login":"doit-ceo","id":8027780,"avatar_url":"https://avatars2.githubusercontent.com/u/8027780?v=4","gravatar_id":"","url":"https://api.github.com/users/doit-ceo","html_url":"https://github.com/doit-ceo","followers_url":"https://api.github.com/users/doit-ceo/followers","following_url":"https://api.github.com/users/doit-ceo/following{/other_user}","gists_url":"https://api.github.com/users/doit-ceo/gists{/gist_id}","starred_url":"https://api.github.com/users/doit-ceo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/doit-ceo/subscriptions","organizations_url":"https://api.github.com/users/doit-ceo/orgs","repos_url":"https://api.github.com/users/doit-ceo/repos","events_url":"https://api.github.com/users/doit-ceo/events{/privacy}","received_events_url":"https://api.github.com/users/doit-ceo/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-11-18T00:37:08Z","updated_at":"2016-11-24T17:51:45Z","closed_at":"2016-11-24T17:51:26Z","author_association":"NONE","body":"#### Issue details\r\nTo get the text to wrap correctly you set the width and then call pack !\r\nhowever this doesn't work correctly and this problem is clear when Label is skinned, calling \"Label.pack()\" cause further problem because this method **will zero the width** by \"setSize(getPrefWidth(), getPrefHeight());\" in the default pack method, as you can see, when wrap=true , then the getPrefWidth()=0 which cause this.\r\n\r\nSome other solution found in the internet (http://stackoverflow.com/questions/24276180/libgdx-label-multiline-text-height) request you to call pack and then set the width again !\r\n\r\nSo simply the method \"Label.pack()\" is buggy when Label.wrap=true (also it would be good idea to expose this variable isWrap())\r\n\r\n#### Reproduction steps/code\r\nThis is a fix , also note that the \"wrap\" variable is not visible :( so it's hard to fix this in a subclass.\r\n\r\n`\r\npublic void pack () {\r\n\tif (wrap){\r\n\t\tvalidate();\r\n\t\tsetSize(getWidth(), getPrefHeight()); //or simply setHeight(getPrefHeight())\r\n\t}else{\r\n\t\tsuper.pack();\r\n\t}\r\n}\r\n`\r\n\r\n#### Version of LibGDX and/or relevant dependencies\r\n1.9.4\r\n\r\n#### Please select the affected platforms\r\nShows on all platforms.\r\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4427/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4426","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4426/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4426/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4426/events","html_url":"https://github.com/libgdx/libgdx/pull/4426","id":190128015,"number":4426,"title":"Update Sound Manager 2","user":{"login":"intrigus","id":10353467,"avatar_url":"https://avatars2.githubusercontent.com/u/10353467?v=4","gravatar_id":"","url":"https://api.github.com/users/intrigus","html_url":"https://github.com/intrigus","followers_url":"https://api.github.com/users/intrigus/followers","following_url":"https://api.github.com/users/intrigus/following{/other_user}","gists_url":"https://api.github.com/users/intrigus/gists{/gist_id}","starred_url":"https://api.github.com/users/intrigus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/intrigus/subscriptions","organizations_url":"https://api.github.com/users/intrigus/orgs","repos_url":"https://api.github.com/users/intrigus/repos","events_url":"https://api.github.com/users/intrigus/events{/privacy}","received_events_url":"https://api.github.com/users/intrigus/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":15,"created_at":"2016-11-17T18:37:00Z","updated_at":"2017-06-25T23:15:21Z","closed_at":"2017-01-25T15:24:57Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4426","html_url":"https://github.com/libgdx/libgdx/pull/4426","diff_url":"https://github.com/libgdx/libgdx/pull/4426.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4426.patch"},"body":"Update Sound Manager to version V2.97a.20150601.\r\nThis should fix http://www.badlogicgames.com/forum/viewtopic.php?f=15&t=24079 .","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4426/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4425","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4425/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4425/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4425/events","html_url":"https://github.com/libgdx/libgdx/issues/4425","id":189922885,"number":4425,"title":"Labels don't wrap in the correct position with markup enabled","user":{"login":"DigNZ","id":817657,"avatar_url":"https://avatars0.githubusercontent.com/u/817657?v=4","gravatar_id":"","url":"https://api.github.com/users/DigNZ","html_url":"https://github.com/DigNZ","followers_url":"https://api.github.com/users/DigNZ/followers","following_url":"https://api.github.com/users/DigNZ/following{/other_user}","gists_url":"https://api.github.com/users/DigNZ/gists{/gist_id}","starred_url":"https://api.github.com/users/DigNZ/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DigNZ/subscriptions","organizations_url":"https://api.github.com/users/DigNZ/orgs","repos_url":"https://api.github.com/users/DigNZ/repos","events_url":"https://api.github.com/users/DigNZ/events{/privacy}","received_events_url":"https://api.github.com/users/DigNZ/received_events","type":"User","site_admin":false},"labels":[{"id":11336980,"url":"https://api.github.com/repos/libgdx/libgdx/labels/bug","name":"bug","color":"fc2929","default":true},{"id":89047068,"url":"https://api.github.com/repos/libgdx/libgdx/labels/scene2d","name":"scene2d","color":"ff00ff","default":false}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-11-17T03:07:11Z","updated_at":"2016-12-04T11:38:42Z","closed_at":null,"author_association":"NONE","body":"\r\n#### Issue details\r\nIf markup is used to changed the colour of a word that is at a wrap boundary then the word will not wrap correctly and the label will spill out of the bounds of the table that it is contained in. This increases the width of the layout and causes text to be cut off or drawn in the wrong place.\r\n\r\nI've tested combinations of opening and closing the colour markup as well as different colours and the consistently reproducible thing is that if the word after the colour change needed to wrap then it will not. (even with a space between the markup and the word).\r\n\r\n#### Reproduction steps/code\r\nNote in the example below if the [GREEN] tag is moved one word before or after its current position then all the text will wrap correctly and fit within the table as it should. \r\n```\r\npublic class TextWrapping extends ApplicationAdapter {\r\n\r\n    Stage activeStage;\r\n\r\n    @Override\r\n    public void create() {\r\n        activeStage = new Stage(new FillViewport(640, 480));\r\n        BitmapFont font = new BitmapFont();\r\n        font.getData().markupEnabled = true;\r\n        Table stageContentTable = new Table();\r\n        stageContentTable.setFillParent(true);\r\n        Label l = new Label(\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris ut lacus maximus, [GREEN]volutpat ex vel, tempor leo. Vivamus elit risus, iaculis at ante vel, commodo mattis tellus. Etiam ac tempor quam, quis aliquet nisl. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Duis nisl velit, scelerisque sed ultricies ornare, ultrices non tortor. Duis justo magna, dapibus quis accumsan a, tristique eu metus. Vestibulum pellentesque lobortis ante, vel maximus odio ultricies ut. Sed lobortis cursus sem, a facilisis ex volutpat in. Pellentesque id libero quis ipsum euismod ullamcorper sit amet at enim. Donec sed dictum ex.\"\r\n                + \"Donec dignissim felis et malesuada egestas. Vivamus vel fringilla lorem. Mauris accumsan eget turpis non volutpat. Nunc facilisis laoreet mauris, scelerisque aliquet lacus eleifend eu. Integer id dignissim purus. Nunc dignissim commodo venenatis. Nullam massa mauris, elementum at rutrum sit amet, lacinia ut arcu. Quisque non nibh eget justo ornare maximus. Vestibulum finibus mi augue, eu gravida purus pulvinar ut. In fringilla dignissim suscipit.\"\r\n                + \"Fusce vitae massa consequat, finibus mauris id, efficitur nunc. Praesent nec orci quis sem euismod viverra. Vivamus non lacus nec ante consequat blandit sed sit amet purus. Mauris orci diam, interdum sit amet ipsum et, vestibulum varius sem. Integer ornare tortor id tortor varius, a varius sem volutpat. Suspendisse hendrerit condimentum tincidunt. Sed pellentesque vitae tellus sed efficitur. Etiam sodales lorem tellus, at dictum mauris pellentesque et. In vitae scelerisque nisl. Proin semper ante et quam volutpat, faucibus gravida felis consequat. Quisque ac urna mollis, scelerisque est et, venenatis risus. Etiam ac volutpat nibh.\", new Label.LabelStyle(font, Color.WHITE));\r\n        l.setWrap(true);\r\n        stageContentTable.add(l).top().left().width(560);\r\n        stageContentTable.setDebug(true, true);\r\n        activeStage.addActor(stageContentTable);\r\n    }\r\n\r\n    @Override\r\n    public void render() {\r\n        Gdx.gl.glClearColor(0.5f, 0.5f, 0.5f, 1);\r\n        Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);\r\n        activeStage.act();\r\n        activeStage.draw();\r\n    }\r\n}\r\n```\r\n\r\n#### Version of LibGDX and/or relevant dependencies\r\nTested on 1.9.4\r\n\r\n\r\n\r\n#### Please select the affected platforms\r\nShows on all platforms.\r\n\r\n**With the colour tag before a word that should wrap.**\r\n\r\n![screenshot from 2016-11-17 16-11-33](https://cloud.githubusercontent.com/assets/817657/20374920/87394700-ace0-11e6-86f1-b3c1c562c75f.png)\r\n\r\n**With the colour tag before a word that does not need to wrap**\r\n![screenshot from 2016-11-17 16-11-08](https://cloud.githubusercontent.com/assets/817657/20374926/8bdaf86c-ace0-11e6-9f45-68be7f8cdb35.png)\r\n\r\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4425/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4424","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4424/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4424/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4424/events","html_url":"https://github.com/libgdx/libgdx/issues/4424","id":189747178,"number":4424,"title":"Gdx.graphics.getDensity() reporting the wrong DPI","user":{"login":"Zac-Garby","id":19708658,"avatar_url":"https://avatars2.githubusercontent.com/u/19708658?v=4","gravatar_id":"","url":"https://api.github.com/users/Zac-Garby","html_url":"https://github.com/Zac-Garby","followers_url":"https://api.github.com/users/Zac-Garby/followers","following_url":"https://api.github.com/users/Zac-Garby/following{/other_user}","gists_url":"https://api.github.com/users/Zac-Garby/gists{/gist_id}","starred_url":"https://api.github.com/users/Zac-Garby/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Zac-Garby/subscriptions","organizations_url":"https://api.github.com/users/Zac-Garby/orgs","repos_url":"https://api.github.com/users/Zac-Garby/repos","events_url":"https://api.github.com/users/Zac-Garby/events{/privacy}","received_events_url":"https://api.github.com/users/Zac-Garby/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2016-11-16T15:54:26Z","updated_at":"2016-12-04T15:16:21Z","closed_at":"2016-12-04T11:35:45Z","author_association":"NONE","body":"Please ensure you have given all the following requested information in your report.\r\n\r\n#### Issue details\r\nOn my iMac 5k (2015), using `Gdx.graphics.getDensity()` returns 0.65. This is wrong, because the dpi of my screen is 442, and therefore should be higher than 1.\r\n\r\n#### Reproduction steps/code\r\nCall `Gdx.graphics.getDensity()` on an iMac 5k\r\n\r\n#### Version of LibGDX and/or relevant dependencies\r\n1.9.3, I think, based on the fact that my project uses _gdx-1.9.3.jar_.\r\n\r\n#### Please select the affected platforms\r\n- [x] MacOS\r\n- [x] Possibly win and linux\r\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4424/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4423","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4423/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4423/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4423/events","html_url":"https://github.com/libgdx/libgdx/pull/4423","id":189139823,"number":4423,"title":"Added support for configuring statusbar visibility in MOE backend","user":{"login":"liliomk","id":1080033,"avatar_url":"https://avatars1.githubusercontent.com/u/1080033?v=4","gravatar_id":"","url":"https://api.github.com/users/liliomk","html_url":"https://github.com/liliomk","followers_url":"https://api.github.com/users/liliomk/followers","following_url":"https://api.github.com/users/liliomk/following{/other_user}","gists_url":"https://api.github.com/users/liliomk/gists{/gist_id}","starred_url":"https://api.github.com/users/liliomk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/liliomk/subscriptions","organizations_url":"https://api.github.com/users/liliomk/orgs","repos_url":"https://api.github.com/users/liliomk/repos","events_url":"https://api.github.com/users/liliomk/events{/privacy}","received_events_url":"https://api.github.com/users/liliomk/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2016-11-14T15:22:55Z","updated_at":"2016-11-18T17:34:49Z","closed_at":"2016-11-18T17:34:49Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4423","html_url":"https://github.com/libgdx/libgdx/pull/4423","diff_url":"https://github.com/libgdx/libgdx/pull/4423.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4423.patch"},"body":"","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4423/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4422","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4422/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4422/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4422/events","html_url":"https://github.com/libgdx/libgdx/pull/4422","id":189015196,"number":4422,"title":"Made Array class Poolable for automatic clearing when free in a Pool.","user":{"login":"WinterAlexander","id":8527540,"avatar_url":"https://avatars0.githubusercontent.com/u/8527540?v=4","gravatar_id":"","url":"https://api.github.com/users/WinterAlexander","html_url":"https://github.com/WinterAlexander","followers_url":"https://api.github.com/users/WinterAlexander/followers","following_url":"https://api.github.com/users/WinterAlexander/following{/other_user}","gists_url":"https://api.github.com/users/WinterAlexander/gists{/gist_id}","starred_url":"https://api.github.com/users/WinterAlexander/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/WinterAlexander/subscriptions","organizations_url":"https://api.github.com/users/WinterAlexander/orgs","repos_url":"https://api.github.com/users/WinterAlexander/repos","events_url":"https://api.github.com/users/WinterAlexander/events{/privacy}","received_events_url":"https://api.github.com/users/WinterAlexander/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-11-14T02:21:53Z","updated_at":"2016-11-14T02:28:14Z","closed_at":"2016-11-14T02:28:03Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4422","html_url":"https://github.com/libgdx/libgdx/pull/4422","diff_url":"https://github.com/libgdx/libgdx/pull/4422.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4422.patch"},"body":"Arrays are used with pools at multiple location in the source code, including the Actor class.","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4422/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4421","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4421/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4421/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4421/events","html_url":"https://github.com/libgdx/libgdx/issues/4421","id":188995974,"number":4421,"title":"Mini.c","user":{"login":"nikki-90","id":23418588,"avatar_url":"https://avatars1.githubusercontent.com/u/23418588?v=4","gravatar_id":"","url":"https://api.github.com/users/nikki-90","html_url":"https://github.com/nikki-90","followers_url":"https://api.github.com/users/nikki-90/followers","following_url":"https://api.github.com/users/nikki-90/following{/other_user}","gists_url":"https://api.github.com/users/nikki-90/gists{/gist_id}","starred_url":"https://api.github.com/users/nikki-90/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nikki-90/subscriptions","organizations_url":"https://api.github.com/users/nikki-90/orgs","repos_url":"https://api.github.com/users/nikki-90/repos","events_url":"https://api.github.com/users/nikki-90/events{/privacy}","received_events_url":"https://api.github.com/users/nikki-90/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-11-13T21:23:02Z","updated_at":"2016-11-13T21:29:04Z","closed_at":"2016-11-13T21:29:04Z","author_association":"NONE","body":"Please ensure you have given all the following requested information in your report.\r\n\r\n#### Issue details\r\n_Please provide the details of your issue_\r\n\r\n#### Reproduction steps/code\r\n_Even if you think your issue is trivial to reproduce, please supply a [SSCCE](http://sscce.org/) that demonstrates your issue.  This saves time on our end, and makes it much more likely that your issue will be fixed.\r\nYou can find barebones templates [here](https://github.com/libgdx/libgdx/wiki/Getting-help)_\r\n\r\n#### Version of LibGDX and/or relevant dependencies\r\n_Please provide the version(s) affected._\r\n\r\n#### Stacktrace\r\n```java\r\n//Please provide the stacktrace if applicable \r\n```\r\n\r\n#### Please select the affected platforms\r\n- [ ] Android\r\n- [ ] iOS (robovm)\r\n- [ ] iOS (MOE)\r\n- [ ] HTML/GWT\r\n- [ ] Windows\r\n- [ ] Linux\r\n- [ ] MacOS\r\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4421/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4420","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4420/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4420/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4420/events","html_url":"https://github.com/libgdx/libgdx/pull/4420","id":188931888,"number":4420,"title":"Lwjgl3 fix javadoc","user":{"login":"cypherdare","id":1843131,"avatar_url":"https://avatars2.githubusercontent.com/u/1843131?v=4","gravatar_id":"","url":"https://api.github.com/users/cypherdare","html_url":"https://github.com/cypherdare","followers_url":"https://api.github.com/users/cypherdare/followers","following_url":"https://api.github.com/users/cypherdare/following{/other_user}","gists_url":"https://api.github.com/users/cypherdare/gists{/gist_id}","starred_url":"https://api.github.com/users/cypherdare/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cypherdare/subscriptions","organizations_url":"https://api.github.com/users/cypherdare/orgs","repos_url":"https://api.github.com/users/cypherdare/repos","events_url":"https://api.github.com/users/cypherdare/events{/privacy}","received_events_url":"https://api.github.com/users/cypherdare/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2016-11-12T20:07:20Z","updated_at":"2016-11-17T21:10:21Z","closed_at":"2016-11-17T21:10:21Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4420","html_url":"https://github.com/libgdx/libgdx/pull/4420","diff_url":"https://github.com/libgdx/libgdx/pull/4420.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4420.patch"},"body":"(I feel like the need for requesting rendering in this condition could be very easily overlooked, and there's no harm in doing it automatically.)\r\n\r\nEdit: Only the Javadoc needs to be corrected. There is no need to request rendering since it happens anyway.","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4420/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4419","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4419/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4419/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4419/events","html_url":"https://github.com/libgdx/libgdx/issues/4419","id":188907377,"number":4419,"title":"[Improvement] Lwjgl3 winproc handling thread/main loop thread separation","user":{"login":"voidburn","id":1438321,"avatar_url":"https://avatars3.githubusercontent.com/u/1438321?v=4","gravatar_id":"","url":"https://api.github.com/users/voidburn","html_url":"https://github.com/voidburn","followers_url":"https://api.github.com/users/voidburn/followers","following_url":"https://api.github.com/users/voidburn/following{/other_user}","gists_url":"https://api.github.com/users/voidburn/gists{/gist_id}","starred_url":"https://api.github.com/users/voidburn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/voidburn/subscriptions","organizations_url":"https://api.github.com/users/voidburn/orgs","repos_url":"https://api.github.com/users/voidburn/repos","events_url":"https://api.github.com/users/voidburn/events{/privacy}","received_events_url":"https://api.github.com/users/voidburn/received_events","type":"User","site_admin":false},"labels":[{"id":11336980,"url":"https://api.github.com/repos/libgdx/libgdx/labels/bug","name":"bug","color":"fc2929","default":true},{"id":309796149,"url":"https://api.github.com/repos/libgdx/libgdx/labels/LWJGL3","name":"LWJGL3","color":"d4c5f9","default":false}],"state":"open","locked":false,"assignee":{"login":"badlogic","id":514052,"avatar_url":"https://avatars1.githubusercontent.com/u/514052?v=4","gravatar_id":"","url":"https://api.github.com/users/badlogic","html_url":"https://github.com/badlogic","followers_url":"https://api.github.com/users/badlogic/followers","following_url":"https://api.github.com/users/badlogic/following{/other_user}","gists_url":"https://api.github.com/users/badlogic/gists{/gist_id}","starred_url":"https://api.github.com/users/badlogic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/badlogic/subscriptions","organizations_url":"https://api.github.com/users/badlogic/orgs","repos_url":"https://api.github.com/users/badlogic/repos","events_url":"https://api.github.com/users/badlogic/events{/privacy}","received_events_url":"https://api.github.com/users/badlogic/received_events","type":"User","site_admin":false},"assignees":[{"login":"badlogic","id":514052,"avatar_url":"https://avatars1.githubusercontent.com/u/514052?v=4","gravatar_id":"","url":"https://api.github.com/users/badlogic","html_url":"https://github.com/badlogic","followers_url":"https://api.github.com/users/badlogic/followers","following_url":"https://api.github.com/users/badlogic/following{/other_user}","gists_url":"https://api.github.com/users/badlogic/gists{/gist_id}","starred_url":"https://api.github.com/users/badlogic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/badlogic/subscriptions","organizations_url":"https://api.github.com/users/badlogic/orgs","repos_url":"https://api.github.com/users/badlogic/repos","events_url":"https://api.github.com/users/badlogic/events{/privacy}","received_events_url":"https://api.github.com/users/badlogic/received_events","type":"User","site_admin":false}],"milestone":null,"comments":14,"created_at":"2016-11-12T11:41:09Z","updated_at":"2017-03-29T13:09:25Z","closed_at":null,"author_association":"CONTRIBUTOR","body":"Currently when the window application is dragged it freezes the mainloop, which stops everything that doesn't run in it's own thread with its own independent update loop. This behavior is non damaging for small games, but networked simulations that involve prediction and interpolation don't like large spikes in the delta time of a frame.\r\n\r\nIs something like this conceivable?: https://github.com/LWJGL/lwjgl3-demos/blob/master/src/org/lwjgl/demo/opengl/glfw/Multithreaded.java","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4419/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4418","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4418/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4418/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4418/events","html_url":"https://github.com/libgdx/libgdx/pull/4418","id":188885651,"number":4418,"title":"Lwjgl3WindowListener.deiconified() removed","user":{"login":"cypherdare","id":1843131,"avatar_url":"https://avatars2.githubusercontent.com/u/1843131?v=4","gravatar_id":"","url":"https://api.github.com/users/cypherdare","html_url":"https://github.com/cypherdare","followers_url":"https://api.github.com/users/cypherdare/followers","following_url":"https://api.github.com/users/cypherdare/following{/other_user}","gists_url":"https://api.github.com/users/cypherdare/gists{/gist_id}","starred_url":"https://api.github.com/users/cypherdare/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cypherdare/subscriptions","organizations_url":"https://api.github.com/users/cypherdare/orgs","repos_url":"https://api.github.com/users/cypherdare/repos","events_url":"https://api.github.com/users/cypherdare/events{/privacy}","received_events_url":"https://api.github.com/users/cypherdare/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-11-12T01:59:21Z","updated_at":"2016-11-17T21:10:20Z","closed_at":"2016-11-17T21:10:20Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4418","html_url":"https://github.com/libgdx/libgdx/pull/4418","diff_url":"https://github.com/libgdx/libgdx/pull/4418.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4418.patch"},"body":"Tidying Lwjgl3WindowListener up a bit, since we already modified it.","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4418/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4417","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4417/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4417/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4417/events","html_url":"https://github.com/libgdx/libgdx/issues/4417","id":188787931,"number":4417,"title":"Creating a Mesh from a deserialized array of vertices causes `IllegalArgumentException`","user":{"login":"manabreak","id":3799319,"avatar_url":"https://avatars2.githubusercontent.com/u/3799319?v=4","gravatar_id":"","url":"https://api.github.com/users/manabreak","html_url":"https://github.com/manabreak","followers_url":"https://api.github.com/users/manabreak/followers","following_url":"https://api.github.com/users/manabreak/following{/other_user}","gists_url":"https://api.github.com/users/manabreak/gists{/gist_id}","starred_url":"https://api.github.com/users/manabreak/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/manabreak/subscriptions","organizations_url":"https://api.github.com/users/manabreak/orgs","repos_url":"https://api.github.com/users/manabreak/repos","events_url":"https://api.github.com/users/manabreak/events{/privacy}","received_events_url":"https://api.github.com/users/manabreak/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-11-11T15:45:52Z","updated_at":"2016-11-11T17:24:25Z","closed_at":"2016-11-11T17:24:25Z","author_association":"NONE","body":"#### Issue details\r\nI'm writing serialization code where the meshes are written to and read from a JSON file. The writing is successful, and so is reading up to the point where trying to create the Mesh object. When passing the float array to the Mesh, a crash happens with `IllegalArgumentException`.\r\n\r\n#### Reproduction steps/code\r\nThe JSON file contains this information: https://gist.github.com/manabreak/465cdb954a5db48b8de480bc7a09a82e\r\n\r\nThe mesh in the JSON contains a single quad - that is, four vertices with position, texcoords, normal, binormal and tangent. The vertices are laid out as per the vertex attributes in the JSON. The JSON serializer's `load()` method is as such:\r\n\r\n```\r\n@Override\r\npublic Mesh read(Json json, JsonValue jsonData, Class type) {\r\n    String[] attrArray = jsonData.get(\"attributes\").asStringArray();\r\n    VertexAttribute[] vertexAttributes = new VertexAttribute[attrArray.length];\r\n    int i = 0;\r\n    for (String a : attrArray) {\r\n        if (ShaderProgram.POSITION_ATTRIBUTE.equals(a)) {\r\n            vertexAttributes[i++] = VertexAttribute.Position();\r\n            continue;\r\n        }\r\n        if ((ShaderProgram.TEXCOORD_ATTRIBUTE + \"0\").equals(a)) {\r\n            vertexAttributes[i++] = VertexAttribute.TexCoords(0);\r\n            continue;\r\n        }\r\n        if (ShaderProgram.NORMAL_ATTRIBUTE.equals(a)) {\r\n            vertexAttributes[i++] = VertexAttribute.Normal();\r\n            continue;\r\n        }\r\n        if (ShaderProgram.BINORMAL_ATTRIBUTE.equals(a)) {\r\n            vertexAttributes[i++] = VertexAttribute.Binormal();\r\n            continue;\r\n        }\r\n        if (ShaderProgram.TANGENT_ATTRIBUTE.equals(a)) {\r\n            vertexAttributes[i++] = VertexAttribute.Tangent();\r\n        }\r\n    }\r\n    VertexAttributes attrs = new VertexAttributes(vertexAttributes);\r\n    float[] vertices = jsonData.get(\"vertices\").asFloatArray();\r\n    short[] indices = jsonData.get(\"indices\").asShortArray();\r\n\r\n    Mesh mesh = new Mesh(true, vertices.length / attrs.vertexSize, indices.length, attrs);\r\n    try {\r\n        // This call causes the issue\r\n        mesh.setVertices(vertices);\r\n    }catch(Exception e) {\r\n        e.printStackTrace();\r\n    }\r\n    mesh.setIndices(indices);\r\n    return mesh;\r\n}\r\n```\r\n\r\nThe above code works fine and the data is correct as per the JSON file until execution comes to the `mesh.setVertices(vertices);` line. The stack trace is as such:\r\n\r\n```\r\njava.lang.IllegalArgumentException\r\n\tat java.nio.Buffer.limit(Buffer.java:275)\r\n\tat com.badlogic.gdx.utils.BufferUtils.copy(BufferUtils.java:51)\r\n\tat com.badlogic.gdx.graphics.glutils.VertexBufferObject.setVertices(VertexBufferObject.java:146)\r\n\tat com.badlogic.gdx.graphics.Mesh.setVertices(Mesh.java:185)\r\n```\r\n\r\nWhen debugging, the `VertexBufferObject.setVertices()` method arguments seem to be correct at that point. When stepped into `BufferUtils.copy()`, the crash happens on the bit shift operation:\r\n\r\n```\r\npublic static void copy (float[] src, Buffer dst, int numFloats, int offset) {\r\n    if (dst instanceof ByteBuffer)\r\n        dst.limit(numFloats << 2);\r\n    else if (dst instanceof FloatBuffer) dst.limit(numFloats);\r\n\r\n    copyJni(src, dst, numFloats, offset);\r\n    dst.position(0);\r\n}\r\n```\r\n\r\n#### Version of LibGDX and/or relevant dependencies\r\n1.9.4\r\n\r\n#### Please select the affected platforms\r\n- [X] Linux (Only tested with Linux)\r\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4417/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4416","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4416/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4416/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4416/events","html_url":"https://github.com/libgdx/libgdx/pull/4416","id":188366329,"number":4416,"title":"Added overload for lookAt","user":{"login":"ghost","id":10137,"avatar_url":"https://avatars3.githubusercontent.com/u/10137?v=4","gravatar_id":"","url":"https://api.github.com/users/ghost","html_url":"https://github.com/ghost","followers_url":"https://api.github.com/users/ghost/followers","following_url":"https://api.github.com/users/ghost/following{/other_user}","gists_url":"https://api.github.com/users/ghost/gists{/gist_id}","starred_url":"https://api.github.com/users/ghost/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ghost/subscriptions","organizations_url":"https://api.github.com/users/ghost/orgs","repos_url":"https://api.github.com/users/ghost/repos","events_url":"https://api.github.com/users/ghost/events{/privacy}","received_events_url":"https://api.github.com/users/ghost/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-11-09T22:14:09Z","updated_at":"2017-03-05T11:16:11Z","closed_at":"2017-03-05T11:16:11Z","author_association":"NONE","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4416","html_url":"https://github.com/libgdx/libgdx/pull/4416","diff_url":"https://github.com/libgdx/libgdx/pull/4416.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4416.patch"},"body":"","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4416/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4415","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4415/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4415/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4415/events","html_url":"https://github.com/libgdx/libgdx/issues/4415","id":188359971,"number":4415,"title":"Actor firstAscendent method breaks HTML Build","user":{"login":"mrosack","id":750156,"avatar_url":"https://avatars2.githubusercontent.com/u/750156?v=4","gravatar_id":"","url":"https://api.github.com/users/mrosack","html_url":"https://github.com/mrosack","followers_url":"https://api.github.com/users/mrosack/followers","following_url":"https://api.github.com/users/mrosack/following{/other_user}","gists_url":"https://api.github.com/users/mrosack/gists{/gist_id}","starred_url":"https://api.github.com/users/mrosack/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mrosack/subscriptions","organizations_url":"https://api.github.com/users/mrosack/orgs","repos_url":"https://api.github.com/users/mrosack/repos","events_url":"https://api.github.com/users/mrosack/events{/privacy}","received_events_url":"https://api.github.com/users/mrosack/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-11-09T21:43:01Z","updated_at":"2016-11-09T21:52:45Z","closed_at":"2016-11-09T21:52:45Z","author_association":"NONE","body":"Commit 5656465 breaks HTML Build\r\n\r\n#### Issue details\r\nThe new firstAscendent method added to Actor in commit 5656465 breaks HTML builds.\r\n\r\n#### Reproduction steps/code\r\n\r\n1. Create an empty libgdx project\r\n2. Set gdxVersion to 1.9.5-SNAPSHOT in root build.gradle\r\n3. Add `Actor actor = new Actor();` anywhere in MyGdxGame.java\r\n\r\n#### Version of LibGDX and/or relevant dependencies\r\n1.9.5-SNAPSHOT, commit 5656465 \r\n\r\n#### Stacktrace\r\n```java\r\nCompiling module com.mygdx.game.GdxDefinitionSuperdev\r\n   [ERROR] Errors in 'jar:file:/C:/Users/mike.rosack/.gradle/caches/modules-2/files-2.1/com.badlogicgames.gdx/gdx/1.9.5-SNAPSHOT/5ad5b68f6625adc58e764fcfd9e754840d9c1e97/gdx-1.9.5-SNAPSHOT-sources.jar!/com/badlogic/gdx/scenes/scene2d/Actor.java'\r\n      [ERROR] Line 333: The method isInstance(Actor) is undefined for the type Class<T>\r\n```\r\n\r\n#### Please select the affected platforms\r\n- [ ] Android\r\n- [ ] iOS (robovm)\r\n- [ ] iOS (MOE)\r\n- [X] HTML/GWT\r\n- [ ] Windows\r\n- [ ] Linux\r\n- [ ] MacOS\r\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4415/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4414","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4414/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4414/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4414/events","html_url":"https://github.com/libgdx/libgdx/pull/4414","id":188301241,"number":4414,"title":"FrameBufferCubemap fixes","user":{"login":"code-disaster","id":4644167,"avatar_url":"https://avatars1.githubusercontent.com/u/4644167?v=4","gravatar_id":"","url":"https://api.github.com/users/code-disaster","html_url":"https://github.com/code-disaster","followers_url":"https://api.github.com/users/code-disaster/followers","following_url":"https://api.github.com/users/code-disaster/following{/other_user}","gists_url":"https://api.github.com/users/code-disaster/gists{/gist_id}","starred_url":"https://api.github.com/users/code-disaster/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/code-disaster/subscriptions","organizations_url":"https://api.github.com/users/code-disaster/orgs","repos_url":"https://api.github.com/users/code-disaster/repos","events_url":"https://api.github.com/users/code-disaster/events{/privacy}","received_events_url":"https://api.github.com/users/code-disaster/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2016-11-09T17:09:56Z","updated_at":"2016-11-10T06:50:49Z","closed_at":"2016-11-10T06:50:17Z","author_association":"MEMBER","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4414","html_url":"https://github.com/libgdx/libgdx/pull/4414","diff_url":"https://github.com/libgdx/libgdx/pull/4414.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4414.patch"},"body":"see #4409 \r\n\r\nOne from the \"how the heck did this ever work?\" category.\r\n\r\nI open a PR because I'd like some extra eyes on what I changed. Esp. if it's a good idea to rename an attribute alias like this - I reckon it may break user shaders.","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4414/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4413","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4413/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4413/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4413/events","html_url":"https://github.com/libgdx/libgdx/issues/4413","id":188230952,"number":4413,"title":"Persian support","user":{"login":"siml173","id":13538535,"avatar_url":"https://avatars3.githubusercontent.com/u/13538535?v=4","gravatar_id":"","url":"https://api.github.com/users/siml173","html_url":"https://github.com/siml173","followers_url":"https://api.github.com/users/siml173/followers","following_url":"https://api.github.com/users/siml173/following{/other_user}","gists_url":"https://api.github.com/users/siml173/gists{/gist_id}","starred_url":"https://api.github.com/users/siml173/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/siml173/subscriptions","organizations_url":"https://api.github.com/users/siml173/orgs","repos_url":"https://api.github.com/users/siml173/repos","events_url":"https://api.github.com/users/siml173/events{/privacy}","received_events_url":"https://api.github.com/users/siml173/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-11-09T12:00:39Z","updated_at":"2016-11-09T12:26:22Z","closed_at":"2016-11-09T12:26:22Z","author_association":"NONE","body":"why Libgdx doesn't support complex script like Persian?\r\ncan you add this feature for lots of programmers that put Libgdx away just for this reason?","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4413/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4412","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4412/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4412/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4412/events","html_url":"https://github.com/libgdx/libgdx/pull/4412","id":188159150,"number":4412,"title":"Add Lwjgl3 maximized window features","user":{"login":"cypherdare","id":1843131,"avatar_url":"https://avatars2.githubusercontent.com/u/1843131?v=4","gravatar_id":"","url":"https://api.github.com/users/cypherdare","html_url":"https://github.com/cypherdare","followers_url":"https://api.github.com/users/cypherdare/followers","following_url":"https://api.github.com/users/cypherdare/following{/other_user}","gists_url":"https://api.github.com/users/cypherdare/gists{/gist_id}","starred_url":"https://api.github.com/users/cypherdare/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cypherdare/subscriptions","organizations_url":"https://api.github.com/users/cypherdare/orgs","repos_url":"https://api.github.com/users/cypherdare/repos","events_url":"https://api.github.com/users/cypherdare/events{/privacy}","received_events_url":"https://api.github.com/users/cypherdare/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2016-11-09T03:16:02Z","updated_at":"2016-11-11T21:40:15Z","closed_at":"2016-11-11T20:23:07Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4412","html_url":"https://github.com/libgdx/libgdx/pull/4412","diff_url":"https://github.com/libgdx/libgdx/pull/4412.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4412.patch"},"body":"I put in a callback for maximized state, and options to maximize a window at will or start it maximized.\r\n\r\nI renamed `window.deiconify()` to `window.restore()` to reflect that it can be used for two different purposes. Better to rename it now when the backend is young than to make it a quirk forever.\r\n\r\nAddresses #4298. I didn't add a `isMaximized()` method to keep it clean, as we don't have `isFullScreen` or `isIconified` window methods, and the callback should be sufficient.","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4412/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4411","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4411/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4411/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4411/events","html_url":"https://github.com/libgdx/libgdx/pull/4411","id":188057633,"number":4411,"title":"Fix for #4409 - ","user":{"login":"JustinMullin","id":1557953,"avatar_url":"https://avatars1.githubusercontent.com/u/1557953?v=4","gravatar_id":"","url":"https://api.github.com/users/JustinMullin","html_url":"https://github.com/JustinMullin","followers_url":"https://api.github.com/users/JustinMullin/followers","following_url":"https://api.github.com/users/JustinMullin/following{/other_user}","gists_url":"https://api.github.com/users/JustinMullin/gists{/gist_id}","starred_url":"https://api.github.com/users/JustinMullin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JustinMullin/subscriptions","organizations_url":"https://api.github.com/users/JustinMullin/orgs","repos_url":"https://api.github.com/users/JustinMullin/repos","events_url":"https://api.github.com/users/JustinMullin/events{/privacy}","received_events_url":"https://api.github.com/users/JustinMullin/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2016-11-08T17:44:31Z","updated_at":"2016-11-08T22:31:52Z","closed_at":"2016-11-08T22:31:52Z","author_association":"NONE","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4411","html_url":"https://github.com/libgdx/libgdx/pull/4411","diff_url":"https://github.com/libgdx/libgdx/pull/4411.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4411.patch"},"body":"See also: https://github.com/libgdx/libgdx/issues/4409 and https://github.com/libgdx/libgdx/issues/3227.\r\n\r\nDeferred frame buffer status query 'til after frame buffer bind. This prevents a FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT error on some systems.","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4411/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4410","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4410/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4410/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4410/events","html_url":"https://github.com/libgdx/libgdx/pull/4410","id":188057249,"number":4410,"title":"Fix potential multi-window resize bug","user":{"login":"cypherdare","id":1843131,"avatar_url":"https://avatars2.githubusercontent.com/u/1843131?v=4","gravatar_id":"","url":"https://api.github.com/users/cypherdare","html_url":"https://github.com/cypherdare","followers_url":"https://api.github.com/users/cypherdare/followers","following_url":"https://api.github.com/users/cypherdare/following{/other_user}","gists_url":"https://api.github.com/users/cypherdare/gists{/gist_id}","starred_url":"https://api.github.com/users/cypherdare/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cypherdare/subscriptions","organizations_url":"https://api.github.com/users/cypherdare/orgs","repos_url":"https://api.github.com/users/cypherdare/repos","events_url":"https://api.github.com/users/cypherdare/events{/privacy}","received_events_url":"https://api.github.com/users/cypherdare/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-11-08T17:42:48Z","updated_at":"2016-11-08T20:43:19Z","closed_at":"2016-11-08T20:43:19Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4410","html_url":"https://github.com/libgdx/libgdx/pull/4410","diff_url":"https://github.com/libgdx/libgdx/pull/4410.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4410.patch"},"body":"A resize triggers a call to render(). Need to be sure Gdx.graphics, Gdx.input, etc. are correct for the window that's getting rendered.","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4410/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4409","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4409/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4409/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4409/events","html_url":"https://github.com/libgdx/libgdx/issues/4409","id":188056511,"number":4409,"title":"\"unknown error 36059\" when instantiating FrameBufferCubemap","user":{"login":"JustinMullin","id":1557953,"avatar_url":"https://avatars1.githubusercontent.com/u/1557953?v=4","gravatar_id":"","url":"https://api.github.com/users/JustinMullin","html_url":"https://github.com/JustinMullin","followers_url":"https://api.github.com/users/JustinMullin/followers","following_url":"https://api.github.com/users/JustinMullin/following{/other_user}","gists_url":"https://api.github.com/users/JustinMullin/gists{/gist_id}","starred_url":"https://api.github.com/users/JustinMullin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JustinMullin/subscriptions","organizations_url":"https://api.github.com/users/JustinMullin/orgs","repos_url":"https://api.github.com/users/JustinMullin/repos","events_url":"https://api.github.com/users/JustinMullin/events{/privacy}","received_events_url":"https://api.github.com/users/JustinMullin/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":11,"created_at":"2016-11-08T17:39:27Z","updated_at":"2016-11-10T23:22:16Z","closed_at":"2016-11-10T23:22:16Z","author_association":"NONE","body":"When attempting to construct a simple FrameBufferCubemap on OS/X Yosemite (10.10.5), using LibGDX 1.9.4 stable on the LWJGL/Desktop backend, I'm getting the error below. I have not attempted to reproduce on other platforms.\r\n\r\nOpenGL appears to return an error status from `glCheckFramebufferStatus` if it's queried before `glBindFramebuffer`. In the current state of GLFrameBuffer the status is queried before the FB bind, resulting in an error code.\r\n\r\nThis appears to be regression on https://github.com/libgdx/libgdx/issues/3227. See also the original fix commit at: https://github.com/libgdx/libgdx/pull/3233.\r\n\r\nStack trace:\r\n\r\n```\r\nException in thread \"LWJGL Application\" java.lang.IllegalStateException: frame buffer couldn't be constructed: unknown error 36059\r\nat com.badlogic.gdx.graphics.glutils.GLFrameBuffer.build(GLFrameBuffer.java:230)\r\nat com.badlogic.gdx.graphics.glutils.GLFrameBuffer.<init>(GLFrameBuffer.java:118)\r\nat com.badlogic.gdx.graphics.glutils.FrameBufferCubemap.<init>(FrameBufferCubemap.java:88)\r\nat com.badlogic.gdx.graphics.glutils.FrameBufferCubemap.<init>(FrameBufferCubemap.java:75)\r\nat xyz.jmullin.fbcube.error.desktop.FbCubeError.create(FbCubeError.java:11)\r\nat com.badlogic.gdx.backends.lwjgl.LwjglApplication.mainLoop(LwjglApplication.java:147)\r\nat com.badlogic.gdx.backends.lwjgl.LwjglApplication$1.run(LwjglApplication.java:124)\r\n```\r\n\r\nMinimal application to reproduce:\r\n\r\n```\r\nimport com.badlogic.gdx.backends.lwjgl.LwjglApplication;\r\nimport com.badlogic.gdx.*;\r\nimport com.badlogic.gdx.graphics.GL20;\r\nimport com.badlogic.gdx.graphics.Pixmap;\r\nimport com.badlogic.gdx.graphics.glutils.FrameBufferCubemap;\r\n\r\npublic class FbCubeError extends ApplicationAdapter {\r\n\tpublic void create () {\r\n\t\tnew FrameBufferCubemap(Pixmap.Format.RGB888, 1024, 1024, true);\r\n\t}\r\n\r\n\tpublic void render () {\r\n\t\tGdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);\r\n\t}\r\n\r\n\tpublic static void main (String[] args) throws Exception {\r\n\t\tnew LwjglApplication(new FbCubeError());\r\n\t}\r\n}\r\n```","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4409/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4408","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4408/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4408/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4408/events","html_url":"https://github.com/libgdx/libgdx/issues/4408","id":188013888,"number":4408,"title":"Bullet wrapper - wrong return type in btShapeHull","user":{"login":"parnold-x","id":3041711,"avatar_url":"https://avatars3.githubusercontent.com/u/3041711?v=4","gravatar_id":"","url":"https://api.github.com/users/parnold-x","html_url":"https://github.com/parnold-x","followers_url":"https://api.github.com/users/parnold-x/followers","following_url":"https://api.github.com/users/parnold-x/following{/other_user}","gists_url":"https://api.github.com/users/parnold-x/gists{/gist_id}","starred_url":"https://api.github.com/users/parnold-x/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/parnold-x/subscriptions","organizations_url":"https://api.github.com/users/parnold-x/orgs","repos_url":"https://api.github.com/users/parnold-x/repos","events_url":"https://api.github.com/users/parnold-x/events{/privacy}","received_events_url":"https://api.github.com/users/parnold-x/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2016-11-08T15:00:30Z","updated_at":"2016-11-10T09:34:50Z","closed_at":"2016-11-09T21:20:14Z","author_association":"NONE","body":"Hello, i think i found a issue with the swig wrapping of **btShapeHull**.\r\n\r\nthe method **getVertexPointer()** returns a single btVector3\r\nsee [here](https://github.com/libgdx/libgdx/blob/9b8f20b2d0e96e53f0f2b98dc8f6131c810aae71/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btShapeHull.java#L81)\r\n\r\n\r\nbut it should be some kind of List of vectors\r\nsee [here](https://github.com/libgdx/libgdx/blob/9b8f20b2d0e96e53f0f2b98dc8f6131c810aae71/extensions/gdx-bullet/jni/src/bullet/BulletCollision/CollisionShapes/btShapeHull.h#L51)\r\n\r\nalso the method getIndexPointer should be return a longbuffer\r\nsee [here](https://github.com/libgdx/libgdx/blob/9b8f20b2d0e96e53f0f2b98dc8f6131c810aae71/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btShapeHull.java#L86)\r\n\r\nbut should return some kind of list of integers\r\nsee [here](https://github.com/libgdx/libgdx/blob/9b8f20b2d0e96e53f0f2b98dc8f6131c810aae71/extensions/gdx-bullet/jni/src/bullet/BulletCollision/CollisionShapes/btShapeHull.h#L55)\r\n\r\ni think this is strange but it could be intended though. Would be nice to know in this case.\r\n\r\nThanks and Greetings\r\nPeter","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4408/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4407","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4407/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4407/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4407/events","html_url":"https://github.com/libgdx/libgdx/issues/4407","id":187963244,"number":4407,"title":"Bullet wrapper - Some upcast static methods are missing","user":{"login":"parnold-x","id":3041711,"avatar_url":"https://avatars3.githubusercontent.com/u/3041711?v=4","gravatar_id":"","url":"https://api.github.com/users/parnold-x","html_url":"https://github.com/parnold-x","followers_url":"https://api.github.com/users/parnold-x/followers","following_url":"https://api.github.com/users/parnold-x/following{/other_user}","gists_url":"https://api.github.com/users/parnold-x/gists{/gist_id}","starred_url":"https://api.github.com/users/parnold-x/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/parnold-x/subscriptions","organizations_url":"https://api.github.com/users/parnold-x/orgs","repos_url":"https://api.github.com/users/parnold-x/repos","events_url":"https://api.github.com/users/parnold-x/events{/privacy}","received_events_url":"https://api.github.com/users/parnold-x/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2016-11-08T11:05:29Z","updated_at":"2016-11-09T13:45:55Z","closed_at":"2016-11-09T13:45:55Z","author_association":"NONE","body":"Hello, it seems like some static upcast methods are not wrapped.\r\nFor example the btRidgidBody has no upcast method that it should have according to \r\nhttps://github.com/libgdx/libgdx/wiki/Bullet%20Wrapper%20-%20Using%20the%20wrapper#extending-classes","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4407/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4406","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4406/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4406/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4406/events","html_url":"https://github.com/libgdx/libgdx/issues/4406","id":187945397,"number":4406,"title":"libGdx Wiki - Extending the simple game - Sample code does not dispose assets","user":{"login":"PeterStampfli","id":3678641,"avatar_url":"https://avatars1.githubusercontent.com/u/3678641?v=4","gravatar_id":"","url":"https://api.github.com/users/PeterStampfli","html_url":"https://github.com/PeterStampfli","followers_url":"https://api.github.com/users/PeterStampfli/followers","following_url":"https://api.github.com/users/PeterStampfli/following{/other_user}","gists_url":"https://api.github.com/users/PeterStampfli/gists{/gist_id}","starred_url":"https://api.github.com/users/PeterStampfli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/PeterStampfli/subscriptions","organizations_url":"https://api.github.com/users/PeterStampfli/orgs","repos_url":"https://api.github.com/users/PeterStampfli/repos","events_url":"https://api.github.com/users/PeterStampfli/events{/privacy}","received_events_url":"https://api.github.com/users/PeterStampfli/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-11-08T09:47:07Z","updated_at":"2016-11-08T09:50:06Z","closed_at":"2016-11-08T09:50:06Z","author_association":"NONE","body":"Concerns the libGdx wiki page: [https://github.com/libgdx/libgdx/wiki/Extending-the-simple-game](https://github.com/libgdx/libgdx/wiki/Extending-the-simple-game):\r\nThe code for the GameScreen class uses its dispose()-method to dispose diverse assets. Unfortunately, this method is not called automatically:  \r\nIn [https://libgdx.badlogicgames.com/nightlies/docs/api/com/badlogic/gdx/Screen.html](https://libgdx.badlogicgames.com/nightlies/docs/api/com/badlogic/gdx/Screen.html) you see \r\n\r\n> Note that dispose() is not called automatically.\r\n\r\nThis is fine, but we have to take care. Thus we need to call the dispose()-method of the GameScreen instance in the dispose()-method of the Drop class extending Game. This is missing and assets will thus not be disposed, creating memory leaks. I found the same error in other libGdx tutorials too.\r\n**This is subtle and everyone should be aware of it, I suppose.** It would be good to update the wiki.","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4406/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4405","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4405/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4405/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4405/events","html_url":"https://github.com/libgdx/libgdx/pull/4405","id":187880548,"number":4405,"title":"Lwjgl3 non-continuous rendering.","user":{"login":"cypherdare","id":1843131,"avatar_url":"https://avatars2.githubusercontent.com/u/1843131?v=4","gravatar_id":"","url":"https://api.github.com/users/cypherdare","html_url":"https://github.com/cypherdare","followers_url":"https://api.github.com/users/cypherdare/followers","following_url":"https://api.github.com/users/cypherdare/following{/other_user}","gists_url":"https://api.github.com/users/cypherdare/gists{/gist_id}","starred_url":"https://api.github.com/users/cypherdare/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cypherdare/subscriptions","organizations_url":"https://api.github.com/users/cypherdare/orgs","repos_url":"https://api.github.com/users/cypherdare/repos","events_url":"https://api.github.com/users/cypherdare/events{/privacy}","received_events_url":"https://api.github.com/users/cypherdare/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2016-11-08T01:49:04Z","updated_at":"2016-11-08T21:56:49Z","closed_at":"2016-11-08T21:56:49Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4405","html_url":"https://github.com/libgdx/libgdx/pull/4405","diff_url":"https://github.com/libgdx/libgdx/pull/4405.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4405.patch"},"body":"This is an evolved version of #3772 that I worked out with @code-disaster.","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4405/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4404","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4404/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4404/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4404/events","html_url":"https://github.com/libgdx/libgdx/pull/4404","id":187879531,"number":4404,"title":"Clean up redundant code in Lwjgl3 backend","user":{"login":"cypherdare","id":1843131,"avatar_url":"https://avatars2.githubusercontent.com/u/1843131?v=4","gravatar_id":"","url":"https://api.github.com/users/cypherdare","html_url":"https://github.com/cypherdare","followers_url":"https://api.github.com/users/cypherdare/followers","following_url":"https://api.github.com/users/cypherdare/following{/other_user}","gists_url":"https://api.github.com/users/cypherdare/gists{/gist_id}","starred_url":"https://api.github.com/users/cypherdare/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cypherdare/subscriptions","organizations_url":"https://api.github.com/users/cypherdare/orgs","repos_url":"https://api.github.com/users/cypherdare/repos","events_url":"https://api.github.com/users/cypherdare/events{/privacy}","received_events_url":"https://api.github.com/users/cypherdare/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-11-08T01:41:17Z","updated_at":"2016-11-08T20:43:18Z","closed_at":"2016-11-08T20:43:18Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4404","html_url":"https://github.com/libgdx/libgdx/pull/4404","diff_url":"https://github.com/libgdx/libgdx/pull/4404.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4404.patch"},"body":"I broke this out of #4261 to avoid changing too much at once. This cleans up redundant code by having the app config extend the window config and adding some copy methods to make these easier to maintain without introducing bugs.\r\n\r\nI also added the ability to change the window size limits of an existing window.\r\n\r\n@code-disaster I can rebase and squash this after you merge #4261 so it isn't so messy.","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4404/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4403","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4403/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4403/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4403/events","html_url":"https://github.com/libgdx/libgdx/pull/4403","id":187583981,"number":4403,"title":"Updated VisUI extension version","user":{"login":"kotcrab","id":4594081,"avatar_url":"https://avatars1.githubusercontent.com/u/4594081?v=4","gravatar_id":"","url":"https://api.github.com/users/kotcrab","html_url":"https://github.com/kotcrab","followers_url":"https://api.github.com/users/kotcrab/followers","following_url":"https://api.github.com/users/kotcrab/following{/other_user}","gists_url":"https://api.github.com/users/kotcrab/gists{/gist_id}","starred_url":"https://api.github.com/users/kotcrab/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kotcrab/subscriptions","organizations_url":"https://api.github.com/users/kotcrab/orgs","repos_url":"https://api.github.com/users/kotcrab/repos","events_url":"https://api.github.com/users/kotcrab/events{/privacy}","received_events_url":"https://api.github.com/users/kotcrab/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-11-06T19:47:23Z","updated_at":"2016-11-06T20:55:59Z","closed_at":"2016-11-06T20:55:59Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4403","html_url":"https://github.com/libgdx/libgdx/pull/4403","diff_url":"https://github.com/libgdx/libgdx/pull/4403.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4403.patch"},"body":"","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4403/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4402","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4402/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4402/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4402/events","html_url":"https://github.com/libgdx/libgdx/issues/4402","id":187460834,"number":4402,"title":"Scala and GWT throws a compiling error","user":{"login":"Litarvan","id":8712146,"avatar_url":"https://avatars3.githubusercontent.com/u/8712146?v=4","gravatar_id":"","url":"https://api.github.com/users/Litarvan","html_url":"https://github.com/Litarvan","followers_url":"https://api.github.com/users/Litarvan/followers","following_url":"https://api.github.com/users/Litarvan/following{/other_user}","gists_url":"https://api.github.com/users/Litarvan/gists{/gist_id}","starred_url":"https://api.github.com/users/Litarvan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Litarvan/subscriptions","organizations_url":"https://api.github.com/users/Litarvan/orgs","repos_url":"https://api.github.com/users/Litarvan/repos","events_url":"https://api.github.com/users/Litarvan/events{/privacy}","received_events_url":"https://api.github.com/users/Litarvan/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-11-04T23:42:01Z","updated_at":"2016-11-04T23:44:28Z","closed_at":"2016-11-04T23:44:28Z","author_association":"NONE","body":"#### Issue details\r\nWhen using Scala on libgdx (with gdx-setup) with Gradle, building :html throws an error.\r\n\r\n#### Reproduction steps/code\r\nCreate a project on gdx-setup (Desktop and HTML)\r\nImport the project (on IntelliJ ?)\r\nAdd Scala using this link : https://github.com/libgdx/libgdx/wiki/Using-libgdx-with-Scala (with Gradle)\r\nRefresh gradle\r\nConvert the main game class on core to Scala\r\nDo :html:build\r\nSee the error\r\n\r\n#### Version of LibGDX and/or relevant dependencies\r\nLibGDX 1.9.4\r\nScala 2.11.7\r\n\r\n#### Stacktrace\r\n```java\r\n:html:addSource\r\n:html:compileGwt\r\nCompiling module fr.litarvan.gdxtest.GdxDefinition\r\n   Validating units:\r\n      [ERROR] Errors in 'file:/home/litarvan/Documents/Temp/GDXTest/html/src/fr/litarvan/gdxtest/client/HtmlLauncher.java'\r\n         [ERROR] Line 17: No source code is available for type fr.litarvan.gdxtest.GdxTest; did you forget to inherit a required module?\r\n   Finding entry point classes\r\n      [ERROR] Errors in 'file:/home/litarvan/Documents/Temp/GDXTest/html/src/fr/litarvan/gdxtest/client/HtmlLauncher.java'\r\n         [ERROR] Line 17: No source code is available for type fr.litarvan.gdxtest.GdxTest; did you forget to inherit a required module?\r\n      [ERROR] Unable to find type 'fr.litarvan.gdxtest.client.HtmlLauncher'\r\n         [ERROR] Hint: Previous compiler errors may have made this type unavailable\r\n         [ERROR] Hint: Check the inheritance chain from your module; it may not be inheriting a required module or a module may not be adding its source path entries properly\r\n:html:compileGwt FAILED\r\n\r\nFAILURE: Build failed with an exception.\r\n\r\n* What went wrong:\r\nExecution failed for task ':html:compileGwt'.\r\n> Process 'command '/usr/lib/jvm/jdk-8-oracle-x64/bin/java'' finished with non-zero exit value 1\r\n\r\n* Try:\r\nRun with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output.\r\n\r\nBUILD FAILED\r\n```\r\n\r\n#### Please select the affected platforms\r\n- [ ] Android\r\n- [ ] iOS (robovm)\r\n- [ ] iOS (MOE)\r\n- [x] HTML/GWT\r\n- [ ] Windows\r\n- [ ] Linux\r\n- [ ] MacOS\r\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4402/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4401","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4401/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4401/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4401/events","html_url":"https://github.com/libgdx/libgdx/pull/4401","id":187435587,"number":4401,"title":"Fix #4330","user":{"login":"intrigus","id":10353467,"avatar_url":"https://avatars2.githubusercontent.com/u/10353467?v=4","gravatar_id":"","url":"https://api.github.com/users/intrigus","html_url":"https://github.com/intrigus","followers_url":"https://api.github.com/users/intrigus/followers","following_url":"https://api.github.com/users/intrigus/following{/other_user}","gists_url":"https://api.github.com/users/intrigus/gists{/gist_id}","starred_url":"https://api.github.com/users/intrigus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/intrigus/subscriptions","organizations_url":"https://api.github.com/users/intrigus/orgs","repos_url":"https://api.github.com/users/intrigus/repos","events_url":"https://api.github.com/users/intrigus/events{/privacy}","received_events_url":"https://api.github.com/users/intrigus/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-11-04T20:52:37Z","updated_at":"2016-11-06T04:38:36Z","closed_at":"2016-11-06T04:38:36Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4401","html_url":"https://github.com/libgdx/libgdx/pull/4401","diff_url":"https://github.com/libgdx/libgdx/pull/4401.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4401.patch"},"body":"This PR adds the missing method `getReferenceAngle()` to `WeldJoint.java`.","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4401/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":1}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4400","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4400/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4400/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4400/events","html_url":"https://github.com/libgdx/libgdx/pull/4400","id":187378119,"number":4400,"title":"Fix #4264","user":{"login":"intrigus","id":10353467,"avatar_url":"https://avatars2.githubusercontent.com/u/10353467?v=4","gravatar_id":"","url":"https://api.github.com/users/intrigus","html_url":"https://github.com/intrigus","followers_url":"https://api.github.com/users/intrigus/followers","following_url":"https://api.github.com/users/intrigus/following{/other_user}","gists_url":"https://api.github.com/users/intrigus/gists{/gist_id}","starred_url":"https://api.github.com/users/intrigus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/intrigus/subscriptions","organizations_url":"https://api.github.com/users/intrigus/orgs","repos_url":"https://api.github.com/users/intrigus/repos","events_url":"https://api.github.com/users/intrigus/events{/privacy}","received_events_url":"https://api.github.com/users/intrigus/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2016-11-04T16:25:09Z","updated_at":"2016-11-25T16:41:26Z","closed_at":"2016-11-25T16:41:25Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4400","html_url":"https://github.com/libgdx/libgdx/pull/4400","diff_url":"https://github.com/libgdx/libgdx/pull/4400.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4400.patch"},"body":"This PR fixes #4264 \r\nThe fix that has been applied to the `OrderedMapEntries`'s `remove()` method in https://github.com/libgdx/libgdx/commit/ff6f7ca68a92c286ba22fdcb6f0fe444aff91f66#diff-de7b99a30e1c60ad7d53b49223a4fc2bL180\r\nhas also been applied to the `remove()` methods of `OrderedMapValues` and `OrderedMapKeys`.","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4400/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4399","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4399/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4399/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4399/events","html_url":"https://github.com/libgdx/libgdx/issues/4399","id":187315607,"number":4399,"title":"Why buffer.toByteArray() can not work on html ?","user":{"login":"tianqiujie","id":2835129,"avatar_url":"https://avatars1.githubusercontent.com/u/2835129?v=4","gravatar_id":"","url":"https://api.github.com/users/tianqiujie","html_url":"https://github.com/tianqiujie","followers_url":"https://api.github.com/users/tianqiujie/followers","following_url":"https://api.github.com/users/tianqiujie/following{/other_user}","gists_url":"https://api.github.com/users/tianqiujie/gists{/gist_id}","starred_url":"https://api.github.com/users/tianqiujie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tianqiujie/subscriptions","organizations_url":"https://api.github.com/users/tianqiujie/orgs","repos_url":"https://api.github.com/users/tianqiujie/repos","events_url":"https://api.github.com/users/tianqiujie/events{/privacy}","received_events_url":"https://api.github.com/users/tianqiujie/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-11-04T11:56:20Z","updated_at":"2016-11-04T15:30:01Z","closed_at":"2016-11-04T15:30:01Z","author_association":"CONTRIBUTOR","body":"- [ ] Android\r\n- [ ] iOS (robovm)\r\n- [ ] iOS (MOE)\r\n- [ *] HTML/GWT\r\n- [ ] Windows\r\n- [ ] Linux\r\n- [ ] MacOS\r\n\r\n```\r\nByteArrayOutputStream buffer = new ByteArrayOutputStream();\r\n        try {\r\n            ImageIO.write(bi, \"png\", buffer);\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        return new Pixmap(buffer.toByteArray(), 0, buffer.toByteArray().length);\r\n```\r\n\r\nError is: \"array[] can not covert to int\" at the \r\n```\r\nnew Pixmap(buffer.toByteArray(),\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4399/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}}],"meta":{"x-ratelimit-limit":"5000","x-ratelimit-remaining":"4983","x-ratelimit-reset":"1506844633","x-github-request-id":"AA70:0285:1029D3C:1FB2F67:59D0934A","x-github-media-type":"github.squirrel-girl-preview","link":"<https://api.github.com/repositories/5373551/issues?state=all&page=18>; rel=\"next\", <https://api.github.com/repositories/5373551/issues?state=all&page=164>; rel=\"last\", <https://api.github.com/repositories/5373551/issues?state=all&page=1>; rel=\"first\", <https://api.github.com/repositories/5373551/issues?state=all&page=16>; rel=\"prev\"","etag":"\"a832e2c9ad70dfd0b603df8dacc9ce8f\"","status":"200 OK"}}
