{"data":[{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2445","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2445/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2445/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2445/events","html_url":"https://github.com/libgdx/libgdx/issues/2445","id":45425622,"number":2445,"title":"Add 64-bit support for Android x86 and arm targets","user":{"login":"badlogic","id":514052,"avatar_url":"https://avatars1.githubusercontent.com/u/514052?v=4","gravatar_id":"","url":"https://api.github.com/users/badlogic","html_url":"https://github.com/badlogic","followers_url":"https://api.github.com/users/badlogic/followers","following_url":"https://api.github.com/users/badlogic/following{/other_user}","gists_url":"https://api.github.com/users/badlogic/gists{/gist_id}","starred_url":"https://api.github.com/users/badlogic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/badlogic/subscriptions","organizations_url":"https://api.github.com/users/badlogic/orgs","repos_url":"https://api.github.com/users/badlogic/repos","events_url":"https://api.github.com/users/badlogic/events{/privacy}","received_events_url":"https://api.github.com/users/badlogic/received_events","type":"User","site_admin":false},"labels":[{"id":59604218,"url":"https://api.github.com/repos/libgdx/libgdx/labels/android","name":"android","color":"009800","default":false},{"id":11336982,"url":"https://api.github.com/repos/libgdx/libgdx/labels/enhancement","name":"enhancement","color":"84b6eb","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2014-10-09T22:27:45Z","updated_at":"2017-01-16T14:59:19Z","closed_at":"2016-01-23T11:27:04Z","author_association":"OWNER","body":"Requires update of SDK/NDK on build server.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2445/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2444","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2444/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2444/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2444/events","html_url":"https://github.com/libgdx/libgdx/pull/2444","id":45423307,"number":2444,"title":"Emulate BufferUtils.copy(Buffer, Buffer, numElements)","user":{"login":"xoppa","id":2349087,"avatar_url":"https://avatars3.githubusercontent.com/u/2349087?v=4","gravatar_id":"","url":"https://api.github.com/users/xoppa","html_url":"https://github.com/xoppa","followers_url":"https://api.github.com/users/xoppa/followers","following_url":"https://api.github.com/users/xoppa/following{/other_user}","gists_url":"https://api.github.com/users/xoppa/gists{/gist_id}","starred_url":"https://api.github.com/users/xoppa/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xoppa/subscriptions","organizations_url":"https://api.github.com/users/xoppa/orgs","repos_url":"https://api.github.com/users/xoppa/repos","events_url":"https://api.github.com/users/xoppa/events{/privacy}","received_events_url":"https://api.github.com/users/xoppa/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2014-10-09T22:02:03Z","updated_at":"2014-10-25T21:21:25Z","closed_at":"2014-10-25T21:21:25Z","author_association":"OWNER","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2444","html_url":"https://github.com/libgdx/libgdx/pull/2444","diff_url":"https://github.com/libgdx/libgdx/pull/2444.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2444.patch"},"body":"Also added `BufferUtilsTest` to the gwt tests.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2444/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2443","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2443/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2443/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2443/events","html_url":"https://github.com/libgdx/libgdx/issues/2443","id":45377018,"number":2443,"title":"improving DirectionalShadowLight behaviour","user":{"login":"ghost","id":10137,"avatar_url":"https://avatars3.githubusercontent.com/u/10137?v=4","gravatar_id":"","url":"https://api.github.com/users/ghost","html_url":"https://github.com/ghost","followers_url":"https://api.github.com/users/ghost/followers","following_url":"https://api.github.com/users/ghost/following{/other_user}","gists_url":"https://api.github.com/users/ghost/gists{/gist_id}","starred_url":"https://api.github.com/users/ghost/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ghost/subscriptions","organizations_url":"https://api.github.com/users/ghost/orgs","repos_url":"https://api.github.com/users/ghost/repos","events_url":"https://api.github.com/users/ghost/events{/privacy}","received_events_url":"https://api.github.com/users/ghost/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-10-09T15:04:04Z","updated_at":"2014-10-09T15:59:26Z","closed_at":"2014-10-09T15:59:26Z","author_association":"NONE","body":"Although DirectionalShadowLight is currently experimental and unsupported, I find it quite usable and stable most of the time; yet there is a single issue I'd like to address - shadow edges. I'm not talking about their sharpness/rastrization (as that is obviously dependent on FBO settings etc), but about the size of the edge area, which is (obviously) a single pixel too small, creating a nasty visual artifact, visible especially with close-ups, but also noticeable at distance - and about their density.\n\nWould it be possible for current implementation (I don't have time to dig into it to the very bottom) to allow increasing the size of the shadow and/or to antialias/create a smooth transition/create a gradient of the shadow? If so, how?\n\nScreenshot attached.\n![edge-shot](https://cloud.githubusercontent.com/assets/9106762/4577962/0ad1a820-4fc1-11e4-96cd-85f4a06fbe53.png)\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2443/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2442","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2442/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2442/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2442/events","html_url":"https://github.com/libgdx/libgdx/issues/2442","id":45366000,"number":2442,"title":"Shaperenderer .drawCircle draws Square","user":{"login":"boldijar","id":7826299,"avatar_url":"https://avatars1.githubusercontent.com/u/7826299?v=4","gravatar_id":"","url":"https://api.github.com/users/boldijar","html_url":"https://github.com/boldijar","followers_url":"https://api.github.com/users/boldijar/followers","following_url":"https://api.github.com/users/boldijar/following{/other_user}","gists_url":"https://api.github.com/users/boldijar/gists{/gist_id}","starred_url":"https://api.github.com/users/boldijar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/boldijar/subscriptions","organizations_url":"https://api.github.com/users/boldijar/orgs","repos_url":"https://api.github.com/users/boldijar/repos","events_url":"https://api.github.com/users/boldijar/events{/privacy}","received_events_url":"https://api.github.com/users/boldijar/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-10-09T13:30:18Z","updated_at":"2014-10-09T14:23:49Z","closed_at":"2014-10-09T14:23:49Z","author_association":"NONE","body":"My camera is 8 x 4.8 pixels, and when I want to draw a circle with the shaperenderer i get a square, (or polygon if the radius is greater).\n\nWhat I do in the render method:\n\nset the projection matrix of my shaperenderer\nbegin with shapetype.line\n\ndraw some lines\n\ndraw 2 circles:\n renderer.circle(left.x, left.y, 1.5f);\n renderer.circle(right.x, right.y, 0.5f);\n\nend with shaperenderer.\n\n![capture](https://cloud.githubusercontent.com/assets/7826299/4576965/5600e2a6-4fb8-11e4-9bfd-c74c97702030.PNG)\n\n(sorry for the left circle, is a little bit out of screen.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2442/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2441","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2441/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2441/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2441/events","html_url":"https://github.com/libgdx/libgdx/issues/2441","id":45354564,"number":2441,"title":"ObjLoader enhanced MTL support","user":{"login":"ghost","id":10137,"avatar_url":"https://avatars3.githubusercontent.com/u/10137?v=4","gravatar_id":"","url":"https://api.github.com/users/ghost","html_url":"https://github.com/ghost","followers_url":"https://api.github.com/users/ghost/followers","following_url":"https://api.github.com/users/ghost/following{/other_user}","gists_url":"https://api.github.com/users/ghost/gists{/gist_id}","starred_url":"https://api.github.com/users/ghost/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ghost/subscriptions","organizations_url":"https://api.github.com/users/ghost/orgs","repos_url":"https://api.github.com/users/ghost/repos","events_url":"https://api.github.com/users/ghost/events{/privacy}","received_events_url":"https://api.github.com/users/ghost/received_events","type":"User","site_admin":false},"labels":[{"id":11336982,"url":"https://api.github.com/repos/libgdx/libgdx/labels/enhancement","name":"enhancement","color":"84b6eb","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2014-10-09T11:22:14Z","updated_at":"2014-12-23T16:01:32Z","closed_at":"2014-12-22T16:23:18Z","author_association":"NONE","body":"I know that increasing the level of support for OBJ is currently low priority, and current stock libGDX shader ain't that much in terms of capabilities, but for people actually having shaders with various maps (bump, shininess etc) why not provide a fuller and more complex texturing/coloring functionality into MtlLoader?\n\nhttps://gist.github.com/vaxquis/3380e8ad640c3ddf42d5\n\nI've added a) all map/color tags from http://paulbourke.net/dataformats/mtl/ (Ka/map_Ka/map_Ns/map_d/disp/bump/refl - all officially supported), b) all tags from http://en.wikipedia.org/wiki/Wavefront_.obj_file (Ke/map_Ke/map_bump - semi-supported, but commonly found in files exported from different modellers).\n\nAlso, I've done a slight code refactoring to make it shorter, more concise and more readable.\n\nFeel free to use the code supplied for trunk patching, it's Public Domain as far as I'm concerned.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2441/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2440","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2440/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2440/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2440/events","html_url":"https://github.com/libgdx/libgdx/issues/2440","id":45351432,"number":2440,"title":"PropertyChangeSupport for Scene2D","user":{"login":"oktinaut","id":2391180,"avatar_url":"https://avatars1.githubusercontent.com/u/2391180?v=4","gravatar_id":"","url":"https://api.github.com/users/oktinaut","html_url":"https://github.com/oktinaut","followers_url":"https://api.github.com/users/oktinaut/followers","following_url":"https://api.github.com/users/oktinaut/following{/other_user}","gists_url":"https://api.github.com/users/oktinaut/gists{/gist_id}","starred_url":"https://api.github.com/users/oktinaut/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/oktinaut/subscriptions","organizations_url":"https://api.github.com/users/oktinaut/orgs","repos_url":"https://api.github.com/users/oktinaut/repos","events_url":"https://api.github.com/users/oktinaut/events{/privacy}","received_events_url":"https://api.github.com/users/oktinaut/received_events","type":"User","site_admin":false},"labels":[{"id":11336982,"url":"https://api.github.com/repos/libgdx/libgdx/labels/enhancement","name":"enhancement","color":"84b6eb","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2014-10-09T10:43:02Z","updated_at":"2015-02-02T17:58:48Z","closed_at":"2015-02-02T17:58:48Z","author_association":"NONE","body":"The Scene2D package is great, it is easy to use and easy to extend. However, what is holding it back from being used for more complex UI applications is the fact that there currently is no way to easily bind the existing components to a controller or model (if you are following the MVC pattern, but it is the same for other patterns like MVVM or MVP) using an existing binding library. Almost all of them rely on the use of the PropertyChangeSupport class in the java.beans package, which is available on Android too (sadly GWT doesnt support it out of the box, but it is emulated using the gwtx library). \nThe only requirement for implementing it is adding a few methods (register and remove PropertyChangeListeners, firing PropertyChangeEvents) to a base class (preferably Actor, or Widget and WidgetGroup). Then the Widgets like a TextField only have to fire an Event when their fields change. The widgets' functionality would be left untouched and should not cause breaking changes.\nI am currently working on it myself, but I want to know if anyone else is interested in including it into libgdx. The addition would make libgdx much more attractive for cross-platform app development.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2440/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2439","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2439/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2439/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2439/events","html_url":"https://github.com/libgdx/libgdx/issues/2439","id":45349755,"number":2439,"title":"Json support for other Collection/Set implementations","user":{"login":"ghost","id":10137,"avatar_url":"https://avatars3.githubusercontent.com/u/10137?v=4","gravatar_id":"","url":"https://api.github.com/users/ghost","html_url":"https://github.com/ghost","followers_url":"https://api.github.com/users/ghost/followers","following_url":"https://api.github.com/users/ghost/following{/other_user}","gists_url":"https://api.github.com/users/ghost/gists{/gist_id}","starred_url":"https://api.github.com/users/ghost/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ghost/subscriptions","organizations_url":"https://api.github.com/users/ghost/orgs","repos_url":"https://api.github.com/users/ghost/repos","events_url":"https://api.github.com/users/ghost/events{/privacy}","received_events_url":"https://api.github.com/users/ghost/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":17,"created_at":"2014-10-09T10:23:43Z","updated_at":"2014-10-11T10:43:32Z","closed_at":"2014-10-10T10:23:21Z","author_association":"NONE","body":"Currently, Set/Collection instances _will_ get exported as JSON array, handled by code\n\n```\n        if (value instanceof Collection) {\n            if (knownType != null && actualType != knownType && actualType != ArrayList.class)\n                throw new SerializationException(\"Serialization of a Collection other than the known type is not supported.\\n\"\n                    + \"Known type: \" + knownType + \"\\nActual type: \" + actualType);\n            writeArrayStart();\n            for (Object item : (Collection)value)\n                writeValue(item, elementType, null);\n            writeArrayEnd();\n            return;\n        }\n```\n\nOn the other hand, loading them usually _won't_ work, since they get exported as array, which is only convertible to List currently. My idea is to expand on it, so that we use Set (with default HashSet for variables declared by interface only in our data) and Collection conditional checks, e.g. instead of\n\n```\n        if (ClassReflection.isAssignableFrom(List.class, type)) {\n            List newArray = (type == null || type.isInterface()) ? new ArrayList() : (List)newInstance(type);\n            for (JsonValue child = jsonData.child; child != null; child = child.next)\n                newArray.add(readValue(elementType, null, child));\n            return (T)newArray;\n        }\n```\n\nwe would use\n\n```\n        if (ClassReflection.isAssignableFrom(List.class, type)) {\n            List newArray = (type == null || type.isInterface()) ? new ArrayList() : (List)newInstance(type);\n            for (JsonValue child = jsonData.child; child != null; child = child.next)\n                newArray.add(readValue(elementType, null, child));\n            return (T)newArray;\n        }\n        if (ClassReflection.isAssignableFrom(Set.class, type)) {\n            Set newSet = (type == null || type.isInterface()) ? new HashSet() : (Set)newInstance(type);\n            for (JsonValue child = jsonData.child; child != null; child = child.next)\n                newSet.add(readValue(elementType, null, child));\n            return (T)newSet;\n        }\n        if (ClassReflection.isAssignableFrom(Collection.class, type)) {\n            Collection newCollection = (type == null || type.isInterface()) ? new HashSet() : (Collection)newInstance(type);\n            for (JsonValue child = jsonData.child; child != null; child = child.next)\n                newCollection.add(readValue(elementType, null, child));\n            return (T)newCollection;\n        }\n```\n\nAlso, in JsonValue we have this and similar clauses\n\n```\n    throw new IllegalStateException(\"Value cannot be converted to byte: \" + type);\n```\n\n, but we also propagate NumberFormatException, without explicitly stating it in the doc/signature; shouldn't we catch NFEx locally and throw that ISEx instead for clarity? Also, I'd say ISEx is a lousy choice of abstraction for such an exception; UnsupportedOperationException or some kind of ParsingException would have been a lot more clear here; see JB, EJ 2nd for rationale for both of this changes.\n\nAs a side note, we have some wicked inclusive ifs followed by\n\n```\n        jsonData = new JsonValue(jsonData.asString());\n```\n\nin\n\n```\npublic <T> T readValue (Class<T> type, Class elementType, JsonValue jsonData)\n```\n\n, which could have been (at first glance) written a bit better; not that _that_ too matters much.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2439/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2438","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2438/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2438/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2438/events","html_url":"https://github.com/libgdx/libgdx/issues/2438","id":45347199,"number":2438,"title":"Update to RoboVM 1.0 alpha 04","user":{"login":"badlogic","id":514052,"avatar_url":"https://avatars1.githubusercontent.com/u/514052?v=4","gravatar_id":"","url":"https://api.github.com/users/badlogic","html_url":"https://github.com/badlogic","followers_url":"https://api.github.com/users/badlogic/followers","following_url":"https://api.github.com/users/badlogic/following{/other_user}","gists_url":"https://api.github.com/users/badlogic/gists{/gist_id}","starred_url":"https://api.github.com/users/badlogic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/badlogic/subscriptions","organizations_url":"https://api.github.com/users/badlogic/orgs","repos_url":"https://api.github.com/users/badlogic/repos","events_url":"https://api.github.com/users/badlogic/events{/privacy}","received_events_url":"https://api.github.com/users/badlogic/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2014-10-09T09:53:33Z","updated_at":"2014-10-09T18:21:46Z","closed_at":"2014-10-09T18:21:46Z","author_association":"OWNER","body":"http://blog.robovm.org/2014/10/robovm-10-alpha-4-released-lambda.html\n\nFixes a couple of issues regarding Gradle as well.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2438/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2437","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2437/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2437/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2437/events","html_url":"https://github.com/libgdx/libgdx/issues/2437","id":45346758,"number":2437,"title":"Columns not sized as they should in Table","user":{"login":"cortobass","id":5509329,"avatar_url":"https://avatars1.githubusercontent.com/u/5509329?v=4","gravatar_id":"","url":"https://api.github.com/users/cortobass","html_url":"https://github.com/cortobass","followers_url":"https://api.github.com/users/cortobass/followers","following_url":"https://api.github.com/users/cortobass/following{/other_user}","gists_url":"https://api.github.com/users/cortobass/gists{/gist_id}","starred_url":"https://api.github.com/users/cortobass/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cortobass/subscriptions","organizations_url":"https://api.github.com/users/cortobass/orgs","repos_url":"https://api.github.com/users/cortobass/repos","events_url":"https://api.github.com/users/cortobass/events{/privacy}","received_events_url":"https://api.github.com/users/cortobass/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":12,"created_at":"2014-10-09T09:47:47Z","updated_at":"2014-10-13T08:28:26Z","closed_at":"2014-10-12T16:42:00Z","author_association":"CONTRIBUTOR","body":"Look at these different cases:\n![smaller](https://cloud.githubusercontent.com/assets/5509329/4573891/011c587c-4f97-11e4-9700-f7b3437e6871.png)\n![wrong](https://cloud.githubusercontent.com/assets/5509329/4573896/074959e8-4f97-11e4-9e03-ddd0b8a73219.png)\n![larger](https://cloud.githubusercontent.com/assets/5509329/4573894/051f2828-4f97-11e4-91f6-741cda4ceea9.png)\nIn the first picture, all columns are sized as they should.\nIn the second picture, the last row is longer and the columns are not sized properly.\nIn the third picture, we should see the same issue as previously, but in fact a slight difference between two computations runs a different code (tablePrefWidth and tableMinWidth are not equal; 321.2375 != 321.2376).\nTo fix this particular case, I suggest to replace in layout(float layoutX, float layoutY, float layoutWidth, float layoutHeight):\n        if (totalGrowWidth == 0)\n            columnWeightedWidth = columnMinWidth;\nby:\n        if (Math.round(totalGrowWidth) == 0)\n            columnWeightedWidth = columnPrefWidth;\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2437/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2436","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2436/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2436/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2436/events","html_url":"https://github.com/libgdx/libgdx/issues/2436","id":45343641,"number":2436,"title":"ObjLoader group naming","user":{"login":"ghost","id":10137,"avatar_url":"https://avatars3.githubusercontent.com/u/10137?v=4","gravatar_id":"","url":"https://api.github.com/users/ghost","html_url":"https://github.com/ghost","followers_url":"https://api.github.com/users/ghost/followers","following_url":"https://api.github.com/users/ghost/following{/other_user}","gists_url":"https://api.github.com/users/ghost/gists{/gist_id}","starred_url":"https://api.github.com/users/ghost/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ghost/subscriptions","organizations_url":"https://api.github.com/users/ghost/orgs","repos_url":"https://api.github.com/users/ghost/repos","events_url":"https://api.github.com/users/ghost/events{/privacy}","received_events_url":"https://api.github.com/users/ghost/received_events","type":"User","site_admin":false},"labels":[{"id":11336982,"url":"https://api.github.com/repos/libgdx/libgdx/labels/enhancement","name":"enhancement","color":"84b6eb","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2014-10-09T09:13:16Z","updated_at":"2014-12-23T21:50:45Z","closed_at":"2014-12-22T16:23:14Z","author_association":"NONE","body":"We currently don't have any option to use group naming as a way to provide any info to code; it _is_ loaded to group.name, but it is used only to differentiate the groups in the loader, not to identify them. Later on, we have:\n\n```\n        String nodeId = \"node\" + (++id);\n        String meshId = \"mesh\" + id;\n        String partId = \"part\" + id;\n```\n- the idea is to use group naming for e.g. partId, or all of them (since every group has a unique node/mesh/part generated currently), by, e.g.\n  \n  ```\n      String nodeId = group.name;\n      String meshId = group.name;\n      String partId = group.name;\n  ```\n\n(id is unused by then).\n\nWe also have two useless \"new String()\" invocations (no need to do that since String is essentially immutable).\n\nNote 1: I'm aware that, quote, \"The Wavefront specification is NOT fully implemented\", but I think that using naming to allow the code to distinguish object parts could be very useful for developers).\n\nNote 2: it's impossible to fix/implement this by extending ObjLoader, since all the important data structs used by it are private.\n\nCode patch:\nhttps://gist.github.com/vaxquis/4f2019c615e7b047e50b\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2436/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2435","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2435/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2435/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2435/events","html_url":"https://github.com/libgdx/libgdx/pull/2435","id":45290275,"number":2435,"title":"Affine2 - minor tuning","user":{"login":"vmilea","id":278476,"avatar_url":"https://avatars1.githubusercontent.com/u/278476?v=4","gravatar_id":"","url":"https://api.github.com/users/vmilea","html_url":"https://github.com/vmilea","followers_url":"https://api.github.com/users/vmilea/followers","following_url":"https://api.github.com/users/vmilea/following{/other_user}","gists_url":"https://api.github.com/users/vmilea/gists{/gist_id}","starred_url":"https://api.github.com/users/vmilea/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vmilea/subscriptions","organizations_url":"https://api.github.com/users/vmilea/orgs","repos_url":"https://api.github.com/users/vmilea/repos","events_url":"https://api.github.com/users/vmilea/events{/privacy}","received_events_url":"https://api.github.com/users/vmilea/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2014-10-08T20:09:44Z","updated_at":"2014-10-08T20:51:53Z","closed_at":"2014-10-08T20:51:53Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2435","html_url":"https://github.com/libgdx/libgdx/pull/2435","diff_url":"https://github.com/libgdx/libgdx/pull/2435.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2435.patch"},"body":"A little faster using sin/cos look-up table.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2435/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2434","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2434/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2434/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2434/events","html_url":"https://github.com/libgdx/libgdx/pull/2434","id":45282642,"number":2434,"title":"Hiero command line support","user":{"login":"tube42","id":1971317,"avatar_url":"https://avatars2.githubusercontent.com/u/1971317?v=4","gravatar_id":"","url":"https://api.github.com/users/tube42","html_url":"https://github.com/tube42","followers_url":"https://api.github.com/users/tube42/followers","following_url":"https://api.github.com/users/tube42/following{/other_user}","gists_url":"https://api.github.com/users/tube42/gists{/gist_id}","starred_url":"https://api.github.com/users/tube42/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tube42/subscriptions","organizations_url":"https://api.github.com/users/tube42/orgs","repos_url":"https://api.github.com/users/tube42/repos","events_url":"https://api.github.com/users/tube42/events{/privacy}","received_events_url":"https://api.github.com/users/tube42/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-10-08T19:00:50Z","updated_at":"2014-11-09T15:34:10Z","closed_at":"2014-11-09T15:33:21Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2434","html_url":"https://github.com/libgdx/libgdx/pull/2434","diff_url":"https://github.com/libgdx/libgdx/pull/2434.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2434.patch"},"body":"Two minimal patches for running Hiero from command line. This for example allows one to create fonts for multiple screen resolutions right from build scripts.\n\nForum discussion: http://www.badlogicgames.com/forum/viewtopic.php?f=11&t=16422\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2434/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2433","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2433/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2433/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2433/events","html_url":"https://github.com/libgdx/libgdx/issues/2433","id":45188911,"number":2433,"title":"BitmapFontCache setting colors goes wrong, ","user":{"login":"Phibedy","id":1841954,"avatar_url":"https://avatars1.githubusercontent.com/u/1841954?v=4","gravatar_id":"","url":"https://api.github.com/users/Phibedy","html_url":"https://github.com/Phibedy","followers_url":"https://api.github.com/users/Phibedy/followers","following_url":"https://api.github.com/users/Phibedy/following{/other_user}","gists_url":"https://api.github.com/users/Phibedy/gists{/gist_id}","starred_url":"https://api.github.com/users/Phibedy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Phibedy/subscriptions","organizations_url":"https://api.github.com/users/Phibedy/orgs","repos_url":"https://api.github.com/users/Phibedy/repos","events_url":"https://api.github.com/users/Phibedy/events{/privacy}","received_events_url":"https://api.github.com/users/Phibedy/received_events","type":"User","site_admin":false},"labels":[{"id":11336980,"url":"https://api.github.com/repos/libgdx/libgdx/labels/bug","name":"bug","color":"fc2929","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2014-10-08T00:21:27Z","updated_at":"2014-12-29T20:18:45Z","closed_at":"2014-12-29T20:18:45Z","author_association":"CONTRIBUTOR","body":"Hi,\nI tried myself the last 3 hrs of setting up a good testcase but I am not 100% sure what goes wrong:\nWhat happens:\nIt's not possible to change the color of tb1 after it was set the first time. The actions have no effect.\nIf I create a new BitmapFont or set the style, so a new BitmapFontCache is created I can set the color as many times as I want to.\nIt's not a real testcase but I didnt know how to put everything in one class as you would need more, if you need the testproject with files etc, I could upload it.\n\n``` java\n    /**\n     * the font of the textbuttonstyle is created by Smartfontgenerator\n     */\n    public static void testTextButton() {\n        RessourceManager.stage.clear();\n\n        final Table testTbl = new Table();\n        final TextButton tb1 = new TextButton(\"FAILS\",\n                RessourceManager.primaryButtonStyle);\n\n        // ###########\n        // has the same effect as if I would call tb2.setStyle(tb2.getStyle())\n        // AFTER the first render call\n        BitmapFont bf = new BitmapFont(\n                RessourceManager.primaryButtonStyle.font.getData(),\n                (TextureRegion) null, false);\n        RessourceManager.primaryButtonStyle.font = bf;\n        // ###########\n\n        final TextButton tb2 = new TextButton(\"WORKS\",\n                RessourceManager.primaryButtonStyle);\n        tb2.setStyle(tb2.getStyle());\n        // **\n        tb1.addAction(Actions.alpha(0));\n        tb1.addAction(Actions.delay(1, Actions.alpha(1)));\n        tb1.addAction(Actions.delay(1, Actions.color(new Color(1, 1, 1, 1))));\n        tb1.addAction(Actions.delay(1, Actions.run(new Runnable() {\n\n            @Override\n            public void run() {\n                // would fix it\n                // tb1.setStyle(tb1.getStyle());\n            }\n        })));\n        testTbl.add(tb1);\n        testTbl.row();\n\n        tb2.addAction(Actions.alpha(0));\n        tb2.addAction(Actions.delay(1, Actions.alpha(1)));\n        // set it a second time\n        tb2.addAction(Actions.delay(2, Actions.alpha(0.2f)));\n        tb2.addAction(Actions.delay(3, Actions.alpha(1f)));\n        // third time\n        tb2.addAction(Actions.delay(4, Actions.run(new Runnable() {\n\n            @Override\n            public void run() {\n                TextButton tb3 = new TextButton(\"WORKS too\",\n                        RessourceManager.primaryButtonStyle);\n                tb3.addAction(Actions.alpha(0));\n                tb3.addAction(Actions.delay(1, Actions.alpha(1)));\n                testTbl.add(tb3);\n                testTbl.row();\n            }\n        })));\n        testTbl.add(tb2);\n        testTbl.row();\n\n        testTbl.setPosition(Gdx.graphics.getWidth() / 2,\n                Gdx.graphics.getHeight() / 2, Align.center);\n        RessourceManager.stage.addActor(testTbl);\n    }\n```\n\nI think it's caused by these changes:\nhttps://github.com/libgdx/libgdx/commit/0c0e308fb2b691723434f0ca425b71c3fc55c671?w=1\nSmartFontgenerator loades the fonts that way:\nnew BitmapFont(Gdx.files.external(\"myFont.fnt\"));\nI dont think that tint() goes wrong, I assume that the loaded BitmapFont isnt compatible with the changes  but I dont know why. It's just a assumption. I will have a look at it after getting some sleep :)\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2433/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2432","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2432/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2432/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2432/events","html_url":"https://github.com/libgdx/libgdx/issues/2432","id":45183889,"number":2432,"title":"Spritebatch and Shaders disordering.","user":{"login":"Oyatsumi","id":8701389,"avatar_url":"https://avatars0.githubusercontent.com/u/8701389?v=4","gravatar_id":"","url":"https://api.github.com/users/Oyatsumi","html_url":"https://github.com/Oyatsumi","followers_url":"https://api.github.com/users/Oyatsumi/followers","following_url":"https://api.github.com/users/Oyatsumi/following{/other_user}","gists_url":"https://api.github.com/users/Oyatsumi/gists{/gist_id}","starred_url":"https://api.github.com/users/Oyatsumi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Oyatsumi/subscriptions","organizations_url":"https://api.github.com/users/Oyatsumi/orgs","repos_url":"https://api.github.com/users/Oyatsumi/repos","events_url":"https://api.github.com/users/Oyatsumi/events{/privacy}","received_events_url":"https://api.github.com/users/Oyatsumi/received_events","type":"User","site_admin":false},"labels":[{"id":11336980,"url":"https://api.github.com/repos/libgdx/libgdx/labels/bug","name":"bug","color":"fc2929","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":18,"created_at":"2014-10-07T23:12:53Z","updated_at":"2015-02-02T18:01:42Z","closed_at":"2015-02-02T18:01:12Z","author_association":"NONE","body":"Hello, I've opened the following issue: https://github.com/libgdx/libgdx/issues/2367\nIt was then closed and I reposted and got no response from it.\nI don't know exactly if I was supposed to create a new issue or not, sorry if wasn't. So, could someone clarify these points?\nI would be very glad.\nThank you.\n\nThe actual comment I posted on the previous issue ->\n\nI think there is something pretty strange with the behavior of the framebuffer. I tried to boil it down for testing and I apparently found a new issue.\n\nThe blending functions here are the same I used on my game (http://www.mediafire.com/download/x7qqa3z5h4ilbsu/jogo37_frameskip=10-shadow=true.jar), which is running fine on windows.\n\nThe code went like that:\n\n```\nfinal static String VERT =  \n        \"attribute vec4 \"+ShaderProgram.POSITION_ATTRIBUTE+\";\\n\" +\n        \"attribute vec4 \"+ShaderProgram.COLOR_ATTRIBUTE+\";\\n\" +\n        \"attribute vec2 \"+ShaderProgram.TEXCOORD_ATTRIBUTE+\"0;\\n\" +\n\n        \"uniform mat4 u_projTrans;\\n\" + \n        \" \\n\" + \n        \"varying vec4 vColor;\\n\" +\n        \"varying vec2 vTexCoord;\\n\" +\n\n        \"void main() {\\n\" +  \n        \"   vColor = \"+ShaderProgram.COLOR_ATTRIBUTE+\";\\n\" +\n        \"   vTexCoord = \"+ShaderProgram.TEXCOORD_ATTRIBUTE+\"0;\\n\" +\n        \"   gl_Position =  u_projTrans * \" + ShaderProgram.POSITION_ATTRIBUTE + \";\\n\" +\n        \"}\";\n\nfinal static String FRAG = \n        //GL ES specific stuff\n          \"#ifdef GL_ES\\n\" //\n        + \"#define LOWP lowp\\n\" //\n        + \"precision mediump float;\\n\" //\n        + \"#else\\n\" //\n        + \"#define LOWP \\n\" //\n        + \"#endif\\n\" + //\n        \"//texture 0\\n\" + \n        \"uniform sampler2D u_texture;\\n\" + \n        \"\\n\" + \n        \"//our screen resolution, set from Java whenever the display is resized\\n\" + \n        \"uniform vec2 resolution;\\n\" + \n        \"\\n\" + \n        \"//screen color RGB(Intensity)\\n\" + \n        \"uniform LOWP vec4 ambient; \\n\" + \n        \"\\n\" + \n        \"//\\\"in\\\" attributes from our vertex shader\\n\" + \n        \"varying LOWP vec4 vColor;\\n\" +\n        \"varying vec2 vTexCoord;\\n\" + \n        \"\\n\" + \n        \"//RADIUS of our vignette, where 0.5 results in a circle fitting the screen\\n\" + \n        \"const float RADIUS = 0.75;\\n\" + \n        \"\\n\" + \n        \"//softness of our vignette, between 0.0 and 1.0\\n\" + \n        \"const float SOFTNESS = 0.75;\\n\" + \n        \"\\n\" + \n        \"void main() {\\n\" + \n        \"   //sample our texture\\n\" + \n        \"   vec4 texColor = texture2D(u_texture, vTexCoord);\\n\" + \n        \"       \\n\" + \n        \"   //1. VIGNETTE\\n\" + \n        \"   \\n\" + \n        \"   //determine center position\\n\" + \n        \"   vec2 position = (gl_FragCoord.xy / resolution.xy) - vec2(0.5);\\n\" + \n        \"   \\n\" + \n        \"   //determine the vector length of the center position\\n\" + \n        \"   float len = length(position);\\n\" + \n        \"   \\n\" + \n        \"   //use smoothstep to create a smooth vignette\\n\" + \n        \"   float vignette = smoothstep(RADIUS, RADIUS-SOFTNESS, len);\\n\" + \n        \"   \\n\" + \n        \"   //apply the vignette with 60% opacity\\n\" + \n        \"   texColor.rgb = mix(texColor.rgb, texColor.rgb * vignette, 0.6);\\n\" + \n        \"       \\n\" + \n        \"   //2. GRAYSCALE\\n\" + \n        \"   \\n\" +\n        \"   //convert to grayscale using NTSC conversion weights\\n\" + \n        \"   float gray = dot(texColor.rgb, vec3(0.299, 0.587, 0.114));\\n\" + \n        \"   \\n\" + \n        \"   //create our sepia tone from some constant value\\n\" + \n        \"   vec3 sepiaColor = vec3(gray) * ambient.rgb;\\n\" + \n        \"       \\n\" + \n        \"   //again we'll use mix so that the sepia effect is at somewhere\\n\" + \n        \"   texColor.rgb = mix(texColor.rgb, sepiaColor, ambient.a);\\n\" + \n        \"       \\n\" + \n        \"   //final colour, multiplied by vertex colour\\n\" + \n        \"   gl_FragColor = texColor * vColor;\\n\" + \n        \"}\";\n\n@Override\npublic void resize(int width, int height) {\n    oc.setToOrtho(false, width, height);\n    batch.setProjectionMatrix(oc.combined);\n}\n@Override\npublic void create(){\n    shader = new ShaderProgram(VERT, FRAG);\n    batch = new SpriteBatch();\n    frameBuffer = new FrameBuffer(Format.RGBA8888, Gdx.graphics.getWidth(), Gdx.graphics.getHeight(), false);\n    oc = new OrthographicCamera();  \n    oc.setToOrtho(false, Gdx.graphics.getWidth(), Gdx.graphics.getHeight());\n}\npublic ShaderProgram shader = null;\npublic SpriteBatch batch = null;\npublic FrameBuffer frameBuffer = null;\nOrthographicCamera oc = null;\n@Override\npublic void render() {\n    Gdx.gl.glClearColor(0f, 0f, 0f, 0f);\n    Gdx.gl.glClear(Gdx.gl.GL_COLOR_BUFFER_BIT);\n\n    Texture mario1 = new Texture(Gdx.files.internal(\"data/mario.png\")),\n            mario2 = new Texture(Gdx.files.internal(\"data/mario.png\")),\n            mario3 = new Texture(Gdx.files.internal(\"data/mario.png\")),\n            mario4 = new Texture(Gdx.files.internal(\"data/mario.png\")),\n            mario5 = new Texture(Gdx.files.internal(\"data/mario.png\")),\n            mario6 = new Texture(Gdx.files.internal(\"data/mario.png\"));\n\n    shader.begin();\n    shader.setUniformf(\"ambient\", 1.2f, 1.0f, 0.8f, 1.0f);\n\n\n\n    batch.setBlendFunction(GL20.GL_SRC_ALPHA,\n            GL20.GL_ONE_MINUS_SRC_ALPHA);\n    Gdx.gl20.glBlendFuncSeparate(GL20.GL_SRC_ALPHA,\n            GL20.GL_ONE_MINUS_SRC_ALPHA, GL20.GL_SRC_ALPHA, GL20.GL_ONE_MINUS_SRC_ALPHA);\n\n\n    batch.setProjectionMatrix(oc.combined);\n\n\n    batch.begin();\n\n\n    //1\n    batch.draw(mario1, 0, 0);\n\n    frameBuffer.begin();\n\n\n    //2\n    batch.draw(mario2, mario1.getWidth(), 0);\n\n    batch.setShader(shader);\n\n    //3\n    batch.draw(mario3, mario1.getWidth()*2, 0);\n\n    batch.setBlendFunction(GL20.GL_SRC_ALPHA,\n            GL20.GL_ONE); //ignore the batch blend function\n    Gdx.gl20.glBlendFuncSeparate(GL20.GL_SRC_ALPHA,\n            GL20.GL_ONE, GL20.GL_SRC_ALPHA, GL20.GL_ONE_MINUS_SRC_ALPHA);\n\n    //4\n    batch.draw(mario4, 0, mario1.getHeight());\n\n    batch.setBlendFunction(GL20.GL_SRC_ALPHA,\n            GL20.GL_ONE_MINUS_SRC_ALPHA); //ignore the batch blend function\n    Gdx.gl20.glBlendFuncSeparate(GL20.GL_SRC_ALPHA,\n            GL20.GL_ONE_MINUS_SRC_ALPHA, GL20.GL_SRC_ALPHA, GL20.GL_ONE_MINUS_SRC_ALPHA);\n\n    Sprite fB = new Sprite(frameBuffer.getColorBufferTexture());\n    fB.flip(false, true);\n    batch.draw(fB, 0, 0, frameBuffer.getColorBufferTexture().getWidth(), frameBuffer.getColorBufferTexture().getHeight());\n    frameBuffer.end();\n\n\n    //5\n    batch.draw(mario5, mario3.getWidth(), mario1.getHeight());\n\n    batch.setShader(null);\n\n    //6\n    batch.draw(mario5, mario3.getWidth()*2, mario1.getHeight());\n\n    batch.end();\n\n    mario1.dispose(); mario2.dispose(); mario3.dispose(); mario4.dispose(); mario5.dispose(); mario6.dispose();\n}\n\n@Override\npublic void pause() {\n\n}\n\n@Override\npublic void resume() {\n    // TODO Auto-generated method stub\n\n}\n\n@Override\npublic void dispose() {\n    // TODO Auto-generated method stub\n\n}\n```\n\nAnd I get this (look, only the mario 5 and 6 are being \"rendered\").\nhttp://s15.postimg.org/qifzzor23/mario1.png\n\nwhen I take the frameBuffer.begin() and frameBuffer.end() lines and remove them, I get this:\nhttp://s28.postimg.org/6dtbws1yl/mario1.png\nWhere all marios appear on the screen.\n\nBy removing the blendfunctions, all of them, and also keeping the frameBuffer.begin() and frameBuffer.end(). I get this:\nhttp://s21.postimg.org/q71ziamsn/mario1.png\nMario 1, 2 and 3 do not appear.\nIs this supposed to happen?\n\nIf I shift the frameBuffer.being() priorly to the batch.being(), I also get the same previous screen.\n\nIf I keep the blendfunctions deleted and the lines frameBuffer.begin() and frameBuffer.end() intact and I dont use the shader, then I get the following result:\nhttp://s29.postimg.org/nb5aaub5z/mario1.png\n\nMy question is: Is that supposed to happen? Mario 1, 2, 3 and also 4 not being rendered? If so, why that?\n\nThank you in advance.\nPS.: I was running on a windows 8 for now.\nHeres the mario png if necessary: http://s30.postimg.org/qvhwvvt35/novo.png\nPS2.: Libgdx 1.3.1\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2432/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2431","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2431/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2431/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2431/events","html_url":"https://github.com/libgdx/libgdx/pull/2431","id":45179584,"number":2431,"title":"Add support for KTX / ZKTX file format","user":{"login":"vbousquet","id":2796036,"avatar_url":"https://avatars1.githubusercontent.com/u/2796036?v=4","gravatar_id":"","url":"https://api.github.com/users/vbousquet","html_url":"https://github.com/vbousquet","followers_url":"https://api.github.com/users/vbousquet/followers","following_url":"https://api.github.com/users/vbousquet/following{/other_user}","gists_url":"https://api.github.com/users/vbousquet/gists{/gist_id}","starred_url":"https://api.github.com/users/vbousquet/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vbousquet/subscriptions","organizations_url":"https://api.github.com/users/vbousquet/orgs","repos_url":"https://api.github.com/users/vbousquet/repos","events_url":"https://api.github.com/users/vbousquet/events{/privacy}","received_events_url":"https://api.github.com/users/vbousquet/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":18,"created_at":"2014-10-07T22:33:14Z","updated_at":"2014-12-22T09:29:02Z","closed_at":"2014-12-21T21:36:32Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2431","html_url":"https://github.com/libgdx/libgdx/pull/2431","diff_url":"https://github.com/libgdx/libgdx/pull/2431.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2431.patch"},"body":"This is a follow up to my first dirty PR : https://github.com/libgdx/libgdx/pull/2418\n\nThis time it comes with clean rebased commit (no newline bugs and such, guess this is the way we learn...).\nOn the feature side ;\n- cleaned up the cube map (which in turns was buggy),\n- add a better test with cubemap, and ETC1 with separate alpha example,\n- add a file processor to generate KTX, ZKTX, packing, mipmaps, and alpha atlas (a bit quick and dirty on this).\n\nThis required a change outside the initial scope on CubemapAttribute to handle other GLTexture than Cubemap.java (did not find a clean way to put KTX packed cubemap in the current implementation and did not want to make change that would not be retro compatible).\n\nNow on the what is missing ; \n- a wiki page on ETC1 compression, KTX/ZKTX/ETC1 file formats, cubemap and alpha support\n- a note in the changelog with a link to the wiki page\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2431/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2430","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2430/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2430/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2430/events","html_url":"https://github.com/libgdx/libgdx/pull/2430","id":45156769,"number":2430,"title":"Fix for Dialogs steal keyboard focus and don't give it back","user":{"login":"duriej","id":8235184,"avatar_url":"https://avatars3.githubusercontent.com/u/8235184?v=4","gravatar_id":"","url":"https://api.github.com/users/duriej","html_url":"https://github.com/duriej","followers_url":"https://api.github.com/users/duriej/followers","following_url":"https://api.github.com/users/duriej/following{/other_user}","gists_url":"https://api.github.com/users/duriej/gists{/gist_id}","starred_url":"https://api.github.com/users/duriej/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/duriej/subscriptions","organizations_url":"https://api.github.com/users/duriej/orgs","repos_url":"https://api.github.com/users/duriej/repos","events_url":"https://api.github.com/users/duriej/events{/privacy}","received_events_url":"https://api.github.com/users/duriej/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2014-10-07T19:59:19Z","updated_at":"2014-10-11T01:03:57Z","closed_at":"2014-10-11T01:03:57Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2430","html_url":"https://github.com/libgdx/libgdx/pull/2430","diff_url":"https://github.com/libgdx/libgdx/pull/2430.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2430.patch"},"body":"Also check for previousKeyboardFocus and previousScrollFocus before cancelling a focus change\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2430/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2429","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2429/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2429/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2429/events","html_url":"https://github.com/libgdx/libgdx/pull/2429","id":45105648,"number":2429,"title":"Issue 2227 fix","user":{"login":"VinceAngel","id":3493075,"avatar_url":"https://avatars0.githubusercontent.com/u/3493075?v=4","gravatar_id":"","url":"https://api.github.com/users/VinceAngel","html_url":"https://github.com/VinceAngel","followers_url":"https://api.github.com/users/VinceAngel/followers","following_url":"https://api.github.com/users/VinceAngel/following{/other_user}","gists_url":"https://api.github.com/users/VinceAngel/gists{/gist_id}","starred_url":"https://api.github.com/users/VinceAngel/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/VinceAngel/subscriptions","organizations_url":"https://api.github.com/users/VinceAngel/orgs","repos_url":"https://api.github.com/users/VinceAngel/repos","events_url":"https://api.github.com/users/VinceAngel/events{/privacy}","received_events_url":"https://api.github.com/users/VinceAngel/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-10-07T13:17:59Z","updated_at":"2016-01-07T08:13:23Z","closed_at":"2014-10-07T13:24:46Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2429","html_url":"https://github.com/libgdx/libgdx/pull/2429","diff_url":"https://github.com/libgdx/libgdx/pull/2429.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2429.patch"},"body":"Replace the old PR #2427 , fix the issue #2227 \n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2429/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2428","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2428/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2428/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2428/events","html_url":"https://github.com/libgdx/libgdx/pull/2428","id":45099029,"number":2428,"title":"Fixed formatting and crash in ShaderTest","user":{"login":"ip","id":1111008,"avatar_url":"https://avatars1.githubusercontent.com/u/1111008?v=4","gravatar_id":"","url":"https://api.github.com/users/ip","html_url":"https://github.com/ip","followers_url":"https://api.github.com/users/ip/followers","following_url":"https://api.github.com/users/ip/following{/other_user}","gists_url":"https://api.github.com/users/ip/gists{/gist_id}","starred_url":"https://api.github.com/users/ip/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ip/subscriptions","organizations_url":"https://api.github.com/users/ip/orgs","repos_url":"https://api.github.com/users/ip/repos","events_url":"https://api.github.com/users/ip/events{/privacy}","received_events_url":"https://api.github.com/users/ip/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-10-07T12:02:22Z","updated_at":"2014-10-07T13:07:42Z","closed_at":"2014-10-07T13:07:41Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2428","html_url":"https://github.com/libgdx/libgdx/pull/2428","diff_url":"https://github.com/libgdx/libgdx/pull/2428.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2428.patch"},"body":"Shader in ShaderTest was not compiling. Log:\n\n```\n10-06 00:12:03.129: E/AndroidRuntime(16514): FATAL EXCEPTION: GLThread 739\n10-06 00:12:03.129: E/AndroidRuntime(16514): com.badlogic.gdx.utils.GdxRuntimeException: Couldn't compile shader Compile failed.\n10-06 00:12:03.129: E/AndroidRuntime(16514): ERROR: 0:1: 'float' : No precision defined for this type\n10-06 00:12:03.129: E/AndroidRuntime(16514): ERROR: 1 compilation errors. No code generated.\n10-06 00:12:03.129: E/AndroidRuntime(16514):    at com.badlogic.gdx.tests.g3d.ShaderTest$TestShader.<init>(ShaderTest.java:79)\n10-06 00:12:03.129: E/AndroidRuntime(16514):    at com.badlogic.gdx.tests.g3d.ShaderTest$1.createShader(ShaderTest.java:135)\n10-06 00:12:03.129: E/AndroidRuntime(16514):    at com.badlogic.gdx.graphics.g3d.utils.BaseShaderProvider.getShader(BaseShaderProvider.java:34)\n10-06 00:12:03.129: E/AndroidRuntime(16514):    at com.badlogic.gdx.graphics.g3d.ModelBatch.render(ModelBatch.java:246)\n10-06 00:12:03.129: E/AndroidRuntime(16514):    at com.badlogic.gdx.tests.g3d.ShaderTest.render(ShaderTest.java:169)\n10-06 00:12:03.129: E/AndroidRuntime(16514):    at com.badlogic.gdx.backends.android.AndroidGraphics.onDrawFrame(AndroidGraphics.java:416)\n10-06 00:12:03.129: E/AndroidRuntime(16514):    at android.opengl.GLSurfaceView$GLThread.guardedRun(GLSurfaceView.java:1516)\n10-06 00:12:03.129: E/AndroidRuntime(16514):    at android.opengl.GLSurfaceView$GLThread.run(GLSurfaceView.java:1240)\n\n```\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2428/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2427","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2427/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2427/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2427/events","html_url":"https://github.com/libgdx/libgdx/pull/2427","id":45078380,"number":2427,"title":"Fix for issue 2227","user":{"login":"VinceAngel","id":3493075,"avatar_url":"https://avatars0.githubusercontent.com/u/3493075?v=4","gravatar_id":"","url":"https://api.github.com/users/VinceAngel","html_url":"https://github.com/VinceAngel","followers_url":"https://api.github.com/users/VinceAngel/followers","following_url":"https://api.github.com/users/VinceAngel/following{/other_user}","gists_url":"https://api.github.com/users/VinceAngel/gists{/gist_id}","starred_url":"https://api.github.com/users/VinceAngel/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/VinceAngel/subscriptions","organizations_url":"https://api.github.com/users/VinceAngel/orgs","repos_url":"https://api.github.com/users/VinceAngel/repos","events_url":"https://api.github.com/users/VinceAngel/events{/privacy}","received_events_url":"https://api.github.com/users/VinceAngel/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2014-10-07T07:51:19Z","updated_at":"2014-10-07T13:18:48Z","closed_at":"2014-10-07T13:18:48Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2427","html_url":"https://github.com/libgdx/libgdx/pull/2427","diff_url":"https://github.com/libgdx/libgdx/pull/2427.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2427.patch"},"body":"Simple fix for the #2227 : replaced mandatory meshes and nodes by optional fields according to the spec\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2427/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2426","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2426/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2426/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2426/events","html_url":"https://github.com/libgdx/libgdx/issues/2426","id":45032265,"number":2426,"title":"Android 4.4 SD changes","user":{"login":"johnnyapol","id":5902494,"avatar_url":"https://avatars1.githubusercontent.com/u/5902494?v=4","gravatar_id":"","url":"https://api.github.com/users/johnnyapol","html_url":"https://github.com/johnnyapol","followers_url":"https://api.github.com/users/johnnyapol/followers","following_url":"https://api.github.com/users/johnnyapol/following{/other_user}","gists_url":"https://api.github.com/users/johnnyapol/gists{/gist_id}","starred_url":"https://api.github.com/users/johnnyapol/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/johnnyapol/subscriptions","organizations_url":"https://api.github.com/users/johnnyapol/orgs","repos_url":"https://api.github.com/users/johnnyapol/repos","events_url":"https://api.github.com/users/johnnyapol/events{/privacy}","received_events_url":"https://api.github.com/users/johnnyapol/received_events","type":"User","site_admin":false},"labels":[{"id":59604218,"url":"https://api.github.com/repos/libgdx/libgdx/labels/android","name":"android","color":"009800","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-10-06T20:28:20Z","updated_at":"2015-02-02T18:02:04Z","closed_at":"2015-02-02T18:02:04Z","author_association":"OWNER","body":"So starting in KitKat, https://developer.android.com/about/versions/android-4.4.html#UserContent, Google is restricting SD access more and more so that applications can only access Public Directories (i.e. Photos, Documents) and a special folder created for them on the file system. Currently the libGDX APIs have not adapted to this change, so I propose one of the 2 following things.\n- Option #1 = Switch over to the new APIs completely for all versions of Android.\n- Option #2 = Switch over to the new APIs on API Levels >= 19, so this will maintain backwards compatibility on < API Level 19, and introduce the new function to API Levels >= 19. \n\nI can send a PR, if you'd like.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2426/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2425","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2425/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2425/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2425/events","html_url":"https://github.com/libgdx/libgdx/issues/2425","id":45027756,"number":2425,"title":"1.4 release changes","user":{"login":"badlogic","id":514052,"avatar_url":"https://avatars1.githubusercontent.com/u/514052?v=4","gravatar_id":"","url":"https://api.github.com/users/badlogic","html_url":"https://github.com/badlogic","followers_url":"https://api.github.com/users/badlogic/followers","following_url":"https://api.github.com/users/badlogic/following{/other_user}","gists_url":"https://api.github.com/users/badlogic/gists{/gist_id}","starred_url":"https://api.github.com/users/badlogic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/badlogic/subscriptions","organizations_url":"https://api.github.com/users/badlogic/orgs","repos_url":"https://api.github.com/users/badlogic/repos","events_url":"https://api.github.com/users/badlogic/events{/privacy}","received_events_url":"https://api.github.com/users/badlogic/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2014-10-06T19:49:46Z","updated_at":"2014-10-12T02:29:59Z","closed_at":"2014-10-12T02:29:59Z","author_association":"OWNER","body":"Code changes:\n- [ ] remove gdx-pay from repo, have original PR folks test the new repo\n- [x] update to RoboVM alpha-04, to be released tomorrow (fixes GC bug on iOS 8 64-bit...)\n\nTests:\n- [x] Test Eclipse Gradle Integration release (3.6.1 or 3.6.2 if it's out) against Gradle 2.1\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2425/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2424","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2424/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2424/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2424/events","html_url":"https://github.com/libgdx/libgdx/issues/2424","id":44984733,"number":2424,"title":"JPEG loaded as rainbow grid","user":{"login":"Magnesus","id":3584532,"avatar_url":"https://avatars1.githubusercontent.com/u/3584532?v=4","gravatar_id":"","url":"https://api.github.com/users/Magnesus","html_url":"https://github.com/Magnesus","followers_url":"https://api.github.com/users/Magnesus/followers","following_url":"https://api.github.com/users/Magnesus/following{/other_user}","gists_url":"https://api.github.com/users/Magnesus/gists{/gist_id}","starred_url":"https://api.github.com/users/Magnesus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Magnesus/subscriptions","organizations_url":"https://api.github.com/users/Magnesus/orgs","repos_url":"https://api.github.com/users/Magnesus/repos","events_url":"https://api.github.com/users/Magnesus/events{/privacy}","received_events_url":"https://api.github.com/users/Magnesus/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2014-10-06T13:45:45Z","updated_at":"2014-10-09T23:21:31Z","closed_at":"2014-10-07T14:55:59Z","author_association":"NONE","body":"Screenshot: http://wieza.iq.pl/media/badbackground.jpg\nOne of the images that I try to show: http://wieza.iq.pl/media/back-0.jpg\n\nIt shows normal on desktop, shows as a rainbow grid on Android. Only JPG files behave that way, replacing the background with PNG showed normally on both Android and desktop.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2424/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2423","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2423/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2423/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2423/events","html_url":"https://github.com/libgdx/libgdx/issues/2423","id":44959350,"number":2423,"title":"Mac OS X graphics performance issue on fresh launched app with MSAA","user":{"login":"titovmaxim","id":1524918,"avatar_url":"https://avatars0.githubusercontent.com/u/1524918?v=4","gravatar_id":"","url":"https://api.github.com/users/titovmaxim","html_url":"https://github.com/titovmaxim","followers_url":"https://api.github.com/users/titovmaxim/followers","following_url":"https://api.github.com/users/titovmaxim/following{/other_user}","gists_url":"https://api.github.com/users/titovmaxim/gists{/gist_id}","starred_url":"https://api.github.com/users/titovmaxim/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/titovmaxim/subscriptions","organizations_url":"https://api.github.com/users/titovmaxim/orgs","repos_url":"https://api.github.com/users/titovmaxim/repos","events_url":"https://api.github.com/users/titovmaxim/events{/privacy}","received_events_url":"https://api.github.com/users/titovmaxim/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2014-10-06T08:33:27Z","updated_at":"2014-10-08T02:04:00Z","closed_at":"2014-10-08T02:04:00Z","author_association":"CONTRIBUTOR","body":"There is a graphics performance issue On Mac OS X on MacBook Air mid. 2011with MSAA (cfg.samples > 0). The freshly launched app gives only 30 fps on almost empty scenes with MSAA set. However just switching to another app and back (Command+Tab twice) gives immediately 60 fps even at scenes with a lot of graphics.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2423/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2422","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2422/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2422/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2422/events","html_url":"https://github.com/libgdx/libgdx/issues/2422","id":44958128,"number":2422,"title":"b2World::ShiftOrigin function to World.java class","user":{"login":"ibaranov","id":5119669,"avatar_url":"https://avatars1.githubusercontent.com/u/5119669?v=4","gravatar_id":"","url":"https://api.github.com/users/ibaranov","html_url":"https://github.com/ibaranov","followers_url":"https://api.github.com/users/ibaranov/followers","following_url":"https://api.github.com/users/ibaranov/following{/other_user}","gists_url":"https://api.github.com/users/ibaranov/gists{/gist_id}","starred_url":"https://api.github.com/users/ibaranov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ibaranov/subscriptions","organizations_url":"https://api.github.com/users/ibaranov/orgs","repos_url":"https://api.github.com/users/ibaranov/repos","events_url":"https://api.github.com/users/ibaranov/events{/privacy}","received_events_url":"https://api.github.com/users/ibaranov/received_events","type":"User","site_admin":false},"labels":[{"id":11336982,"url":"https://api.github.com/repos/libgdx/libgdx/labels/enhancement","name":"enhancement","color":"84b6eb","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2014-10-06T08:19:24Z","updated_at":"2015-02-02T18:02:24Z","closed_at":"2015-02-02T18:02:24Z","author_association":"NONE","body":"Could you please add the ShiftOrigin function to World.java class? It would assist in implementing large/endless levels by reducing x and y floating point number sizes.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2422/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2421","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2421/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2421/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2421/events","html_url":"https://github.com/libgdx/libgdx/issues/2421","id":44953723,"number":2421,"title":"InputProcessor bug when press Home on Android","user":{"login":"tr4788","id":5146176,"avatar_url":"https://avatars0.githubusercontent.com/u/5146176?v=4","gravatar_id":"","url":"https://api.github.com/users/tr4788","html_url":"https://github.com/tr4788","followers_url":"https://api.github.com/users/tr4788/followers","following_url":"https://api.github.com/users/tr4788/following{/other_user}","gists_url":"https://api.github.com/users/tr4788/gists{/gist_id}","starred_url":"https://api.github.com/users/tr4788/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tr4788/subscriptions","organizations_url":"https://api.github.com/users/tr4788/orgs","repos_url":"https://api.github.com/users/tr4788/repos","events_url":"https://api.github.com/users/tr4788/events{/privacy}","received_events_url":"https://api.github.com/users/tr4788/received_events","type":"User","site_admin":false},"labels":[{"id":59604218,"url":"https://api.github.com/repos/libgdx/libgdx/labels/android","name":"android","color":"009800","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2014-10-06T07:14:53Z","updated_at":"2014-10-08T04:32:58Z","closed_at":"2014-10-08T04:32:58Z","author_association":"NONE","body":"Reproduce step:\n1. Use gdx-setup.jar to generate new project. Import core, desktop and android project into Eclipse.\n2. At core project, implement InputProcessor into ApplicationAdapter (MyGdxGame) and add missing method.\n3. On create method, set InputProcessor ( Gdx.input.setInputProcessor(this) ) and set it to null at dispose method.\n4. Now, build android project into your device.\n5. Dont run your app from Home Screen, go to Drawer and run app.\n6. When first screen is shown (with red background and bad-ass logic game logo), tap screen 1 time - ONLY 1 time.\n7. Press back key, app will be exit and we will go to drawer screen.\n8. Press home key, and:\n- we will have focus on Drawer icon (my Nexus 5 android 4.4)\n- Google text on search box will be focus (my LG LTE 2 android 4.1)\n\n![device-2014-10-06-141321](https://cloud.githubusercontent.com/assets/5146176/4522417/4ffbfa7c-4d28-11e4-9bc5-ac741b5f4dfe.png)\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2421/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2420","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2420/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2420/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2420/events","html_url":"https://github.com/libgdx/libgdx/issues/2420","id":44952216,"number":2420,"title":"Mac OS X fullscreen","user":{"login":"titovmaxim","id":1524918,"avatar_url":"https://avatars0.githubusercontent.com/u/1524918?v=4","gravatar_id":"","url":"https://api.github.com/users/titovmaxim","html_url":"https://github.com/titovmaxim","followers_url":"https://api.github.com/users/titovmaxim/followers","following_url":"https://api.github.com/users/titovmaxim/following{/other_user}","gists_url":"https://api.github.com/users/titovmaxim/gists{/gist_id}","starred_url":"https://api.github.com/users/titovmaxim/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/titovmaxim/subscriptions","organizations_url":"https://api.github.com/users/titovmaxim/orgs","repos_url":"https://api.github.com/users/titovmaxim/repos","events_url":"https://api.github.com/users/titovmaxim/events{/privacy}","received_events_url":"https://api.github.com/users/titovmaxim/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2014-10-06T06:45:13Z","updated_at":"2014-10-06T16:16:30Z","closed_at":"2014-10-06T15:35:12Z","author_association":"CONTRIBUTOR","body":"Application in libgdx windowed mode has fullscreen button in the window title in Mac OS X. The application can be turned to native fullscreen by pressing on it. It works jut fine and the user can with applications by Command+Tab, switch workspace and do all the usual things. This is because lwjgl has org.lwjgl.opengl.Display.enableOSXFullscreenModeAPI=true by default for resizable windows,\n\nHowever when libgdx app is created with cfg.fullscreen = true it captures display on Mac OS X (not native fullscreen). So Command+Tab and most of other system keyboard and mouse shortcuts bevies blocked. Which is not convenient in most of the cases.\n\nIs there any way to set native fullscreen mode programmatically?\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2420/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2419","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2419/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2419/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2419/events","html_url":"https://github.com/libgdx/libgdx/pull/2419","id":44933726,"number":2419,"title":"Implemented non-continuos \"dirty\" rendering for iOS.","user":{"login":"BlueRiverInteractive","id":5451631,"avatar_url":"https://avatars2.githubusercontent.com/u/5451631?v=4","gravatar_id":"","url":"https://api.github.com/users/BlueRiverInteractive","html_url":"https://github.com/BlueRiverInteractive","followers_url":"https://api.github.com/users/BlueRiverInteractive/followers","following_url":"https://api.github.com/users/BlueRiverInteractive/following{/other_user}","gists_url":"https://api.github.com/users/BlueRiverInteractive/gists{/gist_id}","starred_url":"https://api.github.com/users/BlueRiverInteractive/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/BlueRiverInteractive/subscriptions","organizations_url":"https://api.github.com/users/BlueRiverInteractive/orgs","repos_url":"https://api.github.com/users/BlueRiverInteractive/repos","events_url":"https://api.github.com/users/BlueRiverInteractive/events{/privacy}","received_events_url":"https://api.github.com/users/BlueRiverInteractive/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":14,"created_at":"2014-10-05T23:54:20Z","updated_at":"2016-02-21T13:03:47Z","closed_at":"2014-10-06T19:45:56Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2419","html_url":"https://github.com/libgdx/libgdx/pull/2419","diff_url":"https://github.com/libgdx/libgdx/pull/2419.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2419.patch"},"body":"This pull requests adds fully working non-continuos rendering on the iOS backend.\nTouch and key events automatically trigger rendering requests like on the other backends.\n\nTested with the DirtyRenderingTest: https://github.com/libgdx/libgdx/blob/master/tests/gdx-tests/src/com/badlogic/gdx/tests/DirtyRenderingTest.java\n\nP.S. I've removed one unnecessary hack from IOSInput and used the libgdx code formatter template on the changed classes.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2419/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2418","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2418/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2418/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2418/events","html_url":"https://github.com/libgdx/libgdx/pull/2418","id":44928407,"number":2418,"title":"Add KTX file format support + Zipped variant","user":{"login":"vbousquet","id":2796036,"avatar_url":"https://avatars1.githubusercontent.com/u/2796036?v=4","gravatar_id":"","url":"https://api.github.com/users/vbousquet","html_url":"https://github.com/vbousquet","followers_url":"https://api.github.com/users/vbousquet/followers","following_url":"https://api.github.com/users/vbousquet/following{/other_user}","gists_url":"https://api.github.com/users/vbousquet/gists{/gist_id}","starred_url":"https://api.github.com/users/vbousquet/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vbousquet/subscriptions","organizations_url":"https://api.github.com/users/vbousquet/orgs","repos_url":"https://api.github.com/users/vbousquet/repos","events_url":"https://api.github.com/users/vbousquet/events{/privacy}","received_events_url":"https://api.github.com/users/vbousquet/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":14,"created_at":"2014-10-05T20:43:50Z","updated_at":"2014-10-07T22:28:19Z","closed_at":"2014-10-07T22:28:19Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2418","html_url":"https://github.com/libgdx/libgdx/pull/2418","diff_url":"https://github.com/libgdx/libgdx/pull/2418.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2418.patch"},"body":"When working with ETC1, you do not have an easy way to load compressed texture with all its mipmaps. Khronos have specified a file format for this (and other things) here : https://www.khronos.org/opengles/sdk/tools/KTX/file_format_spec/ the Mali ETC1 compression tool directly create them (http://malideveloper.arm.com/develop-for-mali/tools/asset-creation/mali-gpu-texture-compression-tool/).\n\nThis pull request add KTX file format support to texture (including ETC1 on the fly unpacking as it exists for ETC1 textures). \n\nIt also provides a gzip variant (called 'ZKTX') since like for ETC1, KTX format is not compact and is better gzipped. To Create a zipped variant, just run the KTX against GZipOutputSTream, adding the size of the file as an int at beginning (like ETC1). I can provide code if you wish.\n\nIt has been tested on desktop and Android. Not on GWT but ECT1 is already lacking on GWT. I do not have the possibility to test on iOS. I left the code for 1D and 3D texture but since LibGdx do not support these either, this can be removed on demand.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2418/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2417","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2417/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2417/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2417/events","html_url":"https://github.com/libgdx/libgdx/pull/2417","id":44924287,"number":2417,"title":"iPhone 6/6+ launch images, Gradle 2.1 and dependency version updates.","user":{"login":"Tom-Ski","id":4346114,"avatar_url":"https://avatars0.githubusercontent.com/u/4346114?v=4","gravatar_id":"","url":"https://api.github.com/users/Tom-Ski","html_url":"https://github.com/Tom-Ski","followers_url":"https://api.github.com/users/Tom-Ski/followers","following_url":"https://api.github.com/users/Tom-Ski/following{/other_user}","gists_url":"https://api.github.com/users/Tom-Ski/gists{/gist_id}","starred_url":"https://api.github.com/users/Tom-Ski/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Tom-Ski/subscriptions","organizations_url":"https://api.github.com/users/Tom-Ski/orgs","repos_url":"https://api.github.com/users/Tom-Ski/repos","events_url":"https://api.github.com/users/Tom-Ski/events{/privacy}","received_events_url":"https://api.github.com/users/Tom-Ski/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-10-05T18:28:54Z","updated_at":"2014-12-04T21:15:15Z","closed_at":"2014-10-06T19:49:12Z","author_association":"OWNER","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2417","html_url":"https://github.com/libgdx/libgdx/pull/2417","diff_url":"https://github.com/libgdx/libgdx/pull/2417.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2417.patch"},"body":"**NOTE:**\n- **Requires robovm plugin version 1.0.0-alpha-02 (Not released yet)**\n- **Requires Intellij IDEA 13.1.5+**\n\niOS:\n- Add the launch images for iPhone6 and iPhone6+ so apps can run at the native resolution.\n- Change the artifact ID now it is under the robovm namespace.\n- Using robovm version 1.0.0-alpha-02\n\nAndroid:\n- Default android version of 20\n- Default build tools version of 20.0.0\n\nGradle:\n- Using Gradle 2.1 for the wrapper.\n\nMisc:\n- Fix build tool version comparison.\n\nRelated issues: #2415 , #2407\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2417/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2416","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2416/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2416/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2416/events","html_url":"https://github.com/libgdx/libgdx/issues/2416","id":44916349,"number":2416,"title":"Dialogs steal keyboard focus and don't give it back","user":{"login":"duriej","id":8235184,"avatar_url":"https://avatars3.githubusercontent.com/u/8235184?v=4","gravatar_id":"","url":"https://api.github.com/users/duriej","html_url":"https://github.com/duriej","followers_url":"https://api.github.com/users/duriej/followers","following_url":"https://api.github.com/users/duriej/following{/other_user}","gists_url":"https://api.github.com/users/duriej/gists{/gist_id}","starred_url":"https://api.github.com/users/duriej/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/duriej/subscriptions","organizations_url":"https://api.github.com/users/duriej/orgs","repos_url":"https://api.github.com/users/duriej/repos","events_url":"https://api.github.com/users/duriej/events{/privacy}","received_events_url":"https://api.github.com/users/duriej/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2014-10-05T14:51:15Z","updated_at":"2014-10-14T04:20:57Z","closed_at":"2014-10-14T04:20:57Z","author_association":"CONTRIBUTOR","body":"Dialogs steal keyboard focus and don't give it back.\n\nWe had to work around it in the render method of our MainMenu class.\n\nThe issue is that the Dialog assigns keyboard focus back to the previousKeyboardFocus object but in its focusChanged method of the FocusListener it cancels the event because the previousKeyboardFocus object is not a descendant of the Dialog. The Dialog code really ought to check for previousKeyboardFocus as well and not cancel the event.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2416/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}}],"meta":{"x-ratelimit-limit":"5000","x-ratelimit-remaining":"4916","x-ratelimit-reset":"1506844633","x-github-request-id":"A77E:028A:1AB9C43:2ED5CFB:59D095C8","x-github-media-type":"github.squirrel-girl-preview","link":"<https://api.github.com/repositories/5373551/issues?state=all&page=84>; rel=\"next\", <https://api.github.com/repositories/5373551/issues?state=all&page=164>; rel=\"last\", <https://api.github.com/repositories/5373551/issues?state=all&page=1>; rel=\"first\", <https://api.github.com/repositories/5373551/issues?state=all&page=82>; rel=\"prev\"","etag":"\"fc24becdcca6379c8c10ebdbf0aed710\"","status":"200 OK"}}
