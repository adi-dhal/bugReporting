{"data":[{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3137","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3137/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3137/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3137/events","html_url":"https://github.com/libgdx/libgdx/issues/3137","id":76965245,"number":3137,"title":"DragAndDrop can sometimes fire events in illogical order","user":{"login":"josephknight","id":121225,"avatar_url":"https://avatars3.githubusercontent.com/u/121225?v=4","gravatar_id":"","url":"https://api.github.com/users/josephknight","html_url":"https://github.com/josephknight","followers_url":"https://api.github.com/users/josephknight/followers","following_url":"https://api.github.com/users/josephknight/following{/other_user}","gists_url":"https://api.github.com/users/josephknight/gists{/gist_id}","starred_url":"https://api.github.com/users/josephknight/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/josephknight/subscriptions","organizations_url":"https://api.github.com/users/josephknight/orgs","repos_url":"https://api.github.com/users/josephknight/repos","events_url":"https://api.github.com/users/josephknight/events{/privacy}","received_events_url":"https://api.github.com/users/josephknight/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2015-05-16T06:51:41Z","updated_at":"2015-06-13T18:25:44Z","closed_at":"2015-06-13T18:25:44Z","author_association":"CONTRIBUTOR","body":"...specifically in the case of moving a source over two targets, drag() and reset() are fired out of order. Greater detail in the submitted pull request: **DragAndDrop event firing order fix #3136**\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3137/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3136","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3136/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3136/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3136/events","html_url":"https://github.com/libgdx/libgdx/pull/3136","id":76964337,"number":3136,"title":"DragAndDrop event firing order fix","user":{"login":"josephknight","id":121225,"avatar_url":"https://avatars3.githubusercontent.com/u/121225?v=4","gravatar_id":"","url":"https://api.github.com/users/josephknight","html_url":"https://github.com/josephknight","followers_url":"https://api.github.com/users/josephknight/followers","following_url":"https://api.github.com/users/josephknight/following{/other_user}","gists_url":"https://api.github.com/users/josephknight/gists{/gist_id}","starred_url":"https://api.github.com/users/josephknight/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/josephknight/subscriptions","organizations_url":"https://api.github.com/users/josephknight/orgs","repos_url":"https://api.github.com/users/josephknight/repos","events_url":"https://api.github.com/users/josephknight/events{/privacy}","received_events_url":"https://api.github.com/users/josephknight/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2015-05-16T06:46:09Z","updated_at":"2015-06-26T20:17:15Z","closed_at":"2015-06-25T15:37:22Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3136","html_url":"https://github.com/libgdx/libgdx/pull/3136","diff_url":"https://github.com/libgdx/libgdx/pull/3136.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3136.patch"},"body":"Before this commit, `DragAndDrop` fired events just a bit out of order when dragging a Source object across two registered Target objects. \nFormerly, as we drug a source over two targets A then B these firings occurred in this order(hyphens separate the frames):\n- targetA:drag()\n- -----\n- targetA:drag()\n- -----                 <--- transition occurs here\n- targetB:drag()\n- targetA:reset()\n- -----\n- targetB:drag()\n- ...so on\n\nThough probably not a big deal, this could have been a problem if `reset` contained any state regarding the entire drag and drop operation. For example, `reset` may want to turn off a temporary visual indicator which showed where the dragged item would fall amongst a set of sorted targets (drag-sorting a list). But it doesn't want this indicator to turn off when leaving one target immediately for the next. \n\nAs it was, the `drag` event which should have kept the indicator visible was negated by a late-to-the-party `reset` event that turns it back off. In our example this creates flicker and confusion when the indicator flashes or even disappears.\n\nWorkarounds exist, namely holding our last-dragged-over target in a field and seeing if it DOESN'T match our reset target but ERMAHGERD DERTS INSERN!\n\nThe small edit included here simply re-orders the event firing. So that, as we move over target A then B:\n- targetA:drag()\n- -----\n- targetA:drag()\n- -----                 <--- transition occurs here\n- targetA:reset()\n- targetB:drag()\n- -----\n- targetB:drag()\n- .... so on\n\nAhh. Order.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3136/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3135","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3135/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3135/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3135/events","html_url":"https://github.com/libgdx/libgdx/issues/3135","id":76882300,"number":3135,"title":"Minor doc error","user":{"login":"entangledloops","id":3599701,"avatar_url":"https://avatars0.githubusercontent.com/u/3599701?v=4","gravatar_id":"","url":"https://api.github.com/users/entangledloops","html_url":"https://github.com/entangledloops","followers_url":"https://api.github.com/users/entangledloops/followers","following_url":"https://api.github.com/users/entangledloops/following{/other_user}","gists_url":"https://api.github.com/users/entangledloops/gists{/gist_id}","starred_url":"https://api.github.com/users/entangledloops/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/entangledloops/subscriptions","organizations_url":"https://api.github.com/users/entangledloops/orgs","repos_url":"https://api.github.com/users/entangledloops/repos","events_url":"https://api.github.com/users/entangledloops/events{/privacy}","received_events_url":"https://api.github.com/users/entangledloops/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2015-05-15T22:47:21Z","updated_at":"2015-05-17T20:57:20Z","closed_at":"2015-05-17T20:57:20Z","author_association":"NONE","body":"[The example shown](http://libgdx.badlogicgames.com/nightlies/docs/api/com/badlogic/gdx/scenes/scene2d/InputListener.html) in the documentation for `touchDown` is a boolean function, but the example has no return value.\n\n```\nactor.addListener(new InputListener() {\n        public boolean touchDown (InputEvent event, float x, float y, int pointer, int button) {\n                Gdx.app.log(\"Example\", \"touch started at (\" + x + \", \" + y + \")\");\n        }\n\n        public void touchUp (InputEvent event, float x, float y, int pointer, int button) {\n                Gdx.app.log(\"Example\", \"touch done at (\" + x + \", \" + y + \")\");\n        }\n });\n```\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3135/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3134","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3134/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3134/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3134/events","html_url":"https://github.com/libgdx/libgdx/issues/3134","id":76654207,"number":3134,"title":"GlyphRun: Final white space omitted","user":{"login":"ViktorMihhailov","id":289003,"avatar_url":"https://avatars1.githubusercontent.com/u/289003?v=4","gravatar_id":"","url":"https://api.github.com/users/ViktorMihhailov","html_url":"https://github.com/ViktorMihhailov","followers_url":"https://api.github.com/users/ViktorMihhailov/followers","following_url":"https://api.github.com/users/ViktorMihhailov/following{/other_user}","gists_url":"https://api.github.com/users/ViktorMihhailov/gists{/gist_id}","starred_url":"https://api.github.com/users/ViktorMihhailov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ViktorMihhailov/subscriptions","organizations_url":"https://api.github.com/users/ViktorMihhailov/orgs","repos_url":"https://api.github.com/users/ViktorMihhailov/repos","events_url":"https://api.github.com/users/ViktorMihhailov/events{/privacy}","received_events_url":"https://api.github.com/users/ViktorMihhailov/received_events","type":"User","site_admin":false},"labels":[{"id":11336980,"url":"https://api.github.com/repos/libgdx/libgdx/labels/bug","name":"bug","color":"fc2929","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2015-05-15T08:53:54Z","updated_at":"2015-06-25T15:11:27Z","closed_at":"2015-06-25T15:11:27Z","author_association":"NONE","body":"LibGdx 1.6.0 font markupEnabled set to true\n\n<h4>1.Incorrect color if alpha channel missed</h4>\n\n<p>\nHTML style color tag without alpha channel produces incorrect color. Color tag <code>[#00FF00]</code> instead of green color gives blue.\n</p>\n\n\n<h4>2.First whitespace before color tag is omitted</h4>\n\n<p>\nIf font is generated with <code>FreeTypeFontGenerator</code> then first whitespace before color tag disappears.\n</p>\n\nCode below reproduces all described issues. \n\n```\nimport com.badlogic.gdx.ApplicationAdapter;\nimport com.badlogic.gdx.Gdx;\nimport com.badlogic.gdx.backends.lwjgl.LwjglApplication;\nimport com.badlogic.gdx.graphics.GL20;\nimport com.badlogic.gdx.graphics.g2d.BitmapFont;\nimport com.badlogic.gdx.graphics.g2d.SpriteBatch;\nimport com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator;\nimport com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator.FreeTypeFontParameter;\n\npublic class BitmapFontMarkupBugExample extends ApplicationAdapter {\n    SpriteBatch batch;\n    BitmapFont font;\n    String alphaChannelBug;\n    String whiteSpaceBug;\n\n    public void create () {\n        batch = new SpriteBatch();\n\n        FreeTypeFontParameter param = new FreeTypeFontParameter();\n        param.size = 26;\n        font = new FreeTypeFontGenerator(Gdx.files.internal(\"data/arial.ttf\")).generateFont(param);\n        font.getData().markupEnabled = true;\n\n        alphaChannelBug = \"1.Alpha channel bug:\\n \\n\"\n                + \"[GREEN]OK green color [['GREEN'] tag;\\n\"\n                + \"[#00FF00FF]OK green color [['#00FF00FF'] tag;\\n\"\n                + \"[#00FF00]BUG green color [['#00FF00'] tag\";\n\n        whiteSpaceBug = \"2.White space bug:\\n \\n\"\n                + \"OK Sphinx of black quartz\\n\"\n                + \"BUG Sphinx [RED]of black quartz\";\n    }\n\n    public void render () {\n        Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);\n        batch.begin();\n\n\n        font.draw(batch, alphaChannelBug, 100, 400);\n        font.draw(batch, whiteSpaceBug, 100, 200);\n\n        batch.end();\n    }\n\n    public static void main (String[] args) throws Exception {\n        new LwjglApplication(new BitmapFontMarkupBugExample());\n    }\n}\n```\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3134/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3133","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3133/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3133/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3133/events","html_url":"https://github.com/libgdx/libgdx/issues/3133","id":76618221,"number":3133,"title":"LWJGL and JGLFW behave differently","user":{"login":"ghost","id":10137,"avatar_url":"https://avatars3.githubusercontent.com/u/10137?v=4","gravatar_id":"","url":"https://api.github.com/users/ghost","html_url":"https://github.com/ghost","followers_url":"https://api.github.com/users/ghost/followers","following_url":"https://api.github.com/users/ghost/following{/other_user}","gists_url":"https://api.github.com/users/ghost/gists{/gist_id}","starred_url":"https://api.github.com/users/ghost/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ghost/subscriptions","organizations_url":"https://api.github.com/users/ghost/orgs","repos_url":"https://api.github.com/users/ghost/repos","events_url":"https://api.github.com/users/ghost/events{/privacy}","received_events_url":"https://api.github.com/users/ghost/received_events","type":"User","site_admin":false},"labels":[{"id":172870364,"url":"https://api.github.com/repos/libgdx/libgdx/labels/need%20more%20info","name":"need more info","color":"bfdadc","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2015-05-15T06:35:16Z","updated_at":"2015-05-15T11:24:18Z","closed_at":"2015-05-15T11:24:18Z","author_association":"NONE","body":"I would like to refer you to this bug I posted on the box2dlights bug tracker:\nhttps://github.com/libgdx/box2dlights/issues/57\n(box2dlights gives a black screen with libgdx 1.3 and up and and error with 1.5.5 and up. LWJGL ONLY) [OpenGLException: Cannot use Buffers when Array Buffer Object is enabled]\n\nSince this behavior only appears on LWJGL, I would assume that either the box2dlights guys do something slightly wrong or that LWJGL and JGLFW simply don't behave the same way.\n\n(Using windows 7)\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3133/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3132","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3132/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3132/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3132/events","html_url":"https://github.com/libgdx/libgdx/pull/3132","id":76533483,"number":3132,"title":"Changes TiledMapPacker default output to one atlas per map","user":{"login":"oddlydrawn","id":3712667,"avatar_url":"https://avatars2.githubusercontent.com/u/3712667?v=4","gravatar_id":"","url":"https://api.github.com/users/oddlydrawn","html_url":"https://github.com/oddlydrawn","followers_url":"https://api.github.com/users/oddlydrawn/followers","following_url":"https://api.github.com/users/oddlydrawn/following{/other_user}","gists_url":"https://api.github.com/users/oddlydrawn/gists{/gist_id}","starred_url":"https://api.github.com/users/oddlydrawn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/oddlydrawn/subscriptions","organizations_url":"https://api.github.com/users/oddlydrawn/orgs","repos_url":"https://api.github.com/users/oddlydrawn/repos","events_url":"https://api.github.com/users/oddlydrawn/events{/privacy}","received_events_url":"https://api.github.com/users/oddlydrawn/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2015-05-15T00:10:34Z","updated_at":"2015-05-15T13:48:32Z","closed_at":"2015-05-15T13:48:32Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3132","html_url":"https://github.com/libgdx/libgdx/pull/3132","diff_url":"https://github.com/libgdx/libgdx/pull/3132.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3132.patch"},"body":"##### Adds/Changes the following\n- Default output creates an individual atlas for each map (uses the map name sans extension)\n- Searches for maps in nested folders, regardless of depth\n- Fixes the problem of not locating tilesets with ../ in the map Note: This has only been fixed with the      new functionality (not --combine-tilsets) The old method of combining tilesets into one atlas still has this problem.\n- Old functionality can be called with the option \"--combine-tilesets\"\n- Changes usage to: Usage: INPUTDIR [OUTPUTDIR] [--strip-unused] [--combine-tilesets] [-v]\n- Adds two classes to test the options and renders the processed maps\n- Adds a new usage prompt that lists/hints at issues:\n  \n  ```\n  Usage: INPUTDIR [OUTPUTDIR] [--strip-unused] [--combine-tilesets] [-v] \n  Processes a directory of Tiled .tmx maps. Unable to process XML encoded tmx maps. Problems processing or loading tilesets with different tile size from those specified in the map.\n  \n      --strip-unused \n           removes all tiles that are not used. Speeds up the processing.           \n      --combine-tilesets \n           instead of creating a tileset for each map, this combines the tilesets into some kind of monster tileset. Has problems with tileset location. Has problems with nested folders. Not recommended. \n       -v \n           outputs which tiles are stripped and included\n  ```\n##### Example:\n\nRunning TiledMapPacker on \"./in ./out\" with an \"in\" directory with the following structure:\n- in/overworld.tmx\n- in/dawn/Examples/Blank.tmx\n- in/dawn/Examples/Dungeon.tmx\n- in/dawn/Examples/Logo.tmx\n- in/dawn/Examples/Mine.tmx\n- in/dawn/Examples/Town.tmx\n- in/dawn/Examples/Underworld.tmx\n- in/world1Maps/dungeon1.tmx\n- in/world1Maps/dungeon2.tmx\n- in/world2Maps/town1.tmx\n- in/world2Maps/town2.tmx\n\nwould have the following structure in the \"out\" directory:\n- out/Blank.tmx\n- out/dungeon1.tmx\n- out/dungeon2.tmx\n- out/Dungeon.tmx\n- out/Logo.tmx\n- out/Mine.tmx\n- out/overworld.tmx\n- out/town1.tmx\n- out/town2.tmx\n- out/Town.tmx\n- out/Underworld.tmx\n- out/tileset/Blank.atlas\n- out/tileset/dungeon1.atlas\n- out/tileset/dungeon1.png\n- out/tileset/dungeon2.atlas\n- out/tileset/dungeon2.png\n- out/tileset/Dungeon.atlas\n- out/tileset/Dungeon.png\n- out/tileset/Logo.atlas\n- out/tileset/Logo.png\n- out/tileset/Mine.atlas\n- out/tileset/Mine.png\n- out/tileset/overworld.atlas\n- out/tileset/overworld.png\n- out/tileset/town1.atlas\n- out/tileset/town2.atlas\n- out/tileset/town2.png\n- out/tileset/Town.atlas\n- out/tileset/Town.png\n- out/tileset/Underworld.atlas\n- out/tileset/Underworld.png\n\n(Note: maps without a tileset .png were completely empty maps)\n\nOld functionality (now --combine-tilesets) can't handle the nested directories or parent (../) paths for tilesets but if it could run on the same in/out directories it would have the following output:\n- out/{same maps here}\n- out/tileset/packed.atlas\n- out/tileset/packed.png\n\nWith all of the tiles from every map inside the packed.png.\n##### TL;DR\n\nChanges TiledMapPacker to create one texture atlas per map, old functionality is now an option \n(--combine-tilesets), adds two classes to test that I haven't messed things up more than they were.. I think.\n- modified:   CHANGES\n- modified:   extensions/gdx-tools/src/com/badlogic/gdx/tiledmappacker/TiledMapPacker.java\n- new file:   extensions/gdx-tools/src/com/badlogic/gdx/tiledmappacker/TiledMapPackerTest.java\n- new file:   extensions/gdx-tools/src/com/badlogic/gdx/tiledmappacker/TiledMapPackerTestRender.java\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3132/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3131","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3131/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3131/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3131/events","html_url":"https://github.com/libgdx/libgdx/issues/3131","id":76396327,"number":3131,"title":"After 1.6.0 SelectBox and TextField have no padding for inner text","user":{"login":"azakhary","id":2115888,"avatar_url":"https://avatars0.githubusercontent.com/u/2115888?v=4","gravatar_id":"","url":"https://api.github.com/users/azakhary","html_url":"https://github.com/azakhary","followers_url":"https://api.github.com/users/azakhary/followers","following_url":"https://api.github.com/users/azakhary/following{/other_user}","gists_url":"https://api.github.com/users/azakhary/gists{/gist_id}","starred_url":"https://api.github.com/users/azakhary/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/azakhary/subscriptions","organizations_url":"https://api.github.com/users/azakhary/orgs","repos_url":"https://api.github.com/users/azakhary/repos","events_url":"https://api.github.com/users/azakhary/events{/privacy}","received_events_url":"https://api.github.com/users/azakhary/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2015-05-14T15:33:11Z","updated_at":"2015-05-14T16:42:32Z","closed_at":"2015-05-14T16:30:10Z","author_association":"CONTRIBUTOR","body":"I am not sure how this was functioning before, but after I updated from 1.5.6 to 1.6.0 all widgets that had text in them shrink-ed to minimal text size. \n\nHere is an example.\n![sample2](https://cloud.githubusercontent.com/assets/2115888/7636210/c8203f4e-fa76-11e4-816f-9c6deae9d4c2.png)\n\nAs you can see just changing libGDx version changed the paddings.\nIs there a new way to specify text padding inside the widget?\n\nSorry if I am doing something wrong here. This is probably related to glyph api change?\n\nHere is app listener and assets that I am using:\nhttps://www.dropbox.com/s/4lqfix7xgeh02i1/label.rar?dl=0\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3131/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3130","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3130/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3130/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3130/events","html_url":"https://github.com/libgdx/libgdx/issues/3130","id":76384628,"number":3130,"title":"wrong draw() coords when using TextField with e.g. (0,0)-(1,1) coord system","user":{"login":"FyiurAmron","id":11016998,"avatar_url":"https://avatars1.githubusercontent.com/u/11016998?v=4","gravatar_id":"","url":"https://api.github.com/users/FyiurAmron","html_url":"https://github.com/FyiurAmron","followers_url":"https://api.github.com/users/FyiurAmron/followers","following_url":"https://api.github.com/users/FyiurAmron/following{/other_user}","gists_url":"https://api.github.com/users/FyiurAmron/gists{/gist_id}","starred_url":"https://api.github.com/users/FyiurAmron/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/FyiurAmron/subscriptions","organizations_url":"https://api.github.com/users/FyiurAmron/orgs","repos_url":"https://api.github.com/users/FyiurAmron/repos","events_url":"https://api.github.com/users/FyiurAmron/events{/privacy}","received_events_url":"https://api.github.com/users/FyiurAmron/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2015-05-14T14:56:00Z","updated_at":"2015-06-25T16:32:14Z","closed_at":"2015-06-25T16:32:14Z","author_association":"CONTRIBUTOR","body":"Sample repro case is to try using TextField with a Batch that uses (0,0)-(1,1) coord system (or any other (0,0)-(x,y) coord system with small enough x/y values) for positioning elements, instead of regular screen coords. The cursor and/or selection will either not appear at all, or appear in \"strange places\".\n\nAFAIK, it happens due to two things.\n\nFirst, the values get truncated in Y dimension due to `(int)` cast in `getTextY` ( https://github.com/libgdx/libgdx/blob/master/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextField.java#L329 & https://github.com/libgdx/libgdx/blob/master/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextField.java#L331 ), so everything gets Y mapped to 0. I think this was somehow designed to either limit bleeding due to filtering on non-integer positions or to better match the text if it used integer Y; still, BitmapFont currently has its own devices to deal with that, and I guess we should either query the font if it's needed at all, or allow any other way to disable the truncation.\n\nSecondly, in https://github.com/libgdx/libgdx/blob/master/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextField.java#L337 & https://github.com/libgdx/libgdx/blob/master/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextField.java#L346 there's a magical -1 added to `fontOffset`, which was probably aiming at showing the cursor a single pixel to the left to look better, but which makes any sense only for screen-sized viewport coordinates, and not with e.g. (0,0)-(1,1); there, moving a visible point by 1 unit in any direction makes the element not visible at all due to being off the visible range.\n\nPossible solutions would be to either remove those casts at all, figure if they are really needed based on something (`font.usesIntegerPositions()` ?) or add an option to disable it/them if they are really necessary in some cases. Removing them worked for me without any visible side effects.\n\nAs to the offsets, selection offset looks quite OK to me even without that 1 pix, and cursor offset should be probably calculated proportionally, based on glyph width, with the option of setting a custom offset factor multiplier or value (e.g. default factor 0.1 giving -0.1 of the glyph width, settable to any direct float or factor). It could also be calculated from `cursorPatch.getMinWidth()`. That's the solution I used:\n\n```\n    protected void drawCursor( Drawable cursorPatch, Batch3D batch, BitmapFontEx font, float x, float y ) {\n        float textHeight = getTextHeight(), cpWidth = cursorPatch.getMinWidth();\n        cursorPatch.draw( batch, x + textOffset + glyphPositions.get( cursor ) - glyphPositions.items[visibleTextStart] - 0.5f * cpWidth,\n                y - textHeight - font.getDescent(), cpWidth, textHeight + 0.5f * font.getDescent() );\n    }\n```\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3130/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3129","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3129/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3129/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3129/events","html_url":"https://github.com/libgdx/libgdx/pull/3129","id":76380781,"number":3129,"title":"Log wrapped exception messages","user":{"login":"bornskilled200","id":2602658,"avatar_url":"https://avatars0.githubusercontent.com/u/2602658?v=4","gravatar_id":"","url":"https://api.github.com/users/bornskilled200","html_url":"https://github.com/bornskilled200","followers_url":"https://api.github.com/users/bornskilled200/followers","following_url":"https://api.github.com/users/bornskilled200/following{/other_user}","gists_url":"https://api.github.com/users/bornskilled200/gists{/gist_id}","starred_url":"https://api.github.com/users/bornskilled200/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bornskilled200/subscriptions","organizations_url":"https://api.github.com/users/bornskilled200/orgs","repos_url":"https://api.github.com/users/bornskilled200/repos","events_url":"https://api.github.com/users/bornskilled200/events{/privacy}","received_events_url":"https://api.github.com/users/bornskilled200/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2015-05-14T14:44:07Z","updated_at":"2015-05-14T15:34:44Z","closed_at":"2015-05-14T15:34:44Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3129","html_url":"https://github.com/libgdx/libgdx/pull/3129","diff_url":"https://github.com/libgdx/libgdx/pull/3129.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3129.patch"},"body":"fixes #3106 \n\nThis pull request only changes the text in the textarea\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3129/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3128","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3128/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3128/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3128/events","html_url":"https://github.com/libgdx/libgdx/pull/3128","id":76286287,"number":3128,"title":"Changes TiledMapPacker Behavior, Adds new functionality. Closes #3127","user":{"login":"oddlydrawn","id":3712667,"avatar_url":"https://avatars2.githubusercontent.com/u/3712667?v=4","gravatar_id":"","url":"https://api.github.com/users/oddlydrawn","html_url":"https://github.com/oddlydrawn","followers_url":"https://api.github.com/users/oddlydrawn/followers","following_url":"https://api.github.com/users/oddlydrawn/following{/other_user}","gists_url":"https://api.github.com/users/oddlydrawn/gists{/gist_id}","starred_url":"https://api.github.com/users/oddlydrawn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/oddlydrawn/subscriptions","organizations_url":"https://api.github.com/users/oddlydrawn/orgs","repos_url":"https://api.github.com/users/oddlydrawn/repos","events_url":"https://api.github.com/users/oddlydrawn/events{/privacy}","received_events_url":"https://api.github.com/users/oddlydrawn/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2015-05-14T08:41:34Z","updated_at":"2015-05-14T21:50:54Z","closed_at":"2015-05-14T21:50:54Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3128","html_url":"https://github.com/libgdx/libgdx/pull/3128","diff_url":"https://github.com/libgdx/libgdx/pull/3128.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3128.patch"},"body":"Changes TiledMapPacker to create one texture atlas per map, adds two classes to\ntest that I haven't messed things up more than they were.\n##### Adds/Changes the following\n- Default behavior now strips unused tiles and creates an atlas for each map.\n- Searches for maps in nested folders, regardless of depth\n- Creates an individual atlas for each map (uses the map name sans extension)\n- Fixes the problem of not locating tilesets with ../ in the map Note: This has only been fixed with the      new functionality (not --combine-tilesets) The old method of combining tilesets into one atlas still has this problem.\n- Old functionality can be called with the option \"--combine-tilesets\"\n- Adds two classes to test the options and renders the processed maps\n- Changes usage to: Usage: INPUTDIR [OUTPUTDIR] [--include-unused] [--combine-tilesets] [-v]\n- Adds a new usage prompt that lists/hints at issues:\n  \n  ```\n  Usage: INPUTDIR [OUTPUTDIR] [--include-unused] [--combine-tilesets] [-v] \n  Processes a directory of Tiled .tmx maps. Unable to process XML encoded tmx maps. Problems processing or loading tilesets with different tile size from those specified in the map.\n  \n      --include-unused \n           creates a tileset with every tile, not just the used tiles. This can take a long time.           \n      --combine-tilesets \n           instead of creating a tileset for each map, this combines the tilesets into some kind of monster tileset. Has problems with tileset location. Has problems with nested folders. Not recommended. \n       -v \n           outputs which tiles are stripped and included\n  ```\n##### Example:\n\nRunning TiledMapPacker on \"./in ./out\" with an \"in\" directory with the following structure:\n- in/overworld.tmx\n- in/dawn/Examples/Blank.tmx\n- in/dawn/Examples/Dungeon.tmx\n- in/dawn/Examples/Logo.tmx\n- in/dawn/Examples/Mine.tmx\n- in/dawn/Examples/Town.tmx\n- in/dawn/Examples/Underworld.tmx\n- in/world1Maps/dungeon1.tmx\n- in/world1Maps/dungeon2.tmx\n- in/world2Maps/town1.tmx\n- in/world2Maps/town2.tmx\n\nwould have the following structure in the \"out\" directory:\n- out/Blank.tmx\n- out/dungeon1.tmx\n- out/dungeon2.tmx\n- out/Dungeon.tmx\n- out/Logo.tmx\n- out/Mine.tmx\n- out/overworld.tmx\n- out/town1.tmx\n- out/town2.tmx\n- out/Town.tmx\n- out/Underworld.tmx\n- out/tileset/Blank.atlas\n- out/tileset/dungeon1.atlas\n- out/tileset/dungeon1.png\n- out/tileset/dungeon2.atlas\n- out/tileset/dungeon2.png\n- out/tileset/Dungeon.atlas\n- out/tileset/Dungeon.png\n- out/tileset/Logo.atlas\n- out/tileset/Logo.png\n- out/tileset/Mine.atlas\n- out/tileset/Mine.png\n- out/tileset/overworld.atlas\n- out/tileset/overworld.png\n- out/tileset/town1.atlas\n- out/tileset/town2.atlas\n- out/tileset/town2.png\n- out/tileset/Town.atlas\n- out/tileset/Town.png\n- out/tileset/Underworld.atlas\n- out/tileset/Underworld.png\n\n(Note: maps without a tileset .png were completely empty maps)\n\nOld functionality (now --combine-tilesets) can't handle the nested directories or parent (../) paths for tilesets but if it could run on the same in/out directories it would have the following output:\n- out/{same maps here}\n- out/tileset/packed.atlas\n- out/tileset/packed.png\n\nWith all of the tiles from every map inside the packed.png.\n##### TL;DR\n\nChanges TiledMapPacker to create one texture atlas per map, adds two classes to\ntest that I haven't messed things up more than they were.. I think.\n- modified:   CHANGES\n- modified:   extensions/gdx-tools/src/com/badlogic/gdx/tiledmappacker/TiledMapPacker.java\n- new file:   extensions/gdx-tools/src/com/badlogic/gdx/tiledmappacker/TiledMapPackerTest.java\n- new file:   extensions/gdx-tools/src/com/badlogic/gdx/tiledmappacker/TiledMapPackerTestRender.java\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3128/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3127","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3127/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3127/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3127/events","html_url":"https://github.com/libgdx/libgdx/issues/3127","id":76282325,"number":3127,"title":"PR TiledMapPacker new functionality","user":{"login":"oddlydrawn","id":3712667,"avatar_url":"https://avatars2.githubusercontent.com/u/3712667?v=4","gravatar_id":"","url":"https://api.github.com/users/oddlydrawn","html_url":"https://github.com/oddlydrawn","followers_url":"https://api.github.com/users/oddlydrawn/followers","following_url":"https://api.github.com/users/oddlydrawn/following{/other_user}","gists_url":"https://api.github.com/users/oddlydrawn/gists{/gist_id}","starred_url":"https://api.github.com/users/oddlydrawn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/oddlydrawn/subscriptions","organizations_url":"https://api.github.com/users/oddlydrawn/orgs","repos_url":"https://api.github.com/users/oddlydrawn/repos","events_url":"https://api.github.com/users/oddlydrawn/events{/privacy}","received_events_url":"https://api.github.com/users/oddlydrawn/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2015-05-14T08:27:25Z","updated_at":"2015-05-14T18:33:52Z","closed_at":"2015-05-14T18:33:52Z","author_association":"CONTRIBUTOR","body":"##### Adds/Changes the following\n- Default behavior now strips unused tiles and creates an atlas for each map.\n- Searches for maps in nested folders, regardless of depth\n- Creates an individual atlas for each map (uses the map name sans extension)\n- Fixes the problem of not locating tilesets with ../ in the map Note: This has only been fixed with the      new functionality (not --combine-tilesets) The old method of combining tilesets into one atlas still has this problem.\n- Old functionality can be called with the option \"--combine-tilesets\"\n- Adds two classes to test the options and renders the processed maps\n- Changes usage to: Usage: INPUTDIR [OUTPUTDIR] [--include-unused] [--combine-tilesets] [-v]\n- Adds a new usage prompt that lists/hints at issues:\n  \n  ```\n  Usage: INPUTDIR [OUTPUTDIR] [--include-unused] [--combine-tilesets] [-v] \n  Processes a directory of Tiled .tmx maps. Unable to process XML encoded tmx maps. Problems processing or loading tilesets with different tile size from those specified in the map.\n  \n      --include-unused \n           creates a tileset with every tile, not just the used tiles. This can take a long time.           \n      --combine-tilesets \n           instead of creating a tileset for each map, this combines the tilesets into some kind of monster tileset. Has problems with tileset location. Has problems with nested folders. Not recommended. \n       -v \n           outputs which tiles are stripped and included\n  ```\n##### Example:\n\nRunning TiledMapPacker on \"./in ./out\" with an \"in\" directory with the following structure:\n- in/overworld.tmx\n- in/dawn/Examples/Blank.tmx\n- in/dawn/Examples/Dungeon.tmx\n- in/dawn/Examples/Logo.tmx\n- in/dawn/Examples/Mine.tmx\n- in/dawn/Examples/Town.tmx\n- in/dawn/Examples/Underworld.tmx\n- in/world1Maps/dungeon1.tmx\n- in/world1Maps/dungeon2.tmx\n- in/world2Maps/town1.tmx\n- in/world2Maps/town2.tmx\n\nwould have the following structure in the \"out\" directory:\n- out/Blank.tmx\n- out/dungeon1.tmx\n- out/dungeon2.tmx\n- out/Dungeon.tmx\n- out/Logo.tmx\n- out/Mine.tmx\n- out/overworld.tmx\n- out/town1.tmx\n- out/town2.tmx\n- out/Town.tmx\n- out/Underworld.tmx\n- out/tileset/Blank.atlas\n- out/tileset/dungeon1.atlas\n- out/tileset/dungeon1.png\n- out/tileset/dungeon2.atlas\n- out/tileset/dungeon2.png\n- out/tileset/Dungeon.atlas\n- out/tileset/Dungeon.png\n- out/tileset/Logo.atlas\n- out/tileset/Logo.png\n- out/tileset/Mine.atlas\n- out/tileset/Mine.png\n- out/tileset/overworld.atlas\n- out/tileset/overworld.png\n- out/tileset/town1.atlas\n- out/tileset/town2.atlas\n- out/tileset/town2.png\n- out/tileset/Town.atlas\n- out/tileset/Town.png\n- out/tileset/Underworld.atlas\n- out/tileset/Underworld.png\n\n(Note: maps without a tileset .png were completely empty maps)\n\nOld functionality (now --combine-tilesets) can't handle the nested directories or parent (../) paths for tilesets but if it could run on the same in/out directories it would have the following output:\n- out/{same maps here}\n- out/tileset/packed.atlas\n- out/tileset/packed.png\n\nWith all of the tiles from every map inside the packed.png.\n##### TL;DR\n\nChanges TiledMapPacker to create one texture atlas per map, adds two classes to\ntest that I haven't messed things up more than they were.. I think.\n- modified:   CHANGES\n- modified:   extensions/gdx-tools/src/com/badlogic/gdx/tiledmappacker/TiledMapPacker.java\n- new file:   extensions/gdx-tools/src/com/badlogic/gdx/tiledmappacker/TiledMapPackerTest.java\n- new file:   extensions/gdx-tools/src/com/badlogic/gdx/tiledmappacker/TiledMapPackerTestRender.java\n\n[Here's the branch 'git diff master'](https://github.com/oddlydrawn/libgdx-contrib/blob/master/tiledMapPacker/newFunctionality/tiledMapPacker-NewFunctionality.diff)\n\n[Here's the branch](https://github.com/oddlydrawn/libgdx/tree/tiledPackerProcessing) \n\n~~Will edit to add the branch~~ so I can [close this issue with a commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) after/if I get permission(?) to create the pull request. Let me know if I need to change something or if it's okay to submit a PR.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3127/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3126","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3126/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3126/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3126/events","html_url":"https://github.com/libgdx/libgdx/pull/3126","id":76245952,"number":3126,"title":"Update README.md","user":{"login":"bhamodi","id":7663987,"avatar_url":"https://avatars0.githubusercontent.com/u/7663987?v=4","gravatar_id":"","url":"https://api.github.com/users/bhamodi","html_url":"https://github.com/bhamodi","followers_url":"https://api.github.com/users/bhamodi/followers","following_url":"https://api.github.com/users/bhamodi/following{/other_user}","gists_url":"https://api.github.com/users/bhamodi/gists{/gist_id}","starred_url":"https://api.github.com/users/bhamodi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bhamodi/subscriptions","organizations_url":"https://api.github.com/users/bhamodi/orgs","repos_url":"https://api.github.com/users/bhamodi/repos","events_url":"https://api.github.com/users/bhamodi/events{/privacy}","received_events_url":"https://api.github.com/users/bhamodi/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2015-05-14T05:59:11Z","updated_at":"2015-05-17T18:15:36Z","closed_at":"2015-05-14T12:59:03Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3126","html_url":"https://github.com/libgdx/libgdx/pull/3126","diff_url":"https://github.com/libgdx/libgdx/pull/3126.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3126.patch"},"body":"Spelling mistake.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3126/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3125","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3125/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3125/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3125/events","html_url":"https://github.com/libgdx/libgdx/pull/3125","id":75985160,"number":3125,"title":"Allow checkbox and ImageTextButton to be left/right hand sided","user":{"login":"Tom-Ski","id":4346114,"avatar_url":"https://avatars0.githubusercontent.com/u/4346114?v=4","gravatar_id":"","url":"https://api.github.com/users/Tom-Ski","html_url":"https://github.com/Tom-Ski","followers_url":"https://api.github.com/users/Tom-Ski/followers","following_url":"https://api.github.com/users/Tom-Ski/following{/other_user}","gists_url":"https://api.github.com/users/Tom-Ski/gists{/gist_id}","starred_url":"https://api.github.com/users/Tom-Ski/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Tom-Ski/subscriptions","organizations_url":"https://api.github.com/users/Tom-Ski/orgs","repos_url":"https://api.github.com/users/Tom-Ski/repos","events_url":"https://api.github.com/users/Tom-Ski/events{/privacy}","received_events_url":"https://api.github.com/users/Tom-Ski/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2015-05-13T13:31:12Z","updated_at":"2015-06-25T14:38:39Z","closed_at":"2015-06-13T18:39:26Z","author_association":"OWNER","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3125","html_url":"https://github.com/libgdx/libgdx/pull/3125","diff_url":"https://github.com/libgdx/libgdx/pull/3125.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3125.patch"},"body":"![http://pix.asidik.com/wisRO.png](http://pix.asidik.com/wisRO.png)\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3125/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3124","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3124/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3124/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3124/events","html_url":"https://github.com/libgdx/libgdx/issues/3124","id":75984272,"number":3124,"title":"PolygonSpriteBatch should check remaining vertex/index before copying.","user":{"login":"RotaruDan","id":5658058,"avatar_url":"https://avatars2.githubusercontent.com/u/5658058?v=4","gravatar_id":"","url":"https://api.github.com/users/RotaruDan","html_url":"https://github.com/RotaruDan","followers_url":"https://api.github.com/users/RotaruDan/followers","following_url":"https://api.github.com/users/RotaruDan/following{/other_user}","gists_url":"https://api.github.com/users/RotaruDan/gists{/gist_id}","starred_url":"https://api.github.com/users/RotaruDan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/RotaruDan/subscriptions","organizations_url":"https://api.github.com/users/RotaruDan/orgs","repos_url":"https://api.github.com/users/RotaruDan/repos","events_url":"https://api.github.com/users/RotaruDan/events{/privacy}","received_events_url":"https://api.github.com/users/RotaruDan/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2015-05-13T13:28:20Z","updated_at":"2016-11-25T01:32:36Z","closed_at":"2016-11-25T01:32:36Z","author_association":"CONTRIBUTOR","body":"This method https://github.com/libgdx/libgdx/blob/8850b5ef4dace8929472ae2d5d8d5614ca9295db/gdx/src/com/badlogic/gdx/graphics/g2d/PolygonSpriteBatch.java#L745\n\n``` Java\n    @Override\n    public void draw (Texture texture, float[] spriteVertices, int offset, int count) {\n        if (!drawing) throw new IllegalStateException(\"PolygonSpriteBatch.begin must be called before draw.\");\n\n        final short[] triangles = this.triangles;\n        final float[] vertices = this.vertices;\n\n        final int triangleCount = count / SPRITE_SIZE * 6;\n        if (texture != lastTexture)\n            switchTexture(texture);\n        else if (triangleIndex + triangleCount > triangles.length || vertexIndex + count > vertices.length) //\n            flush();\n\n        final int vertexIndex = this.vertexIndex;\n        int triangleIndex = this.triangleIndex;\n        short vertex = (short)(vertexIndex / VERTEX_SIZE);\n        for (int n = triangleIndex + triangleCount; triangleIndex < n; triangleIndex += 6, vertex += 4) {\n            triangles[triangleIndex] = vertex;\n            triangles[triangleIndex + 1] = (short)(vertex + 1);\n            triangles[triangleIndex + 2] = (short)(vertex + 2);\n            triangles[triangleIndex + 3] = (short)(vertex + 2);\n            triangles[triangleIndex + 4] = (short)(vertex + 3);\n            triangles[triangleIndex + 5] = vertex;\n        }\n        this.triangleIndex = triangleIndex;\n\n        System.arraycopy(spriteVertices, offset, vertices, vertexIndex, count);\n        this.vertexIndex += count;\n    }\n```\n\ndoesn't check if there are enough remaining triangles in the for-loop. I know it checks it right in the `if` before, but what happends if `triangleCount` (`count / SPRITE_SIZE * 6`) is higher than the length of the triangles array? \nI think that inside the for-loop that condition should be checked so that in case it's satisfied the batch should be flushed (calling `flush()`) and the iterating variables (`n`, `triangleIndex` and `vertex` should be updated acordingly.\n\nThis can also happen for the vertexIndex copying process. What happends if 'count' is higher than the length of vertices array? (at the moment an `IndexOutOfBoundsException` is thrown in both cases).\nThis could be avoided by computing the `remainingVertices` and invoking  `System.arraycopy(spriteVertices, offset, vertices, idx, copyCount);` inside a do-while (or while) statement. Something very similar to the implementation of this method in the SpriteBatch: https://github.com/libgdx/libgdx/blob/8850b5ef4dace8929472ae2d5d8d5614ca9295db/gdx/src/com/badlogic/gdx/graphics/g2d/SpriteBatch.java#L555 . \nSince the SpriteBatch has this behavior I thought that the PolygonSpriteBatch should have it too.\n##### Steps to reproduce this:\n\nDraw a BitmapFontCache with a text large enough and a PolygonSpriteBatch.\n###### Use case 1,\n\n``` Java\n        BitmapFontCache cache = new BitmapFontCache(new BitmapFont());\n        cache.setText(\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\", 0, 0);\n        Batch batch = stage.getBatch();\n        batch.begin();\n        cache.draw(batch);\n        batch.end();\n```\n\nthrows an exception inside the `triangles` for-loop like this one:\n\n``` Java\nEditorApplicationListener: Fatal error: LWJGL Application(12)\njava.lang.ArrayIndexOutOfBoundsException: 6000\n    at com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch.draw(PolygonSpriteBatch.java:760)\n    at com.badlogic.gdx.graphics.g2d.BitmapFontCache.draw(BitmapFontCache.java:236)\n    at es.eucm.ead.editor.MokapApplicationListener.initialize(MokapApplicationListener.java:107)\n    at es.eucm.ead.editor.EditorApplicationListener.create(EditorApplicationListener.java:87)\n    at es.eucm.ead.editor.MokapApplicationListener.create(MokapApplicationListener.java:83)\n    at com.badlogic.gdx.backends.lwjgl.LwjglApplication.mainLoop(LwjglApplication.java:143)\n    at com.badlogic.gdx.backends.lwjgl.LwjglApplication$1.run(LwjglApplication.java:120)\n```\n###### Use case 2 (the String text is smaller),\n\n``` Java\n        BitmapFontCache cache = new BitmapFontCache(new BitmapFont());\n        cache.setText(\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\", 0, 0);\n        Batch batch = stage.getBatch();\n        batch.begin();\n        cache.draw(batch);\n        batch.end();\n```\n\nsuccessfully iterates through the `triangles` for-loop but throws this exception while trying to copy the `vertices`, as described above.\n\n``` Java\nEditorApplicationListener: Fatal error: LWJGL Application(12)\njava.lang.ArrayIndexOutOfBoundsException\n    at java.lang.System.arraycopy(Native Method)\n    at com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch.draw(PolygonSpriteBatch.java:769)\n    at com.badlogic.gdx.graphics.g2d.BitmapFontCache.draw(BitmapFontCache.java:236)\n    at es.eucm.ead.editor.MokapApplicationListener.initialize(MokapApplicationListener.java:107)\n    at es.eucm.ead.editor.EditorApplicationListener.create(EditorApplicationListener.java:87)\n    at es.eucm.ead.editor.MokapApplicationListener.create(MokapApplicationListener.java:83)\n    at com.badlogic.gdx.backends.lwjgl.LwjglApplication.mainLoop(LwjglApplication.java:143)\n    at com.badlogic.gdx.backends.lwjgl.LwjglApplication$1.run(LwjglApplication.java:120)\n```\n\nBy the way, I think the new BitmapFont doesn't compute correctly its bounds nor it draws itself correctly when there are multiple line breaks in a row.\nThankyou for your help!\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3124/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3123","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3123/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3123/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3123/events","html_url":"https://github.com/libgdx/libgdx/pull/3123","id":75960424,"number":3123,"title":"Fix #3120 and #3122 (Intersector)","user":{"login":"fwolff","id":527445,"avatar_url":"https://avatars1.githubusercontent.com/u/527445?v=4","gravatar_id":"","url":"https://api.github.com/users/fwolff","html_url":"https://github.com/fwolff","followers_url":"https://api.github.com/users/fwolff/followers","following_url":"https://api.github.com/users/fwolff/following{/other_user}","gists_url":"https://api.github.com/users/fwolff/gists{/gist_id}","starred_url":"https://api.github.com/users/fwolff/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fwolff/subscriptions","organizations_url":"https://api.github.com/users/fwolff/orgs","repos_url":"https://api.github.com/users/fwolff/repos","events_url":"https://api.github.com/users/fwolff/events{/privacy}","received_events_url":"https://api.github.com/users/fwolff/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2015-05-13T12:00:01Z","updated_at":"2015-05-15T15:44:43Z","closed_at":"2015-05-15T15:44:39Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3123","html_url":"https://github.com/libgdx/libgdx/pull/3123","diff_url":"https://github.com/libgdx/libgdx/pull/3123.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3123.patch"},"body":"","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3123/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3122","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3122/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3122/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3122/events","html_url":"https://github.com/libgdx/libgdx/issues/3122","id":75943078,"number":3122,"title":"Intersector.intersectRayTriangle can fail when the ray origin is one of the triangle vertices","user":{"login":"fwolff","id":527445,"avatar_url":"https://avatars1.githubusercontent.com/u/527445?v=4","gravatar_id":"","url":"https://api.github.com/users/fwolff","html_url":"https://github.com/fwolff","followers_url":"https://api.github.com/users/fwolff/followers","following_url":"https://api.github.com/users/fwolff/following{/other_user}","gists_url":"https://api.github.com/users/fwolff/gists{/gist_id}","starred_url":"https://api.github.com/users/fwolff/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fwolff/subscriptions","organizations_url":"https://api.github.com/users/fwolff/orgs","repos_url":"https://api.github.com/users/fwolff/repos","events_url":"https://api.github.com/users/fwolff/events{/privacy}","received_events_url":"https://api.github.com/users/fwolff/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2015-05-13T10:51:41Z","updated_at":"2015-05-15T15:44:47Z","closed_at":"2015-05-15T15:44:47Z","author_association":"CONTRIBUTOR","body":"How to reproduce:\n\n``` java\nVector3 t1 = new Vector3(60.0f, -30.0f, 1182.0f);\nVector3 t2 = new Vector3(60.0f, 0.0f, 1206.0f);\nVector3 t3 = new Vector3(90.0f, -30.0f, 1174.0f);\n\nRay ray = new Ray(t2, new Vector3(-0.70710677f, 0.0f, 0.70710677f));\nSystem.out.println(Intersector.intersectRayTriangle(ray, t1, t2, t3, null)); // print false\n```\n\nSuggested fix pending...\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3122/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3121","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3121/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3121/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3121/events","html_url":"https://github.com/libgdx/libgdx/pull/3121","id":75559124,"number":3121,"title":"Corrected FileHandle JavaDoc","user":{"login":"nooone","id":5896510,"avatar_url":"https://avatars3.githubusercontent.com/u/5896510?v=4","gravatar_id":"","url":"https://api.github.com/users/nooone","html_url":"https://github.com/nooone","followers_url":"https://api.github.com/users/nooone/followers","following_url":"https://api.github.com/users/nooone/following{/other_user}","gists_url":"https://api.github.com/users/nooone/gists{/gist_id}","starred_url":"https://api.github.com/users/nooone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nooone/subscriptions","organizations_url":"https://api.github.com/users/nooone/orgs","repos_url":"https://api.github.com/users/nooone/repos","events_url":"https://api.github.com/users/nooone/events{/privacy}","received_events_url":"https://api.github.com/users/nooone/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2015-05-12T10:46:14Z","updated_at":"2015-05-17T00:47:32Z","closed_at":"2015-05-17T00:47:32Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3121","html_url":"https://github.com/libgdx/libgdx/pull/3121","diff_url":"https://github.com/libgdx/libgdx/pull/3121.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3121.patch"},"body":"There are no such checks.\n\nTo be sure, I've tried both `FileHandle.sibling(...)` as well as `FileHandle.child(...)` with internal, non-existant files and no exceptions were thrown.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3121/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3120","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3120/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3120/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3120/events","html_url":"https://github.com/libgdx/libgdx/issues/3120","id":75531212,"number":3120,"title":"Intersector.intersectRayBounds can return an intersection outside the bounding box","user":{"login":"fwolff","id":527445,"avatar_url":"https://avatars1.githubusercontent.com/u/527445?v=4","gravatar_id":"","url":"https://api.github.com/users/fwolff","html_url":"https://github.com/fwolff","followers_url":"https://api.github.com/users/fwolff/followers","following_url":"https://api.github.com/users/fwolff/following{/other_user}","gists_url":"https://api.github.com/users/fwolff/gists{/gist_id}","starred_url":"https://api.github.com/users/fwolff/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fwolff/subscriptions","organizations_url":"https://api.github.com/users/fwolff/orgs","repos_url":"https://api.github.com/users/fwolff/repos","events_url":"https://api.github.com/users/fwolff/events{/privacy}","received_events_url":"https://api.github.com/users/fwolff/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2015-05-12T09:15:29Z","updated_at":"2015-05-15T15:44:47Z","closed_at":"2015-05-15T15:44:47Z","author_association":"CONTRIBUTOR","body":"How to reproduce:\n\n``` java\nRay ray = new Ray(new Vector3(5731.2046f, -6039.354f, 11157.498f), new Vector3(-0.62397736f, -0.053491283f, -0.77960944f));\nBoundingBox box = new BoundingBox(new Vector3(-3840.0f, -7680.0f, 848.0f), new Vector3(-1920.0f, -5760.0f, 1929.0f));\nVector3 entry = new Vector3();\nif (Intersector.intersectRayBounds(ray, box, entry))\n    System.out.println(entry); // [-1919.9995, -6695.2637, 1597.9346] (error: -1919.9995 > -1920.0)\n```\n\nSuggested patch (Intersector.intersectRayBounds):\n\n``` java\nif (hit && intersection != null) {\n    intersection.set(ray.direction).scl(lowest).add(ray.origin);\n    if (intersection.x < box.min.x)\n        intersection.x = box.min.x;\n    else if (intersection.x > box.max.x)\n        intersection.x = box.max.x;\n    if (intersection.y < box.min.y)\n        intersection.y = box.min.y;\n    else if (intersection.y > box.max.y)\n        intersection.y = box.max.y;\n    if (intersection.z < box.min.z)\n        intersection.z = box.min.z;\n    else if (intersection.z > box.max.z)\n        intersection.z = box.max.z;\n}\n```\n\nAdditionally, if the ray origin is inside the box, the code doesn't set the intersection point:\n\n``` java\nif (v0.x > 0 && v0.y > 0 && v0.z > 0 && v1.x < 0 && v1.y < 0 && v1.z < 0) {\n    return true;\n}\n```\n\nI think the intersection point should be set to the ray origin in this case, even if it can break existing code... Suggested patch:\n\n``` java\nif (v0.x > 0 && v0.y > 0 && v0.z > 0 && v1.x < 0 && v1.y < 0 && v1.z < 0) {\n    if (intersection != null)\n        intersection.set(ray.origin); \n    return true;\n}\n```\n\nThanks!\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3120/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3119","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3119/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3119/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3119/events","html_url":"https://github.com/libgdx/libgdx/pull/3119","id":75480573,"number":3119,"title":"Update default Android API level & build tools to Android 5.1","user":{"login":"bhamodi","id":7663987,"avatar_url":"https://avatars0.githubusercontent.com/u/7663987?v=4","gravatar_id":"","url":"https://api.github.com/users/bhamodi","html_url":"https://github.com/bhamodi","followers_url":"https://api.github.com/users/bhamodi/followers","following_url":"https://api.github.com/users/bhamodi/following{/other_user}","gists_url":"https://api.github.com/users/bhamodi/gists{/gist_id}","starred_url":"https://api.github.com/users/bhamodi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bhamodi/subscriptions","organizations_url":"https://api.github.com/users/bhamodi/orgs","repos_url":"https://api.github.com/users/bhamodi/repos","events_url":"https://api.github.com/users/bhamodi/events{/privacy}","received_events_url":"https://api.github.com/users/bhamodi/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2015-05-12T06:16:17Z","updated_at":"2017-01-16T14:55:32Z","closed_at":"2015-05-17T18:00:47Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3119","html_url":"https://github.com/libgdx/libgdx/pull/3119","diff_url":"https://github.com/libgdx/libgdx/pull/3119.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3119.patch"},"body":"Updating the default recommended API level and build tools version to Android 5.1. This change will stop users from seeing this dialog when attempting to use the latest version of the build tools.\n![dialog](https://cloud.githubusercontent.com/assets/7663987/7671408/d9573f6a-fc83-11e4-9d91-1d26ac964702.PNG)\n\n@Tom-Ski @MobiDevelop @badlogic \n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3119/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3118","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3118/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3118/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3118/events","html_url":"https://github.com/libgdx/libgdx/issues/3118","id":75465389,"number":3118,"title":"NullPointerException when calling GlyphLayout.settext with null color","user":{"login":"windlord0408","id":3015362,"avatar_url":"https://avatars1.githubusercontent.com/u/3015362?v=4","gravatar_id":"","url":"https://api.github.com/users/windlord0408","html_url":"https://github.com/windlord0408","followers_url":"https://api.github.com/users/windlord0408/followers","following_url":"https://api.github.com/users/windlord0408/following{/other_user}","gists_url":"https://api.github.com/users/windlord0408/gists{/gist_id}","starred_url":"https://api.github.com/users/windlord0408/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/windlord0408/subscriptions","organizations_url":"https://api.github.com/users/windlord0408/orgs","repos_url":"https://api.github.com/users/windlord0408/repos","events_url":"https://api.github.com/users/windlord0408/events{/privacy}","received_events_url":"https://api.github.com/users/windlord0408/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2015-05-12T05:09:26Z","updated_at":"2016-11-25T01:33:33Z","closed_at":"2016-11-25T01:33:33Z","author_association":"NONE","body":"Hi, after update to libgdx nightly 5/7/2014, my game crash at this line in my code:\n\nGlyphLayout l = Pools.obtain(GlyphLayout.class);\nl.setText(font, text, 0, text.length(), null, width,Align.center, false, \"..\");\n\nAnd this's crash log:\n\nGlobalMessageHandler: nulljava.lang.NullPointerException\nStackTrace: com.badlogic.gdx.graphics.Color.set(Color.java:83)\nStackTrace: com.badlogic.gdx.graphics.g2d.GlyphLayout.setText(GlyphLayout.java:137)\n\nMy code work fine with the previous libgdx version. Please help me to fix this.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3118/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3117","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3117/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3117/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3117/events","html_url":"https://github.com/libgdx/libgdx/pull/3117","id":75341740,"number":3117,"title":"Recreate the DeflaterOutputStream in PixmapIO.PNG each time","user":{"login":"ttencate","id":90930,"avatar_url":"https://avatars0.githubusercontent.com/u/90930?v=4","gravatar_id":"","url":"https://api.github.com/users/ttencate","html_url":"https://github.com/ttencate","followers_url":"https://api.github.com/users/ttencate/followers","following_url":"https://api.github.com/users/ttencate/following{/other_user}","gists_url":"https://api.github.com/users/ttencate/gists{/gist_id}","starred_url":"https://api.github.com/users/ttencate/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ttencate/subscriptions","organizations_url":"https://api.github.com/users/ttencate/orgs","repos_url":"https://api.github.com/users/ttencate/repos","events_url":"https://api.github.com/users/ttencate/events{/privacy}","received_events_url":"https://api.github.com/users/ttencate/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2015-05-11T20:09:36Z","updated_at":"2015-07-17T13:31:52Z","closed_at":"2015-07-17T13:31:52Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3117","html_url":"https://github.com/libgdx/libgdx/pull/3117","diff_url":"https://github.com/libgdx/libgdx/pull/3117.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3117.patch"},"body":"Also update the test to exercise this code.\n\nFixes #3113.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3117/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3116","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3116/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3116/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3116/events","html_url":"https://github.com/libgdx/libgdx/issues/3116","id":75335875,"number":3116,"title":"GWT reflection adjustments","user":{"login":"czyzby","id":11707612,"avatar_url":"https://avatars0.githubusercontent.com/u/11707612?v=4","gravatar_id":"","url":"https://api.github.com/users/czyzby","html_url":"https://github.com/czyzby","followers_url":"https://api.github.com/users/czyzby/followers","following_url":"https://api.github.com/users/czyzby/following{/other_user}","gists_url":"https://api.github.com/users/czyzby/gists{/gist_id}","starred_url":"https://api.github.com/users/czyzby/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/czyzby/subscriptions","organizations_url":"https://api.github.com/users/czyzby/orgs","repos_url":"https://api.github.com/users/czyzby/repos","events_url":"https://api.github.com/users/czyzby/events{/privacy}","received_events_url":"https://api.github.com/users/czyzby/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2015-05-11T19:44:22Z","updated_at":"2015-05-17T20:15:54Z","closed_at":"2015-05-17T20:15:54Z","author_association":"CONTRIBUTOR","body":"Method#isAnnotationPresent seems to throw exception when tested method does not have any annotations.\n\nWould it be a problem to include an array (of Type/Class) with all types present in the generated GWT reflection pool? I think that such an array wouldn't be an issue (especially if you also let the user clear it or completely disable its creation).  Well, I won't lie that - after you implemented method annotations - it would allow me to implement GWT class scanning without the need for nasty workarounds or my own reflection pool.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3116/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3115","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3115/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3115/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3115/events","html_url":"https://github.com/libgdx/libgdx/issues/3115","id":75305561,"number":3115,"title":"Sprite.getOriginX() & Sprite.getOriginY functions returns in pixels","user":{"login":"ebattal","id":383404,"avatar_url":"https://avatars0.githubusercontent.com/u/383404?v=4","gravatar_id":"","url":"https://api.github.com/users/ebattal","html_url":"https://github.com/ebattal","followers_url":"https://api.github.com/users/ebattal/followers","following_url":"https://api.github.com/users/ebattal/following{/other_user}","gists_url":"https://api.github.com/users/ebattal/gists{/gist_id}","starred_url":"https://api.github.com/users/ebattal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ebattal/subscriptions","organizations_url":"https://api.github.com/users/ebattal/orgs","repos_url":"https://api.github.com/users/ebattal/repos","events_url":"https://api.github.com/users/ebattal/events{/privacy}","received_events_url":"https://api.github.com/users/ebattal/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2015-05-11T17:56:50Z","updated_at":"2015-05-11T18:27:40Z","closed_at":"2015-05-11T18:27:40Z","author_association":"NONE","body":"When you call getOriginX() or getOriginY() functions of a Sprite, it returns the X or Y values in pixels but actually it should return with respect to the sizes defined in setSize(float width,float height) function.\n\nWorkaround : \nfloat originX = getX()+getWidth()/2;\nfloat originY = getY()+getHeight()/2;\n\nEdit: Example\nTexture t = new Texture(Gdx.files.internal(\"data/sprite.png\"));  // 256 pixels by 256 pixels\nSprite target = new Sprite(t);\ntarget.setSize(5,5);\nfloat x1 =  target.getOriginX();  // returns 128 (meaning that the results are in pixels)\nfloat y1 = target.getOriginY(); //returns 128\n\nfloat x2 = target.getWidth()/2; //returns 2.5 (relative to what`s defined in setSize(float,float)\nfloat y2 = target.getHeight()/2; // returns 2.5 \n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3115/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3114","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3114/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3114/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3114/events","html_url":"https://github.com/libgdx/libgdx/issues/3114","id":75109027,"number":3114,"title":"gradlew android:assembleRelease","user":{"login":"panli32811","id":8217836,"avatar_url":"https://avatars0.githubusercontent.com/u/8217836?v=4","gravatar_id":"","url":"https://api.github.com/users/panli32811","html_url":"https://github.com/panli32811","followers_url":"https://api.github.com/users/panli32811/followers","following_url":"https://api.github.com/users/panli32811/following{/other_user}","gists_url":"https://api.github.com/users/panli32811/gists{/gist_id}","starred_url":"https://api.github.com/users/panli32811/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/panli32811/subscriptions","organizations_url":"https://api.github.com/users/panli32811/orgs","repos_url":"https://api.github.com/users/panli32811/repos","events_url":"https://api.github.com/users/panli32811/events{/privacy}","received_events_url":"https://api.github.com/users/panli32811/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2015-05-11T06:35:32Z","updated_at":"2015-05-11T07:03:13Z","closed_at":"2015-05-11T07:03:13Z","author_association":"NONE","body":"After done, the APK generated doesn't include the resources from src in \"core\", but if they come from the 3rd jar, will be included\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3114/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3113","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3113/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3113/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3113/events","html_url":"https://github.com/libgdx/libgdx/issues/3113","id":74979395,"number":3113,"title":"Docs claim PixmapIO.PNG instances are reusable, but they are not","user":{"login":"ttencate","id":90930,"avatar_url":"https://avatars0.githubusercontent.com/u/90930?v=4","gravatar_id":"","url":"https://api.github.com/users/ttencate","html_url":"https://github.com/ttencate","followers_url":"https://api.github.com/users/ttencate/followers","following_url":"https://api.github.com/users/ttencate/following{/other_user}","gists_url":"https://api.github.com/users/ttencate/gists{/gist_id}","starred_url":"https://api.github.com/users/ttencate/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ttencate/subscriptions","organizations_url":"https://api.github.com/users/ttencate/orgs","repos_url":"https://api.github.com/users/ttencate/repos","events_url":"https://api.github.com/users/ttencate/events{/privacy}","received_events_url":"https://api.github.com/users/ttencate/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":13,"created_at":"2015-05-10T19:04:20Z","updated_at":"2017-01-16T14:59:07Z","closed_at":"2015-07-17T13:31:52Z","author_association":"CONTRIBUTOR","body":"The JavaDoc for `PixmapIO.PNG` says: `An instance can be reused to encode multiple PNGs with minimal allocation.` However, this doesn't work, because the deflate stream is closed in the `write` method [here](https://github.com/libgdx/libgdx/blob/6f101b16ae8816405f05e935ee9cb622dbd59e05/gdx/src/com/badlogic/gdx/graphics/PixmapIO.java#L306).\n\nI suppose the deflater cannot be reused, but then this class needs some more work. Or the claim about reusability could simply be removed.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3113/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3112","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3112/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3112/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3112/events","html_url":"https://github.com/libgdx/libgdx/issues/3112","id":74923264,"number":3112,"title":"Libgdx non continuous rendering with saving prefs","user":{"login":"raicabogdan","id":4399340,"avatar_url":"https://avatars1.githubusercontent.com/u/4399340?v=4","gravatar_id":"","url":"https://api.github.com/users/raicabogdan","html_url":"https://github.com/raicabogdan","followers_url":"https://api.github.com/users/raicabogdan/followers","following_url":"https://api.github.com/users/raicabogdan/following{/other_user}","gists_url":"https://api.github.com/users/raicabogdan/gists{/gist_id}","starred_url":"https://api.github.com/users/raicabogdan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/raicabogdan/subscriptions","organizations_url":"https://api.github.com/users/raicabogdan/orgs","repos_url":"https://api.github.com/users/raicabogdan/repos","events_url":"https://api.github.com/users/raicabogdan/events{/privacy}","received_events_url":"https://api.github.com/users/raicabogdan/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2015-05-10T13:42:34Z","updated_at":"2015-05-10T21:55:37Z","closed_at":"2015-05-10T21:55:37Z","author_association":"NONE","body":"A simple case I find really stupid, probably me not doing something, but anyway asking just in case. Docs on github don't say much regarding non-continuous rendering about this.\n\nBasically what I do is saving 1 score at a time (one per game) in the prefs file and then getting the score back to store them in variable. I probably should just update the values from the already stored values in variable(thinking now ..., will probably do that).\n\nThe issue however is when saving the prefs. Its causing the render to not trigger on input (from docs a render should trigger when an input event is triggered). If I remove the prefs part, the render works fine.\n\nAlso if I re-enable continuous rendering using\n\n`Gdx.graphics.setContinuousRendering(true);`\n\nbefore the prefs saving method, then its still not working. Really lost on this one.\n\nHowever if leaving continuous rendering in place, it seems to work fine. It also works fine if I send another touch input, just that first one seems to be blocking something.\n\nWhat am I doing?\n\nThe code I use for the Prefs:\n\n```\n@Override\npublic void saveScore(String type, int value) {\n    preferences.putInteger(type, value);\n    preferences.flush();\n}\n\n@Override\npublic HashMap<String, Integer> getScore() {\n    scores = new HashMap<String, Integer>(3);\n\n    scores.put(\"wins\", preferences.getInteger(\"wins\", 0));\n    scores.put(\"draws\", preferences.getInteger(\"draws\", 0));\n    scores.put(\"losses\", preferences.getInteger(\"losses\", 0));\n\n    return scores;\n}\n```\n\nI just hope I didn't hit some bug with it, also I would really like to keep the non-continous rendering, its just a simple board game, so the things are mostly static.\n\nThank you!\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3112/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3111","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3111/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3111/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3111/events","html_url":"https://github.com/libgdx/libgdx/issues/3111","id":74872346,"number":3111,"title":"Plane miss no-arg constructor","user":{"login":"GhostNr1","id":9337875,"avatar_url":"https://avatars2.githubusercontent.com/u/9337875?v=4","gravatar_id":"","url":"https://api.github.com/users/GhostNr1","html_url":"https://github.com/GhostNr1","followers_url":"https://api.github.com/users/GhostNr1/followers","following_url":"https://api.github.com/users/GhostNr1/following{/other_user}","gists_url":"https://api.github.com/users/GhostNr1/gists{/gist_id}","starred_url":"https://api.github.com/users/GhostNr1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/GhostNr1/subscriptions","organizations_url":"https://api.github.com/users/GhostNr1/orgs","repos_url":"https://api.github.com/users/GhostNr1/repos","events_url":"https://api.github.com/users/GhostNr1/events{/privacy}","received_events_url":"https://api.github.com/users/GhostNr1/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2015-05-10T08:55:40Z","updated_at":"2015-05-13T12:35:35Z","closed_at":"2015-05-13T12:35:35Z","author_association":"NONE","body":"In com.badlogic.gdx.math.Plane there are a missing no-arg constructor. \n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3111/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3110","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3110/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3110/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3110/events","html_url":"https://github.com/libgdx/libgdx/pull/3110","id":74871279,"number":3110,"title":"Update copyright headers to 2015.","user":{"login":"bhamodi","id":7663987,"avatar_url":"https://avatars0.githubusercontent.com/u/7663987?v=4","gravatar_id":"","url":"https://api.github.com/users/bhamodi","html_url":"https://github.com/bhamodi","followers_url":"https://api.github.com/users/bhamodi/followers","following_url":"https://api.github.com/users/bhamodi/following{/other_user}","gists_url":"https://api.github.com/users/bhamodi/gists{/gist_id}","starred_url":"https://api.github.com/users/bhamodi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bhamodi/subscriptions","organizations_url":"https://api.github.com/users/bhamodi/orgs","repos_url":"https://api.github.com/users/bhamodi/repos","events_url":"https://api.github.com/users/bhamodi/events{/privacy}","received_events_url":"https://api.github.com/users/bhamodi/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2015-05-10T08:50:23Z","updated_at":"2015-05-10T12:50:58Z","closed_at":"2015-05-10T12:49:37Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3110","html_url":"https://github.com/libgdx/libgdx/pull/3110","diff_url":"https://github.com/libgdx/libgdx/pull/3110.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3110.patch"},"body":"@badlogic \n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3110/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3109","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3109/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3109/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3109/events","html_url":"https://github.com/libgdx/libgdx/pull/3109","id":74867428,"number":3109,"title":"Fixed some minor spelling and formatting issues.","user":{"login":"bhamodi","id":7663987,"avatar_url":"https://avatars0.githubusercontent.com/u/7663987?v=4","gravatar_id":"","url":"https://api.github.com/users/bhamodi","html_url":"https://github.com/bhamodi","followers_url":"https://api.github.com/users/bhamodi/followers","following_url":"https://api.github.com/users/bhamodi/following{/other_user}","gists_url":"https://api.github.com/users/bhamodi/gists{/gist_id}","starred_url":"https://api.github.com/users/bhamodi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bhamodi/subscriptions","organizations_url":"https://api.github.com/users/bhamodi/orgs","repos_url":"https://api.github.com/users/bhamodi/repos","events_url":"https://api.github.com/users/bhamodi/events{/privacy}","received_events_url":"https://api.github.com/users/bhamodi/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2015-05-10T08:28:00Z","updated_at":"2015-05-12T05:34:12Z","closed_at":"2015-05-12T05:34:12Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3109","html_url":"https://github.com/libgdx/libgdx/pull/3109","diff_url":"https://github.com/libgdx/libgdx/pull/3109.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3109.patch"},"body":"@badlogic \n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3109/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3108","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3108/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3108/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3108/events","html_url":"https://github.com/libgdx/libgdx/pull/3108","id":74861678,"number":3108,"title":"Update default Android API level and build tools to Android 5.0.","user":{"login":"bhamodi","id":7663987,"avatar_url":"https://avatars0.githubusercontent.com/u/7663987?v=4","gravatar_id":"","url":"https://api.github.com/users/bhamodi","html_url":"https://github.com/bhamodi","followers_url":"https://api.github.com/users/bhamodi/followers","following_url":"https://api.github.com/users/bhamodi/following{/other_user}","gists_url":"https://api.github.com/users/bhamodi/gists{/gist_id}","starred_url":"https://api.github.com/users/bhamodi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bhamodi/subscriptions","organizations_url":"https://api.github.com/users/bhamodi/orgs","repos_url":"https://api.github.com/users/bhamodi/repos","events_url":"https://api.github.com/users/bhamodi/events{/privacy}","received_events_url":"https://api.github.com/users/bhamodi/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2015-05-10T07:50:47Z","updated_at":"2015-05-13T07:05:09Z","closed_at":"2015-05-12T05:33:46Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3108","html_url":"https://github.com/libgdx/libgdx/pull/3108","diff_url":"https://github.com/libgdx/libgdx/pull/3108.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3108.patch"},"body":"Currently the default is set to Android API level 20 and this is now 2 API levels off from the most recent version. I propose we bump this up to API level 21.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3108/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}}],"meta":{"x-ratelimit-limit":"5000","x-ratelimit-remaining":"4940","x-ratelimit-reset":"1506844633","x-github-request-id":"8082:1109:13DDD59:28674FC:59D094EA","x-github-media-type":"github.squirrel-girl-preview","link":"<https://api.github.com/repositories/5373551/issues?state=all&page=61>; rel=\"next\", <https://api.github.com/repositories/5373551/issues?state=all&page=164>; rel=\"last\", <https://api.github.com/repositories/5373551/issues?state=all&page=1>; rel=\"first\", <https://api.github.com/repositories/5373551/issues?state=all&page=59>; rel=\"prev\"","etag":"\"9cd4f80e9df97b261dc6b3d96dada112\"","status":"200 OK"}}
