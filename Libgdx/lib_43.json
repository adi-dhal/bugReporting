{"data":[{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3648","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3648/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3648/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3648/events","html_url":"https://github.com/libgdx/libgdx/issues/3648","id":122740786,"number":3648,"title":"[Freetype] TextureFilters using mipmaps with Japanese characters","user":{"login":"clementhely","id":3869204,"avatar_url":"https://avatars2.githubusercontent.com/u/3869204?v=4","gravatar_id":"","url":"https://api.github.com/users/clementhely","html_url":"https://github.com/clementhely","followers_url":"https://api.github.com/users/clementhely/followers","following_url":"https://api.github.com/users/clementhely/following{/other_user}","gists_url":"https://api.github.com/users/clementhely/gists{/gist_id}","starred_url":"https://api.github.com/users/clementhely/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clementhely/subscriptions","organizations_url":"https://api.github.com/users/clementhely/orgs","repos_url":"https://api.github.com/users/clementhely/repos","events_url":"https://api.github.com/users/clementhely/events{/privacy}","received_events_url":"https://api.github.com/users/clementhely/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2015-12-17T14:05:16Z","updated_at":"2015-12-19T13:11:44Z","closed_at":"2015-12-19T13:11:44Z","author_association":"NONE","body":"Trying to integrate Japanese language in our games we ran into problems regarding fonts.\n\nWe use `FreetypeFontLoader` to load our fonts in different sizes from `.ttf` files. As some text is heavily scaled up or down, we use mipmap filters to create the `BitmapFont`s.\n\nWe use the following filters:\n\n``` java\nfontParam.fontParameters.minFilter = Texture.TextureFilter.MipMapLinearLinear;\nfontParam.fontParameters.magFilter = Texture.TextureFilter.Linear;\nfontParam.fontParameters.genMipMaps = true;\n```\n\nHowever, using mipmaps, some Japanese characters are not properly displayed. They are actually drawn, but made almost transparent, as you can see with the text block at the bottom on these screenshots:\n![nexus9-with-mipmap](https://cloud.githubusercontent.com/assets/3869204/11870907/a5c0edb6-a4c3-11e5-953d-98268bfa5f73.png)\n\n![xperia-tipo-with-mipmap](https://cloud.githubusercontent.com/assets/3869204/11870910/aaeb3f4e-a4c3-11e5-8941-8a7e285d55e0.png)\n\nRemoving the previous block of code and using only the default filters or `TextureFilter.Linear` fixes the problem: every character is correctly drawn, with its right colour, since these filters do not use mipmaps, I assume. Now the problem is that scaled text does not look as sharp as it used to. On larger screens it is quite pixelated, on smaller screens it is pixelated as well and some of it is unreadable (like the score and timer at the top of the screen):\n![nexus9-without-mipmap](https://cloud.githubusercontent.com/assets/3869204/11871027/754a9b18-a4c4-11e5-8586-8f1b0464ddaa.png)\n\n![xperia-tipo-without-mipmap](https://cloud.githubusercontent.com/assets/3869204/11871031/7b31b1c4-a4c4-11e5-851c-49204a8a06de.png)\n\nNote that the original issue is something which only happens with Japanese characters, we have no problems with numbers, punctuation or Latin characters (we have not tried with other family of languages, though). Could that be an issue related to the use of `incremental` on the `FreeTypeFontParameter`? Or would it be a problem directly related to the mipmap `TextureFilter`s?\n\n**Also not that we are not using regular `Label`s as they do not support scaling. We extended `Label` to create a widget which calls the corresponding `setFontScale` methods whenever it is scaled.**\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3648/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3647","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3647/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3647/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3647/events","html_url":"https://github.com/libgdx/libgdx/issues/3647","id":122686768,"number":3647,"title":"[Minor docs issue] BitmapFont: Only one texture atlas page supported","user":{"login":"mhilbrunner","id":1654763,"avatar_url":"https://avatars2.githubusercontent.com/u/1654763?v=4","gravatar_id":"","url":"https://api.github.com/users/mhilbrunner","html_url":"https://github.com/mhilbrunner","followers_url":"https://api.github.com/users/mhilbrunner/followers","following_url":"https://api.github.com/users/mhilbrunner/following{/other_user}","gists_url":"https://api.github.com/users/mhilbrunner/gists{/gist_id}","starred_url":"https://api.github.com/users/mhilbrunner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mhilbrunner/subscriptions","organizations_url":"https://api.github.com/users/mhilbrunner/orgs","repos_url":"https://api.github.com/users/mhilbrunner/repos","events_url":"https://api.github.com/users/mhilbrunner/events{/privacy}","received_events_url":"https://api.github.com/users/mhilbrunner/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2015-12-17T08:31:56Z","updated_at":"2017-01-16T14:59:16Z","closed_at":"2015-12-19T05:05:30Z","author_association":"NONE","body":"There are some docs stating that BitmapFont only supports a single texture atlas page.\nAs far as I can tell, this is no longer true.\n\nBelow references to this should probably be changed/removed:\n\nThe JavaDoc on line 43/44 of BitmapFont.java states:\n\"Currently only a single image of glyphs is supported.\"\n\nhttps://github.com/libgdx/libgdx/wiki/Gdx-freetype states:\n\"If you use too big of a size, things might explode. BitmapFonts still only support a single atlas page at the moment, something I'll try to fix in the next couple of weeks. ...\"\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3647/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3646","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3646/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3646/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3646/events","html_url":"https://github.com/libgdx/libgdx/pull/3646","id":122621003,"number":3646,"title":"Update VisRuntime extension","user":{"login":"kotcrab","id":4594081,"avatar_url":"https://avatars1.githubusercontent.com/u/4594081?v=4","gravatar_id":"","url":"https://api.github.com/users/kotcrab","html_url":"https://github.com/kotcrab","followers_url":"https://api.github.com/users/kotcrab/followers","following_url":"https://api.github.com/users/kotcrab/following{/other_user}","gists_url":"https://api.github.com/users/kotcrab/gists{/gist_id}","starred_url":"https://api.github.com/users/kotcrab/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kotcrab/subscriptions","organizations_url":"https://api.github.com/users/kotcrab/orgs","repos_url":"https://api.github.com/users/kotcrab/repos","events_url":"https://api.github.com/users/kotcrab/events{/privacy}","received_events_url":"https://api.github.com/users/kotcrab/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2015-12-16T22:46:10Z","updated_at":"2015-12-16T23:23:03Z","closed_at":"2015-12-16T23:23:03Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3646","html_url":"https://github.com/libgdx/libgdx/pull/3646","diff_url":"https://github.com/libgdx/libgdx/pull/3646.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3646.patch"},"body":"","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3646/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3645","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3645/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3645/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3645/events","html_url":"https://github.com/libgdx/libgdx/issues/3645","id":122581860,"number":3645,"title":"Reflection issue with arrays","user":{"login":"anubiann00b","id":5544386,"avatar_url":"https://avatars3.githubusercontent.com/u/5544386?v=4","gravatar_id":"","url":"https://api.github.com/users/anubiann00b","html_url":"https://github.com/anubiann00b","followers_url":"https://api.github.com/users/anubiann00b/followers","following_url":"https://api.github.com/users/anubiann00b/following{/other_user}","gists_url":"https://api.github.com/users/anubiann00b/gists{/gist_id}","starred_url":"https://api.github.com/users/anubiann00b/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/anubiann00b/subscriptions","organizations_url":"https://api.github.com/users/anubiann00b/orgs","repos_url":"https://api.github.com/users/anubiann00b/repos","events_url":"https://api.github.com/users/anubiann00b/events{/privacy}","received_events_url":"https://api.github.com/users/anubiann00b/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2015-12-16T19:21:52Z","updated_at":"2015-12-16T19:40:01Z","closed_at":null,"author_association":"NONE","body":"In my `.gwt.xml` file I included:\n\n```\n<extend-configuration-property name=\"gdx.reflect.include\" value=\"com.badlogic.ashley.core.Component\" />\n```\n\nI have a `Component[] components` that has a handful of components, and when I try to convert it to Json, it does gets to https://github.com/libgdx/libgdx/blob/master/gdx/src/com/badlogic/gdx/utils/Json.java#L514, where it does `ArrayReflection.getLength(components);`, and then crashes:\n\n```\njava.lang.RuntimeException: Couldn't find Type for class '[Lcom.badlogic.ashley.core.Component;'\n```\n\nThe issue can be traced here: https://github.com/libgdx/libgdx/blob/master/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/com/badlogic/gdx/utils/reflect/ArrayReflection.java#L32\n\nFor some reason, `ReflectionCache.getType()` fails on an array. Is there a way to register an array type for reflection?\n\nI can convert an `Array<Component>` or a single Component to Json just fine.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3645/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3644","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3644/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3644/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3644/events","html_url":"https://github.com/libgdx/libgdx/issues/3644","id":122389215,"number":3644,"title":"PolygonSpriteBatch broken bounds check.","user":{"login":"piotr-j","id":2499728,"avatar_url":"https://avatars0.githubusercontent.com/u/2499728?v=4","gravatar_id":"","url":"https://api.github.com/users/piotr-j","html_url":"https://github.com/piotr-j","followers_url":"https://api.github.com/users/piotr-j/followers","following_url":"https://api.github.com/users/piotr-j/following{/other_user}","gists_url":"https://api.github.com/users/piotr-j/gists{/gist_id}","starred_url":"https://api.github.com/users/piotr-j/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/piotr-j/subscriptions","organizations_url":"https://api.github.com/users/piotr-j/orgs","repos_url":"https://api.github.com/users/piotr-j/repos","events_url":"https://api.github.com/users/piotr-j/events{/privacy}","received_events_url":"https://api.github.com/users/piotr-j/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2015-12-15T23:07:00Z","updated_at":"2015-12-20T03:01:09Z","closed_at":"2015-12-20T03:01:09Z","author_association":"CONTRIBUTOR","body":"Unless I'm missing something obvious, the [bounds check](https://github.com/libgdx/libgdx/blob/master/gdx/src/com/badlogic/gdx/graphics/g2d/PolygonSpriteBatch.java#L254) when drawing `PolygonRegion` is broken. \n\n```\nvertexIndex + regionVerticesLength > vertices.length;\n```\n\nshould probably be\n\n```\nvertexIndex + regionVerticesLength*5/2 > vertices.length\n```\n\nto match the [vertices assignment](https://github.com/libgdx/libgdx/blob/master/gdx/src/com/badlogic/gdx/graphics/g2d/PolygonSpriteBatch.java#L271).\n\nsscce: https://gist.github.com/piotr-j/edd74c07bdaa4bb944f4\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3644/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3643","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3643/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3643/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3643/events","html_url":"https://github.com/libgdx/libgdx/pull/3643","id":122329165,"number":3643,"title":"Added option into settings to ignore red border pixels","user":{"login":"arnoid","id":1614789,"avatar_url":"https://avatars3.githubusercontent.com/u/1614789?v=4","gravatar_id":"","url":"https://api.github.com/users/arnoid","html_url":"https://github.com/arnoid","followers_url":"https://api.github.com/users/arnoid/followers","following_url":"https://api.github.com/users/arnoid/following{/other_user}","gists_url":"https://api.github.com/users/arnoid/gists{/gist_id}","starred_url":"https://api.github.com/users/arnoid/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/arnoid/subscriptions","organizations_url":"https://api.github.com/users/arnoid/orgs","repos_url":"https://api.github.com/users/arnoid/repos","events_url":"https://api.github.com/users/arnoid/events{/privacy}","received_events_url":"https://api.github.com/users/arnoid/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2015-12-15T17:56:06Z","updated_at":"2015-12-19T05:03:32Z","closed_at":"2015-12-17T12:22:00Z","author_association":"NONE","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3643","html_url":"https://github.com/libgdx/libgdx/pull/3643","diff_url":"https://github.com/libgdx/libgdx/pull/3643.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3643.patch"},"body":"---\n\nWARNING\n\nGuys, i am blind :smile: please point into the TexturePacker tests file.\nThere're no tests for the feature\n\n---\n\nAndroid provides red 9patch boundaries for \"optical boundaries\"\nhttp://developer.android.com/intl/ru/about/versions/android-4.3.html#OpticalBounds\n\nI've been trying to use 9patches generated by this website http://android-holo-colors.com/\n\nLike in this file  ![one](http://i.stack.imgur.com/w7qeu.png)\n\nUnfortunately, if we will use texture packer with such 9patches, then we will end up with exception\n`java.lang.RuntimeException: Invalid /Users/sergii/work/workspace/pandorum/design-ui/assets/orig/images/appthemebtndefaultdisabledfocusedholodark ninepatch split pixel at 2, 97, rgba: 255, 0, 0, 255\n    at com.badlogic.gdx.tools.texturepacker.ImageProcessor.splitError(ImageProcessor.java:266)\n    at com.badlogic.gdx.tools.texturepacker.ImageProcessor.getSplitPoint(ImageProcessor.java:403)\n    at com.badlogic.gdx.tools.texturepacker.ImageProcessor.getPads(ImageProcessor.java:327)\n    at com.badlogic.gdx.tools.texturepacker.ImageProcessor.processImage(ImageProcessor.java:148)\n    at com.badlogic.gdx.tools.texturepacker.ImageProcessor.addImage(ImageProcessor.java:94)\n    at com.badlogic.gdx.tools.texturepacker.ImageProcessor.addImage(ImageProcessor.java:87)\n    at com.badlogic.gdx.tools.texturepacker.TexturePacker.pack(TexturePacker.java:101)`\n\nSo, i've patched the Settings and TexturePacker to provide the ability to ignore red border pixels on demand.\n- added setting field ignoreRedPixels - to ignore red pixels 9patches used in android 4.3=<\n- added ignore red pixel in 9patch logic in ImageProcessor\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3643/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3642","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3642/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3642/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3642/events","html_url":"https://github.com/libgdx/libgdx/issues/3642","id":122328793,"number":3642,"title":"[FreeType] Premultiplied alpha option","user":{"login":"AdrianNostromo","id":10205332,"avatar_url":"https://avatars1.githubusercontent.com/u/10205332?v=4","gravatar_id":"","url":"https://api.github.com/users/AdrianNostromo","html_url":"https://github.com/AdrianNostromo","followers_url":"https://api.github.com/users/AdrianNostromo/followers","following_url":"https://api.github.com/users/AdrianNostromo/following{/other_user}","gists_url":"https://api.github.com/users/AdrianNostromo/gists{/gist_id}","starred_url":"https://api.github.com/users/AdrianNostromo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AdrianNostromo/subscriptions","organizations_url":"https://api.github.com/users/AdrianNostromo/orgs","repos_url":"https://api.github.com/users/AdrianNostromo/repos","events_url":"https://api.github.com/users/AdrianNostromo/events{/privacy}","received_events_url":"https://api.github.com/users/AdrianNostromo/received_events","type":"User","site_admin":false},"labels":[{"id":11336982,"url":"https://api.github.com/repos/libgdx/libgdx/labels/enhancement","name":"enhancement","color":"84b6eb","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2015-12-15T17:53:58Z","updated_at":"2016-11-25T01:15:35Z","closed_at":"2016-11-25T01:15:35Z","author_association":"NONE","body":"Will there be an option to generate bitmap fonts with premultiplied alpha?\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3642/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3641","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3641/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3641/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3641/events","html_url":"https://github.com/libgdx/libgdx/issues/3641","id":122293494,"number":3641,"title":"Incorrect Capitalisation in libGDX Project Generator","user":{"login":"drguildo","id":9282,"avatar_url":"https://avatars2.githubusercontent.com/u/9282?v=4","gravatar_id":"","url":"https://api.github.com/users/drguildo","html_url":"https://github.com/drguildo","followers_url":"https://api.github.com/users/drguildo/followers","following_url":"https://api.github.com/users/drguildo/following{/other_user}","gists_url":"https://api.github.com/users/drguildo/gists{/gist_id}","starred_url":"https://api.github.com/users/drguildo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/drguildo/subscriptions","organizations_url":"https://api.github.com/users/drguildo/orgs","repos_url":"https://api.github.com/users/drguildo/repos","events_url":"https://api.github.com/users/drguildo/events{/privacy}","received_events_url":"https://api.github.com/users/drguildo/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2015-12-15T15:12:55Z","updated_at":"2015-12-19T05:13:40Z","closed_at":null,"author_association":"NONE","body":"The libGDX Project Generator UI has incorrect and inconsistent capitalisation of terms. The ones I've spotted are:\n- \"LibGDX\" should be \"libGDX\"\n- \"Ios\" should be \"iOS\"\n- \"Html\" should be \"HTML\"\n- \"Box2d\" should be \"Box2D\"\n- \"Box2dlights\" should be \"Box2DLights\"\n- \"Ai\" should be \"AI\"\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3641/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3640","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3640/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3640/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3640/events","html_url":"https://github.com/libgdx/libgdx/issues/3640","id":122273026,"number":3640,"title":"Font generated with FreeTypeFontGenerator and added to skin.json at runtime is not rendering.","user":{"login":"gnipe","id":4393598,"avatar_url":"https://avatars0.githubusercontent.com/u/4393598?v=4","gravatar_id":"","url":"https://api.github.com/users/gnipe","html_url":"https://github.com/gnipe","followers_url":"https://api.github.com/users/gnipe/followers","following_url":"https://api.github.com/users/gnipe/following{/other_user}","gists_url":"https://api.github.com/users/gnipe/gists{/gist_id}","starred_url":"https://api.github.com/users/gnipe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gnipe/subscriptions","organizations_url":"https://api.github.com/users/gnipe/orgs","repos_url":"https://api.github.com/users/gnipe/repos","events_url":"https://api.github.com/users/gnipe/events{/privacy}","received_events_url":"https://api.github.com/users/gnipe/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2015-12-15T13:30:15Z","updated_at":"2015-12-18T19:22:51Z","closed_at":"2015-12-18T19:20:07Z","author_association":"NONE","body":"I generate font at runtime and add it to skin.json like noone shows here: http://stackoverflow.com/questions/24856201/putting-freetypefont-into-libgdx-skin\n\nIt was working fine with earlier 1.7.2-SNAPSHOT (few weeks old).\nWhen using new 1.7.2-SNAPSHOT font is not rendering, 1.7.1 works fine.\n\nI'm not getting any errors and otherwise game works fine.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3640/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3639","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3639/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3639/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3639/events","html_url":"https://github.com/libgdx/libgdx/issues/3639","id":122119635,"number":3639,"title":"getScale in Matrix3 always >0","user":{"login":"Magnesus","id":3584532,"avatar_url":"https://avatars1.githubusercontent.com/u/3584532?v=4","gravatar_id":"","url":"https://api.github.com/users/Magnesus","html_url":"https://github.com/Magnesus","followers_url":"https://api.github.com/users/Magnesus/followers","following_url":"https://api.github.com/users/Magnesus/following{/other_user}","gists_url":"https://api.github.com/users/Magnesus/gists{/gist_id}","starred_url":"https://api.github.com/users/Magnesus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Magnesus/subscriptions","organizations_url":"https://api.github.com/users/Magnesus/orgs","repos_url":"https://api.github.com/users/Magnesus/repos","events_url":"https://api.github.com/users/Magnesus/events{/privacy}","received_events_url":"https://api.github.com/users/Magnesus/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2015-12-14T20:04:08Z","updated_at":"2015-12-15T12:21:42Z","closed_at":null,"author_association":"NONE","body":"Method getScale in Matrix3 will always return positive values. There should be sign too.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3639/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3638","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3638/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3638/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3638/events","html_url":"https://github.com/libgdx/libgdx/issues/3638","id":121927204,"number":3638,"title":"Protecting Color.WHITE","user":{"login":"doit-ceo","id":8027780,"avatar_url":"https://avatars2.githubusercontent.com/u/8027780?v=4","gravatar_id":"","url":"https://api.github.com/users/doit-ceo","html_url":"https://github.com/doit-ceo","followers_url":"https://api.github.com/users/doit-ceo/followers","following_url":"https://api.github.com/users/doit-ceo/following{/other_user}","gists_url":"https://api.github.com/users/doit-ceo/gists{/gist_id}","starred_url":"https://api.github.com/users/doit-ceo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/doit-ceo/subscriptions","organizations_url":"https://api.github.com/users/doit-ceo/orgs","repos_url":"https://api.github.com/users/doit-ceo/repos","events_url":"https://api.github.com/users/doit-ceo/events{/privacy}","received_events_url":"https://api.github.com/users/doit-ceo/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2015-12-13T16:04:16Z","updated_at":"2015-12-13T16:19:08Z","closed_at":"2015-12-13T16:19:08Z","author_association":"NONE","body":"If someone did this in complex multi-projects \n\n```\nColor c=Color.WHITE;\nc.a=0.5f;\n```\n\nThen it will be very hard to know why your alpha is wrong all over. We need to find a way to make the alpha (also rbg) to final when we have a constant like white. \n\nOne of our developer did such a modification on this constant and this took very long time to discover why our alpha was wrong !  \n\nThanks\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3638/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3637","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3637/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3637/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3637/events","html_url":"https://github.com/libgdx/libgdx/pull/3637","id":121884354,"number":3637,"title":"Added screenshot functionality along with grayscale option and select screen area","user":{"login":"PedroRomanoBarbosa","id":9311164,"avatar_url":"https://avatars1.githubusercontent.com/u/9311164?v=4","gravatar_id":"","url":"https://api.github.com/users/PedroRomanoBarbosa","html_url":"https://github.com/PedroRomanoBarbosa","followers_url":"https://api.github.com/users/PedroRomanoBarbosa/followers","following_url":"https://api.github.com/users/PedroRomanoBarbosa/following{/other_user}","gists_url":"https://api.github.com/users/PedroRomanoBarbosa/gists{/gist_id}","starred_url":"https://api.github.com/users/PedroRomanoBarbosa/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/PedroRomanoBarbosa/subscriptions","organizations_url":"https://api.github.com/users/PedroRomanoBarbosa/orgs","repos_url":"https://api.github.com/users/PedroRomanoBarbosa/repos","events_url":"https://api.github.com/users/PedroRomanoBarbosa/events{/privacy}","received_events_url":"https://api.github.com/users/PedroRomanoBarbosa/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2015-12-12T22:16:31Z","updated_at":"2017-01-16T14:53:47Z","closed_at":"2015-12-13T19:16:33Z","author_association":"NONE","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3637","html_url":"https://github.com/libgdx/libgdx/pull/3637","diff_url":"https://github.com/libgdx/libgdx/pull/3637.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3637.patch"},"body":"- This pull request is part of a college assignment that was given to me and my group to contribute with something for the libGDX project. We like libGDX but we wanted the ability to take a screenshot and mess around with the image a bit. That's why we decided to create the screenshot functionality along with some options to tweak the image to our liking. More options can be worked on later, but this was our starting point to contribute to this awesome framework. \n- We made a test class so people can try it out. \n- Our code might not meet all your standards and it's not perfect, but the main functionality is there and we hope you can look at it for later features. \n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3637/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3636","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3636/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3636/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3636/events","html_url":"https://github.com/libgdx/libgdx/issues/3636","id":121875369,"number":3636,"title":"Run test suite in IntelliJ.","user":{"login":"AldousP","id":9387019,"avatar_url":"https://avatars0.githubusercontent.com/u/9387019?v=4","gravatar_id":"","url":"https://api.github.com/users/AldousP","html_url":"https://github.com/AldousP","followers_url":"https://api.github.com/users/AldousP/followers","following_url":"https://api.github.com/users/AldousP/following{/other_user}","gists_url":"https://api.github.com/users/AldousP/gists{/gist_id}","starred_url":"https://api.github.com/users/AldousP/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AldousP/subscriptions","organizations_url":"https://api.github.com/users/AldousP/orgs","repos_url":"https://api.github.com/users/AldousP/repos","events_url":"https://api.github.com/users/AldousP/events{/privacy}","received_events_url":"https://api.github.com/users/AldousP/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2015-12-12T19:50:51Z","updated_at":"2015-12-19T18:16:38Z","closed_at":"2015-12-19T18:16:38Z","author_association":"CONTRIBUTOR","body":"To the best of my knowledge it is still difficult, if not impossible to run the desktop test suite in IntelliJ. While IntelliJ is currently fantastic for building LibGDX projects on all platforms, the fact that it can't run tests when working with source makes it inconvenient to need to use two IDE's to contribute.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3636/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3635","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3635/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3635/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3635/events","html_url":"https://github.com/libgdx/libgdx/issues/3635","id":121837718,"number":3635,"title":"Lwigl Audio","user":{"login":"TaiVuong","id":12879647,"avatar_url":"https://avatars0.githubusercontent.com/u/12879647?v=4","gravatar_id":"","url":"https://api.github.com/users/TaiVuong","html_url":"https://github.com/TaiVuong","followers_url":"https://api.github.com/users/TaiVuong/followers","following_url":"https://api.github.com/users/TaiVuong/following{/other_user}","gists_url":"https://api.github.com/users/TaiVuong/gists{/gist_id}","starred_url":"https://api.github.com/users/TaiVuong/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/TaiVuong/subscriptions","organizations_url":"https://api.github.com/users/TaiVuong/orgs","repos_url":"https://api.github.com/users/TaiVuong/repos","events_url":"https://api.github.com/users/TaiVuong/events{/privacy}","received_events_url":"https://api.github.com/users/TaiVuong/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2015-12-12T06:47:12Z","updated_at":"2015-12-12T12:52:30Z","closed_at":"2015-12-12T12:52:30Z","author_association":"NONE","body":"Mac OSX El Capitan\n\n```\nWARNING:  140: This application, or a library it uses, is using the deprecated Carbon Component Manager for hosting Audio Units. Support for this will be removed in a future release. Also, this makes the host incompatible with version 3 audio units. Please transition to the API's in AudioComponent.h.\n```\n\nTest with Lwigl AudioDeviceTest\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3635/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3634","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3634/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3634/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3634/events","html_url":"https://github.com/libgdx/libgdx/pull/3634","id":121707650,"number":3634,"title":"Updated jnigen to Java Parser 2.3.0. Allows parsing of Java 8 code.","user":{"login":"code-disaster","id":4644167,"avatar_url":"https://avatars1.githubusercontent.com/u/4644167?v=4","gravatar_id":"","url":"https://api.github.com/users/code-disaster","html_url":"https://github.com/code-disaster","followers_url":"https://api.github.com/users/code-disaster/followers","following_url":"https://api.github.com/users/code-disaster/following{/other_user}","gists_url":"https://api.github.com/users/code-disaster/gists{/gist_id}","starred_url":"https://api.github.com/users/code-disaster/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/code-disaster/subscriptions","organizations_url":"https://api.github.com/users/code-disaster/orgs","repos_url":"https://api.github.com/users/code-disaster/repos","events_url":"https://api.github.com/users/code-disaster/events{/privacy}","received_events_url":"https://api.github.com/users/code-disaster/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2015-12-11T13:26:38Z","updated_at":"2016-02-24T22:42:01Z","closed_at":"2015-12-11T15:02:17Z","author_association":"MEMBER","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3634","html_url":"https://github.com/libgdx/libgdx/pull/3634","diff_url":"https://github.com/libgdx/libgdx/pull/3634.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3634.patch"},"body":"This PR evolved from me trying to run gdx-jnigen on Java code which uses the Java 7 diamonds operator and Java 8 lambdas.\n\nNo code changes were needed, I only had to adjust imports because the old com.google.code.javaparser package isn't maintained anymore, and has been replaced by com.github.javaparser.\n\nI verified the change with packr, my steamworks4j library, and a few jnigen uses in libGDX. I don't think there will be issues, though I don't have a test environment to do a full libGDX build-with-sources-from-scratch.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3634/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3633","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3633/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3633/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3633/events","html_url":"https://github.com/libgdx/libgdx/pull/3633","id":121443758,"number":3633,"title":"Added support for locking the screen orientation in the GWT backend","user":{"login":"barkholt","id":16083107,"avatar_url":"https://avatars3.githubusercontent.com/u/16083107?v=4","gravatar_id":"","url":"https://api.github.com/users/barkholt","html_url":"https://github.com/barkholt","followers_url":"https://api.github.com/users/barkholt/followers","following_url":"https://api.github.com/users/barkholt/following{/other_user}","gists_url":"https://api.github.com/users/barkholt/gists{/gist_id}","starred_url":"https://api.github.com/users/barkholt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/barkholt/subscriptions","organizations_url":"https://api.github.com/users/barkholt/orgs","repos_url":"https://api.github.com/users/barkholt/repos","events_url":"https://api.github.com/users/barkholt/events{/privacy}","received_events_url":"https://api.github.com/users/barkholt/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2015-12-10T09:46:46Z","updated_at":"2016-01-25T23:32:08Z","closed_at":"2016-01-05T16:07:53Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3633","html_url":"https://github.com/libgdx/libgdx/pull/3633","diff_url":"https://github.com/libgdx/libgdx/pull/3633.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3633.patch"},"body":"This enables locking the orientation of the web application on mobile browsers that support the API. For now this includes Chrome on Android, Firefox and the latest mobile IE. \n\nThe patch does not change the default behaviour, but if fullscreenOrientation is set in GwtApplicationConfiguration, the orientation will be locked when the app enters fullscreen mode. When fullscreen mode is exited, the orientation is unlocked.\n\nShould the user wish to trigger orientation changes manually, there are public methods available in GwtGraphics.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3633/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3632","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3632/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3632/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3632/events","html_url":"https://github.com/libgdx/libgdx/issues/3632","id":121402255,"number":3632,"title":"Intersector method to determine Polygon area of Intersection","user":{"login":"AldousP","id":9387019,"avatar_url":"https://avatars0.githubusercontent.com/u/9387019?v=4","gravatar_id":"","url":"https://api.github.com/users/AldousP","html_url":"https://github.com/AldousP","followers_url":"https://api.github.com/users/AldousP/followers","following_url":"https://api.github.com/users/AldousP/following{/other_user}","gists_url":"https://api.github.com/users/AldousP/gists{/gist_id}","starred_url":"https://api.github.com/users/AldousP/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AldousP/subscriptions","organizations_url":"https://api.github.com/users/AldousP/orgs","repos_url":"https://api.github.com/users/AldousP/repos","events_url":"https://api.github.com/users/AldousP/events{/privacy}","received_events_url":"https://api.github.com/users/AldousP/received_events","type":"User","site_admin":false},"labels":[{"id":11336982,"url":"https://api.github.com/repos/libgdx/libgdx/labels/enhancement","name":"enhancement","color":"84b6eb","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2015-12-10T04:56:09Z","updated_at":"2016-11-25T01:18:03Z","closed_at":"2016-11-25T01:18:03Z","author_association":"CONTRIBUTOR","body":"Intersector method for intersecting two shapes and determining the resulting overlap is only usable with the Rectangle class. I'm currently attempting to determine overlap of two rotated Rectangles which isn't viable given that Rectangles do not currently have a concept of rotation. So the only other option currently is to use a Polygon. I recognize the difficulty of Polygon clipping and the fact that tasks such as this can be solved by Box2D, but it seems beneficial to also have the functionality in vanilla LibGDX\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3632/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3631","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3631/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3631/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3631/events","html_url":"https://github.com/libgdx/libgdx/issues/3631","id":121388801,"number":3631,"title":"is it possible to customized the render sequence of Stage","user":{"login":"royrang","id":16233404,"avatar_url":"https://avatars0.githubusercontent.com/u/16233404?v=4","gravatar_id":"","url":"https://api.github.com/users/royrang","html_url":"https://github.com/royrang","followers_url":"https://api.github.com/users/royrang/followers","following_url":"https://api.github.com/users/royrang/following{/other_user}","gists_url":"https://api.github.com/users/royrang/gists{/gist_id}","starred_url":"https://api.github.com/users/royrang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/royrang/subscriptions","organizations_url":"https://api.github.com/users/royrang/orgs","repos_url":"https://api.github.com/users/royrang/repos","events_url":"https://api.github.com/users/royrang/events{/privacy}","received_events_url":"https://api.github.com/users/royrang/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2015-12-10T02:42:13Z","updated_at":"2015-12-10T09:45:05Z","closed_at":"2015-12-10T06:34:53Z","author_association":"NONE","body":"","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3631/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3630","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3630/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3630/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3630/events","html_url":"https://github.com/libgdx/libgdx/pull/3630","id":121367069,"number":3630,"title":"Fixed GWT crashing when pixels is null.","user":{"login":"xpenatan","id":6472084,"avatar_url":"https://avatars3.githubusercontent.com/u/6472084?v=4","gravatar_id":"","url":"https://api.github.com/users/xpenatan","html_url":"https://github.com/xpenatan","followers_url":"https://api.github.com/users/xpenatan/followers","following_url":"https://api.github.com/users/xpenatan/following{/other_user}","gists_url":"https://api.github.com/users/xpenatan/gists{/gist_id}","starred_url":"https://api.github.com/users/xpenatan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xpenatan/subscriptions","organizations_url":"https://api.github.com/users/xpenatan/orgs","repos_url":"https://api.github.com/users/xpenatan/repos","events_url":"https://api.github.com/users/xpenatan/events{/privacy}","received_events_url":"https://api.github.com/users/xpenatan/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2015-12-09T23:37:51Z","updated_at":"2016-01-13T16:01:45Z","closed_at":"2015-12-10T13:15:23Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3630","html_url":"https://github.com/libgdx/libgdx/pull/3630","diff_url":"https://github.com/libgdx/libgdx/pull/3630.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3630.patch"},"body":"This fix FrameBufferTest and ShadowMappingTest from crashing in GWT.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3630/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3629","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3629/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3629/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3629/events","html_url":"https://github.com/libgdx/libgdx/issues/3629","id":121242488,"number":3629,"title":"Non-Continuous Rendering CPU","user":{"login":"darkfrog26","id":877534,"avatar_url":"https://avatars2.githubusercontent.com/u/877534?v=4","gravatar_id":"","url":"https://api.github.com/users/darkfrog26","html_url":"https://github.com/darkfrog26","followers_url":"https://api.github.com/users/darkfrog26/followers","following_url":"https://api.github.com/users/darkfrog26/following{/other_user}","gists_url":"https://api.github.com/users/darkfrog26/gists{/gist_id}","starred_url":"https://api.github.com/users/darkfrog26/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/darkfrog26/subscriptions","organizations_url":"https://api.github.com/users/darkfrog26/orgs","repos_url":"https://api.github.com/users/darkfrog26/repos","events_url":"https://api.github.com/users/darkfrog26/events{/privacy}","received_events_url":"https://api.github.com/users/darkfrog26/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2015-12-09T13:44:47Z","updated_at":"2015-12-11T01:04:09Z","closed_at":"2015-12-11T01:03:57Z","author_association":"NONE","body":"I was testing setting continuous rendering to false and noticed that my CPU is still maxed out even though my framerate drops accordingly.  I'm using JGLFW and I have vsync set to false.  This can be reproduced in any project by simply calling:\n\n``` java\nGdx.graphics.setContinuousRendering(false)\n```\n\nAnd using the JGLFW renderer with vsync set to false.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3629/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3628","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3628/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3628/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3628/events","html_url":"https://github.com/libgdx/libgdx/issues/3628","id":121033681,"number":3628,"title":"GWT: Don't always return new Application in getApplicationListener()","user":{"login":"intrigus","id":10353467,"avatar_url":"https://avatars2.githubusercontent.com/u/10353467?v=4","gravatar_id":"","url":"https://api.github.com/users/intrigus","html_url":"https://github.com/intrigus","followers_url":"https://api.github.com/users/intrigus/followers","following_url":"https://api.github.com/users/intrigus/following{/other_user}","gists_url":"https://api.github.com/users/intrigus/gists{/gist_id}","starred_url":"https://api.github.com/users/intrigus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/intrigus/subscriptions","organizations_url":"https://api.github.com/users/intrigus/orgs","repos_url":"https://api.github.com/users/intrigus/repos","events_url":"https://api.github.com/users/intrigus/events{/privacy}","received_events_url":"https://api.github.com/users/intrigus/received_events","type":"User","site_admin":false},"labels":[{"id":67383148,"url":"https://api.github.com/repos/libgdx/libgdx/labels/gwt","name":"gwt","color":"5319e7","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2015-12-08T15:39:52Z","updated_at":"2016-01-26T14:31:45Z","closed_at":"2016-01-26T14:31:45Z","author_association":"CONTRIBUTOR","body":"https://github.com/libgdx/libgdx/blob/master/extensions/gdx-setup/src/com/badlogic/gdx/setup/resources/html/src/HtmlLauncher#L17\n\nCurrently, when you call getApplicationListener(), you always get a new Application. I don't think that this is good. Many people rely on the fact that getApplicationListener() returns the AppListener, but NOT a new AppListener every time it's called.\n\nI propose to cache the value, and only create a new AppListener, if the cache is null.\n\n```\npublic class HtmlLauncher extends GwtApplication {\n        private ApplicationListener listener;\n        @Override\n        public GwtApplicationConfiguration getConfig () {\n                return new GwtApplicationConfiguration(480, 320);\n        }\n\n        @Override\n        public ApplicationListener getApplicationListener () {\n                if(listener == null) {\n                        listener = new %MAIN_CLASS%();\n                }\n                return listener;         \n        }\n}\n```\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3628/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3627","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3627/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3627/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3627/events","html_url":"https://github.com/libgdx/libgdx/pull/3627","id":120928240,"number":3627,"title":"Support TextureRegionDrawable in Skin Json and tinting TiledDrawable.","user":{"login":"cypherdare","id":1843131,"avatar_url":"https://avatars2.githubusercontent.com/u/1843131?v=4","gravatar_id":"","url":"https://api.github.com/users/cypherdare","html_url":"https://github.com/cypherdare","followers_url":"https://api.github.com/users/cypherdare/followers","following_url":"https://api.github.com/users/cypherdare/following{/other_user}","gists_url":"https://api.github.com/users/cypherdare/gists{/gist_id}","starred_url":"https://api.github.com/users/cypherdare/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cypherdare/subscriptions","organizations_url":"https://api.github.com/users/cypherdare/orgs","repos_url":"https://api.github.com/users/cypherdare/repos","events_url":"https://api.github.com/users/cypherdare/events{/privacy}","received_events_url":"https://api.github.com/users/cypherdare/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2015-12-08T04:29:37Z","updated_at":"2015-12-11T15:21:02Z","closed_at":"2015-12-11T03:53:12Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3627","html_url":"https://github.com/libgdx/libgdx/pull/3627","diff_url":"https://github.com/libgdx/libgdx/pull/3627.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3627.patch"},"body":"Formerly, trying to explicitly define a TextureRegionDrawable in Json (so padding can be specified) resulted in a runtime exception because `skin.getDrawable` didn't look for TextureRegionDrawables.\n\nI tested it and padding does work when specified like this:\n\n```\ncom.badlogic.gdx.scenes.scene2d.utils.TextureRegionDrawable: {\n    paddedWhite: {region: white, leftWidth: 4, rightWidth: 40, topHeight: 4, bottomHeight: 4}\n},\n```\n\nI've had need of this a few times when using a solid white texture region for solid color highlights, such as in a List of a SelectBox.\n\nThis doesn't work with TiledDrawable, which behaves like a stretched TextureRegionDrawable if it has any padding, but this apparently was already a bug or unsupported feature. I haven't looked into that.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3627/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3626","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3626/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3626/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3626/events","html_url":"https://github.com/libgdx/libgdx/issues/3626","id":120726460,"number":3626,"title":"Add tvOS support","user":{"login":"badlogic","id":514052,"avatar_url":"https://avatars1.githubusercontent.com/u/514052?v=4","gravatar_id":"","url":"https://api.github.com/users/badlogic","html_url":"https://github.com/badlogic","followers_url":"https://api.github.com/users/badlogic/followers","following_url":"https://api.github.com/users/badlogic/following{/other_user}","gists_url":"https://api.github.com/users/badlogic/gists{/gist_id}","starred_url":"https://api.github.com/users/badlogic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/badlogic/subscriptions","organizations_url":"https://api.github.com/users/badlogic/orgs","repos_url":"https://api.github.com/users/badlogic/repos","events_url":"https://api.github.com/users/badlogic/events{/privacy}","received_events_url":"https://api.github.com/users/badlogic/received_events","type":"User","site_admin":false},"labels":[{"id":59604199,"url":"https://api.github.com/repos/libgdx/libgdx/labels/ios","name":"ios","color":"207de5","default":false}],"state":"closed","locked":false,"assignee":{"login":"badlogic","id":514052,"avatar_url":"https://avatars1.githubusercontent.com/u/514052?v=4","gravatar_id":"","url":"https://api.github.com/users/badlogic","html_url":"https://github.com/badlogic","followers_url":"https://api.github.com/users/badlogic/followers","following_url":"https://api.github.com/users/badlogic/following{/other_user}","gists_url":"https://api.github.com/users/badlogic/gists{/gist_id}","starred_url":"https://api.github.com/users/badlogic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/badlogic/subscriptions","organizations_url":"https://api.github.com/users/badlogic/orgs","repos_url":"https://api.github.com/users/badlogic/repos","events_url":"https://api.github.com/users/badlogic/events{/privacy}","received_events_url":"https://api.github.com/users/badlogic/received_events","type":"User","site_admin":false},"assignees":[{"login":"badlogic","id":514052,"avatar_url":"https://avatars1.githubusercontent.com/u/514052?v=4","gravatar_id":"","url":"https://api.github.com/users/badlogic","html_url":"https://github.com/badlogic","followers_url":"https://api.github.com/users/badlogic/followers","following_url":"https://api.github.com/users/badlogic/following{/other_user}","gists_url":"https://api.github.com/users/badlogic/gists{/gist_id}","starred_url":"https://api.github.com/users/badlogic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/badlogic/subscriptions","organizations_url":"https://api.github.com/users/badlogic/orgs","repos_url":"https://api.github.com/users/badlogic/repos","events_url":"https://api.github.com/users/badlogic/events{/privacy}","received_events_url":"https://api.github.com/users/badlogic/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2015-12-07T08:57:43Z","updated_at":"2016-01-05T16:57:11Z","closed_at":"2016-01-05T16:57:10Z","author_association":"OWNER","body":"Compile native libs for ARM64/X86_64, put them in META-INF/robovm/libs/tvos\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3626/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3625","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3625/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3625/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3625/events","html_url":"https://github.com/libgdx/libgdx/issues/3625","id":120688382,"number":3625,"title":"CpuSpriteBatch Draw Bug","user":{"login":"leeho0108","id":10900736,"avatar_url":"https://avatars1.githubusercontent.com/u/10900736?v=4","gravatar_id":"","url":"https://api.github.com/users/leeho0108","html_url":"https://github.com/leeho0108","followers_url":"https://api.github.com/users/leeho0108/followers","following_url":"https://api.github.com/users/leeho0108/following{/other_user}","gists_url":"https://api.github.com/users/leeho0108/gists{/gist_id}","starred_url":"https://api.github.com/users/leeho0108/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leeho0108/subscriptions","organizations_url":"https://api.github.com/users/leeho0108/orgs","repos_url":"https://api.github.com/users/leeho0108/repos","events_url":"https://api.github.com/users/leeho0108/events{/privacy}","received_events_url":"https://api.github.com/users/leeho0108/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2015-12-07T02:57:07Z","updated_at":"2015-12-11T15:22:07Z","closed_at":"2015-12-11T15:22:07Z","author_association":"CONTRIBUTOR","body":"at `CpuSpriteBatch` line 183\n\n```\n@Override\n    public void draw (Texture texture, float x, float y, float width, float height, float u, float v, float u2, float v2) {\n        if (!adjustNeeded) {\n            super.draw(texture, x, y, width, height, u, v, u2, v2);\n        } else {\n//          drawAdjustedUV(texture, x, y, 0, 0, texture.getWidth(), texture.getHeight(), 1, 1, 0, u, v, u2, v2, false, false);\n            drawAdjustedUV(texture, x, y, 0, 0, width, height, 1, 1, 0, u, v, u2, v2, false, false);\n        }\n    }\n\n```\n\nthe call `drawAdjustedUV`just take the param texture's size,this make result wrong.so i simply try pass `width` and `height` use `draw`'s param `width` and `height`,then the result seem to be right.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3625/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3624","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3624/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3624/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3624/events","html_url":"https://github.com/libgdx/libgdx/issues/3624","id":120589601,"number":3624,"title":"Determine if Timer has scheduled tasks remaining.","user":{"login":"njradford","id":6598550,"avatar_url":"https://avatars2.githubusercontent.com/u/6598550?v=4","gravatar_id":"","url":"https://api.github.com/users/njradford","html_url":"https://github.com/njradford","followers_url":"https://api.github.com/users/njradford/followers","following_url":"https://api.github.com/users/njradford/following{/other_user}","gists_url":"https://api.github.com/users/njradford/gists{/gist_id}","starred_url":"https://api.github.com/users/njradford/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/njradford/subscriptions","organizations_url":"https://api.github.com/users/njradford/orgs","repos_url":"https://api.github.com/users/njradford/repos","events_url":"https://api.github.com/users/njradford/events{/privacy}","received_events_url":"https://api.github.com/users/njradford/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2015-12-05T21:38:14Z","updated_at":"2015-12-06T21:25:45Z","closed_at":"2015-12-06T21:25:45Z","author_association":"NONE","body":"Would it possible to fetch a boolean from the Timer instance indicating whether it still has Tasks in it's queue? Or was the intent to allow this behavior to be handled on a task by task basis using the \"isScheduled\" property in the task's run() method?\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3624/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3623","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3623/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3623/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3623/events","html_url":"https://github.com/libgdx/libgdx/issues/3623","id":120573423,"number":3623,"title":"Unable to get real JsonValue ValueType","user":{"login":"nikoliazekter","id":6832533,"avatar_url":"https://avatars1.githubusercontent.com/u/6832533?v=4","gravatar_id":"","url":"https://api.github.com/users/nikoliazekter","html_url":"https://github.com/nikoliazekter","followers_url":"https://api.github.com/users/nikoliazekter/followers","following_url":"https://api.github.com/users/nikoliazekter/following{/other_user}","gists_url":"https://api.github.com/users/nikoliazekter/gists{/gist_id}","starred_url":"https://api.github.com/users/nikoliazekter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nikoliazekter/subscriptions","organizations_url":"https://api.github.com/users/nikoliazekter/orgs","repos_url":"https://api.github.com/users/nikoliazekter/repos","events_url":"https://api.github.com/users/nikoliazekter/events{/privacy}","received_events_url":"https://api.github.com/users/nikoliazekter/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2015-12-05T17:23:31Z","updated_at":"2015-12-06T21:30:30Z","closed_at":"2015-12-06T21:30:29Z","author_association":"NONE","body":"There are currently these value types:\n\n``` java\n    public enum ValueType {\n        object, array, stringValue, doubleValue, longValue, booleanValue, nullValue\n    }\n```\n\nImagine we have these variable:\n\n``` java\n    int iAmNotLong;\n    float iAmNotDouble;\n```\n\n`iAmNotLong` has `longValue` type and `iAmNotDouble` has `doubleValue` type. Using this knowledge user might try to assign numbers to these variables that are out of their range. This will cause\n\n``` java\nException in thread \"LWJGL Application\" com.badlogic.gdx.utils.SerializationException: Unable to convert value to required type: iAmNotLong: 100000000000000000 (int)\n```\n\nwhen deserialized back.\n\nHowever, since `Json` uses reflection to serialize objects, it's possible to get real primitive types of variables. It would be much better to have `intValue` and `floatValue` in `ValueType`.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3623/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3622","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3622/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3622/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3622/events","html_url":"https://github.com/libgdx/libgdx/issues/3622","id":120551179,"number":3622,"title":"Intersector.pointLineSide returns wrong side","user":{"login":"palador","id":1424468,"avatar_url":"https://avatars2.githubusercontent.com/u/1424468?v=4","gravatar_id":"","url":"https://api.github.com/users/palador","html_url":"https://github.com/palador","followers_url":"https://api.github.com/users/palador/followers","following_url":"https://api.github.com/users/palador/following{/other_user}","gists_url":"https://api.github.com/users/palador/gists{/gist_id}","starred_url":"https://api.github.com/users/palador/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/palador/subscriptions","organizations_url":"https://api.github.com/users/palador/orgs","repos_url":"https://api.github.com/users/palador/repos","events_url":"https://api.github.com/users/palador/events{/privacy}","received_events_url":"https://api.github.com/users/palador/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2015-12-05T12:33:39Z","updated_at":"2015-12-20T13:42:16Z","closed_at":null,"author_association":"NONE","body":"Sometimes, this function returns a wrong value.\nHere's a test with a line and a point. Obviously, the point is on the left side of the line:\n\n```\nval start = Vector2(-10f, -20f)\nval end = Vector2(+10f, -20f)\nval point = Vector2(0f, 0f)\nval side = Intersector.pointLineSide(start, end, point)\nAssert.assertEquals(side, -1)\n```\n\nThis snipped is written in Kotlin, but you should get the point (hopefully you do better than this function does :) )\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3622/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3621","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3621/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3621/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3621/events","html_url":"https://github.com/libgdx/libgdx/issues/3621","id":120514685,"number":3621,"title":"LibGDX and Tiled rendering issue black tiles","user":{"login":"bvisonl","id":4421747,"avatar_url":"https://avatars3.githubusercontent.com/u/4421747?v=4","gravatar_id":"","url":"https://api.github.com/users/bvisonl","html_url":"https://github.com/bvisonl","followers_url":"https://api.github.com/users/bvisonl/followers","following_url":"https://api.github.com/users/bvisonl/following{/other_user}","gists_url":"https://api.github.com/users/bvisonl/gists{/gist_id}","starred_url":"https://api.github.com/users/bvisonl/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bvisonl/subscriptions","organizations_url":"https://api.github.com/users/bvisonl/orgs","repos_url":"https://api.github.com/users/bvisonl/repos","events_url":"https://api.github.com/users/bvisonl/events{/privacy}","received_events_url":"https://api.github.com/users/bvisonl/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2015-12-05T00:37:19Z","updated_at":"2015-12-05T17:20:30Z","closed_at":"2015-12-05T15:20:39Z","author_association":"NONE","body":"I am having issues with Tiled and Libgdx. I am making a scroll platform game and I am trying to make 1 (for now) background that will repeat itself. The main map in Tiled is composed of various images stacked one next to the other, once I fill all the cells that makes up a full background (normal stuff..)\n\nMy problem comes with rendering, as you can see in the images below as I move the main character to the right the image suddenly disappears, I know that the tiled renderer is supposed to efficiently render only what you will see but in this case I am still seeing an area that the renderer just stops rendering. \n\nHow can I make the renderer wait until a tile is out of the camera before it stops rendering it?\n\nImages:\n\n[Starting position is like at the middle of the first tile](http://postimg.org/image/cinkcib8t/)\n\n[Almost getting out of the first tile](http://postimg.org/image/ku54jtrpr/)\n\nAs for the code I am basically using the code in [this tutorial](https://github.com/libgdx/libgdx/wiki/Tile-maps) since I am currently just testing things out like this:\n\n```\npublic class PlayScreen implements Screen {\n\nprivate OrthographicCamera camera;\nprivate Viewport viewport;\n\nprivate World world;\nprivate Box2DDebugRenderer b2dRenderer;\n\n\n// Map\n\nprivate TiledMap tiledMap;\nprivate OrthogonalTiledMapRenderer mapRenderer;\n\n\npublic PlayScreen(PGame game) {\n    this.game = game;\n    camera = new OrthographicCamera();\n    camera.setToOrtho(false, PGame.V_WIDTH, PGame.V_HEIGHT);       \n\n    viewport = new FitViewport(PGame.V_WIDTH / Constants.PPM, PGame.V_HEIGHT / Constants.PPM, camera);\n    camera.position.set(viewport.getWorldWidth() / 4, viewport.getWorldHeight() / 2, 0);\n\n    // No gravity for now..\n    world = new World(new Vector2(0, -0*9.81f), true);\n    b2dRenderer = new Box2DDebugRenderer();\n\n    // create the box of the player seen in the image\n    .....\n\n\n    TmxMapLoader loader = new TmxMapLoader();\n\n    tiledMap = loader.load(\"backgrounds/1.tmx\");\n    float unitScale = 1 / 100f;\n    mapRenderer = new OrthogonalTiledMapRenderer(tiledMap, unitScale);\n\n\n\n\n}\n\npublic void update(float delta) {\n\n    // handle input to move the b2d body\n    .....\n\n\n    world.step(1 / 60f, 6, 2);\n\n    // Make the camera follow the player\n    camera.position.set(player.getPosition());\n\n    camera.update();\n}\n\n@Override\npublic void render(float delta) {\n    update(delta);\n\n    Gdx.gl.glClearColor(0, 0, 0, 1);\n    Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);\n\n\n    mapRenderer.setView(camera);\n    mapRenderer.render();\n\n    b2dRenderer.render(world, camera.combined);\n\n}\n```\n\n}\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3621/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3620","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3620/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3620/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3620/events","html_url":"https://github.com/libgdx/libgdx/pull/3620","id":120330795,"number":3620,"title":"TiledDrawables can be tinted.","user":{"login":"cypherdare","id":1843131,"avatar_url":"https://avatars2.githubusercontent.com/u/1843131?v=4","gravatar_id":"","url":"https://api.github.com/users/cypherdare","html_url":"https://github.com/cypherdare","followers_url":"https://api.github.com/users/cypherdare/followers","following_url":"https://api.github.com/users/cypherdare/following{/other_user}","gists_url":"https://api.github.com/users/cypherdare/gists{/gist_id}","starred_url":"https://api.github.com/users/cypherdare/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cypherdare/subscriptions","organizations_url":"https://api.github.com/users/cypherdare/orgs","repos_url":"https://api.github.com/users/cypherdare/repos","events_url":"https://api.github.com/users/cypherdare/events{/privacy}","received_events_url":"https://api.github.com/users/cypherdare/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2015-12-04T04:30:36Z","updated_at":"2015-12-08T03:04:19Z","closed_at":"2015-12-08T03:04:00Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3620","html_url":"https://github.com/libgdx/libgdx/pull/3620","diff_url":"https://github.com/libgdx/libgdx/pull/3620.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3620.patch"},"body":"I also added some detail to the Javadocs, something that would have helped me learn faster how to make skins.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3620/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3619","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3619/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3619/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3619/events","html_url":"https://github.com/libgdx/libgdx/issues/3619","id":120304317,"number":3619,"title":"[OSX] (El Capitan) Huge FPS drop when rendering 3D models in random order","user":{"login":"ghost","id":10137,"avatar_url":"https://avatars3.githubusercontent.com/u/10137?v=4","gravatar_id":"","url":"https://api.github.com/users/ghost","html_url":"https://github.com/ghost","followers_url":"https://api.github.com/users/ghost/followers","following_url":"https://api.github.com/users/ghost/following{/other_user}","gists_url":"https://api.github.com/users/ghost/gists{/gist_id}","starred_url":"https://api.github.com/users/ghost/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ghost/subscriptions","organizations_url":"https://api.github.com/users/ghost/orgs","repos_url":"https://api.github.com/users/ghost/repos","events_url":"https://api.github.com/users/ghost/events{/privacy}","received_events_url":"https://api.github.com/users/ghost/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2015-12-04T00:27:18Z","updated_at":"2015-12-05T19:10:21Z","closed_at":"2015-12-05T19:10:21Z","author_association":"NONE","body":"I tested on Windows 10 x64, Windows 7 x64, and Ubuntu 15.10 x64, and all of them can run my little test without FPS drop, only OSX 10.11.1 have huge FPS drop\n\nHere is the models im using for the test:\n[test.zip](https://github.com/libgdx/libgdx/files/51550/test.zip)\n\nHere is the test code that you can use: (UP Arrow: Sort shuffle DOWN Arrow: Sort Order)\n\n``` java\npackage com.scellow.game;\n\nimport com.badlogic.gdx.ApplicationAdapter;\nimport com.badlogic.gdx.Gdx;\nimport com.badlogic.gdx.Input;\nimport com.badlogic.gdx.assets.loaders.ModelLoader;\nimport com.badlogic.gdx.files.FileHandle;\nimport com.badlogic.gdx.graphics.Color;\nimport com.badlogic.gdx.graphics.GL20;\nimport com.badlogic.gdx.graphics.PerspectiveCamera;\nimport com.badlogic.gdx.graphics.g3d.Model;\nimport com.badlogic.gdx.graphics.g3d.ModelBatch;\nimport com.badlogic.gdx.graphics.g3d.ModelInstance;\nimport com.badlogic.gdx.graphics.g3d.loader.ObjLoader;\nimport com.badlogic.gdx.math.Vector3;\nimport com.badlogic.gdx.utils.Array;\n\nimport java.util.Comparator;\n\npublic class Test extends ApplicationAdapter\n{\n    public class Entity extends ModelInstance\n    {\n        public String name;\n\n        public Entity(Model model, String name)\n        {\n            super(model);\n            this.name = name;\n        }\n    }\n\n    public final Color CLEAR_COLOR = Color.BLACK;\n\n    private ModelBatch batch;\n    private PerspectiveCamera camera;\n\n    private Array<Entity> entities = new Array<Entity>();\n\n    public float distance = 48;\n    public float height = 72;\n    public Vector3 position = new Vector3(0,0,0);\n    public float alpha = 0.256f;\n    public float freeSpeed = 4f;\n\n\n    @Override\n    public void create ()\n    {\n        batch = new ModelBatch();\n        camera = new PerspectiveCamera(60,Gdx.graphics.getWidth(), Gdx.graphics.getHeight());\n        camera.near = 0.1f;\n        camera.far = 5000;\n        camera.direction.set(0,-80,-50);\n        camera.update();\n\n        ModelLoader loader = new ObjLoader();\n        FileHandle dirHandle = Gdx.files.internal(\"test\");\n        for(FileHandle entry: dirHandle.list())\n        {\n            if(entry.extension().equals(\"obj\"))\n            {\n                loadModel(loader, entry);\n                loadModel(loader, entry);\n                loadModel(loader, entry);\n                loadModel(loader, entry);\n                loadModel(loader, entry);\n                loadModel(loader, entry);\n                loadModel(loader, entry);\n                loadModel(loader, entry);\n                loadModel(loader, entry);\n                loadModel(loader, entry);\n                loadModel(loader, entry);\n                loadModel(loader, entry);\n                loadModel(loader, entry);\n                loadModel(loader, entry);\n                loadModel(loader, entry);\n                loadModel(loader, entry);\n                loadModel(loader, entry);\n                loadModel(loader, entry);\n                loadModel(loader, entry);\n                loadModel(loader, entry);\n                loadModel(loader, entry);\n                loadModel(loader, entry);\n                loadModel(loader, entry);\n                loadModel(loader, entry);\n                loadModel(loader, entry);\n                loadModel(loader, entry);\n                loadModel(loader, entry);\n                loadModel(loader, entry);\n                loadModel(loader, entry);\n                loadModel(loader, entry);\n                loadModel(loader, entry);\n                loadModel(loader, entry);\n                loadModel(loader, entry);\n                loadModel(loader, entry);\n                loadModel(loader, entry);\n                loadModel(loader, entry);\n                loadModel(loader, entry);\n                loadModel(loader, entry);\n                loadModel(loader, entry);\n                loadModel(loader, entry);\n                loadModel(loader, entry);\n                loadModel(loader, entry);\n                loadModel(loader, entry);\n                loadModel(loader, entry);\n                loadModel(loader, entry);\n                loadModel(loader, entry);\n                loadModel(loader, entry);\n                loadModel(loader, entry);\n            }\n        }\n        updatePositions();\n    }\n\n    public void loadModel(ModelLoader loader, FileHandle fileHandle)\n    {\n        Model model = loader.loadModel(fileHandle);\n        Entity entity = new Entity(model, fileHandle.nameWithoutExtension());\n        entities.add(entity);\n    }\n\n    @Override\n    public void render ()\n    {\n        Gdx.graphics.setTitle(\"Test - Models:\"+ entities.size +\" - FPS:\"+Gdx.graphics.getFramesPerSecond());\n\n        boolean up = Gdx.input.isKeyPressed(Input.Keys.Z);\n        boolean down = Gdx.input.isKeyPressed(Input.Keys.S);\n        boolean left = Gdx.input.isKeyPressed(Input.Keys.Q);\n        boolean right = Gdx.input.isKeyPressed(Input.Keys.D);\n\n        Vector3 vel = new Vector3(0, 0, 0);\n\n        if(up)\n            vel.set(0,0,-1);\n        if(down)\n            vel.set(0,0,1);\n        if(left)\n            vel.set(-1,0,0);\n        if(right)\n            vel.set(1,0,0);\n\n\n        position.add(vel.scl(freeSpeed));\n\n        camera.position.set(camera.position.lerp(\n                new Vector3(Math.round(position.x), height,Math.round(position.z)+distance),\n                alpha));\n        camera.update();\n\n        if(Gdx.input.isKeyJustPressed(Input.Keys.UP))\n        {\n            shuffle();\n        }\n\n        if(Gdx.input.isKeyJustPressed(Input.Keys.DOWN))\n        {\n            sorted();\n        }\n\n        Gdx.gl.glViewport(0, 0, Gdx.graphics.getWidth(), Gdx.graphics.getHeight());\n        Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT | GL20.GL_DEPTH_BUFFER_BIT);\n        Gdx.gl.glClearColor(CLEAR_COLOR.r, CLEAR_COLOR.g, CLEAR_COLOR.b, 1);\n\n        batch.begin(camera);\n\n        for(Entity entity : entities)\n        {\n            batch.render(entity);\n        }\n\n        batch.end();\n    }\n\n    private void sorted()\n    {\n        entities.sort(new Comparator<Entity>() {\n            @Override\n            public int compare(Entity o1, Entity o2)\n            {\n                return o1.name.compareTo(o2.name);\n            }\n\n        });\n        updatePositions();\n    }\n\n    private void shuffle()\n    {\n        entities.shuffle();\n        updatePositions();\n    }\n\n    private void updatePositions()\n    {\n        int count = 0;\n        for(Entity entity : entities)\n        {\n            int x = count / 8 * 8 - 24;\n            int z = (count % 8) * 8 - 24;\n\n            entity.transform.setToTranslation(x,0,z);\n            entity.calculateTransforms();\n            count++;\n        }\n    }\n\n    @Override\n    public void resize(int width, int height)\n    {\n        super.resize(width, height);\n    }\n}\n```\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3619/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}}],"meta":{"x-ratelimit-limit":"5000","x-ratelimit-remaining":"4957","x-ratelimit-reset":"1506844633","x-github-request-id":"D5FC:0285:102F75F:1FBD8E8:59D0946B","x-github-media-type":"github.squirrel-girl-preview","link":"<https://api.github.com/repositories/5373551/issues?state=all&page=44>; rel=\"next\", <https://api.github.com/repositories/5373551/issues?state=all&page=164>; rel=\"last\", <https://api.github.com/repositories/5373551/issues?state=all&page=1>; rel=\"first\", <https://api.github.com/repositories/5373551/issues?state=all&page=42>; rel=\"prev\"","etag":"\"a01824f9a2869107edb4bc27be743c09\"","status":"200 OK"}}
