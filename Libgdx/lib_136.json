{"data":[{"url":"https://api.github.com/repos/libgdx/libgdx/issues/855","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/855/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/855/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/855/events","html_url":"https://github.com/libgdx/libgdx/pull/855","id":21371498,"number":855,"title":"Use epsilon for zeroValue comparison too.","user":{"login":"hneuer","id":1545118,"avatar_url":"https://avatars3.githubusercontent.com/u/1545118?v=4","gravatar_id":"","url":"https://api.github.com/users/hneuer","html_url":"https://github.com/hneuer","followers_url":"https://api.github.com/users/hneuer/followers","following_url":"https://api.github.com/users/hneuer/following{/other_user}","gists_url":"https://api.github.com/users/hneuer/gists{/gist_id}","starred_url":"https://api.github.com/users/hneuer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hneuer/subscriptions","organizations_url":"https://api.github.com/users/hneuer/orgs","repos_url":"https://api.github.com/users/hneuer/repos","events_url":"https://api.github.com/users/hneuer/events{/privacy}","received_events_url":"https://api.github.com/users/hneuer/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2013-10-22T09:51:21Z","updated_at":"2014-07-03T20:49:57Z","closed_at":"2013-10-22T10:04:43Z","author_association":"OWNER","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/855","html_url":"https://github.com/libgdx/libgdx/pull/855","diff_url":"https://github.com/libgdx/libgdx/pull/855.diff","patch_url":"https://github.com/libgdx/libgdx/pull/855.patch"},"body":"","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/855/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/854","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/854/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/854/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/854/events","html_url":"https://github.com/libgdx/libgdx/issues/854","id":21339180,"number":854,"title":"Make new Wiki section about upgrading libgdx","user":{"login":"yjukaku","id":908365,"avatar_url":"https://avatars0.githubusercontent.com/u/908365?v=4","gravatar_id":"","url":"https://api.github.com/users/yjukaku","html_url":"https://github.com/yjukaku","followers_url":"https://api.github.com/users/yjukaku/followers","following_url":"https://api.github.com/users/yjukaku/following{/other_user}","gists_url":"https://api.github.com/users/yjukaku/gists{/gist_id}","starred_url":"https://api.github.com/users/yjukaku/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yjukaku/subscriptions","organizations_url":"https://api.github.com/users/yjukaku/orgs","repos_url":"https://api.github.com/users/yjukaku/repos","events_url":"https://api.github.com/users/yjukaku/events{/privacy}","received_events_url":"https://api.github.com/users/yjukaku/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2013-10-21T19:45:56Z","updated_at":"2013-10-23T18:01:26Z","closed_at":"2013-10-23T18:01:26Z","author_association":"NONE","body":"Right now, information about upgrading libgdx is buried here:\n\nhttps://github.com/libgdx/libgdx/wiki/Manual-project-setup\n\nat the bottom of the page. Considering that a lot of people probably need to upgrade  the libgdx jars at some point, I think it would be nice to have these instructions more readily available (and more clear, if possible).\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/854/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/853","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/853/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/853/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/853/events","html_url":"https://github.com/libgdx/libgdx/pull/853","id":21290138,"number":853,"title":"Ensure begin() is called when the time has been set to a value other","user":{"login":"hyvas","id":2769000,"avatar_url":"https://avatars2.githubusercontent.com/u/2769000?v=4","gravatar_id":"","url":"https://api.github.com/users/hyvas","html_url":"https://github.com/hyvas","followers_url":"https://api.github.com/users/hyvas/followers","following_url":"https://api.github.com/users/hyvas/following{/other_user}","gists_url":"https://api.github.com/users/hyvas/gists{/gist_id}","starred_url":"https://api.github.com/users/hyvas/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hyvas/subscriptions","organizations_url":"https://api.github.com/users/hyvas/orgs","repos_url":"https://api.github.com/users/hyvas/repos","events_url":"https://api.github.com/users/hyvas/events{/privacy}","received_events_url":"https://api.github.com/users/hyvas/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2013-10-20T23:51:04Z","updated_at":"2013-10-21T08:59:40Z","closed_at":"2013-10-21T08:59:40Z","author_association":"NONE","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/853","html_url":"https://github.com/libgdx/libgdx/pull/853","diff_url":"https://github.com/libgdx/libgdx/pull/853.diff","patch_url":"https://github.com/libgdx/libgdx/pull/853.patch"},"body":"than zero via setTime() before the first call of act().\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/853/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/852","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/852/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/852/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/852/events","html_url":"https://github.com/libgdx/libgdx/issues/852","id":21283358,"number":852,"title":"translate, rotate Matrix4","user":{"login":"vinin3","id":2162064,"avatar_url":"https://avatars2.githubusercontent.com/u/2162064?v=4","gravatar_id":"","url":"https://api.github.com/users/vinin3","html_url":"https://github.com/vinin3","followers_url":"https://api.github.com/users/vinin3/followers","following_url":"https://api.github.com/users/vinin3/following{/other_user}","gists_url":"https://api.github.com/users/vinin3/gists{/gist_id}","starred_url":"https://api.github.com/users/vinin3/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vinin3/subscriptions","organizations_url":"https://api.github.com/users/vinin3/orgs","repos_url":"https://api.github.com/users/vinin3/repos","events_url":"https://api.github.com/users/vinin3/events{/privacy}","received_events_url":"https://api.github.com/users/vinin3/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2013-10-20T17:05:16Z","updated_at":"2015-07-31T11:16:59Z","closed_at":"2013-10-21T06:54:05Z","author_association":"NONE","body":"Hello, have found the next bug:\ni'm loading model using G3dModelLoader, then creating ModelInstance using nodepart id. my instance.transform matrix has some default rotation. when i'm trying to translate modelinstance it behave in wrong way\n\n```\n                    ModelInstance instance = new ModelInstance(model, id);\n        Node node = instance.getNode(id);\n\n        instance.transform.set(node.globalTransform);\n        node.translation.set(0, 0, 0);\n        node.scale.set(1,1,1);\n        node.rotation.idt();\n        instance.calculateTransforms();\n\n        instance.transform.translate(0, -150, 0);\n```\n\nto behave in right way we need just remove default rotation (cache it), make translation, and then bring rotation back\n\n```\n                    .................\n        instance.calculateTransforms();\n\n        Quaternion rot = instance.transform.getRotation(new Quaternion());\n        instance.transform.setToRotation(0, 0, 0, 0);\n        instance.transform.translate(0, -150, 0);\n        instance.transform.rotate(rot);\n```\n\nthis behavior isn't surprise because matrix multiplication isn't commutative operation. but i think that is better to add some check if the matrix was rotated before to the Matrix4 translate (float x, float y, float z) method and in case it was do the sequence of actions i described above (rotate to zero state, translate, rotate back). not sure that this is really a bug, maybe it should work like it works, please investigate and if it isn't a bug advice please how to behave it such situations without making all the time this sequence of actions (rotate to zero state, translate, rotate back). thanks\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/852/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/851","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/851/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/851/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/851/events","html_url":"https://github.com/libgdx/libgdx/pull/851","id":21282364,"number":851,"title":"Added method to draw triangle with coloured corners","user":{"login":"Darkyenus","id":5280068,"avatar_url":"https://avatars0.githubusercontent.com/u/5280068?v=4","gravatar_id":"","url":"https://api.github.com/users/Darkyenus","html_url":"https://github.com/Darkyenus","followers_url":"https://api.github.com/users/Darkyenus/followers","following_url":"https://api.github.com/users/Darkyenus/following{/other_user}","gists_url":"https://api.github.com/users/Darkyenus/gists{/gist_id}","starred_url":"https://api.github.com/users/Darkyenus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Darkyenus/subscriptions","organizations_url":"https://api.github.com/users/Darkyenus/orgs","repos_url":"https://api.github.com/users/Darkyenus/repos","events_url":"https://api.github.com/users/Darkyenus/events{/privacy}","received_events_url":"https://api.github.com/users/Darkyenus/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2013-10-20T16:04:39Z","updated_at":"2014-06-20T12:10:09Z","closed_at":"2013-10-23T17:49:19Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/851","html_url":"https://github.com/libgdx/libgdx/pull/851","diff_url":"https://github.com/libgdx/libgdx/pull/851.diff","patch_url":"https://github.com/libgdx/libgdx/pull/851.patch"},"body":"Also wrote exhaustive documentation for it and for the original triangle method. (Not tested, but should by common sense work.)\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/851/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/850","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/850/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/850/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/850/events","html_url":"https://github.com/libgdx/libgdx/pull/850","id":21281087,"number":850,"title":"Added new bullet test: ConvexHullDistanceTest","user":{"login":"didum","id":5704525,"avatar_url":"https://avatars2.githubusercontent.com/u/5704525?v=4","gravatar_id":"","url":"https://api.github.com/users/didum","html_url":"https://github.com/didum","followers_url":"https://api.github.com/users/didum/followers","following_url":"https://api.github.com/users/didum/following{/other_user}","gists_url":"https://api.github.com/users/didum/gists{/gist_id}","starred_url":"https://api.github.com/users/didum/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/didum/subscriptions","organizations_url":"https://api.github.com/users/didum/orgs","repos_url":"https://api.github.com/users/didum/repos","events_url":"https://api.github.com/users/didum/events{/privacy}","received_events_url":"https://api.github.com/users/didum/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2013-10-20T14:51:01Z","updated_at":"2013-10-23T17:49:05Z","closed_at":"2013-10-23T17:49:05Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/850","html_url":"https://github.com/libgdx/libgdx/pull/850","diff_url":"https://github.com/libgdx/libgdx/pull/850.diff","patch_url":"https://github.com/libgdx/libgdx/pull/850.patch"},"body":"Calculates the distance between convex collision shapes and draws a line between the clostest points (distance <= 100f)\n\nFor longer ranger set a higher value with: gdxBullet.setGContactBreakingThreshold(float f)\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/850/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/849","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/849/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/849/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/849/events","html_url":"https://github.com/libgdx/libgdx/pull/849","id":21275018,"number":849,"title":"fixed Sprite.set(Sprite) so that it now also copies regionWidth and regionHeight","user":{"login":"josephknight","id":121225,"avatar_url":"https://avatars3.githubusercontent.com/u/121225?v=4","gravatar_id":"","url":"https://api.github.com/users/josephknight","html_url":"https://github.com/josephknight","followers_url":"https://api.github.com/users/josephknight/followers","following_url":"https://api.github.com/users/josephknight/following{/other_user}","gists_url":"https://api.github.com/users/josephknight/gists{/gist_id}","starred_url":"https://api.github.com/users/josephknight/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/josephknight/subscriptions","organizations_url":"https://api.github.com/users/josephknight/orgs","repos_url":"https://api.github.com/users/josephknight/repos","events_url":"https://api.github.com/users/josephknight/events{/privacy}","received_events_url":"https://api.github.com/users/josephknight/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2013-10-20T06:59:26Z","updated_at":"2014-06-20T12:11:13Z","closed_at":"2013-10-20T13:39:03Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/849","html_url":"https://github.com/libgdx/libgdx/pull/849","diff_url":"https://github.com/libgdx/libgdx/pull/849.diff","patch_url":"https://github.com/libgdx/libgdx/pull/849.patch"},"body":"If the method's documentation declares that it will:\n\n``` java\n    /** Make this sprite a copy in every way of the specified sprite */\n```\n\n…then the critical fields regionWidth and regionHeight should also be\ncopied from the incoming sprite. Their absence makes Sprite's copy\nconstructor (which uses set) produce buggy, zero-width, zero-height\ntextures that are invisible when rendered.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/849/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/848","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/848/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/848/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/848/events","html_url":"https://github.com/libgdx/libgdx/pull/848","id":21271076,"number":848,"title":"Added Accelerometer Input Processor for android","user":{"login":"sadaf2605","id":2094165,"avatar_url":"https://avatars2.githubusercontent.com/u/2094165?v=4","gravatar_id":"","url":"https://api.github.com/users/sadaf2605","html_url":"https://github.com/sadaf2605","followers_url":"https://api.github.com/users/sadaf2605/followers","following_url":"https://api.github.com/users/sadaf2605/following{/other_user}","gists_url":"https://api.github.com/users/sadaf2605/gists{/gist_id}","starred_url":"https://api.github.com/users/sadaf2605/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sadaf2605/subscriptions","organizations_url":"https://api.github.com/users/sadaf2605/orgs","repos_url":"https://api.github.com/users/sadaf2605/repos","events_url":"https://api.github.com/users/sadaf2605/events{/privacy}","received_events_url":"https://api.github.com/users/sadaf2605/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2013-10-19T23:56:01Z","updated_at":"2014-08-01T04:14:47Z","closed_at":"2013-10-20T14:20:59Z","author_association":"NONE","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/848","html_url":"https://github.com/libgdx/libgdx/pull/848","diff_url":"https://github.com/libgdx/libgdx/pull/848.diff","patch_url":"https://github.com/libgdx/libgdx/pull/848.patch"},"body":"Hello,\nInputProcessor abstract class does not provide methods that get triggered when the accelerometer value changes so I have figured out it difficult to work with libgdx when I need to use accelerometer. So I have added feature like InputProcessor abstract class for Accelerometer. I have added a new abstract class that extends InputProcessor so that it does not cause conflict with existing demos and games. \n\nI have created a working demo using this: https://github.com/sadaf2605/Libgdx_AccelerometerInputProcessor_Test_Android_App\n\nThis is the first time I am trying to contribute on a big cool opensource project what I always wanted to do. So at least please let me know your feedback!\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/848/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/847","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/847/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/847/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/847/events","html_url":"https://github.com/libgdx/libgdx/issues/847","id":21268557,"number":847,"title":"Sprite copy constructor fails to duplicate regionWidth and regionHeight","user":{"login":"josephknight","id":121225,"avatar_url":"https://avatars3.githubusercontent.com/u/121225?v=4","gravatar_id":"","url":"https://api.github.com/users/josephknight","html_url":"https://github.com/josephknight","followers_url":"https://api.github.com/users/josephknight/followers","following_url":"https://api.github.com/users/josephknight/following{/other_user}","gists_url":"https://api.github.com/users/josephknight/gists{/gist_id}","starred_url":"https://api.github.com/users/josephknight/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/josephknight/subscriptions","organizations_url":"https://api.github.com/users/josephknight/orgs","repos_url":"https://api.github.com/users/josephknight/repos","events_url":"https://api.github.com/users/josephknight/events{/privacy}","received_events_url":"https://api.github.com/users/josephknight/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2013-10-19T20:35:53Z","updated_at":"2013-10-23T06:50:08Z","closed_at":"2013-10-23T06:50:08Z","author_association":"CONTRIBUTOR","body":"This documentation is wrong and the method set(Sprite) needs to be changed:\n\n```\n/** Creates a sprite that is a copy in every way of the specified sprite. */\npublic Sprite (Sprite sprite) {\n    set(sprite);\n}\n```\n\n...because set fails to copy the regionWidth and regionHeight from the passed-in Sprite.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/847/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/846","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/846/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/846/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/846/events","html_url":"https://github.com/libgdx/libgdx/issues/846","id":21267273,"number":846,"title":"Quaternion.transform(Vector3) is not thread safe","user":{"login":"theagentd","id":1215113,"avatar_url":"https://avatars0.githubusercontent.com/u/1215113?v=4","gravatar_id":"","url":"https://api.github.com/users/theagentd","html_url":"https://github.com/theagentd","followers_url":"https://api.github.com/users/theagentd/followers","following_url":"https://api.github.com/users/theagentd/following{/other_user}","gists_url":"https://api.github.com/users/theagentd/gists{/gist_id}","starred_url":"https://api.github.com/users/theagentd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/theagentd/subscriptions","organizations_url":"https://api.github.com/users/theagentd/orgs","repos_url":"https://api.github.com/users/theagentd/repos","events_url":"https://api.github.com/users/theagentd/events{/privacy}","received_events_url":"https://api.github.com/users/theagentd/received_events","type":"User","site_admin":false},"labels":[{"id":11336982,"url":"https://api.github.com/repos/libgdx/libgdx/labels/enhancement","name":"enhancement","color":"84b6eb","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":12,"created_at":"2013-10-19T19:11:49Z","updated_at":"2014-03-19T00:07:39Z","closed_at":"2014-03-19T00:06:36Z","author_association":"NONE","body":"Quaternion.transform(Vector3) is not thread safe since it uses two static variables, tmp1 and tmp2:\n\n```\nprivate static Quaternion tmp1 = new Quaternion(0, 0, 0, 0);\nprivate static Quaternion tmp2 = new Quaternion(0, 0, 0, 0);\n\npublic Vector3 transform (Vector3 v) {\n    tmp2.set(this);\n    tmp2.conjugate();\n    tmp2.mulLeft(tmp1.set(v.x, v.y, v.z, 0)).mulLeft(this);\n\n    v.x = tmp2.x;\n    v.y = tmp2.y;\n    v.z = tmp2.z;\n    return v;\n}\n```\n\nThis is very bad practice and I discovered this issue the hard way (\"Why are my skeleton animated objects twitching like hell?!\"). A fix would be to \"hard code\" the procedure, which I also believe is slightly faster. The solution I'm using right now can be found here:\n\nhttp://pastie.org/8414910\n\nIt may need some very light reworking to fit the style of LibGDX.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/846/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/845","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/845/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/845/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/845/events","html_url":"https://github.com/libgdx/libgdx/pull/845","id":21245921,"number":845,"title":"Fix for generating jni interface for native function with a Object[].","user":{"login":"Robbiedobbie","id":4340484,"avatar_url":"https://avatars0.githubusercontent.com/u/4340484?v=4","gravatar_id":"","url":"https://api.github.com/users/Robbiedobbie","html_url":"https://github.com/Robbiedobbie","followers_url":"https://api.github.com/users/Robbiedobbie/followers","following_url":"https://api.github.com/users/Robbiedobbie/following{/other_user}","gists_url":"https://api.github.com/users/Robbiedobbie/gists{/gist_id}","starred_url":"https://api.github.com/users/Robbiedobbie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Robbiedobbie/subscriptions","organizations_url":"https://api.github.com/users/Robbiedobbie/orgs","repos_url":"https://api.github.com/users/Robbiedobbie/repos","events_url":"https://api.github.com/users/Robbiedobbie/events{/privacy}","received_events_url":"https://api.github.com/users/Robbiedobbie/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2013-10-18T21:23:15Z","updated_at":"2014-07-20T11:52:01Z","closed_at":"2013-10-23T17:50:11Z","author_association":"MEMBER","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/845","html_url":"https://github.com/libgdx/libgdx/pull/845","diff_url":"https://github.com/libgdx/libgdx/pull/845.diff","patch_url":"https://github.com/libgdx/libgdx/pull/845.patch"},"body":"Recently I reported a bug where the jnigen code generator would crash when a native function with an Object[] as parameter was included in the file. Since I had no reaction, and needed it fixed, I did it myself. \n\nIt is a single line fix. The reason why instead of throwing an exception, the ObjectArray type can be returned, is as follows: The piece of code checks whether an array parameter has more than one dimension, and selects a ObjectArray as type. This is obviously the right choice, since arrays are objects in java. If it has one dimension, it will check for primitive type arrays. If it does not find one, it would throw this exception. However, if it is not a primitive type, this means, it is an object, just as when it contains an array in the array. Therefore, the exception is unnecessary and the ObjectType can be returned instead ;)\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/845/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/844","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/844/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/844/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/844/events","html_url":"https://github.com/libgdx/libgdx/pull/844","id":21235485,"number":844,"title":"Update ScrollPane.java","user":{"login":"Ivan4j","id":5720487,"avatar_url":"https://avatars0.githubusercontent.com/u/5720487?v=4","gravatar_id":"","url":"https://api.github.com/users/Ivan4j","html_url":"https://github.com/Ivan4j","followers_url":"https://api.github.com/users/Ivan4j/followers","following_url":"https://api.github.com/users/Ivan4j/following{/other_user}","gists_url":"https://api.github.com/users/Ivan4j/gists{/gist_id}","starred_url":"https://api.github.com/users/Ivan4j/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Ivan4j/subscriptions","organizations_url":"https://api.github.com/users/Ivan4j/orgs","repos_url":"https://api.github.com/users/Ivan4j/repos","events_url":"https://api.github.com/users/Ivan4j/events{/privacy}","received_events_url":"https://api.github.com/users/Ivan4j/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2013-10-18T18:10:51Z","updated_at":"2013-10-18T23:39:19Z","closed_at":"2013-10-18T23:39:19Z","author_association":"NONE","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/844","html_url":"https://github.com/libgdx/libgdx/pull/844","diff_url":"https://github.com/libgdx/libgdx/pull/844.diff","patch_url":"https://github.com/libgdx/libgdx/pull/844.patch"},"body":"Null validation, line 102 \nif (widget != null) setWidget(widget);\n\nIf widget is null, UnsupportedOperationException is thrown.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/844/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/843","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/843/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/843/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/843/events","html_url":"https://github.com/libgdx/libgdx/issues/843","id":21235241,"number":843,"title":"ScrollPane: validation when widget is null","user":{"login":"Ivan4j","id":5720487,"avatar_url":"https://avatars0.githubusercontent.com/u/5720487?v=4","gravatar_id":"","url":"https://api.github.com/users/Ivan4j","html_url":"https://github.com/Ivan4j","followers_url":"https://api.github.com/users/Ivan4j/followers","following_url":"https://api.github.com/users/Ivan4j/following{/other_user}","gists_url":"https://api.github.com/users/Ivan4j/gists{/gist_id}","starred_url":"https://api.github.com/users/Ivan4j/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Ivan4j/subscriptions","organizations_url":"https://api.github.com/users/Ivan4j/orgs","repos_url":"https://api.github.com/users/Ivan4j/repos","events_url":"https://api.github.com/users/Ivan4j/events{/privacy}","received_events_url":"https://api.github.com/users/Ivan4j/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2013-10-18T18:06:46Z","updated_at":"2013-10-18T23:36:20Z","closed_at":"2013-10-18T23:36:20Z","author_association":"NONE","body":"You should add an If validation (again) when a ScrollPane is created with null param.because UnsupportedOperationException is thrown.\n\n//constructor\npublic ScrollPane (Actor widget, ScrollPaneStyle style) {\n    if (style == null) throw new IllegalArgumentException(\"style cannot be null.\");\n    this.style = style;\n    if (widget != null) setWidget(widget); // < --- VALIDATION should be added.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/843/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/842","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/842/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/842/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/842/events","html_url":"https://github.com/libgdx/libgdx/pull/842","id":21222646,"number":842,"title":"Possible fix for ParticleEffect shows unmodified sprite on the first run","user":{"login":"hneuer","id":1545118,"avatar_url":"https://avatars3.githubusercontent.com/u/1545118?v=4","gravatar_id":"","url":"https://api.github.com/users/hneuer","html_url":"https://github.com/hneuer","followers_url":"https://api.github.com/users/hneuer/followers","following_url":"https://api.github.com/users/hneuer/following{/other_user}","gists_url":"https://api.github.com/users/hneuer/gists{/gist_id}","starred_url":"https://api.github.com/users/hneuer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hneuer/subscriptions","organizations_url":"https://api.github.com/users/hneuer/orgs","repos_url":"https://api.github.com/users/hneuer/repos","events_url":"https://api.github.com/users/hneuer/events{/privacy}","received_events_url":"https://api.github.com/users/hneuer/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2013-10-18T14:32:59Z","updated_at":"2013-10-19T13:23:52Z","closed_at":"2013-10-19T08:19:41Z","author_association":"OWNER","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/842","html_url":"https://github.com/libgdx/libgdx/pull/842","diff_url":"https://github.com/libgdx/libgdx/pull/842.diff","patch_url":"https://github.com/libgdx/libgdx/pull/842.patch"},"body":"This is a possible fix for Issue #835\n\nThe problem seems to be that in ParticleEmitter#update the updateParticle method is called first for all active particles. Then new particles are emitted after that. Those new particle's update method has never been called when they are drawn the first time resulting in the Sprite being drawn as-is.\n\nIn this PR I moved the updateParticle calls to the end of the method and tried to keep the logic of the continuous /allowCompletion/emission the same.\n\nAlso removed an unnecessary variable in the draw method.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/842/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/841","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/841/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/841/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/841/events","html_url":"https://github.com/libgdx/libgdx/issues/841","id":21209493,"number":841,"title":"BitmapFontLoader can not set Texture useMipMaps = true;","user":{"login":"lefay1982","id":5716884,"avatar_url":"https://avatars2.githubusercontent.com/u/5716884?v=4","gravatar_id":"","url":"https://api.github.com/users/lefay1982","html_url":"https://github.com/lefay1982","followers_url":"https://api.github.com/users/lefay1982/followers","following_url":"https://api.github.com/users/lefay1982/following{/other_user}","gists_url":"https://api.github.com/users/lefay1982/gists{/gist_id}","starred_url":"https://api.github.com/users/lefay1982/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lefay1982/subscriptions","organizations_url":"https://api.github.com/users/lefay1982/orgs","repos_url":"https://api.github.com/users/lefay1982/repos","events_url":"https://api.github.com/users/lefay1982/events{/privacy}","received_events_url":"https://api.github.com/users/lefay1982/received_events","type":"User","site_admin":false},"labels":[{"id":11336982,"url":"https://api.github.com/repos/libgdx/libgdx/labels/enhancement","name":"enhancement","color":"84b6eb","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2013-10-18T09:43:01Z","updated_at":"2014-02-12T15:13:45Z","closed_at":"2014-02-12T15:13:45Z","author_association":"CONTRIBUTOR","body":"TextureParameter has genMipMaps Property \nwhen i use AssetManager load a BitmapFont like this: \n\nBitmapFontParameter bmFontParam = new BitmapFontParameter();\n        bmFontParam.minFitler = TextureFilter.MipMapLinearNearest;\n        bmFontParam.maxFilter = TextureFilter.Linear;\n\ngame.manager.load(\"data/font/hei16.fnt\", BitmapFont.class, bmFontParam);\n\nbut the new BitmapFont object's Texture's useMipMaps can not set it's value to true.\n\nbecause set code is:\n\nTextureRegion region = new TextureRegion(manager.get(data.getImagePath(), Texture.class));\n\nif (parameter != null) region.getTexture().setFilter(parameter.minFitler, parameter.maxFilter);\n\nregion.getTexture() this Texture object's constructor can not set argument useMipMaps = true,  so  the Texture's filter set available.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/841/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/840","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/840/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/840/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/840/events","html_url":"https://github.com/libgdx/libgdx/issues/840","id":21207899,"number":840,"title":"FreeTypeFontGenerator.generateData  can not set Texture useMipMaps","user":{"login":"lefay1982","id":5716884,"avatar_url":"https://avatars2.githubusercontent.com/u/5716884?v=4","gravatar_id":"","url":"https://api.github.com/users/lefay1982","html_url":"https://github.com/lefay1982","followers_url":"https://api.github.com/users/lefay1982/followers","following_url":"https://api.github.com/users/lefay1982/following{/other_user}","gists_url":"https://api.github.com/users/lefay1982/gists{/gist_id}","starred_url":"https://api.github.com/users/lefay1982/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lefay1982/subscriptions","organizations_url":"https://api.github.com/users/lefay1982/orgs","repos_url":"https://api.github.com/users/lefay1982/repos","events_url":"https://api.github.com/users/lefay1982/events{/privacy}","received_events_url":"https://api.github.com/users/lefay1982/received_events","type":"User","site_admin":false},"labels":[{"id":11336982,"url":"https://api.github.com/repos/libgdx/libgdx/labels/enhancement","name":"enhancement","color":"84b6eb","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2013-10-18T09:07:43Z","updated_at":"2014-02-15T03:25:28Z","closed_at":"2014-02-14T20:00:53Z","author_association":"CONTRIBUTOR","body":"Texture tex = new Texture(p.getPixmap(), p.getPixmap().getFormat(), false);\ntex.setFilter(TextureFilter.Nearest, TextureFilter.Nearest);\n\nI want to do below: \n\nTexture tex = new Texture(p.getPixmap(), p.getPixmap().getFormat(), true);\ntex.setFilter(TextureFilter.MipMapLinearNearest, TextureFilter.Linear);\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/840/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/839","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/839/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/839/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/839/events","html_url":"https://github.com/libgdx/libgdx/issues/839","id":21185962,"number":839,"title":"dialog fade out hides other elements","user":{"login":"eliromm","id":5713247,"avatar_url":"https://avatars3.githubusercontent.com/u/5713247?v=4","gravatar_id":"","url":"https://api.github.com/users/eliromm","html_url":"https://github.com/eliromm","followers_url":"https://api.github.com/users/eliromm/followers","following_url":"https://api.github.com/users/eliromm/following{/other_user}","gists_url":"https://api.github.com/users/eliromm/gists{/gist_id}","starred_url":"https://api.github.com/users/eliromm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eliromm/subscriptions","organizations_url":"https://api.github.com/users/eliromm/orgs","repos_url":"https://api.github.com/users/eliromm/repos","events_url":"https://api.github.com/users/eliromm/events{/privacy}","received_events_url":"https://api.github.com/users/eliromm/received_events","type":"User","site_admin":false},"labels":[{"id":11336985,"url":"https://api.github.com/repos/libgdx/libgdx/labels/wontfix","name":"wontfix","color":"ffffff","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2013-10-17T21:15:03Z","updated_at":"2014-08-31T22:15:43Z","closed_at":"2013-10-17T22:50:09Z","author_association":"NONE","body":"I have a simple scene2d table layout with some cells having both a texture (generated from a pixmap using fillCircle) and some text.\n\nif i show a dialog and close it by pressing one of its buttons the dialog fades out and the textures in the table behind the dialog also fade out, with no reason. the text doesnt get affected.\n\nif, however, i set the Dialog.fadeDuration to 0 then the dialog disappears without affecting the textures.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/839/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/838","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/838/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/838/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/838/events","html_url":"https://github.com/libgdx/libgdx/issues/838","id":21145736,"number":838,"title":"GWT ArrayReflection bug in getting array element","user":{"login":"sridharsundaram","id":200954,"avatar_url":"https://avatars2.githubusercontent.com/u/200954?v=4","gravatar_id":"","url":"https://api.github.com/users/sridharsundaram","html_url":"https://github.com/sridharsundaram","followers_url":"https://api.github.com/users/sridharsundaram/followers","following_url":"https://api.github.com/users/sridharsundaram/following{/other_user}","gists_url":"https://api.github.com/users/sridharsundaram/gists{/gist_id}","starred_url":"https://api.github.com/users/sridharsundaram/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sridharsundaram/subscriptions","organizations_url":"https://api.github.com/users/sridharsundaram/orgs","repos_url":"https://api.github.com/users/sridharsundaram/repos","events_url":"https://api.github.com/users/sridharsundaram/events{/privacy}","received_events_url":"https://api.github.com/users/sridharsundaram/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2013-10-17T11:03:39Z","updated_at":"2013-10-17T13:27:22Z","closed_at":"2013-10-17T13:27:22Z","author_association":"CONTRIBUTOR","body":"There is a bug in retrieving array elements in GWT array reflection code.\nCurrent code looks like this - \n\n```\npackage com.badlogic.gdx.utils.reflect;\npublic final class ArrayReflection {\n...\n    /** Returns the value of the indexed component in the supplied array. */\n    static public Object get (Object array, int index) {\n        ReflectionCache.instance.getArrayElement(ReflectionCache.getType(array.getClass()), array, index);\n        return array;\n    }\n...\n```\n\nReturning the array itself is a bug. It should be \n\n```\npackage com.badlogic.gdx.utils.reflect;\npublic final class ArrayReflection {\n...\n    /** Returns the value of the indexed component in the supplied array. */\n    static public Object get (Object array, int index) {\n        return ReflectionCache.instance.getArrayElement(ReflectionCache.getType(array.getClass()), array, index);\n    }\n...\n```\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/838/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/837","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/837/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/837/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/837/events","html_url":"https://github.com/libgdx/libgdx/issues/837","id":21120512,"number":837,"title":"Convex hull distance","user":{"login":"didum","id":5704525,"avatar_url":"https://avatars2.githubusercontent.com/u/5704525?v=4","gravatar_id":"","url":"https://api.github.com/users/didum","html_url":"https://github.com/didum","followers_url":"https://api.github.com/users/didum/followers","following_url":"https://api.github.com/users/didum/following{/other_user}","gists_url":"https://api.github.com/users/didum/gists{/gist_id}","starred_url":"https://api.github.com/users/didum/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/didum/subscriptions","organizations_url":"https://api.github.com/users/didum/orgs","repos_url":"https://api.github.com/users/didum/repos","events_url":"https://api.github.com/users/didum/events{/privacy}","received_events_url":"https://api.github.com/users/didum/received_events","type":"User","site_admin":false},"labels":[{"id":11336982,"url":"https://api.github.com/repos/libgdx/libgdx/labels/enhancement","name":"enhancement","color":"84b6eb","default":true}],"state":"closed","locked":false,"assignee":{"login":"xoppa","id":2349087,"avatar_url":"https://avatars3.githubusercontent.com/u/2349087?v=4","gravatar_id":"","url":"https://api.github.com/users/xoppa","html_url":"https://github.com/xoppa","followers_url":"https://api.github.com/users/xoppa/followers","following_url":"https://api.github.com/users/xoppa/following{/other_user}","gists_url":"https://api.github.com/users/xoppa/gists{/gist_id}","starred_url":"https://api.github.com/users/xoppa/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xoppa/subscriptions","organizations_url":"https://api.github.com/users/xoppa/orgs","repos_url":"https://api.github.com/users/xoppa/repos","events_url":"https://api.github.com/users/xoppa/events{/privacy}","received_events_url":"https://api.github.com/users/xoppa/received_events","type":"User","site_admin":false},"assignees":[{"login":"xoppa","id":2349087,"avatar_url":"https://avatars3.githubusercontent.com/u/2349087?v=4","gravatar_id":"","url":"https://api.github.com/users/xoppa","html_url":"https://github.com/xoppa","followers_url":"https://api.github.com/users/xoppa/followers","following_url":"https://api.github.com/users/xoppa/following{/other_user}","gists_url":"https://api.github.com/users/xoppa/gists{/gist_id}","starred_url":"https://api.github.com/users/xoppa/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xoppa/subscriptions","organizations_url":"https://api.github.com/users/xoppa/orgs","repos_url":"https://api.github.com/users/xoppa/repos","events_url":"https://api.github.com/users/xoppa/events{/privacy}","received_events_url":"https://api.github.com/users/xoppa/received_events","type":"User","site_admin":false}],"milestone":null,"comments":2,"created_at":"2013-10-16T23:14:27Z","updated_at":"2013-10-24T22:20:04Z","closed_at":"2013-10-23T21:28:09Z","author_association":"CONTRIBUTOR","body":"Tried to calculate the distance with the implemented GJK in Bullet Physics. But there are two Problem: \n1. I can't put the btVoronoiSimplexSolver as SWIGTYPE_p_btSimplexSolverInterface.\n   (typdef should solve this)\n2. btPointCollector doesn't extend the btDiscreteCollisionDetectorInterface::Result.\n   (http://bulletphysics.org/Bullet/BulletFull/structbtPointCollector.html)\n\nCode should look like this (couldn't test):\n\n```\n    public float calculateDistance() {\n        btVoronoiSimplexSolver solverV = new btVoronoiSimplexSolver();\n        btSimplexSolverInterface solver = new btSimplexSolverInterface(solverV);\n        btConvexPenetrationDepthSolver epa = new btGjkEpaPenetrationDepthSolver();\n        Vector3 sepAxes = new Vector3(0f, 0.059727669f, 0.29259586f);\n\n        btConvexShape closestShape1 = new btBoxShape(new Vector3(1, 1, 1));\n        btConvexShape closestShape2 = new btBoxShape(new Vector3(1, 1, 1));\n\n        btGjkPairDetector pairD = new btGjkPairDetector(closestShape1, closestShape2, solver, epa);\n        pairD.setCachedSeperatingAxis(new Vector3(0.00000000f,0.059727669f,0.29259586f));\n        btPointCollector output = new btPointCollector();\n        ClosestPointInput input = new ClosestPointInput();\n        btIDebugDraw debugDraw = new btIDebugDraw();\n        debugDraw.setDebugMode(0);\n\n        input.setTransformA(new btTransform());\n        btTransform t = new btTransform();\n        t.setOrigin(new btVector3(4, 4, 4));\n        input.setTransformB(t);\n\n        pairD.getClosestPoints(input, output, debugDraw);\n\n        if(output.getHasResult()) {\n            return output.getDistance();\n        }\n        return -1000;\n    }\n\n       public class btSimplexSolverInterface extends\n            SWIGTYPE_p_btSimplexSolverInterface {\n        btVoronoiSimplexSolver solver;\n\n        public btSimplexSolverInterface(btVoronoiSimplexSolver solver) {\n            super(btVoronoiSimplexSolver.getCPtr(solver), false);\n            this.solver = solver;\n        }\n\n\n        public void dispose() {\n            if (solver != null)\n                solver.dispose();\n            solver = null;\n        }\n    }\n\n```\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/837/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/836","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/836/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/836/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/836/events","html_url":"https://github.com/libgdx/libgdx/issues/836","id":21117171,"number":836,"title":"Filtering Collisions Using a Broadphase Filter Callback","user":{"login":"didum","id":5704525,"avatar_url":"https://avatars2.githubusercontent.com/u/5704525?v=4","gravatar_id":"","url":"https://api.github.com/users/didum","html_url":"https://github.com/didum","followers_url":"https://api.github.com/users/didum/followers","following_url":"https://api.github.com/users/didum/following{/other_user}","gists_url":"https://api.github.com/users/didum/gists{/gist_id}","starred_url":"https://api.github.com/users/didum/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/didum/subscriptions","organizations_url":"https://api.github.com/users/didum/orgs","repos_url":"https://api.github.com/users/didum/repos","events_url":"https://api.github.com/users/didum/events{/privacy}","received_events_url":"https://api.github.com/users/didum/received_events","type":"User","site_admin":false},"labels":[{"id":11336982,"url":"https://api.github.com/repos/libgdx/libgdx/labels/enhancement","name":"enhancement","color":"84b6eb","default":true}],"state":"closed","locked":false,"assignee":{"login":"xoppa","id":2349087,"avatar_url":"https://avatars3.githubusercontent.com/u/2349087?v=4","gravatar_id":"","url":"https://api.github.com/users/xoppa","html_url":"https://github.com/xoppa","followers_url":"https://api.github.com/users/xoppa/followers","following_url":"https://api.github.com/users/xoppa/following{/other_user}","gists_url":"https://api.github.com/users/xoppa/gists{/gist_id}","starred_url":"https://api.github.com/users/xoppa/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xoppa/subscriptions","organizations_url":"https://api.github.com/users/xoppa/orgs","repos_url":"https://api.github.com/users/xoppa/repos","events_url":"https://api.github.com/users/xoppa/events{/privacy}","received_events_url":"https://api.github.com/users/xoppa/received_events","type":"User","site_admin":false},"assignees":[{"login":"xoppa","id":2349087,"avatar_url":"https://avatars3.githubusercontent.com/u/2349087?v=4","gravatar_id":"","url":"https://api.github.com/users/xoppa","html_url":"https://github.com/xoppa","followers_url":"https://api.github.com/users/xoppa/followers","following_url":"https://api.github.com/users/xoppa/following{/other_user}","gists_url":"https://api.github.com/users/xoppa/gists{/gist_id}","starred_url":"https://api.github.com/users/xoppa/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xoppa/subscriptions","organizations_url":"https://api.github.com/users/xoppa/orgs","repos_url":"https://api.github.com/users/xoppa/repos","events_url":"https://api.github.com/users/xoppa/events{/privacy}","received_events_url":"https://api.github.com/users/xoppa/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2013-10-16T23:02:19Z","updated_at":"2013-10-24T22:20:15Z","closed_at":"2013-10-24T22:20:15Z","author_association":"CONTRIBUTOR","body":"Adding btOverlapFilterCallback as a callback interface would be good. \nThis callback is called at a very early stage in the collision pipeline, and prevents collision pairs from being generated. \n\nExplained here: http://bulletphysics.org/mediawiki-1.5.8/index.php/Collision_Filtering\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/836/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/835","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/835/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/835/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/835/events","html_url":"https://github.com/libgdx/libgdx/issues/835","id":21022084,"number":835,"title":"ParticleEffect shows unmodified sprite on the first run","user":{"login":"hneuer","id":1545118,"avatar_url":"https://avatars3.githubusercontent.com/u/1545118?v=4","gravatar_id":"","url":"https://api.github.com/users/hneuer","html_url":"https://github.com/hneuer","followers_url":"https://api.github.com/users/hneuer/followers","following_url":"https://api.github.com/users/hneuer/following{/other_user}","gists_url":"https://api.github.com/users/hneuer/gists{/gist_id}","starred_url":"https://api.github.com/users/hneuer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hneuer/subscriptions","organizations_url":"https://api.github.com/users/hneuer/orgs","repos_url":"https://api.github.com/users/hneuer/repos","events_url":"https://api.github.com/users/hneuer/events{/privacy}","received_events_url":"https://api.github.com/users/hneuer/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2013-10-15T15:04:31Z","updated_at":"2013-10-19T13:23:52Z","closed_at":"2013-10-19T13:23:52Z","author_association":"OWNER","body":"When I start the particle from the the test below the particle will be shown in its unmodified look, i.e. without the RED tint color for a few update cycles. \n\n![image](https://f.cloud.github.com/assets/1545118/1334554/a45edd3c-35aa-11e3-834d-ce412ae59808.png)\n\nThis only happens when the effect is started, subsequent draws of the continuous effect are fine.\n\n```\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.StringReader;\n\nimport com.badlogic.gdx.ApplicationAdapter;\nimport com.badlogic.gdx.Gdx;\nimport com.badlogic.gdx.backends.lwjgl.LwjglApplication;\nimport com.badlogic.gdx.graphics.Color;\nimport com.badlogic.gdx.graphics.GL10;\nimport com.badlogic.gdx.graphics.Pixmap;\nimport com.badlogic.gdx.graphics.Pixmap.Format;\nimport com.badlogic.gdx.graphics.Texture;\nimport com.badlogic.gdx.graphics.g2d.ParticleEffect;\nimport com.badlogic.gdx.graphics.g2d.ParticleEmitter;\nimport com.badlogic.gdx.graphics.g2d.SpriteBatch;\nimport com.badlogic.gdx.graphics.g2d.TextureAtlas;\n\npublic class Test extends ApplicationAdapter {\n    ParticleEffect pe;\n    SpriteBatch batch;\n\n    @Override\n    public void create () {\n        try {\n            pe = new ParticleEffect();\n\n            BufferedReader reader = new BufferedReader(new StringReader(effectFile));\n            ParticleEmitter emitter = new ParticleEmitter(reader);\n            pe.getEmitters().add(emitter);\n            reader.readLine();\n            emitter.setImagePath(reader.readLine());\n            pe.loadEmitterImages(createDrawable(Color.WHITE));\n            pe.setPosition(100, 100);\n            batch = new SpriteBatch();\n        } catch (IOException e) {\n        }\n    }\n\n    TextureAtlas createDrawable (Color c) {\n        Pixmap p = new Pixmap(4, 4, Format.RGBA8888);\n        p.setColor(c);\n        p.drawPixel(1, 1);\n        TextureAtlas atlas = new TextureAtlas();\n        atlas.addRegion(\"particle\", new Texture(p), 1, 1, 1, 1);\n        return atlas;\n    }\n\n    @Override\n    public void render () {\n        Gdx.gl.glClear(GL10.GL_COLOR_BUFFER_BIT);\n        Gdx.gl.glClearColor(0, 0, 0, 1);\n        batch.begin();\n        pe.update(Gdx.graphics.getDeltaTime());\n        pe.draw(batch);\n        batch.end();\n    }\n\n    public static void main (String[] args) {\n        new LwjglApplication(new Test());\n    }\n\n    String effectFile = \"coins\\r\\n\" + \"- Delay -\\r\\n\" + \"active: false\\r\\n\" + \"- Duration - \\r\\n\" + \"lowMin: 1000.0\\r\\n\"\n        + \"lowMax: 1000.0\\r\\n\" + \"- Count - \\r\\n\" + \"min: 1\\r\\n\" + \"max: 1\\r\\n\" + \"- Emission - \\r\\n\" + \"lowMin: 10.0\\r\\n\"\n        + \"lowMax: 10.0\\r\\n\" + \"highMin: 10.0\\r\\n\" + \"highMax: 10.0\\r\\n\" + \"relative: false\\r\\n\" + \"scalingCount: 1\\r\\n\"\n        + \"scaling0: 1.0\\r\\n\" + \"timelineCount: 1\\r\\n\" + \"timeline0: 0.0\\r\\n\" + \"- Life - \\r\\n\" + \"lowMin: 0.0\\r\\n\"\n        + \"lowMax: 0.0\\r\\n\" + \"highMin: 1000.0\\r\\n\" + \"highMax: 1000.0\\r\\n\" + \"relative: false\\r\\n\" + \"scalingCount: 3\\r\\n\"\n        + \"scaling0: 1.0\\r\\n\" + \"scaling1: 1.0\\r\\n\" + \"scaling2: 1.0\\r\\n\" + \"timelineCount: 3\\r\\n\" + \"timeline0: 0.0\\r\\n\"\n        + \"timeline1: 0.66\\r\\n\" + \"timeline2: 1.0\\r\\n\" + \"- Life Offset - \\r\\n\" + \"active: false\\r\\n\" + \"- X Offset - \\r\\n\"\n        + \"active: false\\r\\n\" + \"- Y Offset - \\r\\n\" + \"active: false\\r\\n\" + \"- Spawn Shape - \\r\\n\" + \"shape: point\\r\\n\"\n        + \"- Spawn Width - \\r\\n\" + \"lowMin: 0.0\\r\\n\" + \"lowMax: 0.0\\r\\n\" + \"highMin: 0.0\\r\\n\" + \"highMax: 0.0\\r\\n\"\n        + \"relative: false\\r\\n\" + \"scalingCount: 1\\r\\n\" + \"scaling0: 1.0\\r\\n\" + \"timelineCount: 1\\r\\n\" + \"timeline0: 0.0\\r\\n\"\n        + \"- Spawn Height - \\r\\n\" + \"lowMin: 0.0\\r\\n\" + \"lowMax: 0.0\\r\\n\" + \"highMin: 0.0\\r\\n\" + \"highMax: 0.0\\r\\n\"\n        + \"relative: false\\r\\n\" + \"scalingCount: 1\\r\\n\" + \"scaling0: 1.0\\r\\n\" + \"timelineCount: 1\\r\\n\" + \"timeline0: 0.0\\r\\n\"\n        + \"- Scale - \\r\\n\" + \"lowMin: 0.0\\r\\n\" + \"lowMax: 0.0\\r\\n\" + \"highMin: 60.0\\r\\n\" + \"highMax: 80.0\\r\\n\"\n        + \"relative: false\\r\\n\" + \"scalingCount: 3\\r\\n\" + \"scaling0: 0.37254903\\r\\n\" + \"scaling1: 0.74509805\\r\\n\"\n        + \"scaling2: 0.9607843\\r\\n\" + \"timelineCount: 3\\r\\n\" + \"timeline0: 0.0\\r\\n\" + \"timeline1: 0.26712328\\r\\n\"\n        + \"timeline2: 0.93835616\\r\\n\" + \"- Velocity - \\r\\n\" + \"active: true\\r\\n\" + \"lowMin: 0.0\\r\\n\" + \"lowMax: 0.0\\r\\n\"\n        + \"highMin: 200.0\\r\\n\" + \"highMax: 300.0\\r\\n\" + \"relative: false\\r\\n\" + \"scalingCount: 2\\r\\n\" + \"scaling0: 0.33333334\\r\\n\"\n        + \"scaling1: 0.29411766\\r\\n\" + \"timelineCount: 2\\r\\n\" + \"timeline0: 0.0\\r\\n\" + \"timeline1: 0.98630136\\r\\n\"\n        + \"- Angle - \\r\\n\" + \"active: true\\r\\n\" + \"lowMin: 90.0\\r\\n\" + \"lowMax: 90.0\\r\\n\" + \"highMin: 60.0\\r\\n\"\n        + \"highMax: 120.0\\r\\n\" + \"relative: false\\r\\n\" + \"scalingCount: 4\\r\\n\" + \"scaling0: 1.0\\r\\n\" + \"scaling1: 1.0\\r\\n\"\n        + \"scaling2: 0.039215688\\r\\n\" + \"scaling3: 0.0\\r\\n\" + \"timelineCount: 4\\r\\n\" + \"timeline0: 0.0\\r\\n\"\n        + \"timeline1: 0.998\\r\\n\" + \"timeline2: 0.999\\r\\n\" + \"timeline3: 1.0\\r\\n\" + \"- Rotation - \\r\\n\" + \"active: true\\r\\n\"\n        + \"lowMin: 0.0\\r\\n\" + \"lowMax: 0.0\\r\\n\" + \"highMin: 0.0\\r\\n\" + \"highMax: 360.0\\r\\n\" + \"relative: false\\r\\n\"\n        + \"scalingCount: 2\\r\\n\" + \"scaling0: 0.0\\r\\n\" + \"scaling1: 1.0\\r\\n\" + \"timelineCount: 2\\r\\n\" + \"timeline0: 0.0\\r\\n\"\n        + \"timeline1: 1.0\\r\\n\" + \"- Wind - \\r\\n\" + \"active: false\\r\\n\" + \"- Gravity - \\r\\n\" + \"active: false\\r\\n\" + \"- Tint - \\r\\n\"\n        + \"colorsCount: 6\\r\\n\" + \"colors0: 1.0\\r\\n\" + \"colors1: 0.047058824\\r\\n\" + \"colors2: 0.0\\r\\n\" + \"colors3: 1.0\\r\\n\"\n        + \"colors4: 0.03137255\\r\\n\" + \"colors5: 0.007843138\\r\\n\" + \"timelineCount: 2\\r\\n\" + \"timeline0: 0.0\\r\\n\"\n        + \"timeline1: 1.0\\r\\n\" + \"- Transparency - \\r\\n\" + \"lowMin: 0.0\\r\\n\" + \"lowMax: 0.0\\r\\n\" + \"highMin: 1.0\\r\\n\"\n        + \"highMax: 1.0\\r\\n\" + \"relative: false\\r\\n\" + \"scalingCount: 4\\r\\n\" + \"scaling0: 0.10526316\\r\\n\"\n        + \"scaling1: 0.54385966\\r\\n\" + \"scaling2: 0.31578946\\r\\n\" + \"scaling3: 0.0\\r\\n\" + \"timelineCount: 4\\r\\n\"\n        + \"timeline0: 0.0\\r\\n\" + \"timeline1: 0.21917808\\r\\n\" + \"timeline2: 0.75342464\\r\\n\" + \"timeline3: 1.0\\r\\n\"\n        + \"- Options - \\r\\n\" + \"attached: false\\r\\n\" + \"continuous: true\\r\\n\" + \"aligned: false\\r\\n\" + \"additive: false\\r\\n\"\n        + \"behind: false\\r\\n\" + \"- Image Path -\\r\\n\" + \"particle.png\\r\\n\" + \"\";\n}\n```\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/835/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/834","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/834/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/834/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/834/events","html_url":"https://github.com/libgdx/libgdx/pull/834","id":21011078,"number":834,"title":"getLogLevel() in Application interface","user":{"login":"jrenner","id":1393288,"avatar_url":"https://avatars1.githubusercontent.com/u/1393288?v=4","gravatar_id":"","url":"https://api.github.com/users/jrenner","html_url":"https://github.com/jrenner","followers_url":"https://api.github.com/users/jrenner/followers","following_url":"https://api.github.com/users/jrenner/following{/other_user}","gists_url":"https://api.github.com/users/jrenner/gists{/gist_id}","starred_url":"https://api.github.com/users/jrenner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jrenner/subscriptions","organizations_url":"https://api.github.com/users/jrenner/orgs","repos_url":"https://api.github.com/users/jrenner/repos","events_url":"https://api.github.com/users/jrenner/events{/privacy}","received_events_url":"https://api.github.com/users/jrenner/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2013-10-15T11:44:44Z","updated_at":"2014-06-24T16:04:24Z","closed_at":"2013-10-15T11:45:50Z","author_association":"OWNER","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/834","html_url":"https://github.com/libgdx/libgdx/pull/834","diff_url":"https://github.com/libgdx/libgdx/pull/834.diff","patch_url":"https://github.com/libgdx/libgdx/pull/834.patch"},"body":"for #833\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/834/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/833","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/833/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/833/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/833/events","html_url":"https://github.com/libgdx/libgdx/issues/833","id":21003716,"number":833,"title":"Add getLogLevel to Application interface","user":{"login":"locka99","id":598679,"avatar_url":"https://avatars2.githubusercontent.com/u/598679?v=4","gravatar_id":"","url":"https://api.github.com/users/locka99","html_url":"https://github.com/locka99","followers_url":"https://api.github.com/users/locka99/followers","following_url":"https://api.github.com/users/locka99/following{/other_user}","gists_url":"https://api.github.com/users/locka99/gists{/gist_id}","starred_url":"https://api.github.com/users/locka99/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/locka99/subscriptions","organizations_url":"https://api.github.com/users/locka99/orgs","repos_url":"https://api.github.com/users/locka99/repos","events_url":"https://api.github.com/users/locka99/events{/privacy}","received_events_url":"https://api.github.com/users/locka99/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2013-10-15T08:52:11Z","updated_at":"2013-10-15T14:54:07Z","closed_at":"2013-10-15T14:54:07Z","author_association":"NONE","body":"The Application interface has a setLogLevel but no getLogLevel. It would be useful to have this method to be able to enclose expensive debug code inside a test, i.e. \n\nif (Gdx.app.getLogLevel() >= Application.LOG_DEBUG) {\n  // Some expensive debug diagnostics here\n}\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/833/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/832","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/832/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/832/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/832/events","html_url":"https://github.com/libgdx/libgdx/pull/832","id":20986107,"number":832,"title":"Bullet: separate modules","user":{"login":"xoppa","id":2349087,"avatar_url":"https://avatars3.githubusercontent.com/u/2349087?v=4","gravatar_id":"","url":"https://api.github.com/users/xoppa","html_url":"https://github.com/xoppa","followers_url":"https://api.github.com/users/xoppa/followers","following_url":"https://api.github.com/users/xoppa/following{/other_user}","gists_url":"https://api.github.com/users/xoppa/gists{/gist_id}","starred_url":"https://api.github.com/users/xoppa/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xoppa/subscriptions","organizations_url":"https://api.github.com/users/xoppa/orgs","repos_url":"https://api.github.com/users/xoppa/repos","events_url":"https://api.github.com/users/xoppa/events{/privacy}","received_events_url":"https://api.github.com/users/xoppa/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2013-10-14T22:37:36Z","updated_at":"2014-06-21T21:15:14Z","closed_at":"2013-10-23T17:51:44Z","author_association":"OWNER","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/832","html_url":"https://github.com/libgdx/libgdx/pull/832","diff_url":"https://github.com/libgdx/libgdx/pull/832.diff","patch_url":"https://github.com/libgdx/libgdx/pull/832.patch"},"body":"You probably don't want to look at the changes, it's huge. Instead you can look at the individual commits.\n\nSorry for breaking stuff (again). The main change to the API is that the classes are now located in a different package. I don't expect much problems for users (it basically requires removing old import statements and let eclipse auto resolve them). Some (static, non-class) members (flags or methods) were previously located at the gdxBullet/gdxBulletJNI/gdxBulletConstants class, those are now moved to one of the LinearMath(JNI/Constants) / Collision(JNI/Constants) / Dynamics(JNI/Constants) / Softbody(JNI/Constants) / Extra(JNI/Constants) classes.\n\nWe already discussed this change and when I was debugging the previous bug (in pooling) in the wrapper (which took ages to compile every time), I decided to give it a try. Turned out to work quite well.\n\nThe modules are:\n- linearmath: some helper classes\n- collision: collision shape, object, world, etc.\n- dynamics: rigid body, dynamic world, etc.\n- softbody: softbody world etc.\n- extras: world importer, serialize, etc.\n\nThe SWIG interfaces are now completely separated, each module has its own sub folder. Common interfaces, like pooling etc is located it the common sub folder. I created a swig ant script (module.xml) which requires a property to be set to identify which module to swig. The default build.xml script will call this script for all modules.\n\nThe module.xml script will search and replace the weak_global phrase in the generated wrapper, so the wrapper should also work on ios (not tested). It also generates a file called classes.i so the other wrappers know which class is located in which package (used for directors/callbacks).\n\nThe custom (c++) code is also separated into different subfolders (located at custom/gdx). I moved the implementation from the header files to the cpp files (so its not duplicated on inclusion). There is some experimental code (jniHelpers) in there, which is currently not used. The methods to convert Vector3 to btVector3 etc is moved away from the swig interface so its only included once.\n\nAtm the build script simply takes all wrappers and builds them to a single library (simply because I don't know how to separate them so it works on all platforms). But I have updated the visual studio solution to include each individual project and can confirm that each separate module compiles successfully in visual studio.\n\nTested on win64 and android\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/832/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/831","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/831/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/831/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/831/events","html_url":"https://github.com/libgdx/libgdx/issues/831","id":20925274,"number":831,"title":"Recent snapshots stopped working on Scala","user":{"login":"aginiewicz","id":141273,"avatar_url":"https://avatars2.githubusercontent.com/u/141273?v=4","gravatar_id":"","url":"https://api.github.com/users/aginiewicz","html_url":"https://github.com/aginiewicz","followers_url":"https://api.github.com/users/aginiewicz/followers","following_url":"https://api.github.com/users/aginiewicz/following{/other_user}","gists_url":"https://api.github.com/users/aginiewicz/gists{/gist_id}","starred_url":"https://api.github.com/users/aginiewicz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aginiewicz/subscriptions","organizations_url":"https://api.github.com/users/aginiewicz/orgs","repos_url":"https://api.github.com/users/aginiewicz/repos","events_url":"https://api.github.com/users/aginiewicz/events{/privacy}","received_events_url":"https://api.github.com/users/aginiewicz/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2013-10-13T11:30:04Z","updated_at":"2013-10-13T13:22:17Z","closed_at":"2013-10-13T13:22:17Z","author_association":"CONTRIBUTOR","body":"After update to recent snapshot I'm unable to compile my code that is written in Scala. The error says:\n\n```\n[error] error while loading FocusListener$FocusEvent$Type, class file '/home/giniu/.ivy2/cache/com.badlogicgames.gdx/gdx/jars/gdx-0.9.9-SNAPSHOT.jar(com/badlogic/gdx/scenes/scene2d/utils/FocusListener$FocusEvent$Type.class)' is broken\n[error] (class java.lang.UnsupportedOperationException/addChild inapplicable for <none>)\n[error] error while loading InputEvent$Type, class file '/home/giniu/.ivy2/cache/com.badlogicgames.gdx/gdx/jars/gdx-0.9.9-SNAPSHOT.jar(com/badlogic/gdx/scenes/scene2d/InputEvent$Type.class)' is broken\n[error] (class java.lang.UnsupportedOperationException/addChild inapplicable for <none>)\n```\n\nThis looks similar to https://bugs.eclipse.org/bugs/show_bug.cgi?format=multiple&id=398657 but I'm not sure if this is it or not.\n\nI can guarantee that earlier version of nightlies of gdx.jar works (sorry, don't have date - should have copied them before updating, but I have few apps built with it, last build yesterday using same code as today...) - I looked for other versions I have and version from 23'rd September seems to have same behaviour. I'm pretty sure, that version that worked was around 4'th-14'th September - this is when I remember I had to sync with nightlies. Some in between could work as well, but i'm not sure.\n\nWould be wonderful if someone could look into it before final 0.9.9 release. I'd be happy to provide any extra information you might need.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/831/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/830","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/830/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/830/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/830/events","html_url":"https://github.com/libgdx/libgdx/issues/830","id":20916328,"number":830,"title":"TexturePacker2 CLI quits on large images","user":{"login":"mattdesl","id":1383811,"avatar_url":"https://avatars1.githubusercontent.com/u/1383811?v=4","gravatar_id":"","url":"https://api.github.com/users/mattdesl","html_url":"https://github.com/mattdesl","followers_url":"https://api.github.com/users/mattdesl/followers","following_url":"https://api.github.com/users/mattdesl/following{/other_user}","gists_url":"https://api.github.com/users/mattdesl/gists{/gist_id}","starred_url":"https://api.github.com/users/mattdesl/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mattdesl/subscriptions","organizations_url":"https://api.github.com/users/mattdesl/orgs","repos_url":"https://api.github.com/users/mattdesl/repos","events_url":"https://api.github.com/users/mattdesl/events{/privacy}","received_events_url":"https://api.github.com/users/mattdesl/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2013-10-12T19:53:33Z","updated_at":"2013-10-13T07:33:22Z","closed_at":"2013-10-13T07:33:22Z","author_association":"CONTRIBUTOR","body":"When you have an image that won't fit within the given texture size constraints, the TexturePacker2 program spits out an error and stops. This is understandable but in real-world scenario we have designers who sometimes go over their limits. Then it gets annoying to go through potentially hundreds of assets to find which ones will stop your program.\n\nIt would be great if the tool could just spit out a warning and skip over the image.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/830/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/829","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/829/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/829/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/829/events","html_url":"https://github.com/libgdx/libgdx/pull/829","id":20911893,"number":829,"title":"Added a new method to get the angle and axis","user":{"login":"VinceAngel","id":3493075,"avatar_url":"https://avatars0.githubusercontent.com/u/3493075?v=4","gravatar_id":"","url":"https://api.github.com/users/VinceAngel","html_url":"https://github.com/VinceAngel","followers_url":"https://api.github.com/users/VinceAngel/followers","following_url":"https://api.github.com/users/VinceAngel/following{/other_user}","gists_url":"https://api.github.com/users/VinceAngel/gists{/gist_id}","starred_url":"https://api.github.com/users/VinceAngel/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/VinceAngel/subscriptions","organizations_url":"https://api.github.com/users/VinceAngel/orgs","repos_url":"https://api.github.com/users/VinceAngel/repos","events_url":"https://api.github.com/users/VinceAngel/events{/privacy}","received_events_url":"https://api.github.com/users/VinceAngel/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2013-10-12T14:39:08Z","updated_at":"2014-06-20T12:09:40Z","closed_at":"2013-10-30T18:28:03Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/829","html_url":"https://github.com/libgdx/libgdx/pull/829","diff_url":"https://github.com/libgdx/libgdx/pull/829.diff","patch_url":"https://github.com/libgdx/libgdx/pull/829.patch"},"body":"Added a new method to get the angle and axis from a Quaternion\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/829/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/828","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/828/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/828/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/828/events","html_url":"https://github.com/libgdx/libgdx/issues/828","id":20909610,"number":828,"title":"possible optimization of Frame Buffers performance","user":{"login":"jwisniewski","id":3899440,"avatar_url":"https://avatars3.githubusercontent.com/u/3899440?v=4","gravatar_id":"","url":"https://api.github.com/users/jwisniewski","html_url":"https://github.com/jwisniewski","followers_url":"https://api.github.com/users/jwisniewski/followers","following_url":"https://api.github.com/users/jwisniewski/following{/other_user}","gists_url":"https://api.github.com/users/jwisniewski/gists{/gist_id}","starred_url":"https://api.github.com/users/jwisniewski/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jwisniewski/subscriptions","organizations_url":"https://api.github.com/users/jwisniewski/orgs","repos_url":"https://api.github.com/users/jwisniewski/repos","events_url":"https://api.github.com/users/jwisniewski/events{/privacy}","received_events_url":"https://api.github.com/users/jwisniewski/received_events","type":"User","site_admin":false},"labels":[{"id":11336985,"url":"https://api.github.com/repos/libgdx/libgdx/labels/wontfix","name":"wontfix","color":"ffffff","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2013-10-12T11:16:12Z","updated_at":"2013-10-22T11:36:15Z","closed_at":"2013-10-22T11:36:15Z","author_association":"CONTRIBUTOR","body":"Using of frame buffer can be optimized by putting glClear just after call of glBindFrameBuffer, it prevents copying of frame buffer previously stored in slower memory back to the GPU internal memory on some GPUs.\n\nThe listing code of current implementation of FrameBuffer in libgdx (glClear is not called):\n\nclass: com.badlogic.gdx.graphics.glutils.FrameBuffer.java\nline: 149 +\n\n``` java\ngl.glBindFramebuffer(GL20.GL_FRAMEBUFFER, framebufferHandle);\ngl.glFramebufferTexture2D(GL20.GL_FRAMEBUFFER, GL20.GL_COLOR_ATTACHMENT0, GL20.GL_TEXTURE_2D,\n    colorTexture.getTextureObjectHandle(), 0);\nif (hasDepth) {\n    gl.glFramebufferRenderbuffer(GL20.GL_FRAMEBUFFER, GL20.GL_DEPTH_ATTACHMENT, GL20.GL_RENDERBUFFER, depthbufferHandle);\n}\nint result = gl.glCheckFramebufferStatus(GL20.GL_FRAMEBUFFER);\n\ngl.glBindRenderbuffer(GL20.GL_RENDERBUFFER, 0);\ngl.glBindTexture(GL20.GL_TEXTURE_2D, 0);\ngl.glBindFramebuffer(GL20.GL_FRAMEBUFFER, defaultFramebufferHandle);\n```\n\nRelated entry on stackoverflow:\nhttp://stackoverflow.com/questions/10729352/framebuffer-fbo-render-to-texture-is-very-slow-using-opengl-es-2-0-on-android\n\nFrom Qualcomm docs (Adreno™ 200 Performance Optimization –\nOpenGL ES Tips and Tricks):\n\n\"Avoid Intra-Frame Resolves:\nIt is not recommended to use any draw call patterns for the scene that\nmight cause the driver to prematurely resolve out GMEM contents and\nlater restore them. The easiest way to prevent this performance killing\nsituation is to ensure that the frame buffer is cleared immediately after\nevery call to glBindFrameBuffer().\"\n\nand:\n\n\"Optimize Clear Calls:\nIn the driver, glClear() calls are implemented as viewport covering\nquads to write the clear values into the frame buffer. Therefore, clears\noperate at the normal pixel rate. For 24:8 depth buffers, the z-buffer and\nthe stencil-buffer should always be cleared together. Redundant clears are\ncostly, so they should be avoided, although it is imperative to (a) use clears\nwhen switching Frame Buffer Objects (FBOs) to avoid having the driver\ntries to save/restore GMEM contents, and (b) always clear the depth-buffer\nat the start of a frame.\"\n## Important!\n\nAdding glClear can affect final effect in some games switching frame buffers often. It should be added as option, disabled by default - to ensure backward compatibility.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/828/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/827","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/827/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/827/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/827/events","html_url":"https://github.com/libgdx/libgdx/pull/827","id":20897381,"number":827,"title":"Small changes to MeshBuilder","user":{"login":"xoppa","id":2349087,"avatar_url":"https://avatars3.githubusercontent.com/u/2349087?v=4","gravatar_id":"","url":"https://api.github.com/users/xoppa","html_url":"https://github.com/xoppa","followers_url":"https://api.github.com/users/xoppa/followers","following_url":"https://api.github.com/users/xoppa/following{/other_user}","gists_url":"https://api.github.com/users/xoppa/gists{/gist_id}","starred_url":"https://api.github.com/users/xoppa/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xoppa/subscriptions","organizations_url":"https://api.github.com/users/xoppa/orgs","repos_url":"https://api.github.com/users/xoppa/repos","events_url":"https://api.github.com/users/xoppa/events{/privacy}","received_events_url":"https://api.github.com/users/xoppa/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2013-10-11T22:01:31Z","updated_at":"2014-06-20T12:12:36Z","closed_at":"2013-10-11T22:01:42Z","author_association":"OWNER","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/827","html_url":"https://github.com/libgdx/libgdx/pull/827","diff_url":"https://github.com/libgdx/libgdx/pull/827.diff","patch_url":"https://github.com/libgdx/libgdx/pull/827.patch"},"body":"","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/827/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/826","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/826/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/826/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/826/events","html_url":"https://github.com/libgdx/libgdx/issues/826","id":20893502,"number":826,"title":"ContactListener generates a lot of garbage, pool btCollisionObjectWrappers!","user":{"login":"theagentd","id":1215113,"avatar_url":"https://avatars0.githubusercontent.com/u/1215113?v=4","gravatar_id":"","url":"https://api.github.com/users/theagentd","html_url":"https://github.com/theagentd","followers_url":"https://api.github.com/users/theagentd/followers","following_url":"https://api.github.com/users/theagentd/following{/other_user}","gists_url":"https://api.github.com/users/theagentd/gists{/gist_id}","starred_url":"https://api.github.com/users/theagentd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/theagentd/subscriptions","organizations_url":"https://api.github.com/users/theagentd/orgs","repos_url":"https://api.github.com/users/theagentd/repos","events_url":"https://api.github.com/users/theagentd/events{/privacy}","received_events_url":"https://api.github.com/users/theagentd/received_events","type":"User","site_admin":false},"labels":[{"id":11336982,"url":"https://api.github.com/repos/libgdx/libgdx/labels/enhancement","name":"enhancement","color":"84b6eb","default":true}],"state":"closed","locked":false,"assignee":{"login":"xoppa","id":2349087,"avatar_url":"https://avatars3.githubusercontent.com/u/2349087?v=4","gravatar_id":"","url":"https://api.github.com/users/xoppa","html_url":"https://github.com/xoppa","followers_url":"https://api.github.com/users/xoppa/followers","following_url":"https://api.github.com/users/xoppa/following{/other_user}","gists_url":"https://api.github.com/users/xoppa/gists{/gist_id}","starred_url":"https://api.github.com/users/xoppa/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xoppa/subscriptions","organizations_url":"https://api.github.com/users/xoppa/orgs","repos_url":"https://api.github.com/users/xoppa/repos","events_url":"https://api.github.com/users/xoppa/events{/privacy}","received_events_url":"https://api.github.com/users/xoppa/received_events","type":"User","site_admin":false},"assignees":[{"login":"xoppa","id":2349087,"avatar_url":"https://avatars3.githubusercontent.com/u/2349087?v=4","gravatar_id":"","url":"https://api.github.com/users/xoppa","html_url":"https://github.com/xoppa","followers_url":"https://api.github.com/users/xoppa/followers","following_url":"https://api.github.com/users/xoppa/following{/other_user}","gists_url":"https://api.github.com/users/xoppa/gists{/gist_id}","starred_url":"https://api.github.com/users/xoppa/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xoppa/subscriptions","organizations_url":"https://api.github.com/users/xoppa/orgs","repos_url":"https://api.github.com/users/xoppa/repos","events_url":"https://api.github.com/users/xoppa/events{/privacy}","received_events_url":"https://api.github.com/users/xoppa/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2013-10-11T20:46:14Z","updated_at":"2013-10-24T22:20:15Z","closed_at":"2013-10-24T22:20:15Z","author_association":"NONE","body":"ContactListener callbacks are generating lots of garbage. Pooling of btCollisionObjectWrapper objects would be useful.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/826/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}}],"meta":{"x-ratelimit-limit":"5000","x-ratelimit-remaining":"4862","x-ratelimit-reset":"1506844633","x-github-request-id":"9A8A:028B:DE9118:2EEB4E4:59D097A0","x-github-media-type":"github.squirrel-girl-preview","link":"<https://api.github.com/repositories/5373551/issues?state=all&page=137>; rel=\"next\", <https://api.github.com/repositories/5373551/issues?state=all&page=164>; rel=\"last\", <https://api.github.com/repositories/5373551/issues?state=all&page=1>; rel=\"first\", <https://api.github.com/repositories/5373551/issues?state=all&page=135>; rel=\"prev\"","etag":"\"140ea33dd8ec1166af4ee9106de4f80d\"","status":"200 OK"}}
