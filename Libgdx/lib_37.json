{"data":[{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3828","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3828/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3828/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3828/events","html_url":"https://github.com/libgdx/libgdx/issues/3828","id":132104290,"number":3828,"title":"texture filtering issue","user":{"login":"aboudaladdin","id":15913543,"avatar_url":"https://avatars2.githubusercontent.com/u/15913543?v=4","gravatar_id":"","url":"https://api.github.com/users/aboudaladdin","html_url":"https://github.com/aboudaladdin","followers_url":"https://api.github.com/users/aboudaladdin/followers","following_url":"https://api.github.com/users/aboudaladdin/following{/other_user}","gists_url":"https://api.github.com/users/aboudaladdin/gists{/gist_id}","starred_url":"https://api.github.com/users/aboudaladdin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aboudaladdin/subscriptions","organizations_url":"https://api.github.com/users/aboudaladdin/orgs","repos_url":"https://api.github.com/users/aboudaladdin/repos","events_url":"https://api.github.com/users/aboudaladdin/events{/privacy}","received_events_url":"https://api.github.com/users/aboudaladdin/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-02-08T10:29:59Z","updated_at":"2016-02-08T17:03:15Z","closed_at":"2016-02-08T17:03:15Z","author_association":"NONE","body":"hello \ni have a problem in rendering textures as in photo,, the texture appears as if filters are set to \nNearest \nbut the parameters are Linear for both min & mag filters \n\nalso i set them to linear and no thing happens !\n\n![image](https://cloud.githubusercontent.com/assets/15913543/12883289/9ef9f7be-ce5f-11e5-8156-2f1dd7b88351.png)\nthanks in advance\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3828/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3827","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3827/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3827/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3827/events","html_url":"https://github.com/libgdx/libgdx/issues/3827","id":132039699,"number":3827,"title":"BitmapFont in Box2D world [Enhancement]","user":{"login":"obigu","id":1794492,"avatar_url":"https://avatars0.githubusercontent.com/u/1794492?v=4","gravatar_id":"","url":"https://api.github.com/users/obigu","html_url":"https://github.com/obigu","followers_url":"https://api.github.com/users/obigu/followers","following_url":"https://api.github.com/users/obigu/following{/other_user}","gists_url":"https://api.github.com/users/obigu/gists{/gist_id}","starred_url":"https://api.github.com/users/obigu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/obigu/subscriptions","organizations_url":"https://api.github.com/users/obigu/orgs","repos_url":"https://api.github.com/users/obigu/repos","events_url":"https://api.github.com/users/obigu/events{/privacy}","received_events_url":"https://api.github.com/users/obigu/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2016-02-08T02:36:00Z","updated_at":"2016-02-08T22:11:01Z","closed_at":"2016-02-08T22:11:01Z","author_association":"CONTRIBUTOR","body":"Box2D requires real world unit based coordinate system to work properly (1 unit = 1 meter). The logical choice is to have a small viewport such as 32 \\* 24 or even smaller depending on the game logic to avoid transformations.\n\nBecause BitmapFont uses pixels and not world units it needs to be scaled to a value between 0.01 to 0.1 to be displayed in the right size in such small viewports (otherwise it looks huge). Unfortunately BitmapFont doesn't display properly when scaled with values under 0.1, glyphs start disappearing and its behaviour is messed up.\n\nSome other people have faced this problem before:\nhttp://gamedev.stackexchange.com/questions/73688/why-is-my-text-is-too-large-even-when-scaled-to-05f-in-libgdx\nhttp://www.java-gaming.org/index.php?topic=30929.0\n\nA common suggested workaround is to use a different camera but that is not a solution if the text is part of the game (not the UI, think for instance of a 2048 type of game using Box2D or any other pyshics based puzzle game with text).\n\nThe alternative \"solution\" is to define a larger viewport and then transform every single displayable Box2D object dimensions before rendering (typycally defining a PxelsToMeters constant) which is far from ideal.\n\nThe information is there but it gets lost in the transformations.\n\nCould BitmapFont be enhanced to work with small viewports? Would it be possible to somehow support providing the transformation matrix to the World coordinates to avoid extreme scaling or, alternatively, improve it to display correctly when using these scaling values?\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3827/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3826","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3826/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3826/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3826/events","html_url":"https://github.com/libgdx/libgdx/issues/3826","id":132037380,"number":3826,"title":"ObjectIntMap.get() causes ArrayIndexOutOfBoundsException in rare cases","user":{"login":"JavaNoobsyBoobsy","id":261571,"avatar_url":"https://avatars1.githubusercontent.com/u/261571?v=4","gravatar_id":"","url":"https://api.github.com/users/JavaNoobsyBoobsy","html_url":"https://github.com/JavaNoobsyBoobsy","followers_url":"https://api.github.com/users/JavaNoobsyBoobsy/followers","following_url":"https://api.github.com/users/JavaNoobsyBoobsy/following{/other_user}","gists_url":"https://api.github.com/users/JavaNoobsyBoobsy/gists{/gist_id}","starred_url":"https://api.github.com/users/JavaNoobsyBoobsy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JavaNoobsyBoobsy/subscriptions","organizations_url":"https://api.github.com/users/JavaNoobsyBoobsy/orgs","repos_url":"https://api.github.com/users/JavaNoobsyBoobsy/repos","events_url":"https://api.github.com/users/JavaNoobsyBoobsy/events{/privacy}","received_events_url":"https://api.github.com/users/JavaNoobsyBoobsy/received_events","type":"User","site_admin":false},"labels":[{"id":172870364,"url":"https://api.github.com/repos/libgdx/libgdx/labels/need%20more%20info","name":"need more info","color":"bfdadc","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2016-02-08T02:17:25Z","updated_at":"2016-02-08T20:56:59Z","closed_at":"2016-02-08T20:56:59Z","author_association":"NONE","body":"java.lang.ArrayIndexOutOfBoundsException: length=0; index=8\n        at java.lang.String.equals(String.java:662)\n        at com.badlogic.gdx.utils.ObjectIntMap.get(UniWar:281)\n        at com.badlogic.gdx.graphics.glutils.ShaderProgram.fetchAttributeLocation(UniWar:287)\n        at com.badlogic.gdx.graphics.glutils.ShaderProgram.disableVertexAttribute(UniWar:714)\n        at com.badlogic.gdx.graphics.glutils.VertexArray.unbind(UniWar:157)\n        at com.badlogic.gdx.graphics.Mesh.unbind(UniWar:398)\n        at com.badlogic.gdx.graphics.Mesh.unbind(UniWar:389)\n        at com.badlogic.gdx.graphics.Mesh.render(UniWar:501)\n        at com.badlogic.gdx.graphics.Mesh.render(UniWar:449)\n        at com.badlogic.gdx.graphics.g2d.SpriteBatch.flush(UniWar:971)\n        at com.badlogic.gdx.graphics.g2d.SpriteBatch.switchTexture(UniWar:1050)\n        at com.badlogic.gdx.graphics.g2d.SpriteBatch.draw(UniWar:364)\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3826/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3825","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3825/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3825/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3825/events","html_url":"https://github.com/libgdx/libgdx/pull/3825","id":131981763,"number":3825,"title":"Allow building in the Mac OS X sandbox","user":{"login":"oakes","id":216147,"avatar_url":"https://avatars0.githubusercontent.com/u/216147?v=4","gravatar_id":"","url":"https://api.github.com/users/oakes","html_url":"https://github.com/oakes","followers_url":"https://api.github.com/users/oakes/followers","following_url":"https://api.github.com/users/oakes/following{/other_user}","gists_url":"https://api.github.com/users/oakes/gists{/gist_id}","starred_url":"https://api.github.com/users/oakes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/oakes/subscriptions","organizations_url":"https://api.github.com/users/oakes/orgs","repos_url":"https://api.github.com/users/oakes/repos","events_url":"https://api.github.com/users/oakes/events{/privacy}","received_events_url":"https://api.github.com/users/oakes/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2016-02-07T16:23:29Z","updated_at":"2016-03-08T06:05:30Z","closed_at":"2016-03-08T06:05:30Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3825","html_url":"https://github.com/libgdx/libgdx/pull/3825","diff_url":"https://github.com/libgdx/libgdx/pull/3825.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3825.patch"},"body":"I develop an IDE that I distribute [in the Mac app store](https://itunes.apple.com/us/app/nightcode/id827505032?ls=1&mt=12) that includes a template for libGDX projects. It used to build and run the projects, but due to changes in `SharedLibraryLoader` it now gets the following error: `Unable to find writable path to extract file. Is the user home directory writable?`.\n\nIt looks like this is because the OS X sandbox causes `canExecute` to return false. I made a change that should have a very low impact on everyone else: It still tests for both write and execute privileges in `getExtractedFile`, but if all attempts fail, it returns a file that _at least_ has write privileges. This makes it work in the OS X sandbox.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3825/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3824","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3824/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3824/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3824/events","html_url":"https://github.com/libgdx/libgdx/issues/3824","id":131926058,"number":3824,"title":"import  project get a error","user":{"login":"hstcscolor","id":3404974,"avatar_url":"https://avatars1.githubusercontent.com/u/3404974?v=4","gravatar_id":"","url":"https://api.github.com/users/hstcscolor","html_url":"https://github.com/hstcscolor","followers_url":"https://api.github.com/users/hstcscolor/followers","following_url":"https://api.github.com/users/hstcscolor/following{/other_user}","gists_url":"https://api.github.com/users/hstcscolor/gists{/gist_id}","starred_url":"https://api.github.com/users/hstcscolor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hstcscolor/subscriptions","organizations_url":"https://api.github.com/users/hstcscolor/orgs","repos_url":"https://api.github.com/users/hstcscolor/repos","events_url":"https://api.github.com/users/hstcscolor/events{/privacy}","received_events_url":"https://api.github.com/users/hstcscolor/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-02-07T02:39:51Z","updated_at":"2016-04-28T22:11:37Z","closed_at":"2016-02-08T20:28:00Z","author_association":"NONE","body":"<get src=\"${domain}/extensions/gdx-controllers/gdx-controllers-desktop-natives.jar\" dest=\"extensions/gdx-controllers/gdx-controllers-desktop/libs\"/>\n\nant -f fetch.xml \nhave not folder libs， so gdx-controllers-desktop-natives.jar become  libs file\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3824/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3823","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3823/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3823/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3823/events","html_url":"https://github.com/libgdx/libgdx/pull/3823","id":131889341,"number":3823,"title":"Drag'n Drop support for the lwjgl3 backend.","user":{"login":"mbrlabs","id":8750135,"avatar_url":"https://avatars2.githubusercontent.com/u/8750135?v=4","gravatar_id":"","url":"https://api.github.com/users/mbrlabs","html_url":"https://github.com/mbrlabs","followers_url":"https://api.github.com/users/mbrlabs/followers","following_url":"https://api.github.com/users/mbrlabs/following{/other_user}","gists_url":"https://api.github.com/users/mbrlabs/gists{/gist_id}","starred_url":"https://api.github.com/users/mbrlabs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbrlabs/subscriptions","organizations_url":"https://api.github.com/users/mbrlabs/orgs","repos_url":"https://api.github.com/users/mbrlabs/repos","events_url":"https://api.github.com/users/mbrlabs/events{/privacy}","received_events_url":"https://api.github.com/users/mbrlabs/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2016-02-06T19:14:29Z","updated_at":"2016-02-14T19:11:48Z","closed_at":"2016-02-14T19:11:48Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3823","html_url":"https://github.com/libgdx/libgdx/pull/3823","diff_url":"https://github.com/libgdx/libgdx/pull/3823.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3823.patch"},"body":"This pull request adds support for external file drag & drop. Files (from e.g. the desktop) can be dragged in a Lwjgl3Window, causing the the Lwjgl3WindowListener to call drop(String[] files).\nThis is an API change, since i added that drop() method to the Lwjgl3WindowListener interface.\n\nA use case for this are programs like level editors, where you want the user to be able to easily import assets by drag and drop. \nI added a simple test as well.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3823/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3822","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3822/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3822/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3822/events","html_url":"https://github.com/libgdx/libgdx/pull/3822","id":131840305,"number":3822,"title":"Playing around with new sprite batch API","user":{"login":"HeartbleeDarkoder","id":17094962,"avatar_url":"https://avatars3.githubusercontent.com/u/17094962?v=4","gravatar_id":"","url":"https://api.github.com/users/HeartbleeDarkoder","html_url":"https://github.com/HeartbleeDarkoder","followers_url":"https://api.github.com/users/HeartbleeDarkoder/followers","following_url":"https://api.github.com/users/HeartbleeDarkoder/following{/other_user}","gists_url":"https://api.github.com/users/HeartbleeDarkoder/gists{/gist_id}","starred_url":"https://api.github.com/users/HeartbleeDarkoder/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HeartbleeDarkoder/subscriptions","organizations_url":"https://api.github.com/users/HeartbleeDarkoder/orgs","repos_url":"https://api.github.com/users/HeartbleeDarkoder/repos","events_url":"https://api.github.com/users/HeartbleeDarkoder/events{/privacy}","received_events_url":"https://api.github.com/users/HeartbleeDarkoder/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-02-06T10:00:52Z","updated_at":"2016-02-06T10:02:17Z","closed_at":"2016-02-06T10:02:17Z","author_association":"NONE","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3822","html_url":"https://github.com/libgdx/libgdx/pull/3822","diff_url":"https://github.com/libgdx/libgdx/pull/3822.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3822.patch"},"body":"","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3822/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3821","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3821/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3821/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3821/events","html_url":"https://github.com/libgdx/libgdx/issues/3821","id":131830405,"number":3821,"title":"TiledMapTileLayer tile width & height data types inconsistent","user":{"login":"cryo75","id":3060986,"avatar_url":"https://avatars2.githubusercontent.com/u/3060986?v=4","gravatar_id":"","url":"https://api.github.com/users/cryo75","html_url":"https://github.com/cryo75","followers_url":"https://api.github.com/users/cryo75/followers","following_url":"https://api.github.com/users/cryo75/following{/other_user}","gists_url":"https://api.github.com/users/cryo75/gists{/gist_id}","starred_url":"https://api.github.com/users/cryo75/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cryo75/subscriptions","organizations_url":"https://api.github.com/users/cryo75/orgs","repos_url":"https://api.github.com/users/cryo75/repos","events_url":"https://api.github.com/users/cryo75/events{/privacy}","received_events_url":"https://api.github.com/users/cryo75/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-02-06T07:06:30Z","updated_at":"2016-02-06T07:06:30Z","closed_at":null,"author_association":"NONE","body":"The constructor has the following signature:\n\npublic TiledMapTileLayer (int width, int height, int tileWidth, int tileHeight)\n\nwhilst getTileWidth() and getTileHeight() return the width and height as float.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3821/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3820","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3820/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3820/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3820/events","html_url":"https://github.com/libgdx/libgdx/pull/3820","id":131162826,"number":3820,"title":"Fixed Scene2D window resize bug.","user":{"login":"xpenatan","id":6472084,"avatar_url":"https://avatars3.githubusercontent.com/u/6472084?v=4","gravatar_id":"","url":"https://api.github.com/users/xpenatan","html_url":"https://github.com/xpenatan","followers_url":"https://api.github.com/users/xpenatan/followers","following_url":"https://api.github.com/users/xpenatan/following{/other_user}","gists_url":"https://api.github.com/users/xpenatan/gists{/gist_id}","starred_url":"https://api.github.com/users/xpenatan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xpenatan/subscriptions","organizations_url":"https://api.github.com/users/xpenatan/orgs","repos_url":"https://api.github.com/users/xpenatan/repos","events_url":"https://api.github.com/users/xpenatan/events{/privacy}","received_events_url":"https://api.github.com/users/xpenatan/received_events","type":"User","site_admin":false},"labels":[{"id":89047068,"url":"https://api.github.com/repos/libgdx/libgdx/labels/scene2d","name":"scene2d","color":"ff00ff","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-02-03T21:39:54Z","updated_at":"2016-03-29T05:51:33Z","closed_at":"2016-03-29T05:51:33Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3820","html_url":"https://github.com/libgdx/libgdx/pull/3820","diff_url":"https://github.com/libgdx/libgdx/pull/3820.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3820.patch"},"body":"This is a very old bug that I knew and fixed but never made a PR.\n\n![bugedresize](https://cloud.githubusercontent.com/assets/6472084/12797822/1dbb99d8-caad-11e5-9e81-80e82120fb7d.gif)\n\nThe top-left, top-right and bottom-right edges don't seems to synchronize the mouse cursor when going outside of the App border.\n\nAnd the very simple fix made it work.\n![fixedresize](https://cloud.githubusercontent.com/assets/6472084/12797875/5b355ae2-caad-11e5-8bed-35774c7e21b7.gif)\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3820/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3819","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3819/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3819/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3819/events","html_url":"https://github.com/libgdx/libgdx/issues/3819","id":131126521,"number":3819,"title":"FreeType crashes in incremental mode with a border, when disposing the font data","user":{"login":"intrigus","id":10353467,"avatar_url":"https://avatars2.githubusercontent.com/u/10353467?v=4","gravatar_id":"","url":"https://api.github.com/users/intrigus","html_url":"https://github.com/intrigus","followers_url":"https://api.github.com/users/intrigus/followers","following_url":"https://api.github.com/users/intrigus/following{/other_user}","gists_url":"https://api.github.com/users/intrigus/gists{/gist_id}","starred_url":"https://api.github.com/users/intrigus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/intrigus/subscriptions","organizations_url":"https://api.github.com/users/intrigus/orgs","repos_url":"https://api.github.com/users/intrigus/repos","events_url":"https://api.github.com/users/intrigus/events{/privacy}","received_events_url":"https://api.github.com/users/intrigus/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-02-03T19:20:50Z","updated_at":"2016-04-01T20:45:54Z","closed_at":null,"author_association":"CONTRIBUTOR","body":"FreeType crashes when it's in incremental mode and the font has a border.\nIt crashes when you try to dispose the FreeTypeBitmapFontData (which you should do according to the docs)\nSome things to note:\nIt does NOT crash if I don't dispose the FreeTypeFontGenerator.\nI does crash if I dispose the generator and the FreeTypeBitmapFontData.\n\nThe problem seems to be the disposing of the Stroker instance FreeType uses in incremental mode.\n\nReprocase: \n\n```\n\npackage com.badlogic.gdx.tests.lwjgl;\n\nimport com.badlogic.gdx.Gdx;\nimport com.badlogic.gdx.backends.lwjgl.LwjglApplication;\nimport com.badlogic.gdx.graphics.Color;\nimport com.badlogic.gdx.graphics.g2d.BitmapFont;\nimport com.badlogic.gdx.graphics.g2d.freetype.*;\nimport com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator.FreeTypeBitmapFontData;\nimport com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator.FreeTypeFontParameter;\nimport com.badlogic.gdx.tests.utils.GdxTest;\n\npublic class CrashLauncher {\n\n    public static void main (String... args) {\n        new LwjglApplication(new FreeTypeCrashTest());\n    }\n\n    static class FreeTypeCrashTest extends GdxTest {\n\n        BitmapFont font;\n        FreeTypeFontGenerator generator;\n        FreeTypeBitmapFontData data;\n\n        public void create () {\n            generator = new FreeTypeFontGenerator(Gdx.files.internal(\"data/arial.ttf\"));\n\n            FreeTypeFontParameter param = new FreeTypeFontParameter();\n            param.incremental = true;\n            param.borderWidth = 2f;\n            param.characters = \"H\";\n\n            data = new FreeTypeBitmapFontData();\n            font = generator.generateFont(param, data);\n        }\n\n        @Override\n        public void dispose () {\n            generator.dispose();\n            font.dispose();\n            data.dispose();\n        }\n    }\n}\n```\n\nError log:\nhttp://hastebin.com/mawomuyiva.vhdl\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3819/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3818","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3818/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3818/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3818/events","html_url":"https://github.com/libgdx/libgdx/issues/3818","id":130947556,"number":3818,"title":"Lwjgl3 window listener issue? + doc misspelled","user":{"login":"ghost","id":10137,"avatar_url":"https://avatars3.githubusercontent.com/u/10137?v=4","gravatar_id":"","url":"https://api.github.com/users/ghost","html_url":"https://github.com/ghost","followers_url":"https://api.github.com/users/ghost/followers","following_url":"https://api.github.com/users/ghost/following{/other_user}","gists_url":"https://api.github.com/users/ghost/gists{/gist_id}","starred_url":"https://api.github.com/users/ghost/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ghost/subscriptions","organizations_url":"https://api.github.com/users/ghost/orgs","repos_url":"https://api.github.com/users/ghost/repos","events_url":"https://api.github.com/users/ghost/events{/privacy}","received_events_url":"https://api.github.com/users/ghost/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2016-02-03T08:11:40Z","updated_at":"2016-02-15T23:53:06Z","closed_at":"2016-02-15T23:53:06Z","author_association":"NONE","body":"1) In the class Lwjgl3ApplicationConfiguration the doc above the method setResizable() says \n\n> /*\\* \n>      \\* @param resizable whether the windowed mode window is resizable (default false)\n> */\n\nbut it should be (default true) because of the implementation\n\n2) The second issue is that the focusGained() method is AFTER windowIsClosing() called. \nHow to test: Add a Lwjgl3WindowListener \n\n```\n        configuration.setWindowListener(new Lwjgl3WindowListener() {         \n\n        @Override\n        public void deiconified() {\n            System.out.println(\"deiconified\");\n        }\n\n        @Override\n        public void focusGained() {\n            System.out.println(\"focusGained\");\n        }\n\n        @Override\n        public void focusLost() {\n            System.out.println(\"focusLost\");\n        }\n\n        @Override\n        public void iconified() {\n            System.out.println(\"iconified\");\n        }\n\n        @Override\n        public boolean windowIsClosing() {\n            System.out.println(\"windowIsClosing\");\n            return true;\n        }\n    });\n```\n\nNow try to close via the red X button on the top-right position\nIt works. Output is: \n\n> focusGained\n> focusLost\n> focusGained\n> focusLost\n> iconified\n> deiconified\n> focusGained\n> windowIsClosing\n\nNow trying to close the window by clicking on the close menu via taskbar contextmenu. This happens: \n\n> focusGained\n> focusLost\n> focusGained\n> focusLost\n> iconified\n> deiconified\n> focusGained\n> focusLost\n> windowIsClosing\n> focusGained\n\nSry for my English. English is not my native language. \n\nEdit: Libgdx 1.9.2-snapshot version, Windows 10 64x\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3818/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3817","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3817/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3817/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3817/events","html_url":"https://github.com/libgdx/libgdx/pull/3817","id":130764453,"number":3817,"title":"Format WebGLRenderingContext text","user":{"login":"realitix","id":6367936,"avatar_url":"https://avatars1.githubusercontent.com/u/6367936?v=4","gravatar_id":"","url":"https://api.github.com/users/realitix","html_url":"https://github.com/realitix","followers_url":"https://api.github.com/users/realitix/followers","following_url":"https://api.github.com/users/realitix/following{/other_user}","gists_url":"https://api.github.com/users/realitix/gists{/gist_id}","starred_url":"https://api.github.com/users/realitix/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/realitix/subscriptions","organizations_url":"https://api.github.com/users/realitix/orgs","repos_url":"https://api.github.com/users/realitix/repos","events_url":"https://api.github.com/users/realitix/events{/privacy}","received_events_url":"https://api.github.com/users/realitix/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-02-02T18:00:40Z","updated_at":"2016-02-02T20:05:07Z","closed_at":"2016-02-02T20:05:07Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3817","html_url":"https://github.com/libgdx/libgdx/pull/3817","diff_url":"https://github.com/libgdx/libgdx/pull/3817.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3817.patch"},"body":"Make code more beautiful and respect indentation rules.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3817/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3816","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3816/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3816/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3816/events","html_url":"https://github.com/libgdx/libgdx/pull/3816","id":130720120,"number":3816,"title":"Support for launching libGDX from a native iOS app","user":{"login":"Dzamir","id":3134783,"avatar_url":"https://avatars0.githubusercontent.com/u/3134783?v=4","gravatar_id":"","url":"https://api.github.com/users/Dzamir","html_url":"https://github.com/Dzamir","followers_url":"https://api.github.com/users/Dzamir/followers","following_url":"https://api.github.com/users/Dzamir/following{/other_user}","gists_url":"https://api.github.com/users/Dzamir/gists{/gist_id}","starred_url":"https://api.github.com/users/Dzamir/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Dzamir/subscriptions","organizations_url":"https://api.github.com/users/Dzamir/orgs","repos_url":"https://api.github.com/users/Dzamir/repos","events_url":"https://api.github.com/users/Dzamir/events{/privacy}","received_events_url":"https://api.github.com/users/Dzamir/received_events","type":"User","site_admin":false},"labels":[{"id":59604199,"url":"https://api.github.com/repos/libgdx/libgdx/labels/ios","name":"ios","color":"207de5","default":false}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":14,"created_at":"2016-02-02T15:39:44Z","updated_at":"2017-08-16T06:31:14Z","closed_at":null,"author_association":"NONE","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3816","html_url":"https://github.com/libgdx/libgdx/pull/3816","diff_url":"https://github.com/libgdx/libgdx/pull/3816.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3816.patch"},"body":"I implemented the support for launching libGDX from a native iOS application. \n\n**Example usage:**\n\nThe host application must include a framework like in the [MyJavaFramework example](https://github.com/robovm/robovm-samples/tree/master/MyJavaFramework) that embeds the libGDX application.\n\nIn the libGDX application I added a class in the iOS module:\n\n```\npublic class TestApplication {\n    private IOSApplication iosApplication;\n\n    public TestApplication() {\n    }\n\n    public void createApplication() {\n        IOSApplicationConfiguration config = new IOSApplicationConfiguration();\n        iosApplication = new IOSApplication(new Main(), config);\n        iosApplication.launch(\"yourFrameworkName\");\n    }\n\n    public void destroyApplication() {\n        Singletons.close();\n        iosApplication.destroy();\n        iosApplication = null;\n        System.gc();\n    }\n\n}\n```\n\nInside the iOS application I can now create the TestApplication object and launch it by using the JNI, like in the [MyJavaFramework example](https://github.com/robovm/robovm-samples/tree/master/MyJavaFramework) :\n\n```\n- (IBAction)startLibGDX:(id)sender\n{\n    JavaVMInitArgs vm_args;\n    vm_args.version = JNI_VERSION_1_4;\n    vm_args.nOptions = 0;\n    vm_args.options = NULL;\n\n    jint res;\n    JNIEnv *env;\n    res = JNI_CreateJavaVM(&vm, &env, &vm_args);\n    if (res != JNI_OK)\n    {\n        [NSException raise:@\"JNI_CreateJavaVM() failed\" format:@\"%d\", res];\n    }\n\n    _javaVM = javaVM;\n\n    JNIEnv *env;\n    jint res = (*[_javaVM vm])->AttachCurrentThread([_javaVM vm], (void**) &env, NULL);\n    if (res != JNI_OK) {\n        [NSException raise:@\"AttachCurrentThread() failed\" format:@\"%d\", res];\n    }\n\n    // get the class and methods reference\n    testApplicationServiceClass = (*env)->FindClass(env, \"net/yourcompany/yourproject/TestApplication\");\n    if (!testApplicationServiceClass) {\n        [NSException raise:@\"Failed to find class net.yourcompany.yourproject.TestApplication\" format:@\"\"];\n    }\n    createApplicationMethod = (*env)->GetMethodID(env, testApplicationServiceClass, \"createApplication\", \"()V\");\n    if (!createApplicationMethod) {\n        [NSException raise:@\"Failed to find method net.yourcompany.yourproject.TestApplication.createApplication()\" format:@\"\"];\n    }\n    destroyApplicationMethod = (*env)->GetMethodID(env, testApplicationServiceClass, \"destroyApplication\", \"()V\");\n    if (!destroyApplicationMethod) {\n        [NSException raise:@\"Failed to find method net.yourcompany.yourproject.TestApplication.destroyApplication()\" format:@\"\"];\n    }\n    constructor = (*env)->GetMethodID(env, testApplicationServiceClass, \"<init>\", \"()V\");\n\n    // create the TestApplication object\n    object = (*env)->NewObject(env, testApplicationServiceClass, constructor);\n\n    // launch the libGDX application\n    (*env)->CallVoidMethod(env, object, createApplicationMethod);\n    (*[_javaVM vm])->DetachCurrentThread([_javaVM vm]);\n\n}\n\n- (void)closeLibGDX:()\n{\n    JNIEnv *env;\n    jint res = (*[_javaVM vm])->AttachCurrentThread([_javaVM vm], (void**) &env, NULL);\n    if (res != JNI_OK) {\n        [NSException raise:@\"AttachCurrentThread() failed\" format:@\"%d\", res];\n    }\n    (*env)->CallVoidMethod(env, object, destroyApplicationMethod);\n    (*[_javaVM vm])->DetachCurrentThread([_javaVM vm]);\n}\n```\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3816/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3815","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3815/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3815/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3815/events","html_url":"https://github.com/libgdx/libgdx/issues/3815","id":130696694,"number":3815,"title":"Multi-Viewport/Splitscreen ","user":{"login":"xpenatan","id":6472084,"avatar_url":"https://avatars3.githubusercontent.com/u/6472084?v=4","gravatar_id":"","url":"https://api.github.com/users/xpenatan","html_url":"https://github.com/xpenatan","followers_url":"https://api.github.com/users/xpenatan/followers","following_url":"https://api.github.com/users/xpenatan/following{/other_user}","gists_url":"https://api.github.com/users/xpenatan/gists{/gist_id}","starred_url":"https://api.github.com/users/xpenatan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xpenatan/subscriptions","organizations_url":"https://api.github.com/users/xpenatan/orgs","repos_url":"https://api.github.com/users/xpenatan/repos","events_url":"https://api.github.com/users/xpenatan/events{/privacy}","received_events_url":"https://api.github.com/users/xpenatan/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2016-02-02T14:22:43Z","updated_at":"2017-01-16T14:58:05Z","closed_at":"2016-02-08T03:41:01Z","author_association":"CONTRIBUTOR","body":"The issue is with this https://github.com/libgdx/libgdx/wiki/Viewports#multiple-viewports\nThe current way to get splitscreen or multiple viewports to work for stage and/or for 2d/3d \nis to currently do \n\n```\nint offsetX = 0, offsetY = 0;\n\n...\n\noffsetX = 0;\nviewport1.update();\nviewport1.setScreenPosition(viewport1.getScreenX() + offsetX, viewport1.getScreenY() + offsetY);\nviewport1.apply();\n// draw\noffsetX = Gdx.graphics.getWidth() / 2;\nviewport2.update();\nviewport2.setScreenPosition(viewport2.getScreenX() + offsetX, viewport2.getScreenY() + offsetY);\nviewport2.apply();\n// draw\n\n...\n\n```\n\nThe problem is that Viewport#update(..) reset screenX, screenY, screenWidth and screenHeight   values for each viewport type and Viewport#apply() use those values to call glViewport(..). The goal is to use any viewport type and still use it as a sub-window/splitscreen but without calling apply multiple times (Viewport#update(..) already calls apply). \n\nThe solution I see is to take away Viewport#apply from all Viewport#update( ) or have a offsetX/offsetY inside viewport class so the code above could change to the one below.\n\n```\nviewport1.setOffset(0, 0);\nviewport1.update(..);\n// draw\nviewport2.setOffset(Gdx.graphics.getWidth() / 2, 0);\nviewport2.update(...);\n// draw\n\n```\n\nTo move the viewport window to another place (Ex a minimap) you can just update the Viewport#setOffset(..).\n\n![multiviewport](https://cloud.githubusercontent.com/assets/6472084/12753795/aa575656-c9af-11e5-96a2-a651bc683f71.png)\n\nPicture above is a example where shadows and stage inside stage working with Viewport#setOffset (Game window using ScalingViewport for 3d stuff  and the default viewport for Info UI). \n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3815/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3814","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3814/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3814/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3814/events","html_url":"https://github.com/libgdx/libgdx/issues/3814","id":130521861,"number":3814,"title":"Batch ,scale,origin","user":{"login":"Vittek1978","id":3409537,"avatar_url":"https://avatars2.githubusercontent.com/u/3409537?v=4","gravatar_id":"","url":"https://api.github.com/users/Vittek1978","html_url":"https://github.com/Vittek1978","followers_url":"https://api.github.com/users/Vittek1978/followers","following_url":"https://api.github.com/users/Vittek1978/following{/other_user}","gists_url":"https://api.github.com/users/Vittek1978/gists{/gist_id}","starred_url":"https://api.github.com/users/Vittek1978/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Vittek1978/subscriptions","organizations_url":"https://api.github.com/users/Vittek1978/orgs","repos_url":"https://api.github.com/users/Vittek1978/repos","events_url":"https://api.github.com/users/Vittek1978/events{/privacy}","received_events_url":"https://api.github.com/users/Vittek1978/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2016-02-01T23:45:49Z","updated_at":"2016-02-17T21:36:42Z","closed_at":"2016-02-17T21:36:42Z","author_association":"NONE","body":"Hi.\n\nWhen drawing TextureRegion with SpriteBatch, and origin set to centre (or != {0,0}),\nchanging scale shifts image to bottom-left. I can see that in code the corners are scaled but not the origin. Is it a bug? Am I reading this wrong? Will that fix it:\n\n`650/770        final float worldOriginX = x + scaleX == 1 ?  originX : originX * scaleX;`\n`651/771        final float worldOriginY = y + scaleY == 1 ?  originY : originY * scaleY;`\n\nSame goes for PolygonSpriteBatch.\n\nRegards,\nMariusz\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3814/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3813","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3813/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3813/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3813/events","html_url":"https://github.com/libgdx/libgdx/issues/3813","id":130364813,"number":3813,"title":"Wrong viewport size on Windows - good on Ubuntu","user":{"login":"Magnesus","id":3584532,"avatar_url":"https://avatars1.githubusercontent.com/u/3584532?v=4","gravatar_id":"","url":"https://api.github.com/users/Magnesus","html_url":"https://github.com/Magnesus","followers_url":"https://api.github.com/users/Magnesus/followers","following_url":"https://api.github.com/users/Magnesus/following{/other_user}","gists_url":"https://api.github.com/users/Magnesus/gists{/gist_id}","starred_url":"https://api.github.com/users/Magnesus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Magnesus/subscriptions","organizations_url":"https://api.github.com/users/Magnesus/orgs","repos_url":"https://api.github.com/users/Magnesus/repos","events_url":"https://api.github.com/users/Magnesus/events{/privacy}","received_events_url":"https://api.github.com/users/Magnesus/received_events","type":"User","site_admin":false},"labels":[{"id":172870364,"url":"https://api.github.com/repos/libgdx/libgdx/labels/need%20more%20info","name":"need more info","color":"bfdadc","default":false}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2016-02-01T13:40:54Z","updated_at":"2017-07-15T07:21:56Z","closed_at":null,"author_association":"NONE","body":"When I run my game on Windows it looks as if the viewport is about 1.25x the size of the screen (photo attached) while on Ubuntu it is just fine (the same screen, the same laptop).\n\nHere is how I turn on full screen:\nDisplayMode mode = LwjglApplicationConfiguration.getDesktopDisplayMode();\n                config.fullscreen = true;\n                config.vSyncEnabled = true;\n                config.resizable = true;\n\nHere is how I create stage:\nstage = new Stage(new ExtendViewport(1280, 800), new SpriteBatch());\n\nHere is how I react to resize:\nscreen.stage.getViewport().update(width, height, true);\nscreen.stage.getCamera().translate(MaApp.px, MaApp.py, 0); \n// although centering doesn't seem to work, I have to manually translate the camera by gutter sizes (px, py are just negative gutter size).\n\nHow it looks on Ubuntu: https://www.dropbox.com/s/yns8va8t4rro9x8/20160201_144202.jpg?dl=0\nHow it looks on Windows: https://www.dropbox.com/s/udk09gvwnh3epbu/2016-02-01%2014.41.33.jpg?dl=0\n\nPS. The laptop screen I am testing on is 1920x1080, the resulting screen is about 2400x1300, when started in window mode the window is also larger than I specify as size (by the same margin).\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3813/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3812","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3812/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3812/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3812/events","html_url":"https://github.com/libgdx/libgdx/pull/3812","id":130292423,"number":3812,"title":"Changed message regarding api/build tool versions","user":{"login":"mayuso","id":15814568,"avatar_url":"https://avatars3.githubusercontent.com/u/15814568?v=4","gravatar_id":"","url":"https://api.github.com/users/mayuso","html_url":"https://github.com/mayuso","followers_url":"https://api.github.com/users/mayuso/followers","following_url":"https://api.github.com/users/mayuso/following{/other_user}","gists_url":"https://api.github.com/users/mayuso/gists{/gist_id}","starred_url":"https://api.github.com/users/mayuso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mayuso/subscriptions","organizations_url":"https://api.github.com/users/mayuso/orgs","repos_url":"https://api.github.com/users/mayuso/repos","events_url":"https://api.github.com/users/mayuso/events{/privacy}","received_events_url":"https://api.github.com/users/mayuso/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-02-01T08:29:52Z","updated_at":"2016-03-13T14:34:36Z","closed_at":"2016-03-13T14:34:36Z","author_association":"NONE","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3812","html_url":"https://github.com/libgdx/libgdx/pull/3812","diff_url":"https://github.com/libgdx/libgdx/pull/3812.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3812.patch"},"body":"Updated fix for #3754. (Better explanation).\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3812/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3811","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3811/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3811/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3811/events","html_url":"https://github.com/libgdx/libgdx/issues/3811","id":130177335,"number":3811,"title":"FreeType returning buffer with wrong capacity","user":{"login":"intrigus","id":10353467,"avatar_url":"https://avatars2.githubusercontent.com/u/10353467?v=4","gravatar_id":"","url":"https://api.github.com/users/intrigus","html_url":"https://github.com/intrigus","followers_url":"https://api.github.com/users/intrigus/followers","following_url":"https://api.github.com/users/intrigus/following{/other_user}","gists_url":"https://api.github.com/users/intrigus/gists{/gist_id}","starred_url":"https://api.github.com/users/intrigus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/intrigus/subscriptions","organizations_url":"https://api.github.com/users/intrigus/orgs","repos_url":"https://api.github.com/users/intrigus/repos","events_url":"https://api.github.com/users/intrigus/events{/privacy}","received_events_url":"https://api.github.com/users/intrigus/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2016-01-31T20:25:56Z","updated_at":"2016-11-25T01:04:57Z","closed_at":"2016-11-25T01:04:57Z","author_association":"CONTRIBUTOR","body":"[Freetype.getBuffer()](https://github.com/libgdx/libgdx/blob/master/extensions/gdx-freetype/src/com/badlogic/gdx/graphics/g2d/freetype/FreeType.java#L590) returns a Buffer with a wrong capacity.\n@NathanSweet \n\nHow to reproduce:\n1. Change\n\n```\npublic ByteBuffer getBuffer() {\n            if (getRows() == 0)\n                // Issue #768 - CheckJNI frowns upon env->NewDirectByteBuffer with NULL buffer or capacity 0\n                //                  \"JNI WARNING: invalid values for address (0x0) or capacity (0)\"\n                //              FreeType sets FT_Bitmap::buffer to NULL when the bitmap is empty (e.g. for ' ')\n                //              JNICheck is on by default on emulators and might have a point anyway...\n                //              So let's avoid this and just return a dummy non-null non-zero buffer\n                return BufferUtils.newByteBuffer(1);\n            return getBuffer(address);\n        }\n```\n\nto \n\n```\npublic static int i = 0;\n        public ByteBuffer getBuffer() {\n                    if (getRows() == 0)\n                        // Issue #768 - CheckJNI frowns upon env->NewDirectByteBuffer with NULL buffer or capacity 0\n                        //                  \"JNI WARNING: invalid values for address (0x0) or capacity (0)\"\n                        //              FreeType sets FT_Bitmap::buffer to NULL when the bitmap is empty (e.g. for ' ')\n                        //              JNICheck is on by default on emulators and might have a point anyway...\n                        //              So let's avoid this and just return a dummy non-null non-zero buffer\n                        return BufferUtils.newByteBuffer(1);\n\n                    ByteBuffer b = getBuffer(address);\n                    if(i < 1) {\n                    for(int k = 0; k < java.lang.Math.min(10000, b.capacity()); k++){\n                            System.out.println(b.get(k));\n                        }\n                                                i++;    \n                    }\n                    return b;\n                }\n```\n1. Run FreeTypeMetricsTest.\n   Save the generated output.\n2. Run FreeTypeMetricsTest again.\n   Save the generated output.\n3. Diff the outputs e.g using https://www.diffchecker.com/\n4. The diffs will be the same up to the 1139th(=1140) line. 1140 is exactly `bmp->rows * abs(bmp->pitch)`. The rest of the log (`bmp->rows * abs(bmp->pitch) * bmp->width`) is garbage.\n\nGdx Version is 1.9.1\nOS: Mac OS X El Capitan\n\nSee https://github.com/libgdx/libgdx/commit/8578f791a0f8d0813cc0b5381e897bd15e6dbb61#diff-cd2a8e6f2b978bfd546ad39168f00533R645\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3811/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3810","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3810/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3810/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3810/events","html_url":"https://github.com/libgdx/libgdx/issues/3810","id":130071992,"number":3810,"title":"TextureAttribute has poor extensibility due to non-abstract/interface fields usage and internal mask checking.","user":{"login":"shdwshard","id":2757939,"avatar_url":"https://avatars1.githubusercontent.com/u/2757939?v=4","gravatar_id":"","url":"https://api.github.com/users/shdwshard","html_url":"https://github.com/shdwshard","followers_url":"https://api.github.com/users/shdwshard/followers","following_url":"https://api.github.com/users/shdwshard/following{/other_user}","gists_url":"https://api.github.com/users/shdwshard/gists{/gist_id}","starred_url":"https://api.github.com/users/shdwshard/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/shdwshard/subscriptions","organizations_url":"https://api.github.com/users/shdwshard/orgs","repos_url":"https://api.github.com/users/shdwshard/repos","events_url":"https://api.github.com/users/shdwshard/events{/privacy}","received_events_url":"https://api.github.com/users/shdwshard/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-01-31T03:43:34Z","updated_at":"2016-01-31T12:08:30Z","closed_at":"2016-01-31T12:08:19Z","author_association":"NONE","body":"TextureAttribute contains the following field, which I would like to be typed GLTexture instead of Texture:\n`public final TextureDescriptor<Texture> textureDescription;`\nThe reasoning is that classes such as TextureArray, and others which extend the GLTexture interface can then be passed into Shaders using the existing set(Uniform, TextureDescription) methods, making the overall usage of derived Texture Types much easier and standard to implement.\n\nThis change also involves modifying the Generics on the various constructors of TextureAttribute\n`public <T extends Texture> TextureAttribute (...)`\n\nTexture is a poor choice of a superclass because it contains several hard coded GL attributes which don't apply to all types of textures.\n\nSimilarly, there should be a way to add to or modify this field, such that additional texture types (Such as Stencils or SplatMaps) can be added.\n`protected static long Mask = Diffuse | Specular | Bump | Normal | Ambient | Emissive | Reflection;`\n\nThe CubeMapAttribute and some related classes could be collapsed back into a normal TextureAttribute with these changes.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3810/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3809","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3809/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3809/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3809/events","html_url":"https://github.com/libgdx/libgdx/pull/3809","id":130027363,"number":3809,"title":"Fix wrong buffer clear","user":{"login":"intrigus","id":10353467,"avatar_url":"https://avatars2.githubusercontent.com/u/10353467?v=4","gravatar_id":"","url":"https://api.github.com/users/intrigus","html_url":"https://github.com/intrigus","followers_url":"https://api.github.com/users/intrigus/followers","following_url":"https://api.github.com/users/intrigus/following{/other_user}","gists_url":"https://api.github.com/users/intrigus/gists{/gist_id}","starred_url":"https://api.github.com/users/intrigus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/intrigus/subscriptions","organizations_url":"https://api.github.com/users/intrigus/orgs","repos_url":"https://api.github.com/users/intrigus/repos","events_url":"https://api.github.com/users/intrigus/events{/privacy}","received_events_url":"https://api.github.com/users/intrigus/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-01-30T19:31:52Z","updated_at":"2016-03-04T20:38:24Z","closed_at":"2016-02-14T19:23:26Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3809","html_url":"https://github.com/libgdx/libgdx/pull/3809","diff_url":"https://github.com/libgdx/libgdx/pull/3809.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3809.patch"},"body":"See https://github.com/libgdx/libgdx/pull/3803\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3809/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3808","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3808/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3808/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3808/events","html_url":"https://github.com/libgdx/libgdx/issues/3808","id":130017572,"number":3808,"title":"Quaternion.mulLeft(float,float,float,float) is incorrect","user":{"login":"tukez","id":5762429,"avatar_url":"https://avatars2.githubusercontent.com/u/5762429?v=4","gravatar_id":"","url":"https://api.github.com/users/tukez","html_url":"https://github.com/tukez","followers_url":"https://api.github.com/users/tukez/followers","following_url":"https://api.github.com/users/tukez/following{/other_user}","gists_url":"https://api.github.com/users/tukez/gists{/gist_id}","starred_url":"https://api.github.com/users/tukez/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tukez/subscriptions","organizations_url":"https://api.github.com/users/tukez/orgs","repos_url":"https://api.github.com/users/tukez/repos","events_url":"https://api.github.com/users/tukez/events{/privacy}","received_events_url":"https://api.github.com/users/tukez/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-01-30T17:49:41Z","updated_at":"2016-01-30T19:07:56Z","closed_at":"2016-01-30T19:07:56Z","author_association":"NONE","body":"Currently it is:\n\n``` java\npublic Quaternion mulLeft (final float x, final float y, final float z, final float w) {\n        final float newX = w * this.x + x * this.w + y * this.z - z * y;\n        final float newY = w * this.y + y * this.w + z * this.x - x * z;\n        final float newZ = w * this.z + z * this.w + x * this.y - y * x;\n        final float newW = w * this.w - x * this.x - y * this.y - z * z;\n        this.x = newX;\n        this.y = newY;\n        this.z = newZ;\n        this.w = newW;\n        return this;\n    }\n```\n\nIt should be:\n\n``` java\npublic Quaternion mulLeft (final float x, final float y, final float z, final float w) {\n        final float newX = w * this.x + x * this.w + y * this.z - z * this.y;\n        final float newY = w * this.y + y * this.w + z * this.x - x * this.z;\n        final float newZ = w * this.z + z * this.w + x * this.y - y * this.x;\n        final float newW = w * this.w - x * this.x - y * this.y - z * this.z;\n        this.x = newX;\n        this.y = newY;\n        this.z = newZ;\n        this.w = newW;\n        return this;\n    }\n```\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3808/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3807","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3807/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3807/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3807/events","html_url":"https://github.com/libgdx/libgdx/pull/3807","id":129986601,"number":3807,"title":"Add initial TextureArray wrapper","user":{"login":"Tom-Ski","id":4346114,"avatar_url":"https://avatars0.githubusercontent.com/u/4346114?v=4","gravatar_id":"","url":"https://api.github.com/users/Tom-Ski","html_url":"https://github.com/Tom-Ski","followers_url":"https://api.github.com/users/Tom-Ski/followers","following_url":"https://api.github.com/users/Tom-Ski/following{/other_user}","gists_url":"https://api.github.com/users/Tom-Ski/gists{/gist_id}","starred_url":"https://api.github.com/users/Tom-Ski/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Tom-Ski/subscriptions","organizations_url":"https://api.github.com/users/Tom-Ski/orgs","repos_url":"https://api.github.com/users/Tom-Ski/repos","events_url":"https://api.github.com/users/Tom-Ski/events{/privacy}","received_events_url":"https://api.github.com/users/Tom-Ski/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-01-30T13:31:21Z","updated_at":"2016-12-04T16:26:41Z","closed_at":"2016-01-30T21:37:18Z","author_association":"OWNER","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3807","html_url":"https://github.com/libgdx/libgdx/pull/3807","diff_url":"https://github.com/libgdx/libgdx/pull/3807.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3807.patch"},"body":"Adds support for TextureArray objects with LibGDX.\n\nThis requires GLES 3.0+ compatibility, and has been tested on android/lwjgl and lwjgl3 backends.\nA few tweaks were needed to the android and lwjgl graphics interfaces to correctly create an uninitialized 3D texture.\n\nSee the sample test case provided for usecase.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3807/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3806","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3806/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3806/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3806/events","html_url":"https://github.com/libgdx/libgdx/issues/3806","id":129984072,"number":3806,"title":"glTexImage3D (and other glTexImage methods) should accept null for pixel data","user":{"login":"shdwshard","id":2757939,"avatar_url":"https://avatars1.githubusercontent.com/u/2757939?v=4","gravatar_id":"","url":"https://api.github.com/users/shdwshard","html_url":"https://github.com/shdwshard","followers_url":"https://api.github.com/users/shdwshard/followers","following_url":"https://api.github.com/users/shdwshard/following{/other_user}","gists_url":"https://api.github.com/users/shdwshard/gists{/gist_id}","starred_url":"https://api.github.com/users/shdwshard/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/shdwshard/subscriptions","organizations_url":"https://api.github.com/users/shdwshard/orgs","repos_url":"https://api.github.com/users/shdwshard/repos","events_url":"https://api.github.com/users/shdwshard/events{/privacy}","received_events_url":"https://api.github.com/users/shdwshard/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-01-30T13:07:50Z","updated_at":"2016-01-30T22:25:45Z","closed_at":"2016-01-30T22:25:45Z","author_association":"NONE","body":"LwjglGL30 and Lwjgl3GL30 both contain substantively similar code what is quoted below:\n\n```\n@Override\npublic void glTexImage3D (int target, int level, int internalformat, int width, int height, int depth, int border, int format,\n    int type, Buffer pixels) {\n    if(pixels instanceof ByteBuffer) GL12.glTexImage3D(target, level, internalformat, width, height, depth, border, format, type, (ByteBuffer)pixels);\n    else throw new GdxRuntimeException(\"pixels must be byte buffer\");\n}\n```\n\nAccording to the OpenGL spec, this is incorrect (https://www.khronos.org/opengles/sdk/docs/man3/html/glTexImage3D.xhtml):\n\n> data may be a null pointer. In this case texture memory is allocated to accommodate a texture of width width, height height, and depth depth. You can then download subtextures to initialize this texture memory. The image is undefined if the user tries to apply an uninitialized portion of the texture image to a primitive.\n\nThe core issue is that passing null to the pixels variable, even if cast to ByteBuffer, may not be interpreted as a ByteBuffer, and hence may fail this instanceof check, even though the value is legal.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3806/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3805","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3805/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3805/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3805/events","html_url":"https://github.com/libgdx/libgdx/issues/3805","id":129976090,"number":3805,"title":"Intersector causes IllegalArgumentException when no overlap happens.","user":{"login":"azakhary","id":2115888,"avatar_url":"https://avatars0.githubusercontent.com/u/2115888?v=4","gravatar_id":"","url":"https://api.github.com/users/azakhary","html_url":"https://github.com/azakhary","followers_url":"https://api.github.com/users/azakhary/followers","following_url":"https://api.github.com/users/azakhary/following{/other_user}","gists_url":"https://api.github.com/users/azakhary/gists{/gist_id}","starred_url":"https://api.github.com/users/azakhary/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/azakhary/subscriptions","organizations_url":"https://api.github.com/users/azakhary/orgs","repos_url":"https://api.github.com/users/azakhary/repos","events_url":"https://api.github.com/users/azakhary/events{/privacy}","received_events_url":"https://api.github.com/users/azakhary/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2016-01-30T11:31:02Z","updated_at":"2016-03-14T16:00:01Z","closed_at":"2016-03-14T16:00:01Z","author_association":"CONTRIBUTOR","body":"Here at the line 213 of Intersector, when overlapping polygons, if no result is found, it returns the following:\n\n`overlap.setVertices(new float[0])`\n\nWhere overlap is a Polygon.\n\nIf we look at Polygon class, setVertices method states:\n`if (vertices.length < 6) throw new IllegalArgumentException(\"polygons must contain at least 3 points.\");`\n\nThus resulting in IllegalArgumentException. Instead of returning empty polygon.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3805/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3804","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3804/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3804/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3804/events","html_url":"https://github.com/libgdx/libgdx/issues/3804","id":129975887,"number":3804,"title":"Intersector duplicating vertices when overlapping polygon","user":{"login":"azakhary","id":2115888,"avatar_url":"https://avatars0.githubusercontent.com/u/2115888?v=4","gravatar_id":"","url":"https://api.github.com/users/azakhary","html_url":"https://github.com/azakhary","followers_url":"https://api.github.com/users/azakhary/followers","following_url":"https://api.github.com/users/azakhary/following{/other_user}","gists_url":"https://api.github.com/users/azakhary/gists{/gist_id}","starred_url":"https://api.github.com/users/azakhary/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/azakhary/subscriptions","organizations_url":"https://api.github.com/users/azakhary/orgs","repos_url":"https://api.github.com/users/azakhary/repos","events_url":"https://api.github.com/users/azakhary/events{/privacy}","received_events_url":"https://api.github.com/users/azakhary/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2016-01-30T11:28:20Z","updated_at":"2017-01-16T14:56:37Z","closed_at":"2016-04-02T16:23:22Z","author_association":"CONTRIBUTOR","body":"Intersector:\n`public static boolean intersectPolygons (Polygon p1, Polygon p2, Polygon overlap)`\n\nmethod is working presumably faulty for a specific scenario when intersecting polygons have exactly intersecting vertices, as a result this vertices get duplicated.\n\nHere is an example:\n![polytestdiag](https://cloud.githubusercontent.com/assets/2115888/12695409/b3a08cbe-c766-11e5-8f26-125b3b726409.png)\n\nThe resulting overlap polygon has A and B vertices duplicated, resulting in a 10 size array of floats.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3804/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3803","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3803/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3803/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3803/events","html_url":"https://github.com/libgdx/libgdx/pull/3803","id":129970695,"number":3803,"title":"Fix wrong buffer clear","user":{"login":"fogone","id":998781,"avatar_url":"https://avatars0.githubusercontent.com/u/998781?v=4","gravatar_id":"","url":"https://api.github.com/users/fogone","html_url":"https://github.com/fogone","followers_url":"https://api.github.com/users/fogone/followers","following_url":"https://api.github.com/users/fogone/following{/other_user}","gists_url":"https://api.github.com/users/fogone/gists{/gist_id}","starred_url":"https://api.github.com/users/fogone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fogone/subscriptions","organizations_url":"https://api.github.com/users/fogone/orgs","repos_url":"https://api.github.com/users/fogone/repos","events_url":"https://api.github.com/users/fogone/events{/privacy}","received_events_url":"https://api.github.com/users/fogone/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-01-30T10:29:22Z","updated_at":"2016-01-30T11:20:43Z","closed_at":"2016-01-30T11:20:42Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3803","html_url":"https://github.com/libgdx/libgdx/pull/3803","diff_url":"https://github.com/libgdx/libgdx/pull/3803.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3803.patch"},"body":"In `LwjglGL20.toIntBuffer` use `intBuffer` instance to pass it to `gl*` functions, but before coping clear `floatBuffer` instance.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3803/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3802","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3802/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3802/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3802/events","html_url":"https://github.com/libgdx/libgdx/pull/3802","id":129968113,"number":3802,"title":"Add CameraHelper","user":{"login":"realitix","id":6367936,"avatar_url":"https://avatars1.githubusercontent.com/u/6367936?v=4","gravatar_id":"","url":"https://api.github.com/users/realitix","html_url":"https://github.com/realitix","followers_url":"https://api.github.com/users/realitix/followers","following_url":"https://api.github.com/users/realitix/following{/other_user}","gists_url":"https://api.github.com/users/realitix/gists{/gist_id}","starred_url":"https://api.github.com/users/realitix/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/realitix/subscriptions","organizations_url":"https://api.github.com/users/realitix/orgs","repos_url":"https://api.github.com/users/realitix/repos","events_url":"https://api.github.com/users/realitix/events{/privacy}","received_events_url":"https://api.github.com/users/realitix/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2016-01-30T09:56:23Z","updated_at":"2016-02-11T15:50:27Z","closed_at":"2016-02-11T15:50:19Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3802","html_url":"https://github.com/libgdx/libgdx/pull/3802","diff_url":"https://github.com/libgdx/libgdx/pull/3802.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3802.patch"},"body":"CameraHelper help you to visualize your camera in 3D space.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3802/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3801","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3801/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3801/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3801/events","html_url":"https://github.com/libgdx/libgdx/issues/3801","id":129956075,"number":3801,"title":"com.badlogic.gdx.backends.lwjgl.LwjglGL20.toIntBuffer problem","user":{"login":"fogone","id":998781,"avatar_url":"https://avatars0.githubusercontent.com/u/998781?v=4","gravatar_id":"","url":"https://api.github.com/users/fogone","html_url":"https://github.com/fogone","followers_url":"https://api.github.com/users/fogone/followers","following_url":"https://api.github.com/users/fogone/following{/other_user}","gists_url":"https://api.github.com/users/fogone/gists{/gist_id}","starred_url":"https://api.github.com/users/fogone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fogone/subscriptions","organizations_url":"https://api.github.com/users/fogone/orgs","repos_url":"https://api.github.com/users/fogone/repos","events_url":"https://api.github.com/users/fogone/events{/privacy}","received_events_url":"https://api.github.com/users/fogone/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-01-30T08:13:29Z","updated_at":"2016-01-30T09:16:22Z","closed_at":"2016-01-30T09:16:22Z","author_association":"CONTRIBUTOR","body":"``` java\n    private IntBuffer toIntBuffer (int v[], int offset, int count) {\n        ensureBufferCapacity(count << 2);\n        floatBuffer.clear(); // !!!! we use intBuffer, but clear floatBuffer\n        com.badlogic.gdx.utils.BufferUtils.copy(v, count, offset, intBuffer);\n        return intBuffer;\n    }\n```\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3801/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3800","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3800/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3800/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3800/events","html_url":"https://github.com/libgdx/libgdx/issues/3800","id":129907628,"number":3800,"title":"hiero do not create some glyphs","user":{"login":"serpent7776","id":3284364,"avatar_url":"https://avatars1.githubusercontent.com/u/3284364?v=4","gravatar_id":"","url":"https://api.github.com/users/serpent7776","html_url":"https://github.com/serpent7776","followers_url":"https://api.github.com/users/serpent7776/followers","following_url":"https://api.github.com/users/serpent7776/following{/other_user}","gists_url":"https://api.github.com/users/serpent7776/gists{/gist_id}","starred_url":"https://api.github.com/users/serpent7776/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/serpent7776/subscriptions","organizations_url":"https://api.github.com/users/serpent7776/orgs","repos_url":"https://api.github.com/users/serpent7776/repos","events_url":"https://api.github.com/users/serpent7776/events{/privacy}","received_events_url":"https://api.github.com/users/serpent7776/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2016-01-29T23:06:57Z","updated_at":"2017-08-22T19:45:07Z","closed_at":null,"author_association":"CONTRIBUTOR","body":"Sometimes hiero do not create glyphs on the generated texture, but there is entry in *.fnt file. For example in attached fnt file there is entry for char `id=21457`, but glyph for this character does not exist on generated texture. In fact glyph's coordinates exceed texture size. For mentioned character coordinates in *.fnt file are\n`x=0    y=945  width=164  height=153`\nTexture size is set to 1024x1024 and 945+153 exceedes this size.\nI noticed this only when used with big font sizes and only when multiple pages are created.\nI attach generated *.fnt file and *.hiero settings file. I could also attach generated textures if that helps.\n\n[test.fnt.txt](https://github.com/libgdx/libgdx/files/110512/test.fnt.txt)\n[test.hiero.txt](https://github.com/libgdx/libgdx/files/110514/test.hiero.txt)\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3800/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3799","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3799/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3799/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3799/events","html_url":"https://github.com/libgdx/libgdx/pull/3799","id":129852540,"number":3799,"title":"Polygon sprite with repeating TextureRegion by triangulating to a uniform grid","user":{"login":"azakhary","id":2115888,"avatar_url":"https://avatars0.githubusercontent.com/u/2115888?v=4","gravatar_id":"","url":"https://api.github.com/users/azakhary","html_url":"https://github.com/azakhary","followers_url":"https://api.github.com/users/azakhary/followers","following_url":"https://api.github.com/users/azakhary/following{/other_user}","gists_url":"https://api.github.com/users/azakhary/gists{/gist_id}","starred_url":"https://api.github.com/users/azakhary/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/azakhary/subscriptions","organizations_url":"https://api.github.com/users/azakhary/orgs","repos_url":"https://api.github.com/users/azakhary/repos","events_url":"https://api.github.com/users/azakhary/events{/privacy}","received_events_url":"https://api.github.com/users/azakhary/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":42,"created_at":"2016-01-29T18:57:00Z","updated_at":"2017-02-17T02:38:24Z","closed_at":"2016-12-02T00:47:26Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3799","html_url":"https://github.com/libgdx/libgdx/pull/3799","diff_url":"https://github.com/libgdx/libgdx/pull/3799.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3799.patch"},"body":"**Problem**\nI wanted to make a class, that will render a custom shaped polygon that is filled with repeating TextureRegion. This was possible to do with PolygonSprite class if \"Texture\" is used. But most use case require using TextureRegion instead. As a temporary solution, previously I was using PolygonSprite and a custom shader to which I was passing u/v data in order to render this. But this was bad too because it causes additional render call for each polygon, which sucks.\n\n**Solution**\nI propose using this class instead. In short it triangulates a polygon to a \"grid\" so that we can easily specify all u/v coordinates and pass this directly to PolygonSpriteBatch.\n\n![schmatic2](https://cloud.githubusercontent.com/assets/2115888/12684968/0462ef5c-c6db-11e5-8608-f7056757efb5.png)\n\nIn order to avoid being murdered by @xoppa , a density variable is passed to specify the \"grid\" density, thus eliminating any connection to actual pixel size of texture region.\n\nI did some testing and it seems to work fine, but at this stage it is not yet ready to merge, I would be happy if you guys can:\na) decide if you need this at all in libgdx - maybe many reasons why you do not\nb) see if initial idea looks well implemented, test and so on\n\nI will do some additional fixes/additions/pushes during the weekend.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3799/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}}],"meta":{"x-ratelimit-limit":"5000","x-ratelimit-remaining":"4963","x-ratelimit-reset":"1506844633","x-github-request-id":"CBBC:028A:1AACAEF:2EC018C:59D0942B","x-github-media-type":"github.squirrel-girl-preview","link":"<https://api.github.com/repositories/5373551/issues?state=all&page=38>; rel=\"next\", <https://api.github.com/repositories/5373551/issues?state=all&page=164>; rel=\"last\", <https://api.github.com/repositories/5373551/issues?state=all&page=1>; rel=\"first\", <https://api.github.com/repositories/5373551/issues?state=all&page=36>; rel=\"prev\"","etag":"\"aecf5a1ef649165b67874ba5f41e0542\"","status":"200 OK"}}
