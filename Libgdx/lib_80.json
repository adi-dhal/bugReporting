{"data":[{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2535","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2535/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2535/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2535/events","html_url":"https://github.com/libgdx/libgdx/issues/2535","id":47519623,"number":2535,"title":"\"C++ destructor does not have public access\" after using onContactAdded","user":{"login":"ghost","id":10137,"avatar_url":"https://avatars3.githubusercontent.com/u/10137?v=4","gravatar_id":"","url":"https://api.github.com/users/ghost","html_url":"https://github.com/ghost","followers_url":"https://api.github.com/users/ghost/followers","following_url":"https://api.github.com/users/ghost/following{/other_user}","gists_url":"https://api.github.com/users/ghost/gists{/gist_id}","starred_url":"https://api.github.com/users/ghost/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ghost/subscriptions","organizations_url":"https://api.github.com/users/ghost/orgs","repos_url":"https://api.github.com/users/ghost/repos","events_url":"https://api.github.com/users/ghost/events{/privacy}","received_events_url":"https://api.github.com/users/ghost/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-11-01T22:50:03Z","updated_at":"2014-11-02T22:23:00Z","closed_at":"2014-11-02T22:23:00Z","author_association":"NONE","body":"TEST CASE\n- use Java 8 SDK (any update)\n- download libGDX 1.4.1, set up a trivial test case using https://github.com/xoppa/blog/blob/master/tutorials/src/com/xoppa/blog/libgdx/g3d/bullet/collision/step5/BulletTest.java#L46\n- compile, build & run\n\nRESULT\nException in thread \"LWJGL Application\" java.lang.UnsupportedOperationException: C++ destructor does not have public access\n        at com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper.delete(btCollisionObjectWrapper.java:47)\n        at com.badlogic.gdx.physics.bullet.BulletBase.dispose(BulletBase.java:104)\n        at com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper.free(btCollisionObjectWrapper.java:75)\n        at com.badlogic.gdx.physics.bullet.collision.CollisionJNI.btCollisionAlgorithm_processCollision(Native Method)\n        at com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithm.processCollision(btCollisionAlgorithm.java:62)\n        at com.mygdx.game.desktop.BulletTest.checkCollision(DesktopLauncher.java:218)\n        at com.mygdx.game.desktop.BulletTest.render(DesktopLauncher.java:190)\n        at com.badlogic.gdx.backends.lwjgl.LwjglApplication.mainLoop(LwjglApplication.java:207)\n        at com.badlogic.gdx.backends.lwjgl.LwjglApplication$1.run(LwjglApplication.java:114)\n\nEXPECTED RESULT\nTests completing properly.\n\nNOTES\nThis _does_ happen on both Java8u5 & Java8u25, on two different desktop machines (one XP SP3, one Windows 7), and, as far as I managed to track it, happens because obtain() is called with `own = true` it reset()s result.reset(cPtr, own); ownership of btCollisionObjectWrapper to `true`, resulting in swigCMemOwn == true, which in turn makes delete() (executed after returning from onContactAdded) throw the exception shown above.\n\nDoes **not** happen on Java 7.\n\nWORKAROUND\n\n```\n        colObj0.releaseOwnership();\n        colObj1.releaseOwnership();\n```\n\nbefore returning from onContactAdded() makes the issue go away.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2535/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2534","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2534/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2534/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2534/events","html_url":"https://github.com/libgdx/libgdx/issues/2534","id":47519009,"number":2534,"title":"native btAdjustInternalEdgeContacts implementation","user":{"login":"ghost","id":10137,"avatar_url":"https://avatars3.githubusercontent.com/u/10137?v=4","gravatar_id":"","url":"https://api.github.com/users/ghost","html_url":"https://github.com/ghost","followers_url":"https://api.github.com/users/ghost/followers","following_url":"https://api.github.com/users/ghost/following{/other_user}","gists_url":"https://api.github.com/users/ghost/gists{/gist_id}","starred_url":"https://api.github.com/users/ghost/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ghost/subscriptions","organizations_url":"https://api.github.com/users/ghost/orgs","repos_url":"https://api.github.com/users/ghost/repos","events_url":"https://api.github.com/users/ghost/events{/privacy}","received_events_url":"https://api.github.com/users/ghost/received_events","type":"User","site_admin":false},"labels":[{"id":11336982,"url":"https://api.github.com/repos/libgdx/libgdx/labels/enhancement","name":"enhancement","color":"84b6eb","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2014-11-01T22:21:57Z","updated_at":"2014-11-09T14:28:32Z","closed_at":"2014-11-08T13:31:16Z","author_association":"NONE","body":"Currently using btAdjustInternalEdgeContacts (to allow smooth movement of objects vs triangle meshes) required to hook it to ContactListener manually, delegating the call from Java (app) to native (discrete world step) to Java (onContactAdded) to native (btAdjustInternalEdgeContacts) again. Since it's a possible efficiency bottleneck and it increases the complexity of the code required to handle such cases (triMesh collisions), the proposed solution would be to e.g. add a boolean switch to ContactListener, with btAdjustInternalEdgeContacts called automagically when it's true on every entry to onContactAdded when one of the surfaces is a triangle mesh.\n\nNote: based on current Bullet implementation (http://bulletphysics.org/Bullet/BulletFull/btInternalEdgeUtility_8cpp_source.html & http://bullet.googlecode.com/svn/trunk/Demos/InternalEdgeDemo/InternalEdgeDemo.cpp) I'd like to also note that btAdjustInternalEdgeContacts does a couple of not-so-trivial checks (i.e. if the obj0 is the tri mesh and if it has all the necessary data already set in triangleInfoMapPtr) before it actually processes the edge contacts, returning gracefully if the conditions are not met - as such, we don't have to worry about it ourselves, simple\n\n``` java\nif ( adjustInternalEdgeContacts ) {\n    Collision.btAdjustInternalEdgeContacts(cp,colObj1Wrap,colObj0Wrap, partId1,index1);\n}\n```\n\nbefore delegating the call to user's onContactAdded implementation coupled with setter for `adjustInternalEdgeContacts` in ContactListener is IMO the solution here.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2534/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2533","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2533/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2533/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2533/events","html_url":"https://github.com/libgdx/libgdx/pull/2533","id":47468872,"number":2533,"title":"Removed unnecessary code","user":{"login":"obigu","id":1794492,"avatar_url":"https://avatars0.githubusercontent.com/u/1794492?v=4","gravatar_id":"","url":"https://api.github.com/users/obigu","html_url":"https://github.com/obigu","followers_url":"https://api.github.com/users/obigu/followers","following_url":"https://api.github.com/users/obigu/following{/other_user}","gists_url":"https://api.github.com/users/obigu/gists{/gist_id}","starred_url":"https://api.github.com/users/obigu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/obigu/subscriptions","organizations_url":"https://api.github.com/users/obigu/orgs","repos_url":"https://api.github.com/users/obigu/repos","events_url":"https://api.github.com/users/obigu/events{/privacy}","received_events_url":"https://api.github.com/users/obigu/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2014-11-01T01:31:01Z","updated_at":"2014-11-01T02:09:44Z","closed_at":"2014-11-01T02:09:44Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2533","html_url":"https://github.com/libgdx/libgdx/pull/2533","diff_url":"https://github.com/libgdx/libgdx/pull/2533.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2533.patch"},"body":"Removed unneeded calculations in Scaling class\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2533/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2532","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2532/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2532/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2532/events","html_url":"https://github.com/libgdx/libgdx/pull/2532","id":47434315,"number":2532,"title":"fix error when building native libraries","user":{"login":"vmilea","id":278476,"avatar_url":"https://avatars1.githubusercontent.com/u/278476?v=4","gravatar_id":"","url":"https://api.github.com/users/vmilea","html_url":"https://github.com/vmilea","followers_url":"https://api.github.com/users/vmilea/followers","following_url":"https://api.github.com/users/vmilea/following{/other_user}","gists_url":"https://api.github.com/users/vmilea/gists{/gist_id}","starred_url":"https://api.github.com/users/vmilea/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vmilea/subscriptions","organizations_url":"https://api.github.com/users/vmilea/orgs","repos_url":"https://api.github.com/users/vmilea/repos","events_url":"https://api.github.com/users/vmilea/events{/privacy}","received_events_url":"https://api.github.com/users/vmilea/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2014-10-31T19:14:59Z","updated_at":"2014-11-01T22:00:53Z","closed_at":"2014-11-01T22:00:53Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2532","html_url":"https://github.com/libgdx/libgdx/pull/2532","diff_url":"https://github.com/libgdx/libgdx/pull/2532.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2532.patch"},"body":"Building of native libraries was failing because of missing directories. The compile-natives target should have an additional mkdir for macosx64.\n\nUnrelated - shouldn't the library version (1.3.1-SNAPSHOT) be updated?\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2532/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2531","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2531/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2531/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2531/events","html_url":"https://github.com/libgdx/libgdx/pull/2531","id":47389365,"number":2531,"title":"gdx-video","user":{"login":"Robbiedobbie","id":4340484,"avatar_url":"https://avatars0.githubusercontent.com/u/4340484?v=4","gravatar_id":"","url":"https://api.github.com/users/Robbiedobbie","html_url":"https://github.com/Robbiedobbie","followers_url":"https://api.github.com/users/Robbiedobbie/followers","following_url":"https://api.github.com/users/Robbiedobbie/following{/other_user}","gists_url":"https://api.github.com/users/Robbiedobbie/gists{/gist_id}","starred_url":"https://api.github.com/users/Robbiedobbie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Robbiedobbie/subscriptions","organizations_url":"https://api.github.com/users/Robbiedobbie/orgs","repos_url":"https://api.github.com/users/Robbiedobbie/repos","events_url":"https://api.github.com/users/Robbiedobbie/events{/privacy}","received_events_url":"https://api.github.com/users/Robbiedobbie/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":14,"created_at":"2014-10-31T12:34:02Z","updated_at":"2015-01-19T12:56:05Z","closed_at":"2015-01-19T12:54:04Z","author_association":"MEMBER","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2531","html_url":"https://github.com/libgdx/libgdx/pull/2531","diff_url":"https://github.com/libgdx/libgdx/pull/2531.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2531.patch"},"body":"This introduces a video rendering extension that works on both desktop and android. Currently there's no support for iOS and GWT.\nBy default it renders full-screen. Rendering using a parameter viewport, and/or to a custom mesh is supported.\n\nOn default, it does not have a common video codec working on all platforms. Theora video with vorbis audio is supported on Desktop. Android supports all media formats that the native android player on a device supports (an overview of those formats can be found [here](http://developer.android.com/guide/appendix/media-formats.html)).  Desktop can be extended to support all codecs supported by ffmpeg by recompiling ffmpeg with different targets; however this may move the license from LGPL to GPL. It may also lead into patent licensing issues. More information on this can be found [here](https://www.ffmpeg.org/legal.html). In the future, VP8 might be added to the default ffmpeg compile, since it is royalty free.\n\nCurrently, only some licensing issues remain. I want to ask you how this is normally handled for dependencies.\n- All the code still needs license headers in them. Do you have a tool for this?\n- Because FFmpeg is licensed with the LGPL (2.1) license, we need to distribute source files with it. We also have to make clear it uses ffmpeg, and have a tutorial on recompiling. I take it that the tutorial can be done on the wiki, but how do you guys distribute licenses/sources for external dependencies? Is there a general structure for this, or should this be done by the user of the extension?\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2531/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2530","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2530/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2530/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2530/events","html_url":"https://github.com/libgdx/libgdx/pull/2530","id":47379859,"number":2530,"title":"correct color scaling in vertex shader","user":{"login":"vmilea","id":278476,"avatar_url":"https://avatars1.githubusercontent.com/u/278476?v=4","gravatar_id":"","url":"https://api.github.com/users/vmilea","html_url":"https://github.com/vmilea","followers_url":"https://api.github.com/users/vmilea/followers","following_url":"https://api.github.com/users/vmilea/following{/other_user}","gists_url":"https://api.github.com/users/vmilea/gists{/gist_id}","starred_url":"https://api.github.com/users/vmilea/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vmilea/subscriptions","organizations_url":"https://api.github.com/users/vmilea/orgs","repos_url":"https://api.github.com/users/vmilea/repos","events_url":"https://api.github.com/users/vmilea/events{/privacy}","received_events_url":"https://api.github.com/users/vmilea/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2014-10-31T10:29:10Z","updated_at":"2014-10-31T10:49:38Z","closed_at":"2014-10-31T10:49:38Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2530","html_url":"https://github.com/libgdx/libgdx/pull/2530","diff_url":"https://github.com/libgdx/libgdx/pull/2530.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2530.patch"},"body":"Nitpicking, but fix for #1815 didn't get the ratio exactly right.\n\n```\nfloat truncated = 0xFE / 255.0f;\nSystem.out.println(truncated * (256.0f / 255.0f)); // 0.9999847\nSystem.out.println(truncated * (255.0f / 254.0f)); // 1.0\n```\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2530/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2529","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2529/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2529/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2529/events","html_url":"https://github.com/libgdx/libgdx/issues/2529","id":47370058,"number":2529,"title":"update java doch Label.setEllipse","user":{"login":"mk1x86","id":4849383,"avatar_url":"https://avatars2.githubusercontent.com/u/4849383?v=4","gravatar_id":"","url":"https://api.github.com/users/mk1x86","html_url":"https://github.com/mk1x86","followers_url":"https://api.github.com/users/mk1x86/followers","following_url":"https://api.github.com/users/mk1x86/following{/other_user}","gists_url":"https://api.github.com/users/mk1x86/gists{/gist_id}","starred_url":"https://api.github.com/users/mk1x86/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mk1x86/subscriptions","organizations_url":"https://api.github.com/users/mk1x86/orgs","repos_url":"https://api.github.com/users/mk1x86/repos","events_url":"https://api.github.com/users/mk1x86/events{/privacy}","received_events_url":"https://api.github.com/users/mk1x86/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2014-10-31T08:14:43Z","updated_at":"2014-10-31T09:19:00Z","closed_at":"2014-10-31T09:19:00Z","author_association":"NONE","body":"This should be setEllipsis, not setEllipse. I also strongly advise to add \"...\" somewhere in the method description because most people are not familiar with this term.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2529/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2528","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2528/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2528/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2528/events","html_url":"https://github.com/libgdx/libgdx/pull/2528","id":47355761,"number":2528,"title":"Use IntMap to store pointer against pointer UUID. Fixes #2516","user":{"login":"Tom-Ski","id":4346114,"avatar_url":"https://avatars0.githubusercontent.com/u/4346114?v=4","gravatar_id":"","url":"https://api.github.com/users/Tom-Ski","html_url":"https://github.com/Tom-Ski","followers_url":"https://api.github.com/users/Tom-Ski/followers","following_url":"https://api.github.com/users/Tom-Ski/following{/other_user}","gists_url":"https://api.github.com/users/Tom-Ski/gists{/gist_id}","starred_url":"https://api.github.com/users/Tom-Ski/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Tom-Ski/subscriptions","organizations_url":"https://api.github.com/users/Tom-Ski/orgs","repos_url":"https://api.github.com/users/Tom-Ski/repos","events_url":"https://api.github.com/users/Tom-Ski/events{/privacy}","received_events_url":"https://api.github.com/users/Tom-Ski/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2014-10-31T02:49:24Z","updated_at":"2014-12-04T21:15:15Z","closed_at":"2014-10-31T10:37:18Z","author_association":"OWNER","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2528","html_url":"https://github.com/libgdx/libgdx/pull/2528","diff_url":"https://github.com/libgdx/libgdx/pull/2528.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2528.patch"},"body":"Safari on iOS 8 does not reset its unique identifier for a touch.  This maps the unique identifier for the touch against pointer values 0-20.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2528/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2527","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2527/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2527/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2527/events","html_url":"https://github.com/libgdx/libgdx/pull/2527","id":47346510,"number":2527,"title":"Allow libgdx to function under 3.2 core profile on desktop.","user":{"login":"NateAustin","id":6526816,"avatar_url":"https://avatars3.githubusercontent.com/u/6526816?v=4","gravatar_id":"","url":"https://api.github.com/users/NateAustin","html_url":"https://github.com/NateAustin","followers_url":"https://api.github.com/users/NateAustin/followers","following_url":"https://api.github.com/users/NateAustin/following{/other_user}","gists_url":"https://api.github.com/users/NateAustin/gists{/gist_id}","starred_url":"https://api.github.com/users/NateAustin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NateAustin/subscriptions","organizations_url":"https://api.github.com/users/NateAustin/orgs","repos_url":"https://api.github.com/users/NateAustin/repos","events_url":"https://api.github.com/users/NateAustin/events{/privacy}","received_events_url":"https://api.github.com/users/NateAustin/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":24,"created_at":"2014-10-30T23:54:52Z","updated_at":"2015-03-14T15:59:12Z","closed_at":"2015-03-14T15:59:12Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2527","html_url":"https://github.com/libgdx/libgdx/pull/2527","diff_url":"https://github.com/libgdx/libgdx/pull/2527.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2527.patch"},"body":"In core profiles glGetString(GL_EXTENSIONS) is deprecated, so a new mechanism is used to test for extensions.\n\nIn core profiles VAOs are mandatory, and VertexAttribPointer cannot use\nclient memory, so I introduced a parallel VertexData implementation,\nVertexBufferObjectWithVAO, that is used when gl3 is available.\n\nI have tested on my windows desktop. This fixes the behavior of SpriteBatch and works with my plain Meshes and Shaders. Everything appears to be working now in the core profile.\n\nI have not tested on mac or mobile.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2527/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2526","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2526/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2526/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2526/events","html_url":"https://github.com/libgdx/libgdx/pull/2526","id":47312386,"number":2526,"title":"Lwjgl backend doesn't support OpenGL ES 3.2+ #2087","user":{"login":"NateAustin","id":6526816,"avatar_url":"https://avatars3.githubusercontent.com/u/6526816?v=4","gravatar_id":"","url":"https://api.github.com/users/NateAustin","html_url":"https://github.com/NateAustin","followers_url":"https://api.github.com/users/NateAustin/followers","following_url":"https://api.github.com/users/NateAustin/following{/other_user}","gists_url":"https://api.github.com/users/NateAustin/gists{/gist_id}","starred_url":"https://api.github.com/users/NateAustin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NateAustin/subscriptions","organizations_url":"https://api.github.com/users/NateAustin/orgs","repos_url":"https://api.github.com/users/NateAustin/repos","events_url":"https://api.github.com/users/NateAustin/events{/privacy}","received_events_url":"https://api.github.com/users/NateAustin/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2014-10-30T18:55:24Z","updated_at":"2014-10-30T21:57:46Z","closed_at":"2014-10-30T21:52:48Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2526","html_url":"https://github.com/libgdx/libgdx/pull/2526","diff_url":"https://github.com/libgdx/libgdx/pull/2526.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2526.patch"},"body":"This fixes an issue where libgdx is basically non-functional in 3.2 profiles on desktop.\n\nThe change is that Mesh must use (new class) VertexBufferObjectWithVAO in 3.2 because use of VAOs is mandatory in 3.2 core profiles.\n\nI've tested this on my windows machine, I have not tested on mac or mobile.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2526/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2525","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2525/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2525/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2525/events","html_url":"https://github.com/libgdx/libgdx/pull/2525","id":47301720,"number":2525,"title":"TextureAtlas - ETC1 compression with transparency","user":{"login":"vmilea","id":278476,"avatar_url":"https://avatars1.githubusercontent.com/u/278476?v=4","gravatar_id":"","url":"https://api.github.com/users/vmilea","html_url":"https://github.com/vmilea","followers_url":"https://api.github.com/users/vmilea/followers","following_url":"https://api.github.com/users/vmilea/following{/other_user}","gists_url":"https://api.github.com/users/vmilea/gists{/gist_id}","starred_url":"https://api.github.com/users/vmilea/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vmilea/subscriptions","organizations_url":"https://api.github.com/users/vmilea/orgs","repos_url":"https://api.github.com/users/vmilea/repos","events_url":"https://api.github.com/users/vmilea/events{/privacy}","received_events_url":"https://api.github.com/users/vmilea/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2014-10-30T17:29:30Z","updated_at":"2016-11-03T09:44:37Z","closed_at":"2015-02-02T17:20:46Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2525","html_url":"https://github.com/libgdx/libgdx/pull/2525","diff_url":"https://github.com/libgdx/libgdx/pull/2525.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2525.patch"},"body":"This adds a few of things:\n1. Support for `outputFormat: etc1` to the `TexturePacker`.\n2. An additional packer property `maskFormat: none / png / jpg / etc1` to export the alpha channel as a separate assset.\n3. Support for loading and rendering masked textures.\n\nMain drawback of etc1 is lack of support for transparency but there are some [workarounds](http://malideveloper.arm.com/develop-for-mali/sample-code/etcv1-texture-compression-and-alpha-channels). Methods 2 & 3 from the article are currently implemented.\n\nAt runtime, the mask gets loaded automatically along with the main texture. The two textures are wrapped into a `CompositeTexture` and bound to different texture units. The only requirement on the user's part is to apply the `MaskShader` which mixes color with mask alpha. Please see the included test.\n\nIn practice:\n- assets that need transparency but don't compress well as png can now be stored in a lossy format. My app size dropped around 3x.\n- vram savings:\n  - 6x from RGB888 to ETC1_RGB8\n  - 4x from RGBA8888 to (ETC1_RGB8 + ETC1_RGB8)\n  - 2.6x from RGBA8888 to (ETC1_RGB8 + LUMINANCE)\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2525/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2524","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2524/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2524/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2524/events","html_url":"https://github.com/libgdx/libgdx/issues/2524","id":47281962,"number":2524,"title":"LwjglInput numeric keyboard keycode mismatches","user":{"login":"ghost","id":10137,"avatar_url":"https://avatars3.githubusercontent.com/u/10137?v=4","gravatar_id":"","url":"https://api.github.com/users/ghost","html_url":"https://github.com/ghost","followers_url":"https://api.github.com/users/ghost/followers","following_url":"https://api.github.com/users/ghost/following{/other_user}","gists_url":"https://api.github.com/users/ghost/gists{/gist_id}","starred_url":"https://api.github.com/users/ghost/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ghost/subscriptions","organizations_url":"https://api.github.com/users/ghost/orgs","repos_url":"https://api.github.com/users/ghost/repos","events_url":"https://api.github.com/users/ghost/events{/privacy}","received_events_url":"https://api.github.com/users/ghost/received_events","type":"User","site_admin":false},"labels":[{"id":119244972,"url":"https://api.github.com/repos/libgdx/libgdx/labels/desktop","name":"desktop","color":"eb6420","default":false},{"id":11336982,"url":"https://api.github.com/repos/libgdx/libgdx/labels/enhancement","name":"enhancement","color":"84b6eb","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2014-10-30T15:12:46Z","updated_at":"2016-08-07T01:20:35Z","closed_at":"2016-08-07T01:20:35Z","author_association":"NONE","body":"Current implementation has one serious flaw: while it allows to easily recognize numpad 0-9, and + \\* keys, as well as NumLock (named Num in Keys class for some reason), it makes it completely impossible to distinguish numpad Enter, slash, minus and period from regular one - and this distinction is quite important in many games. It wouldn't be a problem for KeyTyped, but it certainly is bad for KeyDown, as it breaks the \"one key, one keycode\" principle - I know it's not the case in 100%, but at least POLA requires to try to stick to it, and it _does_ work for every other key on my keyboard, with exception of those unlucky two.\n\nLWJGL offers this possibility natively, and since desktop is IMO actually the only platform that should get this correction, I reckon it shouldn't break any compatibility whatsoever. The outline of my proposal is as follows:\n\n_com.badlogic.gdx.Input.java_, _Keys_ class\n\n``` java\n        public static final int NUMPAD_9 = 153;\n```\n\nchanged to \n\n``` java\n        public static final int NUMPAD_9 = 153;\n\n        public static final int NUMPAD_DIVIDE = 154;\n        public static final int NUMPAD_MULTIPLY = 155;\n        public static final int NUMPAD_SUBTRACT= 156;\n        public static final int NUMPAD_ADD = 157;\n        public static final int NUMPAD_DOT = 158;\n        public static final int NUMPAD_COMMA= 159;\n        public static final int NUMPAD_ENTER = 160;\n\n        public static final int NUMLOCK = NUM; // to keep the backward compatibility but offer a more \"regular\" name, as per http://en.wikipedia.org/wiki/Num_lock\n```\n\nand to _com.badlogic.gdx.backends.lwjgl.LwjglInput.java_\nin _getGdxKeyCode()_\n\n``` java\ncase Keyboard.KEY_NUMLOCK:\nreturn Input.Keys.NUMLOCK;\ncase Keyboard.KEY_DECIMAL:\nreturn Input.Keys.NUMPAD_DOT;\ncase Keyboard.KEY_DIVIDE:\nreturn Input.Keys.SLASH;\ncase Keyboard.KEY_LMETA:\nreturn Input.Keys.SYM;\ncase Keyboard.KEY_RMETA:\nreturn Input.Keys.SYM;\ncase Keyboard.KEY_NUMPADEQUALS:\nreturn Input.Keys.EQUALS;\ncase Keyboard.KEY_AT:\nreturn Input.Keys.AT;\ncase Keyboard.KEY_EQUALS:\nreturn Input.Keys.EQUALS;\ncase Keyboard.KEY_NUMPADCOMMA:\nreturn Input.Keys.COMMA;\ncase Keyboard.KEY_NUMPADENTER:\nreturn Input.Keys.ENTER;\n```\n\nto\n\n``` java\ncase Keyboard.KEY_NUMLOCK:\nreturn Input.Keys.NUMLOCK;\ncase Keyboard.KEY_DECIMAL:\nreturn Input.Keys.NUMPAD_DOT;\ncase Keyboard.KEY_DIVIDE:\nreturn Input.Keys.SLASH;\ncase Keyboard.KEY_LMETA:\nreturn Input.Keys.SYM;\ncase Keyboard.KEY_RMETA:\nreturn Input.Keys.SYM;\ncase Keyboard.KEY_NUMPADEQUALS:\nreturn Input.Keys.EQUALS;\ncase Keyboard.KEY_AT:\nreturn Input.Keys.AT;\ncase Keyboard.KEY_EQUALS:\nreturn Input.Keys.EQUALS;\ncase Keyboard.KEY_NUMPADCOMMA:\nreturn Input.Keys.NUMPAD_COMMA;\ncase Keyboard.KEY_NUMPADENTER:\nreturn Input.Keys.NUMPAD_ENTER;\n```\n\nand (in _getLwjglKeyCode()_)\n\n``` java\ncase Input.Keys.NUMPAD_9:\nreturn Keyboard.KEY_NUMPAD9;\n```\n\nto\n\n``` java\ncase Input.Keys.NUMPAD_9:\nreturn Keyboard.KEY_NUMPAD9;\ncase Input.Keys.NUMPAD_ENTER:\nreturn Keyboard.KEY_NUMPADENTER;\ncase Input.Keys.NUMPAD_DOT:\nreturn Keyboard.KEY_DECIMAL;\ncase Input.Keys.NUMPAD_COMMA:\nreturn Keyboard.KEY_NUMPADCOMMA;\n```\n\nand so on for other numpad keys (/ and, possibly, + - *)\n\nPS. Is changing current case-based key matching to map-based one sensible? AFAIK Java does that internally for big switch/case blocks in newest versions, but counting on that for Java 6 is a bit far-fetched IMO (and I don't know if Delvik is doing that at all); I use LwjglInput changed to map-based keycode translation myself, so if you consider this change sensible I'll gladly contribute the code. It shortens the keycode translation code in half, BTW.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2524/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2523","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2523/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2523/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2523/events","html_url":"https://github.com/libgdx/libgdx/issues/2523","id":47279599,"number":2523,"title":"Add the possibility to change the fade out time of dialog forms","user":{"login":"omicroh","id":1964289,"avatar_url":"https://avatars0.githubusercontent.com/u/1964289?v=4","gravatar_id":"","url":"https://api.github.com/users/omicroh","html_url":"https://github.com/omicroh","followers_url":"https://api.github.com/users/omicroh/followers","following_url":"https://api.github.com/users/omicroh/following{/other_user}","gists_url":"https://api.github.com/users/omicroh/gists{/gist_id}","starred_url":"https://api.github.com/users/omicroh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/omicroh/subscriptions","organizations_url":"https://api.github.com/users/omicroh/orgs","repos_url":"https://api.github.com/users/omicroh/repos","events_url":"https://api.github.com/users/omicroh/events{/privacy}","received_events_url":"https://api.github.com/users/omicroh/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2014-10-30T14:55:20Z","updated_at":"2014-10-30T16:58:26Z","closed_at":"2014-10-30T16:58:26Z","author_association":"NONE","body":"Currently, the default fate out time is set to 400 milliseconds. \n\nPlease, can you allow us to change this time ?\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2523/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2522","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2522/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2522/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2522/events","html_url":"https://github.com/libgdx/libgdx/issues/2522","id":47267895,"number":2522,"title":"FBO: frameBuffer.getColorBufferTexture() on hardware returns some garbage","user":{"login":"michur","id":9459434,"avatar_url":"https://avatars1.githubusercontent.com/u/9459434?v=4","gravatar_id":"","url":"https://api.github.com/users/michur","html_url":"https://github.com/michur","followers_url":"https://api.github.com/users/michur/followers","following_url":"https://api.github.com/users/michur/following{/other_user}","gists_url":"https://api.github.com/users/michur/gists{/gist_id}","starred_url":"https://api.github.com/users/michur/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/michur/subscriptions","organizations_url":"https://api.github.com/users/michur/orgs","repos_url":"https://api.github.com/users/michur/repos","events_url":"https://api.github.com/users/michur/events{/privacy}","received_events_url":"https://api.github.com/users/michur/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2014-10-30T13:14:30Z","updated_at":"2014-11-16T12:37:17Z","closed_at":"2014-11-16T12:37:17Z","author_association":"NONE","body":"I'm working on a painting application for which I'd like to use the fbo - render to texture approach.\nEverything went smoothly until tests on device ;-) \nThe problem is the texture returned by frameBuffer.getColorBufferTexture() which on Nexus One looks like this:\n![device-2014-10-30-134437](https://cloud.githubusercontent.com/assets/9459434/4843826/567dc710-6036-11e4-9b05-e7c86561c220.png)\n\nIn comparison to desktop version:\n![desktop-2014-10-30-134437](https://cloud.githubusercontent.com/assets/9459434/4843639/9c0d6c74-6034-11e4-9096-a39f77bee8a0.png)\n\nUsed: libGDX 1.4.2\n\nProblem is visible on Android 2.3.7 (updated Nexus One).\n\nWhile it is fine on desktop, emulator (Android 4.0.3+) and device (tablet) with Android 4.1, 4.2\n\nCode used for this demonstration:\n\n```\npackage com.mygdx.game;\n\nimport com.badlogic.gdx.ApplicationListener;\nimport com.badlogic.gdx.Gdx;\nimport com.badlogic.gdx.Graphics;\nimport com.badlogic.gdx.InputAdapter;\nimport com.badlogic.gdx.graphics.Color;\nimport com.badlogic.gdx.graphics.GL20;\n\nimport com.badlogic.gdx.graphics.Pixmap.Format;\nimport com.badlogic.gdx.graphics.Texture;\n\nimport com.badlogic.gdx.graphics.g2d.Sprite;\nimport com.badlogic.gdx.graphics.g2d.SpriteBatch;\nimport com.badlogic.gdx.graphics.glutils.FrameBuffer;\n\npublic class MyGdxGame extends InputAdapter implements ApplicationListener {\n\n    FrameBuffer frameBuffer;\n    Texture texture;\n    SpriteBatch spriteBatch;\n    Sprite sprite;\n    boolean bufferCleared = false;\n\n    @Override\n    public void render() {\n        frameBuffer.begin();\n        Gdx.gl20.glViewport(0, 0, frameBuffer.getWidth(), frameBuffer.getHeight());\n        if (!bufferCleared) {\n            Gdx.gl20.glClearColor(0f, 0.0f, 0.5f, 0.0f);\n            Gdx.gl20.glClear(GL20.GL_COLOR_BUFFER_BIT);\n            bufferCleared = true;\n        }\n\n        spriteBatch.begin();\n        sprite.draw(spriteBatch);\n        spriteBatch.end();\n\n        frameBuffer.end();\n\n        if (Gdx.input.isTouched()) {\n            sprite = new Sprite(texture);\n            sprite.setX(Gdx.input.getX() - sprite.getWidth() / 2);\n            sprite.setY((Gdx.graphics.getHeight() - Gdx.input.getY()) - sprite.getHeight() / 2);\n        }\n\n        Gdx.gl20.glViewport(0, 0, Gdx.graphics.getWidth(), Gdx.graphics.getHeight());\n        Gdx.gl20.glClearColor(0.2f, 0.2f, 0.2f, 1);\n        Gdx.gl20.glClear(GL20.GL_COLOR_BUFFER_BIT);\n\n        spriteBatch.begin();\n        spriteBatch.draw(frameBuffer.getColorBufferTexture(), 0, 0, Gdx.graphics.getWidth(), Gdx.graphics.getHeight(), 0, 0, \n                frameBuffer.getColorBufferTexture().getWidth(), frameBuffer.getColorBufferTexture().getHeight(), false, true);\n        spriteBatch.end();\n    }\n\n    @Override\n    public void create() {\n        texture = new Texture(Gdx.files.internal(\"badlogic.jpg\"));\n        sprite = new Sprite(texture);\n        spriteBatch = new SpriteBatch();\n        frameBuffer = new FrameBuffer(Format.RGB565, Gdx.graphics.getWidth(), Gdx.graphics.getHeight(), false);\n    }\n\n    @Override\n    public void dispose() {\n        texture.dispose();\n        frameBuffer.dispose();\n        spriteBatch.dispose();\n    }\n\n    @Override\n    public void resize(int width, int height) {\n\n        spriteBatch = new SpriteBatch();\n        frameBuffer = new FrameBuffer(Format.RGB565, width, height, false);\n    }\n\n    @Override\n    public void pause() {\n    }\n\n    @Override\n    public void resume() {\n    }\n}\n```\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2522/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2521","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2521/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2521/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2521/events","html_url":"https://github.com/libgdx/libgdx/issues/2521","id":47257565,"number":2521,"title":"applicationListener and lifecycleListeners lifecycle methods order inconsistent between platforms","user":{"login":"cfmdobbie","id":7688682,"avatar_url":"https://avatars1.githubusercontent.com/u/7688682?v=4","gravatar_id":"","url":"https://api.github.com/users/cfmdobbie","html_url":"https://github.com/cfmdobbie","followers_url":"https://api.github.com/users/cfmdobbie/followers","following_url":"https://api.github.com/users/cfmdobbie/following{/other_user}","gists_url":"https://api.github.com/users/cfmdobbie/gists{/gist_id}","starred_url":"https://api.github.com/users/cfmdobbie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cfmdobbie/subscriptions","organizations_url":"https://api.github.com/users/cfmdobbie/orgs","repos_url":"https://api.github.com/users/cfmdobbie/repos","events_url":"https://api.github.com/users/cfmdobbie/events{/privacy}","received_events_url":"https://api.github.com/users/cfmdobbie/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2014-10-30T11:11:11Z","updated_at":"2014-11-16T12:39:43Z","closed_at":"2014-11-16T12:39:42Z","author_association":"NONE","body":"Browsing through the source, I note the following:\n\nOn Android, lifecycleListeners are resumed before the applicationListener is resumed.\nOn Android, lifecycleListeners are paused before the applicationListener is paused.\nOn LWJGL, lifecycleListeners are paused before the applicationListener is paused.\nOn LWJGL, lifecycleListeners are resumed **AFTER** the applicationListener is resumed.\n(I did not look at other backends.)\n\nThis does not appear to be intentional, so should probably be resolved one way or the other.  Or if it is intentional, commented to explain why.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2521/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2520","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2520/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2520/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2520/events","html_url":"https://github.com/libgdx/libgdx/issues/2520","id":47232240,"number":2520,"title":"Problem with admod robovm for iOS","user":{"login":"hoangpn412","id":2901009,"avatar_url":"https://avatars3.githubusercontent.com/u/2901009?v=4","gravatar_id":"","url":"https://api.github.com/users/hoangpn412","html_url":"https://github.com/hoangpn412","followers_url":"https://api.github.com/users/hoangpn412/followers","following_url":"https://api.github.com/users/hoangpn412/following{/other_user}","gists_url":"https://api.github.com/users/hoangpn412/gists{/gist_id}","starred_url":"https://api.github.com/users/hoangpn412/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hoangpn412/subscriptions","organizations_url":"https://api.github.com/users/hoangpn412/orgs","repos_url":"https://api.github.com/users/hoangpn412/repos","events_url":"https://api.github.com/users/hoangpn412/events{/privacy}","received_events_url":"https://api.github.com/users/hoangpn412/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-10-30T04:23:33Z","updated_at":"2014-10-30T04:30:24Z","closed_at":"2014-10-30T04:30:24Z","author_association":"NONE","body":"Dear, \n\nI add admod to libgdx project (iOS).\nhttps://github.com/libgdx/libgdx/wiki/Admob-in-libgdx\n\nBut when run, I see error dialog:\n\nAn internal error occurred during: \"Launching Pi-ios\".\nRoot class com.android.org.bouncycastle.jce.provider.BouncyCastleProvider\n         not found\n\nI don't know how to fix it!\n\nHelp me, please! Thank you!\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2520/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2519","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2519/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2519/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2519/events","html_url":"https://github.com/libgdx/libgdx/pull/2519","id":47216535,"number":2519,"title":"Update Javadoc for pause/resume","user":{"login":"Zomby2D","id":5513720,"avatar_url":"https://avatars0.githubusercontent.com/u/5513720?v=4","gravatar_id":"","url":"https://api.github.com/users/Zomby2D","html_url":"https://github.com/Zomby2D","followers_url":"https://api.github.com/users/Zomby2D/followers","following_url":"https://api.github.com/users/Zomby2D/following{/other_user}","gists_url":"https://api.github.com/users/Zomby2D/gists{/gist_id}","starred_url":"https://api.github.com/users/Zomby2D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Zomby2D/subscriptions","organizations_url":"https://api.github.com/users/Zomby2D/orgs","repos_url":"https://api.github.com/users/Zomby2D/repos","events_url":"https://api.github.com/users/Zomby2D/events{/privacy}","received_events_url":"https://api.github.com/users/Zomby2D/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2014-10-29T23:24:16Z","updated_at":"2014-11-01T21:56:23Z","closed_at":"2014-11-01T21:56:23Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2519","html_url":"https://github.com/libgdx/libgdx/pull/2519","diff_url":"https://github.com/libgdx/libgdx/pull/2519.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2519.patch"},"body":"Fixes #2518\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2519/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2518","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2518/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2518/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2518/events","html_url":"https://github.com/libgdx/libgdx/issues/2518","id":47148819,"number":2518,"title":"onPause() onResume() called on Desktops ","user":{"login":"edesdan","id":5745049,"avatar_url":"https://avatars3.githubusercontent.com/u/5745049?v=4","gravatar_id":"","url":"https://api.github.com/users/edesdan","html_url":"https://github.com/edesdan","followers_url":"https://api.github.com/users/edesdan/followers","following_url":"https://api.github.com/users/edesdan/following{/other_user}","gists_url":"https://api.github.com/users/edesdan/gists{/gist_id}","starred_url":"https://api.github.com/users/edesdan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/edesdan/subscriptions","organizations_url":"https://api.github.com/users/edesdan/orgs","repos_url":"https://api.github.com/users/edesdan/repos","events_url":"https://api.github.com/users/edesdan/events{/privacy}","received_events_url":"https://api.github.com/users/edesdan/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-10-29T13:39:10Z","updated_at":"2014-11-01T21:56:23Z","closed_at":"2014-11-01T21:56:23Z","author_association":"NONE","body":"Hi, I'm having an issue regarding call to :pause()  :resume() on Desktops. \nThe methods are always called when the windows lost/gain focus. According to the documentation it was supposed to be called just on Android, right? \nIt seems to be called every time the window lost focus. \nI'm using Game class for my project and when the window lost focus the onPause() method is triggered.\nMaybe a mistake in the javadoc?\n\nThanks.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2518/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2517","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2517/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2517/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2517/events","html_url":"https://github.com/libgdx/libgdx/issues/2517","id":47136331,"number":2517,"title":"Minor inconsistency in Matrix3 rotate Javadocs","user":{"login":"rinold","id":2253795,"avatar_url":"https://avatars1.githubusercontent.com/u/2253795?v=4","gravatar_id":"","url":"https://api.github.com/users/rinold","html_url":"https://github.com/rinold","followers_url":"https://api.github.com/users/rinold/followers","following_url":"https://api.github.com/users/rinold/following{/other_user}","gists_url":"https://api.github.com/users/rinold/gists{/gist_id}","starred_url":"https://api.github.com/users/rinold/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rinold/subscriptions","organizations_url":"https://api.github.com/users/rinold/orgs","repos_url":"https://api.github.com/users/rinold/repos","events_url":"https://api.github.com/users/rinold/events{/privacy}","received_events_url":"https://api.github.com/users/rinold/received_events","type":"User","site_admin":false},"labels":[{"id":11336980,"url":"https://api.github.com/repos/libgdx/libgdx/labels/bug","name":"bug","color":"fc2929","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2014-10-29T11:20:28Z","updated_at":"2014-10-29T12:59:01Z","closed_at":"2014-10-29T12:59:01Z","author_association":"CONTRIBUTOR","body":"Occasionally messed my thoughts for a while. Placing the issue not to forget that this should be fixed.\nFollowing two Matrix3 methods affected:\n**setToRotationRad**\n**rotateRad**\n\nFor this methods in javadoc - param **radians** is described as angle in **degrees**\n\n``` java\n    /** Sets this matrix to a rotation matrix that will rotate any vector in counter-clockwise direction around the z-axis.\n     * @param radians the angle in degrees.\n     * @return This matrix for the purpose of chaining operations. */\n    public Matrix3 setToRotationRad (float radians) {\n        ...\n```\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2517/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2516","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2516/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2516/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2516/events","html_url":"https://github.com/libgdx/libgdx/issues/2516","id":47128572,"number":2516,"title":"Touch methods not working on WebGL + iOS8","user":{"login":"louis87","id":709251,"avatar_url":"https://avatars3.githubusercontent.com/u/709251?v=4","gravatar_id":"","url":"https://api.github.com/users/louis87","html_url":"https://github.com/louis87","followers_url":"https://api.github.com/users/louis87/followers","following_url":"https://api.github.com/users/louis87/following{/other_user}","gists_url":"https://api.github.com/users/louis87/gists{/gist_id}","starred_url":"https://api.github.com/users/louis87/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/louis87/subscriptions","organizations_url":"https://api.github.com/users/louis87/orgs","repos_url":"https://api.github.com/users/louis87/repos","events_url":"https://api.github.com/users/louis87/events{/privacy}","received_events_url":"https://api.github.com/users/louis87/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2014-10-29T09:54:23Z","updated_at":"2014-10-31T10:37:23Z","closed_at":"2014-10-31T10:37:23Z","author_association":"NONE","body":"Hello,\n\nSeems that touch input is not working with the javascript code generated with Libgdx + GWT.\n\nHere is an example working in Windows+Android (tested on Chrome and Android Browser) but no with io8 (tested with Safari and Chrome):\n\nhttp://www.lazy-pixels.com/minijuegos/booger-wheels/\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2516/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2515","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2515/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2515/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2515/events","html_url":"https://github.com/libgdx/libgdx/pull/2515","id":47101394,"number":2515,"title":"rearrange Screen methods to represent the android lifecycle better","user":{"login":"sinistersnare","id":2153833,"avatar_url":"https://avatars1.githubusercontent.com/u/2153833?v=4","gravatar_id":"","url":"https://api.github.com/users/sinistersnare","html_url":"https://github.com/sinistersnare","followers_url":"https://api.github.com/users/sinistersnare/followers","following_url":"https://api.github.com/users/sinistersnare/following{/other_user}","gists_url":"https://api.github.com/users/sinistersnare/gists{/gist_id}","starred_url":"https://api.github.com/users/sinistersnare/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sinistersnare/subscriptions","organizations_url":"https://api.github.com/users/sinistersnare/orgs","repos_url":"https://api.github.com/users/sinistersnare/repos","events_url":"https://api.github.com/users/sinistersnare/events{/privacy}","received_events_url":"https://api.github.com/users/sinistersnare/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2014-10-29T01:21:44Z","updated_at":"2015-07-19T19:39:58Z","closed_at":"2014-11-01T21:40:54Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2515","html_url":"https://github.com/libgdx/libgdx/pull/2515","diff_url":"https://github.com/libgdx/libgdx/pull/2515.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2515.patch"},"body":"Whenever I make a screen I end up rearranging these, as eclipse imports them in the same order as defined in the interface.\n\nNot sure if this is helpful at all, but I find it better now :)\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2515/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2514","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2514/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2514/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2514/events","html_url":"https://github.com/libgdx/libgdx/pull/2514","id":46966266,"number":2514,"title":"Added renderObjects() to TiledMapRenderer","user":{"login":"Arcnor","id":28616,"avatar_url":"https://avatars2.githubusercontent.com/u/28616?v=4","gravatar_id":"","url":"https://api.github.com/users/Arcnor","html_url":"https://github.com/Arcnor","followers_url":"https://api.github.com/users/Arcnor/followers","following_url":"https://api.github.com/users/Arcnor/following{/other_user}","gists_url":"https://api.github.com/users/Arcnor/gists{/gist_id}","starred_url":"https://api.github.com/users/Arcnor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Arcnor/subscriptions","organizations_url":"https://api.github.com/users/Arcnor/orgs","repos_url":"https://api.github.com/users/Arcnor/repos","events_url":"https://api.github.com/users/Arcnor/events{/privacy}","received_events_url":"https://api.github.com/users/Arcnor/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2014-10-27T22:11:00Z","updated_at":"2014-10-27T22:21:21Z","closed_at":"2014-10-27T22:21:21Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2514","html_url":"https://github.com/libgdx/libgdx/pull/2514","diff_url":"https://github.com/libgdx/libgdx/pull/2514.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2514.patch"},"body":"This is a very simple change. Instead of just calling `renderObject(object)` on the `TiledMapRenderer` on a loop for every layer, I created `renderObjects(layer)`, that contains the loop and calls `renderObject(object)`. This allows you to do any pre and post preparations before rendering the objects (like setting and restoring some values on the `spriteBatch`, my use case, but I'm sure I'll use it for more than that)\n\nI also removed the extended `renderObject` on every subclass and added it only to the abstract base classes\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2514/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2513","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2513/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2513/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2513/events","html_url":"https://github.com/libgdx/libgdx/issues/2513","id":46945816,"number":2513,"title":"scene2d.ui: Window is not rendered properly when its position ends with .5f","user":{"login":"kotcrab","id":4594081,"avatar_url":"https://avatars1.githubusercontent.com/u/4594081?v=4","gravatar_id":"","url":"https://api.github.com/users/kotcrab","html_url":"https://github.com/kotcrab","followers_url":"https://api.github.com/users/kotcrab/followers","following_url":"https://api.github.com/users/kotcrab/following{/other_user}","gists_url":"https://api.github.com/users/kotcrab/gists{/gist_id}","starred_url":"https://api.github.com/users/kotcrab/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kotcrab/subscriptions","organizations_url":"https://api.github.com/users/kotcrab/orgs","repos_url":"https://api.github.com/users/kotcrab/repos","events_url":"https://api.github.com/users/kotcrab/events{/privacy}","received_events_url":"https://api.github.com/users/kotcrab/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-10-27T19:04:57Z","updated_at":"2014-10-27T22:17:30Z","closed_at":"2014-10-27T22:17:30Z","author_association":"CONTRIBUTOR","body":"When scene2d.ui Window position (x,y or both) ends with .5f (for example 100.5f or 0.5f) window is not rendered properly.\n\nImages:\n![2014-10-27_1949](https://cloud.githubusercontent.com/assets/4594081/4797225/fb572422-5e09-11e4-83b3-f8e409975ae9.png)\n\n![b1homxy](https://cloud.githubusercontent.com/assets/4594081/4797205/e119347e-5e09-11e4-875b-104cf150e5e1.png)\n\nHappens on android as well:\n![screenshot_2014-10-27-19-44-58](https://cloud.githubusercontent.com/assets/4594081/4797285/69bc43b6-5e0a-11e4-8fbe-51a6e4699a42.png)\n\nFont looks the worst, but other components have artifacts as well. I created skin with other font and this problem still occurs.\n\nTested on: Windows 7 x64 and Nexus 4 (Android 4.4.4)\nLibGDX: 1.4.1 and latest nightly\n\nReproducing:\n1. Open UITest from gdx-tests\n2. After `window.pack();` add  `window.setPosition(0.5f, 0.5f);`\n3. Run test\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2513/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2512","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2512/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2512/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2512/events","html_url":"https://github.com/libgdx/libgdx/issues/2512","id":46907445,"number":2512,"title":"Matrix4 has double the needed size in memory due to tmp array","user":{"login":"ghost","id":10137,"avatar_url":"https://avatars3.githubusercontent.com/u/10137?v=4","gravatar_id":"","url":"https://api.github.com/users/ghost","html_url":"https://github.com/ghost","followers_url":"https://api.github.com/users/ghost/followers","following_url":"https://api.github.com/users/ghost/following{/other_user}","gists_url":"https://api.github.com/users/ghost/gists{/gist_id}","starred_url":"https://api.github.com/users/ghost/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ghost/subscriptions","organizations_url":"https://api.github.com/users/ghost/orgs","repos_url":"https://api.github.com/users/ghost/repos","events_url":"https://api.github.com/users/ghost/events{/privacy}","received_events_url":"https://api.github.com/users/ghost/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-10-27T13:57:58Z","updated_at":"2014-10-28T19:43:15Z","closed_at":"2014-10-27T16:13:14Z","author_association":"NONE","body":"http://libgdx.badlogicgames.com/nightlies/docs/api/com/badlogic/gdx/math/Matrix4.html\n\nwhy do we have \"public final float[] tmp\" instead of \"public static final float[] tmp\"? GDX is not thread-safe anyway, and my tests with having the tmp var static doesn't show any issues after changing the implementation that way.\n\nNB Matrix3 doesn't suffer from this.\n\n... unless, of course, there _is_ an actual reason for making the storage size of one of the most common 3D classes x2 the needed amount. It looks like a typo though - but is it?\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2512/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2511","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2511/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2511/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2511/events","html_url":"https://github.com/libgdx/libgdx/issues/2511","id":46864129,"number":2511,"title":"newChainShape UnsatisfiedLinkError","user":{"login":"Teiby1","id":617859,"avatar_url":"https://avatars3.githubusercontent.com/u/617859?v=4","gravatar_id":"","url":"https://api.github.com/users/Teiby1","html_url":"https://github.com/Teiby1","followers_url":"https://api.github.com/users/Teiby1/followers","following_url":"https://api.github.com/users/Teiby1/following{/other_user}","gists_url":"https://api.github.com/users/Teiby1/gists{/gist_id}","starred_url":"https://api.github.com/users/Teiby1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Teiby1/subscriptions","organizations_url":"https://api.github.com/users/Teiby1/orgs","repos_url":"https://api.github.com/users/Teiby1/repos","events_url":"https://api.github.com/users/Teiby1/events{/privacy}","received_events_url":"https://api.github.com/users/Teiby1/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2014-10-27T02:20:16Z","updated_at":"2014-10-27T03:51:43Z","closed_at":"2014-10-27T03:47:46Z","author_association":"NONE","body":"If you call (anywhere)\n\n```\nnew ChainShape();\n```\n\nthe game will crash with the following error:\n\n```\nException in thread \"LWJGL Application\" com.badlogic.gdx.utils.GdxRuntimeException: java.lang.UnsatisfiedLinkError: com.badlogic.gdx.physics.box2d.ChainShape.newChainShape()J\n    at com.badlogic.gdx.backends.lwjgl.LwjglApplication$1.run(LwjglApplication.java:120)\nCaused by: java.lang.UnsatisfiedLinkError: com.badlogic.gdx.physics.box2d.ChainShape.newChainShape()J\n    at com.badlogic.gdx.physics.box2d.ChainShape.newChainShape(Native Method)\n    at com.badlogic.gdx.physics.box2d.ChainShape.<init>(ChainShape.java:29)\n    at com.mygdx.game.MyGdxGame.create(MyGdxGame.java:19)\n    at com.badlogic.gdx.backends.lwjgl.LwjglApplication.mainLoop(LwjglApplication.java:136)\n    at com.badlogic.gdx.backends.lwjgl.LwjglApplication$1.run(LwjglApplication.java:114)\n```\n\nI have tested it on a fresh project (used libgdx-nightly-latest/gdx-setup.jar - don't know if gdx-setup.jar downloads another/older version from the internet or has used the nightly)\nOther functions from Box2D like \"new World()\" works.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2511/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2510","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2510/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2510/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2510/events","html_url":"https://github.com/libgdx/libgdx/issues/2510","id":46853056,"number":2510,"title":"New method for BitmapFont.toString causes crash with Freetype Fonts","user":{"login":"zairon","id":1960777,"avatar_url":"https://avatars1.githubusercontent.com/u/1960777?v=4","gravatar_id":"","url":"https://api.github.com/users/zairon","html_url":"https://github.com/zairon","followers_url":"https://api.github.com/users/zairon/followers","following_url":"https://api.github.com/users/zairon/following{/other_user}","gists_url":"https://api.github.com/users/zairon/gists{/gist_id}","starred_url":"https://api.github.com/users/zairon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zairon/subscriptions","organizations_url":"https://api.github.com/users/zairon/orgs","repos_url":"https://api.github.com/users/zairon/repos","events_url":"https://api.github.com/users/zairon/events{/privacy}","received_events_url":"https://api.github.com/users/zairon/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2014-10-26T20:08:34Z","updated_at":"2014-10-31T15:01:48Z","closed_at":"2014-10-31T15:01:48Z","author_association":"NONE","body":"This problem comes from the commit that closes this issue: https://github.com/libgdx/libgdx/issues/2368\n\nThis code causes a crash:\n\n``` java\npublic String toString () {\n        return data.fontFile.nameWithoutExtension();\n    }\n```\n\nThe field data.fontFile is null when using a Freetype font loaded from the AssetManager.\n\nTest code for this is as follows:\n\n``` java\npublic void create () {\n        batch = new SpriteBatch();\n        img = new Texture(\"badlogic.jpg\");\n\n        assetManager=new AssetManager();\n\n        // Get a file handle resolver for internal files, since all of these\n        // should be internal files\n        FileHandleResolver resolver = new InternalFileHandleResolver();\n\n        // set the manager to load freetype files and bitmap fonts\n        assetManager.setLoader(FreeTypeFontGenerator.class, new FreeTypeFontGeneratorLoader(resolver));\n        assetManager.setLoader(BitmapFont.class, \".ttf\", new FreetypeFontLoader(resolver));\n\n        FreeTypeFontLoaderParameter fontParams = new FreeTypeFontLoaderParameter();\n\n        fontParams.fontFileName = \"Jet Set.ttf\";\n        fontParams.fontParameters.size = 48;\n\n        String fontName=\"Jet Set.ttf.48.ttf\";\n\n        assetManager.load(fontName, BitmapFont.class, fontParams);\n\n        assetManager.finishLoading();\n\n        BitmapFont bitmapFont=assetManager.get(fontName, BitmapFont.class);\n\n        Gdx.app.log(\"FontDebugging\", \"fontName=\" + fontName);\n        Gdx.app.log(\"FontDebugging\", \"bitmapFont=\" + bitmapFont);\n    }\n```\n\nThe last log line causes an assert from calling BitmapFont.toString().\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2510/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2509","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2509/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2509/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2509/events","html_url":"https://github.com/libgdx/libgdx/issues/2509","id":46846690,"number":2509,"title":"Small inconsistency: Gdx.files paths not always ending with seperator/slashes","user":{"login":"mhilbrunner","id":1654763,"avatar_url":"https://avatars2.githubusercontent.com/u/1654763?v=4","gravatar_id":"","url":"https://api.github.com/users/mhilbrunner","html_url":"https://github.com/mhilbrunner","followers_url":"https://api.github.com/users/mhilbrunner/followers","following_url":"https://api.github.com/users/mhilbrunner/following{/other_user}","gists_url":"https://api.github.com/users/mhilbrunner/gists{/gist_id}","starred_url":"https://api.github.com/users/mhilbrunner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mhilbrunner/subscriptions","organizations_url":"https://api.github.com/users/mhilbrunner/orgs","repos_url":"https://api.github.com/users/mhilbrunner/repos","events_url":"https://api.github.com/users/mhilbrunner/events{/privacy}","received_events_url":"https://api.github.com/users/mhilbrunner/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2014-10-26T16:08:32Z","updated_at":"2014-11-16T12:50:52Z","closed_at":"2014-11-16T12:50:52Z","author_association":"NONE","body":"Hi, just a minor quibble:\n\nI noticed that on iOS, Gdx.files returns paths without trailing slashes for getExternalPath() etc.\nOn other platforms, paths including ending slashes are returned.\n\nCompare, e.g. AndroidFiles:\nhttps://github.com/libgdx/libgdx/blob/master/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidFiles.java\nor\nhttps://github.com/libgdx/libgdx/blob/master/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglFiles.java\nto\nhttps://github.com/libgdx/libgdx/blob/master/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSFiles.java\n\nDesktop: `externalPath = System.getProperty(\"user.home\") + File.separator;`\niOS: `externalPath = appDir + \"/Documents\";`\n\nWould be nice if the iOS paths were made consistent with the other backends.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2509/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2508","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2508/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2508/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2508/events","html_url":"https://github.com/libgdx/libgdx/pull/2508","id":46827194,"number":2508,"title":"Add ability to save atlas from PixmapPacker","user":{"login":"MobiDevelop","id":1095464,"avatar_url":"https://avatars2.githubusercontent.com/u/1095464?v=4","gravatar_id":"","url":"https://api.github.com/users/MobiDevelop","html_url":"https://github.com/MobiDevelop","followers_url":"https://api.github.com/users/MobiDevelop/followers","following_url":"https://api.github.com/users/MobiDevelop/following{/other_user}","gists_url":"https://api.github.com/users/MobiDevelop/gists{/gist_id}","starred_url":"https://api.github.com/users/MobiDevelop/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MobiDevelop/subscriptions","organizations_url":"https://api.github.com/users/MobiDevelop/orgs","repos_url":"https://api.github.com/users/MobiDevelop/repos","events_url":"https://api.github.com/users/MobiDevelop/events{/privacy}","received_events_url":"https://api.github.com/users/MobiDevelop/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2014-10-25T23:53:25Z","updated_at":"2014-11-01T05:13:16Z","closed_at":"2014-11-01T05:13:13Z","author_association":"OWNER","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2508","html_url":"https://github.com/libgdx/libgdx/pull/2508","diff_url":"https://github.com/libgdx/libgdx/pull/2508.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2508.patch"},"body":"See #2381 for motivation.\n\nThis uses the CIM compressed format from PixmapIO to reduce the size of the saved images (since PixmapIO cannot save a compressed PNG). Any objection to using this format for this purpose? Perhaps, if we make some progress with #2501, we can revisit and use PNG (or allow the user to choose the format).\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2508/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2507","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2507/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2507/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2507/events","html_url":"https://github.com/libgdx/libgdx/pull/2507","id":46824696,"number":2507,"title":"Add support for converting popular Android ARGB8888 format","user":{"login":"mikemee","id":550990,"avatar_url":"https://avatars3.githubusercontent.com/u/550990?v=4","gravatar_id":"","url":"https://api.github.com/users/mikemee","html_url":"https://github.com/mikemee","followers_url":"https://api.github.com/users/mikemee/followers","following_url":"https://api.github.com/users/mikemee/following{/other_user}","gists_url":"https://api.github.com/users/mikemee/gists{/gist_id}","starred_url":"https://api.github.com/users/mikemee/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikemee/subscriptions","organizations_url":"https://api.github.com/users/mikemee/orgs","repos_url":"https://api.github.com/users/mikemee/repos","events_url":"https://api.github.com/users/mikemee/events{/privacy}","received_events_url":"https://api.github.com/users/mikemee/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-10-25T21:55:06Z","updated_at":"2014-10-25T21:56:47Z","closed_at":"2014-10-25T21:56:42Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2507","html_url":"https://github.com/libgdx/libgdx/pull/2507","diff_url":"https://github.com/libgdx/libgdx/pull/2507.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2507.patch"},"body":"As requested, replaces PR #2410 with a clean change history.\n\nIn a recent code review, I found two versions of this function in my code, so I thought it might be a useful addition. My code originally was Android-only before porting to libGDX, so perhaps others will be in this same situation and will find it convenient.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2507/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2506","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2506/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2506/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2506/events","html_url":"https://github.com/libgdx/libgdx/pull/2506","id":46824014,"number":2506,"title":"Emulate BufferUtils.copy(Buffer, Buffer, numElements)","user":{"login":"xoppa","id":2349087,"avatar_url":"https://avatars3.githubusercontent.com/u/2349087?v=4","gravatar_id":"","url":"https://api.github.com/users/xoppa","html_url":"https://github.com/xoppa","followers_url":"https://api.github.com/users/xoppa/followers","following_url":"https://api.github.com/users/xoppa/following{/other_user}","gists_url":"https://api.github.com/users/xoppa/gists{/gist_id}","starred_url":"https://api.github.com/users/xoppa/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xoppa/subscriptions","organizations_url":"https://api.github.com/users/xoppa/orgs","repos_url":"https://api.github.com/users/xoppa/repos","events_url":"https://api.github.com/users/xoppa/events{/privacy}","received_events_url":"https://api.github.com/users/xoppa/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2014-10-25T21:24:28Z","updated_at":"2014-10-25T21:40:19Z","closed_at":"2014-10-25T21:36:47Z","author_association":"OWNER","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2506","html_url":"https://github.com/libgdx/libgdx/pull/2506","diff_url":"https://github.com/libgdx/libgdx/pull/2506.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2506.patch"},"body":"Replaces #2444\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2506/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}}],"meta":{"x-ratelimit-limit":"5000","x-ratelimit-remaining":"4919","x-ratelimit-reset":"1506844633","x-github-request-id":"A3B0:1109:13DFD07:286B6AF:59D095B2","x-github-media-type":"github.squirrel-girl-preview","link":"<https://api.github.com/repositories/5373551/issues?state=all&page=81>; rel=\"next\", <https://api.github.com/repositories/5373551/issues?state=all&page=164>; rel=\"last\", <https://api.github.com/repositories/5373551/issues?state=all&page=1>; rel=\"first\", <https://api.github.com/repositories/5373551/issues?state=all&page=79>; rel=\"prev\"","etag":"\"c0a013729733c1cc3793c4f772630fba\"","status":"200 OK"}}
