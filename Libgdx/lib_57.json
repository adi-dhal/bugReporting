{"data":[{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3228","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3228/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3228/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3228/events","html_url":"https://github.com/libgdx/libgdx/pull/3228","id":90800806,"number":3228,"title":"Fixes some typos","user":{"login":"felipefcm","id":7122990,"avatar_url":"https://avatars2.githubusercontent.com/u/7122990?v=4","gravatar_id":"","url":"https://api.github.com/users/felipefcm","html_url":"https://github.com/felipefcm","followers_url":"https://api.github.com/users/felipefcm/followers","following_url":"https://api.github.com/users/felipefcm/following{/other_user}","gists_url":"https://api.github.com/users/felipefcm/gists{/gist_id}","starred_url":"https://api.github.com/users/felipefcm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/felipefcm/subscriptions","organizations_url":"https://api.github.com/users/felipefcm/orgs","repos_url":"https://api.github.com/users/felipefcm/repos","events_url":"https://api.github.com/users/felipefcm/events{/privacy}","received_events_url":"https://api.github.com/users/felipefcm/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2015-06-24T23:00:34Z","updated_at":"2015-06-25T10:34:03Z","closed_at":"2015-06-25T07:50:37Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3228","html_url":"https://github.com/libgdx/libgdx/pull/3228","diff_url":"https://github.com/libgdx/libgdx/pull/3228.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3228.patch"},"body":"","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3228/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3227","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3227/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3227/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3227/events","html_url":"https://github.com/libgdx/libgdx/issues/3227","id":90756851,"number":3227,"title":"\"unknown error 36059\" when trying to use a FrameBufferCubemap","user":{"login":"haedri","id":1549712,"avatar_url":"https://avatars3.githubusercontent.com/u/1549712?v=4","gravatar_id":"","url":"https://api.github.com/users/haedri","html_url":"https://github.com/haedri","followers_url":"https://api.github.com/users/haedri/followers","following_url":"https://api.github.com/users/haedri/following{/other_user}","gists_url":"https://api.github.com/users/haedri/gists{/gist_id}","starred_url":"https://api.github.com/users/haedri/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/haedri/subscriptions","organizations_url":"https://api.github.com/users/haedri/orgs","repos_url":"https://api.github.com/users/haedri/repos","events_url":"https://api.github.com/users/haedri/events{/privacy}","received_events_url":"https://api.github.com/users/haedri/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2015-06-24T18:44:45Z","updated_at":"2015-06-28T18:50:14Z","closed_at":"2015-06-28T18:50:14Z","author_association":"CONTRIBUTOR","body":"When trying to use a FramBufferCubemap on a OSX system I get the following error (from the FrameBufferCubemap test) :\n\n```\nException in thread \"LWJGL Application\" java.lang.IllegalStateException: frame buffer couldn't be constructed: unknown error 36059\n    at com.badlogic.gdx.graphics.glutils.GLFrameBuffer.build(GLFrameBuffer.java:195)\n    at com.badlogic.gdx.graphics.glutils.GLFrameBuffer.<init>(GLFrameBuffer.java:111)\n    at com.badlogic.gdx.graphics.glutils.FrameBufferCubemap.<init>(FrameBufferCubemap.java:87)\n    at com.badlogic.gdx.graphics.glutils.FrameBufferCubemap.<init>(FrameBufferCubemap.java:74)\n    at com.badlogic.gdx.tests.g3d.FrameBufferCubemapTest.create(FrameBufferCubemapTest.java:44)\n    at com.badlogic.gdx.backends.lwjgl.LwjglApplication.mainLoop(LwjglApplication.java:143)\n    at com.badlogic.gdx.backends.lwjgl.LwjglApplication$1.run(LwjglApplication.java:120)\n```\n\nI noticed that moving the line that gets the frame buffer status a few line below in GLFrameBuffer solves the issue, and the test runs perfectly fine after that (same as on Windows/Linux)\n\nProblem is I have no idea if it is the correct way to do that, so I'll let someone that knows this subject better do a PR :)\n\nThere is no problem with standard FrameBuffer\n\nHere's the patch of the modification I did to make the test work :\n\n```\ndiff --git a/gdx/src/com/badlogic/gdx/graphics/glutils/GLFrameBuffer.java b/gdx/src/com/badlogic/gdx/graphics/glutils/GLFrameBuffer.java\nindex c9a3648..792f68b 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/glutils/GLFrameBuffer.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/glutils/GLFrameBuffer.java\n@@ -169,11 +169,11 @@\n            gl.glFramebufferRenderbuffer(GL20.GL_FRAMEBUFFER, GL20.GL_STENCIL_ATTACHMENT, GL20.GL_RENDERBUFFER, stencilbufferHandle);\n        }\n\n-       int result = gl.glCheckFramebufferStatus(GL20.GL_FRAMEBUFFER);\n-\n        gl.glBindRenderbuffer(GL20.GL_RENDERBUFFER, 0);\n        gl.glBindTexture(GL20.GL_TEXTURE_2D, 0);\n        gl.glBindFramebuffer(GL20.GL_FRAMEBUFFER, defaultFramebufferHandle);\n+       \n+       int result = gl.glCheckFramebufferStatus(GL20.GL_FRAMEBUFFER);\n\n        if (result != GL20.GL_FRAMEBUFFER_COMPLETE) {\n            colorTexture.dispose();\n```\n\nI have no problem on Windows & Linux, I had issues only on OSX, tested on two systems :\n- Mac mini (Intel HD 4000), Yosemite\n- Hackintosh (Intel HD 3000), Yosemite\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3227/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3226","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3226/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3226/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3226/events","html_url":"https://github.com/libgdx/libgdx/issues/3226","id":90737639,"number":3226,"title":"TIMED_WAIT of executorService makes ended app hanging for about a minute","user":{"login":"FyiurAmron","id":11016998,"avatar_url":"https://avatars1.githubusercontent.com/u/11016998?v=4","gravatar_id":"","url":"https://api.github.com/users/FyiurAmron","html_url":"https://github.com/FyiurAmron","followers_url":"https://api.github.com/users/FyiurAmron/followers","following_url":"https://api.github.com/users/FyiurAmron/following{/other_user}","gists_url":"https://api.github.com/users/FyiurAmron/gists{/gist_id}","starred_url":"https://api.github.com/users/FyiurAmron/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/FyiurAmron/subscriptions","organizations_url":"https://api.github.com/users/FyiurAmron/orgs","repos_url":"https://api.github.com/users/FyiurAmron/repos","events_url":"https://api.github.com/users/FyiurAmron/events{/privacy}","received_events_url":"https://api.github.com/users/FyiurAmron/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2015-06-24T17:24:07Z","updated_at":"2015-07-05T18:15:43Z","closed_at":"2015-07-05T18:15:43Z","author_association":"CONTRIBUTOR","body":"Current https://github.com/libgdx/libgdx/blob/master/gdx/src/com/badlogic/gdx/net/NetJavaImpl.java creates an ExecutorService to handle async HTTP requests. It works OK, but after processing the requests it doesn't call `executorService.shutdown()` etc [nor allow doing it in any way, since `executorService` is private]. As such, the ExecutorService's thread stays in `TIMED_WAIT` for about a minute after finishing everything, preventing the app from closing properly. This is an issue for both desktop & Android (since both call NetJavaImpl routines), but it's IMO most problematic for desktop, since the app window appears to have freezed.\n\nRepro case is to simply send a request and call `Gdx.app.exit()` immediately. The app will \"hang\" for about a minute. Calling `executorService.shutdown()` solves the issue.\n\nThe proposed solution is to either a) call `executorService.shutdown()` automagically, or to b) allow manual calling it, e.g. by \n\n```\n    synchronized public void shutdown() {\n        executorService.shutdown();\n    }\n```\n\n _and_ do it automagically on `Gdx.app.exit()` calls.\n\nFurther reading:\nhttp://stackoverflow.com/questions/1250643/how-to-wait-for-all-threads-to-finish-using-executorservice\nhttp://docs.oracle.com/javase/7/docs/api/java/util/concurrent/ExecutorService.html\n\nPS. Completely suppressing all the `IOException`s @ L52, L68, L87 & L117 makes identifying problems with HTTP services extremely hard (the thrown `IOException`s are actually very useful for identifyng the client-side problems with the connection); I'd given much for a switch allowing the exceptions to be propagated or at least logged/wrapped/retained. I'm currently using my own HTTP-related code due to above problems, but I hardly see that as a permanent solution when using net-enabled lib such as libGDX.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3226/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3225","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3225/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3225/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3225/events","html_url":"https://github.com/libgdx/libgdx/issues/3225","id":90488197,"number":3225,"title":"Shader context loss when Android game started via intent","user":{"login":"dkarv","id":3708591,"avatar_url":"https://avatars1.githubusercontent.com/u/3708591?v=4","gravatar_id":"","url":"https://api.github.com/users/dkarv","html_url":"https://github.com/dkarv","followers_url":"https://api.github.com/users/dkarv/followers","following_url":"https://api.github.com/users/dkarv/following{/other_user}","gists_url":"https://api.github.com/users/dkarv/gists{/gist_id}","starred_url":"https://api.github.com/users/dkarv/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dkarv/subscriptions","organizations_url":"https://api.github.com/users/dkarv/orgs","repos_url":"https://api.github.com/users/dkarv/repos","events_url":"https://api.github.com/users/dkarv/events{/privacy}","received_events_url":"https://api.github.com/users/dkarv/received_events","type":"User","site_admin":false},"labels":[{"id":172870364,"url":"https://api.github.com/repos/libgdx/libgdx/labels/need%20more%20info","name":"need more info","color":"bfdadc","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2015-06-23T20:52:15Z","updated_at":"2015-06-23T23:32:39Z","closed_at":"2015-06-23T21:42:35Z","author_association":"NONE","body":"I came over a weird issue. When resuming an application via custom intent and not the launcher, all my `ShaderProgram`s are lost (OpenGL context loss). \n\nHow to reproduce:\n1. start app via launcher\n2. pause app (go to homescreen) but not dispose it\n3. restart it via intent, for example in adb shell:\n\n```\nam start -n com.example.test.android/.AndroidLauncher\n```\n\nWhat should happen:\nThe shaders are managed, they should be recompiled after context loss.\n\nIt works when:\n- restarting the app via launcher\n- always recreating all shaders in `Game.resume()` AND disabling the firstResume behaviour in `AndroidApplication.onResume()` somehow (otherwise the first onResume is kind of ignored)\n- launching the app initially via intent when it wasn't in the background or running before\n\nIt doesn't work:\n- restarting via own intent (not only the one coming from adb, also when accepting a invitation in the Google Play Games app that launches your game)\n\nMy app is not the only one with this issue, I could reproduce it here:\nhttps://github.com/FAU-Inf2/fly-gdx/\n\nIf you need code examples of my app I will post them here.\n\nThanks for your good work! Maybe someone can figure out what is happening here and how to solve it.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3225/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3224","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3224/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3224/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3224/events","html_url":"https://github.com/libgdx/libgdx/pull/3224","id":90409688,"number":3224,"title":"Add Spotlight in DefaultShader.","user":{"login":"realitix","id":6367936,"avatar_url":"https://avatars1.githubusercontent.com/u/6367936?v=4","gravatar_id":"","url":"https://api.github.com/users/realitix","html_url":"https://github.com/realitix","followers_url":"https://api.github.com/users/realitix/followers","following_url":"https://api.github.com/users/realitix/following{/other_user}","gists_url":"https://api.github.com/users/realitix/gists{/gist_id}","starred_url":"https://api.github.com/users/realitix/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/realitix/subscriptions","organizations_url":"https://api.github.com/users/realitix/orgs","repos_url":"https://api.github.com/users/realitix/repos","events_url":"https://api.github.com/users/realitix/events{/privacy}","received_events_url":"https://api.github.com/users/realitix/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2015-06-23T14:48:23Z","updated_at":"2015-06-30T14:48:30Z","closed_at":"2015-06-29T21:21:29Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3224","html_url":"https://github.com/libgdx/libgdx/pull/3224","diff_url":"https://github.com/libgdx/libgdx/pull/3224.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3224.patch"},"body":"The glsl files are not updated so SpotLight won't work as is with the\nDefaultShader. It can be useful to bring his own shader with phong\nlightning to see the beauty of spot lights.\n\nI tested it with the light tests and it creates no error.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3224/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3223","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3223/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3223/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3223/events","html_url":"https://github.com/libgdx/libgdx/issues/3223","id":90406503,"number":3223,"title":"Strange behaviour with music.pause on GWT. isPlaying flag sometimes not being set.","user":{"login":"WillCalderwood","id":6973062,"avatar_url":"https://avatars1.githubusercontent.com/u/6973062?v=4","gravatar_id":"","url":"https://api.github.com/users/WillCalderwood","html_url":"https://github.com/WillCalderwood","followers_url":"https://api.github.com/users/WillCalderwood/followers","following_url":"https://api.github.com/users/WillCalderwood/following{/other_user}","gists_url":"https://api.github.com/users/WillCalderwood/gists{/gist_id}","starred_url":"https://api.github.com/users/WillCalderwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/WillCalderwood/subscriptions","organizations_url":"https://api.github.com/users/WillCalderwood/orgs","repos_url":"https://api.github.com/users/WillCalderwood/repos","events_url":"https://api.github.com/users/WillCalderwood/events{/privacy}","received_events_url":"https://api.github.com/users/WillCalderwood/received_events","type":"User","site_admin":false},"labels":[{"id":67383148,"url":"https://api.github.com/repos/libgdx/libgdx/labels/gwt","name":"gwt","color":"5319e7","default":false}],"state":"closed","locked":false,"assignee":{"login":"badlogic","id":514052,"avatar_url":"https://avatars1.githubusercontent.com/u/514052?v=4","gravatar_id":"","url":"https://api.github.com/users/badlogic","html_url":"https://github.com/badlogic","followers_url":"https://api.github.com/users/badlogic/followers","following_url":"https://api.github.com/users/badlogic/following{/other_user}","gists_url":"https://api.github.com/users/badlogic/gists{/gist_id}","starred_url":"https://api.github.com/users/badlogic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/badlogic/subscriptions","organizations_url":"https://api.github.com/users/badlogic/orgs","repos_url":"https://api.github.com/users/badlogic/repos","events_url":"https://api.github.com/users/badlogic/events{/privacy}","received_events_url":"https://api.github.com/users/badlogic/received_events","type":"User","site_admin":false},"assignees":[{"login":"badlogic","id":514052,"avatar_url":"https://avatars1.githubusercontent.com/u/514052?v=4","gravatar_id":"","url":"https://api.github.com/users/badlogic","html_url":"https://github.com/badlogic","followers_url":"https://api.github.com/users/badlogic/followers","following_url":"https://api.github.com/users/badlogic/following{/other_user}","gists_url":"https://api.github.com/users/badlogic/gists{/gist_id}","starred_url":"https://api.github.com/users/badlogic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/badlogic/subscriptions","organizations_url":"https://api.github.com/users/badlogic/orgs","repos_url":"https://api.github.com/users/badlogic/repos","events_url":"https://api.github.com/users/badlogic/events{/privacy}","received_events_url":"https://api.github.com/users/badlogic/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2015-06-23T14:36:28Z","updated_at":"2016-04-08T15:37:01Z","closed_at":"2016-04-08T15:37:01Z","author_association":"CONTRIBUTOR","body":"Looking at the code I can't see how this is happening, but it would appear the isPlaying flag is not always being set correctly when pause is called on the GWT back end.\n\nI have a toggle button for tuning music on and off. Toggling on and off with the GWT back end was causing multiple tracks to play over the top of each other. Logging the state of the isPlaying flag when pressing the toggle button gave the following output.\n\n![image](https://cloud.githubusercontent.com/assets/6973062/8308499/00c702aa-19bd-11e5-8c4c-3859cbe28a85.png)\n\nCalling stop instead of pause it seems to work correctly, producing the following output, as expected.\n\n![image](https://cloud.githubusercontent.com/assets/6973062/8308523/1c6d5612-19bd-11e5-96c2-0067fd4dd7d4.png)\n\nThis all works fine on the desktop version, iOS and Android.\n#### Edit\n\nA bit more info. I was conditionally calling pause depending on the isPlaying flag. If I always call pause, whether playing or not, the isPlaying flag in never set to true when I resume the music.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3223/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3222","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3222/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3222/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3222/events","html_url":"https://github.com/libgdx/libgdx/pull/3222","id":90279110,"number":3222,"title":"Adds methods to create random vector","user":{"login":"felipefcm","id":7122990,"avatar_url":"https://avatars2.githubusercontent.com/u/7122990?v=4","gravatar_id":"","url":"https://api.github.com/users/felipefcm","html_url":"https://github.com/felipefcm","followers_url":"https://api.github.com/users/felipefcm/followers","following_url":"https://api.github.com/users/felipefcm/following{/other_user}","gists_url":"https://api.github.com/users/felipefcm/gists{/gist_id}","starred_url":"https://api.github.com/users/felipefcm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/felipefcm/subscriptions","organizations_url":"https://api.github.com/users/felipefcm/orgs","repos_url":"https://api.github.com/users/felipefcm/repos","events_url":"https://api.github.com/users/felipefcm/events{/privacy}","received_events_url":"https://api.github.com/users/felipefcm/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":12,"created_at":"2015-06-23T03:48:44Z","updated_at":"2015-10-18T20:53:37Z","closed_at":"2015-10-18T20:53:36Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3222","html_url":"https://github.com/libgdx/libgdx/pull/3222","diff_url":"https://github.com/libgdx/libgdx/pull/3222.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3222.patch"},"body":"Also added a method to set the components of the Vector3 based on a spherical coordinate.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3222/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3221","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3221/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3221/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3221/events","html_url":"https://github.com/libgdx/libgdx/issues/3221","id":89840076,"number":3221,"title":"[feature request] adding something like JOGL's GLJPanel to the JOGL Backend","user":{"login":"adam-law","id":12507895,"avatar_url":"https://avatars0.githubusercontent.com/u/12507895?v=4","gravatar_id":"","url":"https://api.github.com/users/adam-law","html_url":"https://github.com/adam-law","followers_url":"https://api.github.com/users/adam-law/followers","following_url":"https://api.github.com/users/adam-law/following{/other_user}","gists_url":"https://api.github.com/users/adam-law/gists{/gist_id}","starred_url":"https://api.github.com/users/adam-law/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/adam-law/subscriptions","organizations_url":"https://api.github.com/users/adam-law/orgs","repos_url":"https://api.github.com/users/adam-law/repos","events_url":"https://api.github.com/users/adam-law/events{/privacy}","received_events_url":"https://api.github.com/users/adam-law/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2015-06-21T00:29:02Z","updated_at":"2015-07-13T14:52:51Z","closed_at":"2015-07-13T13:08:17Z","author_association":"NONE","body":"It's said that JOGL's GLJPanel works with [Java 8's SwingNode, allowing it to be embedded into JavaFX](http://www.java-gaming.org/topics/gljpanel-javafx/34103/msg/321543/view.html#msg321543). How it works is to do GLJPanel -> JFXPanel -> SwingNode -> Scene.\n\nCurrently, using LibGDX' LWJGLCanvas does not work with SwingNode, and nothing is displayed. Workarounds exist, such as the LWJGL-FX project, but it's not fully suited for production, as stuff like Box2dLights don't get rendered. A JOGL port of this project was made, but it forked from an earlier point of LWJGL-FX.\n\nI wanted to know if an implementation similiar to GLJPanel for the JOGL backend is feasible / possible. Using LWJGL-FX has been great, in my experience, though I've recently found that Box2dLights doesn't render (maybe something to do with FBO). I'm hoping a port of GLJPanel will resolve things, once and for all, for devs who want to use JavaFX and LibGDX, at the same time.\n\nThanks.\n\nEdit: Found that there was JOGL backend, and it's not the one for LWJGL (obviously). \n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3221/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3220","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3220/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3220/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3220/events","html_url":"https://github.com/libgdx/libgdx/pull/3220","id":89825297,"number":3220,"title":"Added methods to create random vector","user":{"login":"felipefcm","id":7122990,"avatar_url":"https://avatars2.githubusercontent.com/u/7122990?v=4","gravatar_id":"","url":"https://api.github.com/users/felipefcm","html_url":"https://github.com/felipefcm","followers_url":"https://api.github.com/users/felipefcm/followers","following_url":"https://api.github.com/users/felipefcm/following{/other_user}","gists_url":"https://api.github.com/users/felipefcm/gists{/gist_id}","starred_url":"https://api.github.com/users/felipefcm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/felipefcm/subscriptions","organizations_url":"https://api.github.com/users/felipefcm/orgs","repos_url":"https://api.github.com/users/felipefcm/repos","events_url":"https://api.github.com/users/felipefcm/events{/privacy}","received_events_url":"https://api.github.com/users/felipefcm/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2015-06-20T22:14:53Z","updated_at":"2015-06-25T01:14:34Z","closed_at":"2015-06-21T04:17:59Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3220","html_url":"https://github.com/libgdx/libgdx/pull/3220","diff_url":"https://github.com/libgdx/libgdx/pull/3220.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3220.patch"},"body":"","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3220/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3219","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3219/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3219/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3219/events","html_url":"https://github.com/libgdx/libgdx/issues/3219","id":89815265,"number":3219,"title":"allow easy delayed mipmap creation for Texture objects","user":{"login":"FyiurAmron","id":11016998,"avatar_url":"https://avatars1.githubusercontent.com/u/11016998?v=4","gravatar_id":"","url":"https://api.github.com/users/FyiurAmron","html_url":"https://github.com/FyiurAmron","followers_url":"https://api.github.com/users/FyiurAmron/followers","following_url":"https://api.github.com/users/FyiurAmron/following{/other_user}","gists_url":"https://api.github.com/users/FyiurAmron/gists{/gist_id}","starred_url":"https://api.github.com/users/FyiurAmron/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/FyiurAmron/subscriptions","organizations_url":"https://api.github.com/users/FyiurAmron/orgs","repos_url":"https://api.github.com/users/FyiurAmron/repos","events_url":"https://api.github.com/users/FyiurAmron/events{/privacy}","received_events_url":"https://api.github.com/users/FyiurAmron/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2015-06-20T20:35:20Z","updated_at":"2015-10-03T19:41:31Z","closed_at":"2015-10-03T19:41:31Z","author_association":"CONTRIBUTOR","body":"A real-life situation is an app that has low-quality set by the user, loads the textures without mipmaps, and then has the quality set to high (use mipmaps) by the user at run-time.\n\nCurrently, while the mipmaps can be created by the obvious\n\n```\n    texture.bind();\n    Gdx.gl.glGenerateMipmap( GL20.GL_TEXTURE_2D ); \n```\n\nit makes the Texture's TextureData state desync'ed with the real texture - `useMipmaps()` will return false, and there is no easy way to track if the texture actually has mipmaps or not (with the only solution coming to my mind being to create a separate data structure/class just to monitor the mipmap state of the Textures, making the TextureData useMipmaps() method completely useless); `glGetTexLevelParameter` is unavailable in libGDX since it's ES 3.1 addition; two TextureData implementations (File & ETC1) have package-private access on `useMipmaps` boolean, one (KTX) has it private - meaning that actually changing it requires nasty hacks. OTOH, calling `glGenerateMipmap()` defensively, even if the mipmaps are present, is a huge waste of GPU power, especially for applications with many textures loaded.\n\nIt would be a lot easier to deal with delayed mipmap creation by providing a Texture method `createMipmaps()` that would essentially do `bind(); Gdx.gl.glGenerateMipmap( GL20.GL_TEXTURE_2D );`, and then either switch the `useMipmaps` by some internal field access to its TextureData object, or just recreate the TextureData with that field updated (some package-private constructor just setting the fields and not doing the actual loading maybe?).\n\nI'm asking this because extending Texture in implementation code is extremely tough since it's produced by many other libGDX classes (loaders, asset manager handler etc), so it basically requires porting all that tightly-coupled classes too. \n\nNote: I'm aware that it's near impossible to create CPU mipmaps after the pixmap has been disposed; still, HW mipmaps are readily available on most platforms, and we could just throw an exception if HW creation was impossible.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3219/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3218","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3218/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3218/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3218/events","html_url":"https://github.com/libgdx/libgdx/issues/3218","id":89805091,"number":3218,"title":"glGetTexLevelParameter not implemented","user":{"login":"FyiurAmron","id":11016998,"avatar_url":"https://avatars1.githubusercontent.com/u/11016998?v=4","gravatar_id":"","url":"https://api.github.com/users/FyiurAmron","html_url":"https://github.com/FyiurAmron","followers_url":"https://api.github.com/users/FyiurAmron/followers","following_url":"https://api.github.com/users/FyiurAmron/following{/other_user}","gists_url":"https://api.github.com/users/FyiurAmron/gists{/gist_id}","starred_url":"https://api.github.com/users/FyiurAmron/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/FyiurAmron/subscriptions","organizations_url":"https://api.github.com/users/FyiurAmron/orgs","repos_url":"https://api.github.com/users/FyiurAmron/repos","events_url":"https://api.github.com/users/FyiurAmron/events{/privacy}","received_events_url":"https://api.github.com/users/FyiurAmron/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2015-06-20T19:10:16Z","updated_at":"2015-06-20T19:58:08Z","closed_at":"2015-06-20T19:58:08Z","author_association":"CONTRIBUTOR","body":"https://www.opengl.org/wiki/GLAPI/glGetTexLevelParameter\n\nit's present in core since 1.0 till 4.5, so I guess it's kinda ubiquitous. Not a trace of it in GL20/GL30 though. Is there any reason for the lack of it, or it's just a random omission?\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3218/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3217","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3217/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3217/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3217/events","html_url":"https://github.com/libgdx/libgdx/pull/3217","id":89755741,"number":3217,"title":"Fix for bug #3134 GlyphRun: Final white space omitted ","user":{"login":"ViktorMihhailov","id":289003,"avatar_url":"https://avatars1.githubusercontent.com/u/289003?v=4","gravatar_id":"","url":"https://api.github.com/users/ViktorMihhailov","html_url":"https://github.com/ViktorMihhailov","followers_url":"https://api.github.com/users/ViktorMihhailov/followers","following_url":"https://api.github.com/users/ViktorMihhailov/following{/other_user}","gists_url":"https://api.github.com/users/ViktorMihhailov/gists{/gist_id}","starred_url":"https://api.github.com/users/ViktorMihhailov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ViktorMihhailov/subscriptions","organizations_url":"https://api.github.com/users/ViktorMihhailov/orgs","repos_url":"https://api.github.com/users/ViktorMihhailov/repos","events_url":"https://api.github.com/users/ViktorMihhailov/events{/privacy}","received_events_url":"https://api.github.com/users/ViktorMihhailov/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2015-06-20T11:16:07Z","updated_at":"2015-09-22T12:32:12Z","closed_at":"2015-06-25T15:05:44Z","author_association":"NONE","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3217","html_url":"https://github.com/libgdx/libgdx/pull/3217","diff_url":"https://github.com/libgdx/libgdx/pull/3217.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3217.patch"},"body":"","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3217/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3216","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3216/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3216/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3216/events","html_url":"https://github.com/libgdx/libgdx/issues/3216","id":89672475,"number":3216,"title":"No way to set the crossOrigin attribute on an ImageElement using AssetDownloader","user":{"login":"WillCalderwood","id":6973062,"avatar_url":"https://avatars1.githubusercontent.com/u/6973062?v=4","gravatar_id":"","url":"https://api.github.com/users/WillCalderwood","html_url":"https://github.com/WillCalderwood","followers_url":"https://api.github.com/users/WillCalderwood/followers","following_url":"https://api.github.com/users/WillCalderwood/following{/other_user}","gists_url":"https://api.github.com/users/WillCalderwood/gists{/gist_id}","starred_url":"https://api.github.com/users/WillCalderwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/WillCalderwood/subscriptions","organizations_url":"https://api.github.com/users/WillCalderwood/orgs","repos_url":"https://api.github.com/users/WillCalderwood/repos","events_url":"https://api.github.com/users/WillCalderwood/events{/privacy}","received_events_url":"https://api.github.com/users/WillCalderwood/received_events","type":"User","site_admin":false},"labels":[{"id":11336982,"url":"https://api.github.com/repos/libgdx/libgdx/labels/enhancement","name":"enhancement","color":"84b6eb","default":true},{"id":67383148,"url":"https://api.github.com/repos/libgdx/libgdx/labels/gwt","name":"gwt","color":"5319e7","default":false}],"state":"closed","locked":false,"assignee":{"login":"badlogic","id":514052,"avatar_url":"https://avatars1.githubusercontent.com/u/514052?v=4","gravatar_id":"","url":"https://api.github.com/users/badlogic","html_url":"https://github.com/badlogic","followers_url":"https://api.github.com/users/badlogic/followers","following_url":"https://api.github.com/users/badlogic/following{/other_user}","gists_url":"https://api.github.com/users/badlogic/gists{/gist_id}","starred_url":"https://api.github.com/users/badlogic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/badlogic/subscriptions","organizations_url":"https://api.github.com/users/badlogic/orgs","repos_url":"https://api.github.com/users/badlogic/repos","events_url":"https://api.github.com/users/badlogic/events{/privacy}","received_events_url":"https://api.github.com/users/badlogic/received_events","type":"User","site_admin":false},"assignees":[{"login":"badlogic","id":514052,"avatar_url":"https://avatars1.githubusercontent.com/u/514052?v=4","gravatar_id":"","url":"https://api.github.com/users/badlogic","html_url":"https://github.com/badlogic","followers_url":"https://api.github.com/users/badlogic/followers","following_url":"https://api.github.com/users/badlogic/following{/other_user}","gists_url":"https://api.github.com/users/badlogic/gists{/gist_id}","starred_url":"https://api.github.com/users/badlogic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/badlogic/subscriptions","organizations_url":"https://api.github.com/users/badlogic/orgs","repos_url":"https://api.github.com/users/badlogic/repos","events_url":"https://api.github.com/users/badlogic/events{/privacy}","received_events_url":"https://api.github.com/users/badlogic/received_events","type":"User","site_admin":false}],"milestone":null,"comments":6,"created_at":"2015-06-19T22:19:54Z","updated_at":"2015-12-31T18:05:44Z","closed_at":"2015-12-31T18:05:44Z","author_association":"CONTRIBUTOR","body":"I'm trying to load Facebook profile pictures into the GWT version of my game and I'm struggling with cross origin issues despite all the required headers being in place. From this blog\nhttp://blog.chromium.org/2011/07/using-cross-domain-images-in-webgl-and.html\n\nIt looks like a specific crossOrigin attribute needs to be set on the image.\n\nWithout this it's not possible to load cross domain images into a texture. Is this something that can be resolved in libgdx, or is this a GWT issue?\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3216/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3215","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3215/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3215/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3215/events","html_url":"https://github.com/libgdx/libgdx/pull/3215","id":89667477,"number":3215,"title":"sdkLocationText uses correct directory structure based on OS name.","user":{"login":"jallen720","id":11153264,"avatar_url":"https://avatars1.githubusercontent.com/u/11153264?v=4","gravatar_id":"","url":"https://api.github.com/users/jallen720","html_url":"https://github.com/jallen720","followers_url":"https://api.github.com/users/jallen720/followers","following_url":"https://api.github.com/users/jallen720/following{/other_user}","gists_url":"https://api.github.com/users/jallen720/gists{/gist_id}","starred_url":"https://api.github.com/users/jallen720/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jallen720/subscriptions","organizations_url":"https://api.github.com/users/jallen720/orgs","repos_url":"https://api.github.com/users/jallen720/repos","events_url":"https://api.github.com/users/jallen720/events{/privacy}","received_events_url":"https://api.github.com/users/jallen720/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2015-06-19T21:46:53Z","updated_at":"2015-06-24T19:09:52Z","closed_at":"2015-06-24T19:09:52Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3215","html_url":"https://github.com/libgdx/libgdx/pull/3215","diff_url":"https://github.com/libgdx/libgdx/pull/3215.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3215.patch"},"body":"Made sample location for Android SDK consistent with OS directory structure.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3215/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3214","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3214/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3214/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3214/events","html_url":"https://github.com/libgdx/libgdx/issues/3214","id":89661281,"number":3214,"title":"[feature request] AudioRecorder/Device support for ByteBuffers","user":{"login":"entangledloops","id":3599701,"avatar_url":"https://avatars0.githubusercontent.com/u/3599701?v=4","gravatar_id":"","url":"https://api.github.com/users/entangledloops","html_url":"https://github.com/entangledloops","followers_url":"https://api.github.com/users/entangledloops/followers","following_url":"https://api.github.com/users/entangledloops/following{/other_user}","gists_url":"https://api.github.com/users/entangledloops/gists{/gist_id}","starred_url":"https://api.github.com/users/entangledloops/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/entangledloops/subscriptions","organizations_url":"https://api.github.com/users/entangledloops/orgs","repos_url":"https://api.github.com/users/entangledloops/repos","events_url":"https://api.github.com/users/entangledloops/events{/privacy}","received_events_url":"https://api.github.com/users/entangledloops/received_events","type":"User","site_admin":false},"labels":[{"id":172870364,"url":"https://api.github.com/repos/libgdx/libgdx/labels/need%20more%20info","name":"need more info","color":"bfdadc","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2015-06-19T21:06:57Z","updated_at":"2015-11-17T00:22:16Z","closed_at":"2015-11-17T00:22:16Z","author_association":"NONE","body":"It would be great if we could do a ByteBuffer read/write, especially in AudioRecorder. ByteBuffers can be passed down by address to JNI directly, and most hardware expects to fill byte buffers anyway. I wouldn't expect the additional methods to be difficult to patch in, but I'm not familiar with the source. The current implementation forces me to either copy shorts or re-implement my own OS-specific code.\n\nI do understand the motivation for using shorts when gdx only supports 16-bit PCM (which is fine), but I could use the direct access performance improvement.\n\nThanks!\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3214/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3213","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3213/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3213/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3213/events","html_url":"https://github.com/libgdx/libgdx/issues/3213","id":89376355,"number":3213,"title":"Please improve GlyphLayout by adding get and set methods to access its properties.","user":{"login":"AgrarPirat","id":8950110,"avatar_url":"https://avatars2.githubusercontent.com/u/8950110?v=4","gravatar_id":"","url":"https://api.github.com/users/AgrarPirat","html_url":"https://github.com/AgrarPirat","followers_url":"https://api.github.com/users/AgrarPirat/followers","following_url":"https://api.github.com/users/AgrarPirat/following{/other_user}","gists_url":"https://api.github.com/users/AgrarPirat/gists{/gist_id}","starred_url":"https://api.github.com/users/AgrarPirat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AgrarPirat/subscriptions","organizations_url":"https://api.github.com/users/AgrarPirat/orgs","repos_url":"https://api.github.com/users/AgrarPirat/repos","events_url":"https://api.github.com/users/AgrarPirat/events{/privacy}","received_events_url":"https://api.github.com/users/AgrarPirat/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2015-06-18T19:26:04Z","updated_at":"2015-06-25T15:12:31Z","closed_at":"2015-06-25T15:12:31Z","author_association":"NONE","body":"Please add get() and set() methods for the following properties of GlyphLayout:\n- color\n- font\n- width (to re-layout the text in case the size of the displayed ares has changed)\n- alignment\n- wrapping\n- text (get only)\n\nCurrently those properties can only be set all together by either creating a new instance of GlyphLayout or by calling one of the setText() methods. Unfortunately this makes GlyphLayout cumbersome to use if, for example, the text color throughout the whole game should be changed.\nAlso, it would be very useful if the text could be queried at a later time.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3213/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3212","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3212/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3212/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3212/events","html_url":"https://github.com/libgdx/libgdx/issues/3212","id":89169549,"number":3212,"title":"StretchViewport lines bug when using TextureRegion.split","user":{"login":"vedi0boy","id":4818003,"avatar_url":"https://avatars3.githubusercontent.com/u/4818003?v=4","gravatar_id":"","url":"https://api.github.com/users/vedi0boy","html_url":"https://github.com/vedi0boy","followers_url":"https://api.github.com/users/vedi0boy/followers","following_url":"https://api.github.com/users/vedi0boy/following{/other_user}","gists_url":"https://api.github.com/users/vedi0boy/gists{/gist_id}","starred_url":"https://api.github.com/users/vedi0boy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vedi0boy/subscriptions","organizations_url":"https://api.github.com/users/vedi0boy/orgs","repos_url":"https://api.github.com/users/vedi0boy/repos","events_url":"https://api.github.com/users/vedi0boy/events{/privacy}","received_events_url":"https://api.github.com/users/vedi0boy/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2015-06-18T01:20:08Z","updated_at":"2015-06-18T10:17:16Z","closed_at":"2015-06-18T04:13:00Z","author_association":"NONE","body":"I get a graphical glitch whenever I try to split my tileset into a TextureRegion[][] and drawing them. It works fine when I am using the default aspect ratio but when the window has to stretch, it seems to be accessing a line of pixels from the next tile in the tileset and drawing them. Here is a picture (The lines I am referring to are the 2 vertical brown lines in the water. They seem to be from another tile in my tileset):\n\n<img src=\"http://i.imgur.com/YfNCHsb.png\"></img>\n\nNote: The lines also move when I move the player. And when I run the game on my tablet, a similar effect happens except its the bottom layer of my player's feet that appear above its head. It's like all pixels after a certain point are considered too far so it draws them from start, I hope that was easy enough to understand :)\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3212/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3211","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3211/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3211/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3211/events","html_url":"https://github.com/libgdx/libgdx/issues/3211","id":88907209,"number":3211,"title":"Sound loading becomes slower when more than 6 files","user":{"login":"kandaaaaa","id":4634520,"avatar_url":"https://avatars1.githubusercontent.com/u/4634520?v=4","gravatar_id":"","url":"https://api.github.com/users/kandaaaaa","html_url":"https://github.com/kandaaaaa","followers_url":"https://api.github.com/users/kandaaaaa/followers","following_url":"https://api.github.com/users/kandaaaaa/following{/other_user}","gists_url":"https://api.github.com/users/kandaaaaa/gists{/gist_id}","starred_url":"https://api.github.com/users/kandaaaaa/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kandaaaaa/subscriptions","organizations_url":"https://api.github.com/users/kandaaaaa/orgs","repos_url":"https://api.github.com/users/kandaaaaa/repos","events_url":"https://api.github.com/users/kandaaaaa/events{/privacy}","received_events_url":"https://api.github.com/users/kandaaaaa/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":14,"created_at":"2015-06-17T04:18:47Z","updated_at":"2017-01-16T14:52:16Z","closed_at":"2015-08-19T09:51:28Z","author_association":"NONE","body":"Here is my code. Simply load all the sound files\n\n```\n    Gdx.app.log(\"PERFORMANCE\", \"Load sound stars\");\n    soundMPWin = Gdx.audio.newSound(Gdx.files.internal(\"SoundEffect/MPWin.mp3\"));\n    Gdx.app.log(\"PERFORMANCE\", \"MPWin done\");\n    soundMPLose = Gdx.audio.newSound(Gdx.files.internal(\"SoundEffect/MPLose.mp3\"));\n    Gdx.app.log(\"PERFORMANCE\", \"MPLose done\");\n    soundShipTouched = Gdx.audio.newSound(Gdx.files.internal(\"SoundEffect/ShipTouched.mp3\"));\n    Gdx.app.log(\"PERFORMANCE\", \"ShipTouched done\");\n    soundControlObjectExplode = Gdx.audio.newSound(Gdx.files.internal(\"SoundEffect/ControlExplosion.mp3\"));\n    Gdx.app.log(\"PERFORMANCE\", \"ControlExplosion done\");\n    soundButtonClick  = Gdx.audio.newSound(Gdx.files.internal(\"SoundEffect/ButtonClick.mp3\"));\n    Gdx.app.log(\"PERFORMANCE\", \"ButtonClick done\");\n    soundKillWave = Gdx.audio.newSound(Gdx.files.internal(\"SoundEffect/KillWave.mp3\"));\n    Gdx.app.log(\"PERFORMANCE\", \"KillWave done\");\n    soundRockPause = Gdx.audio.newSound(Gdx.files.internal(\"SoundEffect/RockPause.mp3\"));\n    Gdx.app.log(\"PERFORMANCE\", \"RockPause done\");\n    soundBlackHole = Gdx.audio.newSound(Gdx.files.internal(\"SoundEffect/BlackHole.mp3\"));\n    Gdx.app.log(\"PERFORMANCE\", \"BlackHole done\");\n    soundGoldCoin = Gdx.audio.newSound(Gdx.files.internal(\"SoundEffect/GoldCoin.mp3\"));\n    Gdx.app.log(\"PERFORMANCE\", \"GoldCoin done\");\n    soundShipShield = Gdx.audio.newSound(Gdx.files.internal(\"SoundEffect/ShipShield.mp3\"));\n    Gdx.app.log(\"PERFORMANCE\", \"ShipShield done\");\n    soundRockKill = Gdx.audio.newSound(Gdx.files.internal(\"SoundEffect/RockKill.mp3\"));\n    Gdx.app.log(\"PERFORMANCE\", \"RockKill done\");\n    soundRemoteCoin = Gdx.audio.newSound(Gdx.files.internal(\"SoundEffect/RemoteCoin.mp3\"));\n    Gdx.app.log(\"PERFORMANCE\", \"RemoteCoin done\");\n```\n\nAnd here is the output. Please noticing the file loading taking 0.5 - 1 seconds after 6 files, but it is very quick (just serveral milliseconds) for the first 6 files:\n\n06-17 00:05:26.756    7051-7174/com.abc.testapp I/PERFORMANCE﹕ Load sound stars\n06-17 00:05:26.761    7051-7174/com.abc.testapp I/PERFORMANCE﹕ ShipTouched done\n06-17 00:05:26.762    7051-7174/com.abc.testapp I/PERFORMANCE﹕ ControlExplosion done\n06-17 00:05:26.763    7051-7174/com.abc.testapp I/PERFORMANCE﹕ ButtonClick done\n06-17 00:05:26.763    7051-7174/com.abc.testapp I/PERFORMANCE﹕ KillWave done\n06-17 00:05:26.764    7051-7174/com.abc.testapp I/PERFORMANCE﹕ RockPause done\n06-17 00:05:26.764    7051-7174/com.abc.testapp I/PERFORMANCE﹕ BlackHole done\n06-17 00:05:27.306    7051-7174/com.abc.testapp I/PERFORMANCE﹕ GoldCoin done\n06-17 00:05:28.234    7051-7174/com.abc.testapp I/PERFORMANCE﹕ ShipShield done\n06-17 00:05:28.508    7051-7174/com.abc.testapp I/PERFORMANCE﹕ RockKill done\n06-17 00:05:29.629    7051-7174/com.abc.testapp I/PERFORMANCE﹕ MPWin done\n06-17 00:05:30.703    7051-7174/com.abc.testapp I/PERFORMANCE﹕ MPLose done\n06-17 00:05:31.246    7051-7174/com.abc.testapp I/PERFORMANCE﹕ RemoteCoin done\n\nSo I reordered the file loading for \"MPWin\" and \"WinLose\" to load first, and these two files loaded very fast. \"BlackHole\" and \"RockPause\" was originally loaded quick (1ms), now taking more than 1 second to load...\n\n06-17 00:07:52.436   9870-10013/com.abc.testapp I/PERFORMANCE﹕ Load sound stars\n06-17 00:07:52.439   9870-10013/com.abc.testapp I/PERFORMANCE﹕ MPWin done\n06-17 00:07:52.440   9870-10013/com.abc.testapp I/PERFORMANCE﹕ MPLose done\n06-17 00:07:52.440   9870-10013/com.abc.testapp I/PERFORMANCE﹕ ShipTouched done\n06-17 00:07:52.441   9870-10013/com.abc.testapp I/PERFORMANCE﹕ ControlExplosion done\n06-17 00:07:52.441   9870-10013/com.abc.testapp I/PERFORMANCE﹕ ButtonClick done\n06-17 00:07:52.442   9870-10013/com.abc.testapp I/PERFORMANCE﹕ KillWave done\n06-17 00:07:53.707   9870-10013/com.abc.testapp I/PERFORMANCE﹕ RockPause done\n06-17 00:07:54.942   9870-10013/com.abc.testapp I/PERFORMANCE﹕ BlackHole done\n06-17 00:07:55.456   9870-10013/com.abc.testapp I/PERFORMANCE﹕ GoldCoin done\n06-17 00:07:56.378   9870-10013/com.abc.testapp I/PERFORMANCE﹕ ShipShield done\n06-17 00:07:56.702   9870-10013/com.abc.testapp I/PERFORMANCE﹕ RockKill done\n06-17 00:07:57.934   9870-10013/com.abc.testapp I/PERFORMANCE﹕ RemoteCoin done\n\nCould you please take a look at this issue? and provide workaround if possible?\n\nThank you so much :-)\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3211/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3210","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3210/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3210/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3210/events","html_url":"https://github.com/libgdx/libgdx/issues/3210","id":88741120,"number":3210,"title":"TextureRegion.split Not Working Proper ","user":{"login":"recoverinfotech","id":3682427,"avatar_url":"https://avatars0.githubusercontent.com/u/3682427?v=4","gravatar_id":"","url":"https://api.github.com/users/recoverinfotech","html_url":"https://github.com/recoverinfotech","followers_url":"https://api.github.com/users/recoverinfotech/followers","following_url":"https://api.github.com/users/recoverinfotech/following{/other_user}","gists_url":"https://api.github.com/users/recoverinfotech/gists{/gist_id}","starred_url":"https://api.github.com/users/recoverinfotech/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/recoverinfotech/subscriptions","organizations_url":"https://api.github.com/users/recoverinfotech/orgs","repos_url":"https://api.github.com/users/recoverinfotech/repos","events_url":"https://api.github.com/users/recoverinfotech/events{/privacy}","received_events_url":"https://api.github.com/users/recoverinfotech/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2015-06-16T14:17:50Z","updated_at":"2015-06-16T14:20:37Z","closed_at":"2015-06-16T14:20:37Z","author_association":"NONE","body":" Animation animationZ0;\n\n```\nTexture textureZ60;\n\nTextureRegion[] allFramesZ0;\n\nint column=6;\nint row=1;\nTextureRegion currentFrameZ0;\n\npublic RxtraHandelPlayTextureZ6(){\n    textureZ60=new Texture(Gdx.files.internal(\"data/z63.png\"));\n    allFramesZ0=new TextureRegion(textureZ60).split(textureZ60.getWidth()/column,textureZ60.getHeight()/row)[0];\n\n    int index=0;\n    for (int i=0;i<row;i++){\n        for (int j=column-1;j>=0;j--){\n            allFramesZ0[index++]=tmp[i][j];\n        }\n    }\n    animationZ0=new Animation(0.25f,allFramesZ0);\n    currentFrameZ0=animationZ0.getKeyFrame(4);\n    //SetTexture(0);\n   // SetTexture(1);\n   // SetTexture(2);\n   // SetTexture(3);\n   // SetTexture(4);\n   // SetTexture(5);\n}\n```\n\nThis is my code \n\nmy problem is that . if i make array descending it return 6 TextureRegion\n\n0- Orange\n1-Black\n2-Rad\n3-Rad\n4-Rad\n5-Rad\nand if i make array ascending it return 6 TextureRegion\n\n0- Rad\n1-Green\n2-Orange\n3-Orange\n4-Orange\n5-Orange\nI tried every thing but it not returning all 6 different image . why it repeating Rad or Orange and How i can get all 6 different image \n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3210/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3209","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3209/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3209/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3209/events","html_url":"https://github.com/libgdx/libgdx/pull/3209","id":88228045,"number":3209,"title":"Add screen transitions","user":{"login":"digital-thinking","id":7263915,"avatar_url":"https://avatars2.githubusercontent.com/u/7263915?v=4","gravatar_id":"","url":"https://api.github.com/users/digital-thinking","html_url":"https://github.com/digital-thinking","followers_url":"https://api.github.com/users/digital-thinking/followers","following_url":"https://api.github.com/users/digital-thinking/following{/other_user}","gists_url":"https://api.github.com/users/digital-thinking/gists{/gist_id}","starred_url":"https://api.github.com/users/digital-thinking/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/digital-thinking/subscriptions","organizations_url":"https://api.github.com/users/digital-thinking/orgs","repos_url":"https://api.github.com/users/digital-thinking/repos","events_url":"https://api.github.com/users/digital-thinking/events{/privacy}","received_events_url":"https://api.github.com/users/digital-thinking/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2015-06-14T18:33:11Z","updated_at":"2015-08-03T08:28:18Z","closed_at":"2015-08-03T08:28:18Z","author_association":"NONE","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3209","html_url":"https://github.com/libgdx/libgdx/pull/3209","diff_url":"https://github.com/libgdx/libgdx/pull/3209.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3209.patch"},"body":"Adds frame buffer based screen transitions like, alpha-fading, color-fading, sliding and slicing.\nThe Game class has been extended to FadingGame, which applies transitions, when setScreen is called. Allows callbacks on start and end of the transitions.\n\nScreenTransition Test included:\nleft Mouse - toggle Screen\nright Mouse - change transition\n\nBe free to contact me for wiki tutorial or something if you want to accept the pull request.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3209/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3208","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3208/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3208/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3208/events","html_url":"https://github.com/libgdx/libgdx/issues/3208","id":88137099,"number":3208,"title":"Particle 3D Tool","user":{"login":"TaiVuong","id":12879647,"avatar_url":"https://avatars0.githubusercontent.com/u/12879647?v=4","gravatar_id":"","url":"https://api.github.com/users/TaiVuong","html_url":"https://github.com/TaiVuong","followers_url":"https://api.github.com/users/TaiVuong/followers","following_url":"https://api.github.com/users/TaiVuong/following{/other_user}","gists_url":"https://api.github.com/users/TaiVuong/gists{/gist_id}","starred_url":"https://api.github.com/users/TaiVuong/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/TaiVuong/subscriptions","organizations_url":"https://api.github.com/users/TaiVuong/orgs","repos_url":"https://api.github.com/users/TaiVuong/repos","events_url":"https://api.github.com/users/TaiVuong/events{/privacy}","received_events_url":"https://api.github.com/users/TaiVuong/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2015-06-14T07:05:45Z","updated_at":"2015-06-14T14:02:07Z","closed_at":"2015-06-14T13:19:55Z","author_association":"NONE","body":"Can u add something like this?\nhttps://youtu.be/kpaxK8A0Rew\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3208/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3207","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3207/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3207/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3207/events","html_url":"https://github.com/libgdx/libgdx/issues/3207","id":88109766,"number":3207,"title":"GlyphLayout only lays out/renders part of a string.","user":{"login":"seannybgoode","id":2761107,"avatar_url":"https://avatars3.githubusercontent.com/u/2761107?v=4","gravatar_id":"","url":"https://api.github.com/users/seannybgoode","html_url":"https://github.com/seannybgoode","followers_url":"https://api.github.com/users/seannybgoode/followers","following_url":"https://api.github.com/users/seannybgoode/following{/other_user}","gists_url":"https://api.github.com/users/seannybgoode/gists{/gist_id}","starred_url":"https://api.github.com/users/seannybgoode/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/seannybgoode/subscriptions","organizations_url":"https://api.github.com/users/seannybgoode/orgs","repos_url":"https://api.github.com/users/seannybgoode/repos","events_url":"https://api.github.com/users/seannybgoode/events{/privacy}","received_events_url":"https://api.github.com/users/seannybgoode/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2015-06-14T03:12:44Z","updated_at":"2015-06-14T04:36:10Z","closed_at":"2015-06-14T04:36:10Z","author_association":"NONE","body":"I'm reasonably sure this is a bug, so submitting here. GlyphLayout will only lay out part of the strings I'm putting into it. \n\nThis is the string going in (and confirmed to be going in via console output):\n\"Hey it's your pal Jeb. This is a test text sequence for Pixel Defender. Dialogues are divided up into two categories, sequences, which represent the whole conversation over multiple dialogue boxes, and sections, which represent a single piece of the conversation. This file defines a section, and which section comes after. All of the sections together, make a sequence. You could theoretically make one that.\"\n\nThis is the string being drawn:\n\"and sections, which represent a single piece of the conversation. This file defines a section, and which section comes after. All of the sections together, make a sequence. You could theoretically make one that.\"\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3207/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3206","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3206/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3206/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3206/events","html_url":"https://github.com/libgdx/libgdx/issues/3206","id":87996632,"number":3206,"title":"Align is missing from scene2d.utils","user":{"login":"flareofghast","id":1791927,"avatar_url":"https://avatars3.githubusercontent.com/u/1791927?v=4","gravatar_id":"","url":"https://api.github.com/users/flareofghast","html_url":"https://github.com/flareofghast","followers_url":"https://api.github.com/users/flareofghast/followers","following_url":"https://api.github.com/users/flareofghast/following{/other_user}","gists_url":"https://api.github.com/users/flareofghast/gists{/gist_id}","starred_url":"https://api.github.com/users/flareofghast/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/flareofghast/subscriptions","organizations_url":"https://api.github.com/users/flareofghast/orgs","repos_url":"https://api.github.com/users/flareofghast/repos","events_url":"https://api.github.com/users/flareofghast/events{/privacy}","received_events_url":"https://api.github.com/users/flareofghast/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2015-06-13T12:23:18Z","updated_at":"2015-06-13T12:29:19Z","closed_at":"2015-06-13T12:28:43Z","author_association":"NONE","body":"It has disappeared :(\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3206/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3205","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3205/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3205/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3205/events","html_url":"https://github.com/libgdx/libgdx/issues/3205","id":87638629,"number":3205,"title":"gdx-setup checks local before gradle downloaded.","user":{"login":"songzhihui","id":2428677,"avatar_url":"https://avatars1.githubusercontent.com/u/2428677?v=4","gravatar_id":"","url":"https://api.github.com/users/songzhihui","html_url":"https://github.com/songzhihui","followers_url":"https://api.github.com/users/songzhihui/followers","following_url":"https://api.github.com/users/songzhihui/following{/other_user}","gists_url":"https://api.github.com/users/songzhihui/gists{/gist_id}","starred_url":"https://api.github.com/users/songzhihui/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/songzhihui/subscriptions","organizations_url":"https://api.github.com/users/songzhihui/orgs","repos_url":"https://api.github.com/users/songzhihui/repos","events_url":"https://api.github.com/users/songzhihui/events{/privacy}","received_events_url":"https://api.github.com/users/songzhihui/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2015-06-12T07:22:05Z","updated_at":"2015-07-29T04:45:55Z","closed_at":"2015-07-29T04:45:55Z","author_association":"NONE","body":"gdx-setup show check if the gradle is installed before.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3205/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3204","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3204/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3204/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3204/events","html_url":"https://github.com/libgdx/libgdx/issues/3204","id":87636559,"number":3204,"title":"Implement equals() and hashCode() for collection classes","user":{"login":"antag99","id":7714919,"avatar_url":"https://avatars3.githubusercontent.com/u/7714919?v=4","gravatar_id":"","url":"https://api.github.com/users/antag99","html_url":"https://github.com/antag99","followers_url":"https://api.github.com/users/antag99/followers","following_url":"https://api.github.com/users/antag99/following{/other_user}","gists_url":"https://api.github.com/users/antag99/gists{/gist_id}","starred_url":"https://api.github.com/users/antag99/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/antag99/subscriptions","organizations_url":"https://api.github.com/users/antag99/orgs","repos_url":"https://api.github.com/users/antag99/repos","events_url":"https://api.github.com/users/antag99/events{/privacy}","received_events_url":"https://api.github.com/users/antag99/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2015-06-12T07:13:54Z","updated_at":"2015-07-05T18:05:17Z","closed_at":"2015-07-05T18:05:17Z","author_association":"CONTRIBUTOR","body":"The collection classes in libgdx should implement `equals()` and `hashCode()`. This includes the various `Entry` classes. Here is a list of classes missing `equals()` or `hashCode()` implementations:\n- `com.badlogic.gdx.utils.Array` - only `equals()` is implemented\n- `com.badlogic.gdx.utils.ArrayMap` - uses `ObjectMap$Entry`\n- `com.badlogic.gdx.utils.BinaryHeap`\n- `com.badlogic.gdx.utils.BinaryHeap$Node`\n- `com.badlogic.gdx.utils.BooleanArray` - only `equals()` is implemented\n- `com.badlogic.gdx.utils.ByteArray` - only `equals()` is implemented\n- `com.badlogic.gdx.utils.CharArray` - only `equals()` is implemented\n- `com.badlogic.gdx.utils.FloatArray` - only `equals()` is implemented\n- `com.badlogic.gdx.utils.IntArray` - only `equals()` is implemented\n- `com.badlogic.gdx.utils.IdentityMap`\n- `com.badlogic.gdx.utils.IdentityMap$Entry` - could be replaced with `ObjectMap$Entry`\n- `com.badlogic.gdx.utils.IntFloatMap`\n- `com.badlogic.gdx.utils.IntFloatMap$Entry`\n- `com.badlogic.gdx.utils.IntIntMap`\n- `com.badlogic.gdx.utils.IntIntMap$Entry`\n- `com.badlogic.gdx.utils.IntMap`\n- `com.badlogic.gdx.utils.IntMap$Entry`\n- `com.badlogic.gdx.utils.IntSet`\n- `com.badlogic.gdx.utils.LongArray` - only `equals()` is implemented\n- `com.badlogic.gdx.utils.LongMap`\n- `com.badlogic.gdx.utils.LongMap$Entry`\n- `com.badlogic.gdx.utils.ObjectFloatMap`\n- `com.badlogic.gdx.utils.ObjectFloatMap$Entry`\n- `com.badlogic.gdx.utils.ObjectIntMap`\n- `com.badlogic.gdx.utils.ObjectIntMap$Entry`\n- `com.badlogic.gdx.utils.ObjectMap`\n- `com.badlogic.gdx.utils.ObjectMap$Entry`\n- `com.badlogic.gdx.utils.ObjectSet`\n- `com.badlogic.gdx.utils.OrderedMap` - extends `ObjectMap`, but semantics may be different\n- `com.badlogic.gdx.utils.OrderedSet` - extends `ObjectSet`, but semantics may be different\n- `com.badlogic.gdx.utils.PooledLinkedList`\n- `com.badlogic.gdx.utils.ShortArray` - only `equals()` is implemented\n- `com.badlogic.gdx.utils.SortedIntList`\n\nSeriously, shouldn't all these primitive type variations be auto-generated?\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3204/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3203","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3203/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3203/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3203/events","html_url":"https://github.com/libgdx/libgdx/issues/3203","id":87564341,"number":3203,"title":"Proposal: Android SDK manager","user":{"login":"deathbeam","id":5115805,"avatar_url":"https://avatars3.githubusercontent.com/u/5115805?v=4","gravatar_id":"","url":"https://api.github.com/users/deathbeam","html_url":"https://github.com/deathbeam","followers_url":"https://api.github.com/users/deathbeam/followers","following_url":"https://api.github.com/users/deathbeam/following{/other_user}","gists_url":"https://api.github.com/users/deathbeam/gists{/gist_id}","starred_url":"https://api.github.com/users/deathbeam/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/deathbeam/subscriptions","organizations_url":"https://api.github.com/users/deathbeam/orgs","repos_url":"https://api.github.com/users/deathbeam/repos","events_url":"https://api.github.com/users/deathbeam/events{/privacy}","received_events_url":"https://api.github.com/users/deathbeam/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":14,"created_at":"2015-06-12T01:14:04Z","updated_at":"2015-06-13T19:07:34Z","closed_at":"2015-06-13T18:27:12Z","author_association":"NONE","body":"So currently, in gdx-setup user needs to specify location to his/her installed version of Android SDK. I have found this great [tool](https://github.com/JakeWharton/sdk-manager-plugin), which checks, if user have specified or never version of Android SDK installed and if not it installs it. I am using it for a while with all libgdx-related projects I am working on and I must say that it is working perfectly.\n\nWhat are advantages?\n- simple installation\n- software needed to be installed before building libGDX project reduced only to JDK\n- less troubles for Linux users (as there is no installer for Android SDK for Linux, so you need to download archive, extract it and manually update PATH)\n- easier deployement of libGDX projects to GitHub (by eliminating local.properties)\n\nI can create pull request for this.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3203/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3202","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3202/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3202/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3202/events","html_url":"https://github.com/libgdx/libgdx/issues/3202","id":87563075,"number":3202,"title":"Circle.contains() does not work as intended.","user":{"login":"piotr-j","id":2499728,"avatar_url":"https://avatars0.githubusercontent.com/u/2499728?v=4","gravatar_id":"","url":"https://api.github.com/users/piotr-j","html_url":"https://github.com/piotr-j","followers_url":"https://api.github.com/users/piotr-j/followers","following_url":"https://api.github.com/users/piotr-j/following{/other_user}","gists_url":"https://api.github.com/users/piotr-j/gists{/gist_id}","starred_url":"https://api.github.com/users/piotr-j/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/piotr-j/subscriptions","organizations_url":"https://api.github.com/users/piotr-j/orgs","repos_url":"https://api.github.com/users/piotr-j/repos","events_url":"https://api.github.com/users/piotr-j/events{/privacy}","received_events_url":"https://api.github.com/users/piotr-j/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2015-06-12T01:06:57Z","updated_at":"2015-06-22T05:26:17Z","closed_at":"2015-06-21T15:13:45Z","author_association":"CONTRIBUTOR","body":"Perhaps I'm dumb, but Circle.overlaps() doesn't seem to work properly. \nSimple test and working implementation:\nhttps://gist.github.com/piotr-j/6bbc4ae03f7753ce6b6f\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3202/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3201","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3201/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3201/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3201/events","html_url":"https://github.com/libgdx/libgdx/issues/3201","id":87322540,"number":3201,"title":"[feature request] Method to allow Callable<> i.e. Gdx.app.postCallable()","user":{"login":"adam-law","id":12507895,"avatar_url":"https://avatars0.githubusercontent.com/u/12507895?v=4","gravatar_id":"","url":"https://api.github.com/users/adam-law","html_url":"https://github.com/adam-law","followers_url":"https://api.github.com/users/adam-law/followers","following_url":"https://api.github.com/users/adam-law/following{/other_user}","gists_url":"https://api.github.com/users/adam-law/gists{/gist_id}","starred_url":"https://api.github.com/users/adam-law/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/adam-law/subscriptions","organizations_url":"https://api.github.com/users/adam-law/orgs","repos_url":"https://api.github.com/users/adam-law/repos","events_url":"https://api.github.com/users/adam-law/events{/privacy}","received_events_url":"https://api.github.com/users/adam-law/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2015-06-11T12:05:41Z","updated_at":"2015-11-17T00:21:20Z","closed_at":"2015-11-17T00:21:20Z","author_association":"NONE","body":"I'm finding that, when developing for desktop, I have situations where I'm outside of the OpenGL context, but need to process something within its thread. **Gdx.app.postRunnable** is  a boon in these situations, but there are times when I need to use **Future<>** and future.get(), to be sure that what I want processed has completed properly.\n\nWould it be possible to add this function to the package?\n\nThanks.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3201/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3200","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3200/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3200/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3200/events","html_url":"https://github.com/libgdx/libgdx/issues/3200","id":87067417,"number":3200,"title":"Loading corrupted PNG image may result in native crash","user":{"login":"kotcrab","id":4594081,"avatar_url":"https://avatars1.githubusercontent.com/u/4594081?v=4","gravatar_id":"","url":"https://api.github.com/users/kotcrab","html_url":"https://github.com/kotcrab","followers_url":"https://api.github.com/users/kotcrab/followers","following_url":"https://api.github.com/users/kotcrab/following{/other_user}","gists_url":"https://api.github.com/users/kotcrab/gists{/gist_id}","starred_url":"https://api.github.com/users/kotcrab/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kotcrab/subscriptions","organizations_url":"https://api.github.com/users/kotcrab/orgs","repos_url":"https://api.github.com/users/kotcrab/repos","events_url":"https://api.github.com/users/kotcrab/events{/privacy}","received_events_url":"https://api.github.com/users/kotcrab/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2015-06-10T18:46:14Z","updated_at":"2015-06-25T15:40:32Z","closed_at":"2015-06-25T15:40:32Z","author_association":"CONTRIBUTOR","body":"Normally when trying to load corrupted png file libGDX will throw \"Couldn't load file\" exception and that's ok but somehow my file got corrupted in such way that loading it results in native crash. \nThe crash occurs somewhere here in native code: https://github.com/libgdx/libgdx/blob/master/gdx/src/com/badlogic/gdx/graphics/g2d/Gdx2DPixmap.java#L266\n\nImage: http://dl.kotcrab.com/nativecrasher.png (just try to load it as Texture)\nError log: http://pastebin.com/XzKeCwgw (OS: Win7 64bit)\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3200/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3199","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3199/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3199/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3199/events","html_url":"https://github.com/libgdx/libgdx/pull/3199","id":87023842,"number":3199,"title":"Fix bugs with Bits.nextClearBit(int)","user":{"login":"antag99","id":7714919,"avatar_url":"https://avatars3.githubusercontent.com/u/7714919?v=4","gravatar_id":"","url":"https://api.github.com/users/antag99","html_url":"https://github.com/antag99","followers_url":"https://api.github.com/users/antag99/followers","following_url":"https://api.github.com/users/antag99/following{/other_user}","gists_url":"https://api.github.com/users/antag99/gists{/gist_id}","starred_url":"https://api.github.com/users/antag99/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/antag99/subscriptions","organizations_url":"https://api.github.com/users/antag99/orgs","repos_url":"https://api.github.com/users/antag99/repos","events_url":"https://api.github.com/users/antag99/events{/privacy}","received_events_url":"https://api.github.com/users/antag99/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2015-06-10T16:16:11Z","updated_at":"2015-06-10T19:25:47Z","closed_at":"2015-06-10T19:25:02Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3199","html_url":"https://github.com/libgdx/libgdx/pull/3199","diff_url":"https://github.com/libgdx/libgdx/pull/3199.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3199.patch"},"body":"#3198\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3199/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}}],"meta":{"x-ratelimit-limit":"5000","x-ratelimit-remaining":"4943","x-ratelimit-reset":"1506844633","x-github-request-id":"E9D0:0287:84D542:11D299A:59D094D4","x-github-media-type":"github.squirrel-girl-preview","link":"<https://api.github.com/repositories/5373551/issues?state=all&page=58>; rel=\"next\", <https://api.github.com/repositories/5373551/issues?state=all&page=164>; rel=\"last\", <https://api.github.com/repositories/5373551/issues?state=all&page=1>; rel=\"first\", <https://api.github.com/repositories/5373551/issues?state=all&page=56>; rel=\"prev\"","etag":"\"0c9a75828d350b5737bb447e38c9f60f\"","status":"200 OK"}}
