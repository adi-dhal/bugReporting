{"data":[{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4458","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4458/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4458/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4458/events","html_url":"https://github.com/libgdx/libgdx/pull/4458","id":193659282,"number":4458,"title":"Fix RenderContext Javadoc","user":{"login":"cypherdare","id":1843131,"avatar_url":"https://avatars2.githubusercontent.com/u/1843131?v=4","gravatar_id":"","url":"https://api.github.com/users/cypherdare","html_url":"https://github.com/cypherdare","followers_url":"https://api.github.com/users/cypherdare/followers","following_url":"https://api.github.com/users/cypherdare/following{/other_user}","gists_url":"https://api.github.com/users/cypherdare/gists{/gist_id}","starred_url":"https://api.github.com/users/cypherdare/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cypherdare/subscriptions","organizations_url":"https://api.github.com/users/cypherdare/orgs","repos_url":"https://api.github.com/users/cypherdare/repos","events_url":"https://api.github.com/users/cypherdare/events{/privacy}","received_events_url":"https://api.github.com/users/cypherdare/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2016-12-06T01:32:19Z","updated_at":"2016-12-06T21:31:12Z","closed_at":"2016-12-06T21:31:08Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4458","html_url":"https://github.com/libgdx/libgdx/pull/4458","diff_url":"https://github.com/libgdx/libgdx/pull/4458.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4458.patch"},"body":"The begin() method states that it assumes default OpenGL states, but actually it enforces them, regardless of what the state was before calling begin().","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4458/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4457","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4457/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4457/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4457/events","html_url":"https://github.com/libgdx/libgdx/pull/4457","id":193400716,"number":4457,"title":"Update changes for the DragAndDrop change","user":{"login":"cypherdare","id":1843131,"avatar_url":"https://avatars2.githubusercontent.com/u/1843131?v=4","gravatar_id":"","url":"https://api.github.com/users/cypherdare","html_url":"https://github.com/cypherdare","followers_url":"https://api.github.com/users/cypherdare/followers","following_url":"https://api.github.com/users/cypherdare/following{/other_user}","gists_url":"https://api.github.com/users/cypherdare/gists{/gist_id}","starred_url":"https://api.github.com/users/cypherdare/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cypherdare/subscriptions","organizations_url":"https://api.github.com/users/cypherdare/orgs","repos_url":"https://api.github.com/users/cypherdare/repos","events_url":"https://api.github.com/users/cypherdare/events{/privacy}","received_events_url":"https://api.github.com/users/cypherdare/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-12-05T02:58:04Z","updated_at":"2016-12-05T22:28:32Z","closed_at":"2016-12-05T22:28:32Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4457","html_url":"https://github.com/libgdx/libgdx/pull/4457","diff_url":"https://github.com/libgdx/libgdx/pull/4457.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4457.patch"},"body":"#4286 changed default behavior, so it needs to be mentioned.","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4457/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4456","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4456/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4456/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4456/events","html_url":"https://github.com/libgdx/libgdx/issues/4456","id":193373684,"number":4456,"title":"Noticeable pause after pasting into a TextField when non continous rendering","user":{"login":"WickedShell","id":567688,"avatar_url":"https://avatars2.githubusercontent.com/u/567688?v=4","gravatar_id":"","url":"https://api.github.com/users/WickedShell","html_url":"https://github.com/WickedShell","followers_url":"https://api.github.com/users/WickedShell/followers","following_url":"https://api.github.com/users/WickedShell/following{/other_user}","gists_url":"https://api.github.com/users/WickedShell/gists{/gist_id}","starred_url":"https://api.github.com/users/WickedShell/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/WickedShell/subscriptions","organizations_url":"https://api.github.com/users/WickedShell/orgs","repos_url":"https://api.github.com/users/WickedShell/repos","events_url":"https://api.github.com/users/WickedShell/events{/privacy}","received_events_url":"https://api.github.com/users/WickedShell/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2016-12-04T20:33:58Z","updated_at":"2016-12-06T11:36:02Z","closed_at":"2016-12-06T11:35:38Z","author_association":"CONTRIBUTOR","body":"Please ensure you have given all the following requested information in your report.\r\n\r\n#### Issue details\r\nWhen non continuous rendering is enabled (only tested on desktop w/ LWJGL backend), pasting into a textfield can have a long pause that is long enough for the user to think they hit the wrong key combo and paste again.\r\n\r\n#### Reproduction steps/code\r\nRan into a problem trying to get gradle to build the LWJGL tests due to some android/version problems. The code below just dropped into the template building a desktop only. (And dropping in the uiskin/default font resources).\r\n```\r\npackage com.mygdx.game;\r\n\r\nimport com.badlogic.gdx.ApplicationAdapter;\r\nimport com.badlogic.gdx.Gdx;\r\nimport com.badlogic.gdx.Graphics;\r\nimport com.badlogic.gdx.graphics.GL20;\r\nimport com.badlogic.gdx.graphics.OrthographicCamera;\r\nimport com.badlogic.gdx.graphics.Texture;\r\nimport com.badlogic.gdx.graphics.g2d.SpriteBatch;\r\nimport com.badlogic.gdx.scenes.scene2d.Stage;\r\nimport com.badlogic.gdx.scenes.scene2d.ui.Skin;\r\nimport com.badlogic.gdx.scenes.scene2d.ui.TextField;\r\nimport com.badlogic.gdx.utils.viewport.ScreenViewport;\r\n\r\npublic class MyGdxGame extends ApplicationAdapter {\r\n        SpriteBatch batch;\r\n        Texture img;\r\n        Stage stage;\r\n        Skin skin;\r\n        \r\n        @Override\r\n        public void create () {\r\n                batch = new SpriteBatch();\r\n                img = new Texture(\"badlogic.jpg\");\r\n                stage = new Stage();\r\n                skin = new Skin(Gdx.files.internal(\"uiskin.json\"));\r\n                Gdx.graphics.setContinuousRendering(false);\r\n                Gdx.input.setInputProcessor(stage);\r\n\r\n                TextField field = new TextField(\"test\", skin);\r\n                field.setPosition(0, Gdx.graphics.getHeight() / 2);\r\n                stage.addActor(field);\r\n        }\r\n\r\n        @Override\r\n        public void render () {\r\n                System.out.println(\"render\");\r\n                Gdx.gl.glClearColor(1, 0, 0, 1);\r\n                Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);\r\n                batch.begin();\r\n                batch.draw(img, 0, 0);\r\n                batch.end();\r\n\r\n    stage.act();\r\n    stage.draw();\r\n        }\r\n        \r\n        @Override\r\n        public void dispose () {\r\n                batch.dispose();\r\n                img.dispose();\r\n        }\r\n}\r\n```\r\n\r\n#### Version of LibGDX and/or relevant dependencies\r\n1.9.4\r\n\r\n#### Please select the affected platforms\r\n- [ ] Android\r\n- [ ] iOS (robovm)\r\n- [ ] iOS (MOE)\r\n- [ ] HTML/GWT\r\n- [x] Windows\r\n- [x] Linux\r\n- [ ] MacOS\r\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4456/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4455","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4455/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4455/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4455/events","html_url":"https://github.com/libgdx/libgdx/pull/4455","id":193372849,"number":4455,"title":"AM PULA MARE","user":{"login":"devsongoku","id":18513058,"avatar_url":"https://avatars0.githubusercontent.com/u/18513058?v=4","gravatar_id":"","url":"https://api.github.com/users/devsongoku","html_url":"https://github.com/devsongoku","followers_url":"https://api.github.com/users/devsongoku/followers","following_url":"https://api.github.com/users/devsongoku/following{/other_user}","gists_url":"https://api.github.com/users/devsongoku/gists{/gist_id}","starred_url":"https://api.github.com/users/devsongoku/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/devsongoku/subscriptions","organizations_url":"https://api.github.com/users/devsongoku/orgs","repos_url":"https://api.github.com/users/devsongoku/repos","events_url":"https://api.github.com/users/devsongoku/events{/privacy}","received_events_url":"https://api.github.com/users/devsongoku/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-12-04T20:21:12Z","updated_at":"2016-12-04T20:21:58Z","closed_at":"2016-12-04T20:21:58Z","author_association":"NONE","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4455","html_url":"https://github.com/libgdx/libgdx/pull/4455","diff_url":"https://github.com/libgdx/libgdx/pull/4455.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4455.patch"},"body":"SUCK MY DICK","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4455/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4454","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4454/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4454/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4454/events","html_url":"https://github.com/libgdx/libgdx/pull/4454","id":193364296,"number":4454,"title":"Added test to check TextArea behaviour when nested in a ScrollPane","user":{"login":"voidburn","id":1438321,"avatar_url":"https://avatars3.githubusercontent.com/u/1438321?v=4","gravatar_id":"","url":"https://api.github.com/users/voidburn","html_url":"https://github.com/voidburn","followers_url":"https://api.github.com/users/voidburn/followers","following_url":"https://api.github.com/users/voidburn/following{/other_user}","gists_url":"https://api.github.com/users/voidburn/gists{/gist_id}","starred_url":"https://api.github.com/users/voidburn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/voidburn/subscriptions","organizations_url":"https://api.github.com/users/voidburn/orgs","repos_url":"https://api.github.com/users/voidburn/repos","events_url":"https://api.github.com/users/voidburn/events{/privacy}","received_events_url":"https://api.github.com/users/voidburn/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2016-12-04T17:49:30Z","updated_at":"2016-12-05T22:25:28Z","closed_at":"2016-12-05T22:25:28Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4454","html_url":"https://github.com/libgdx/libgdx/pull/4454","diff_url":"https://github.com/libgdx/libgdx/pull/4454.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4454.patch"},"body":"Showcases and tests the implementation of a TextArea inside a ScrollPane (As suggested by Nate in Issue #3796)\r\n\r\nIt currently cannot properly scroll the full TextArea height, I hope this will help iron out the small issues with such use case, and ultimately work as an example on how to implement a scrollable TextArea.","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4454/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4453","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4453/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4453/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4453/events","html_url":"https://github.com/libgdx/libgdx/issues/4453","id":193359995,"number":4453,"title":"[Feature request] TextureArray inside TextureAtlas/TextureRegion/AtlasRegion","user":{"login":"magicgoose","id":1442206,"avatar_url":"https://avatars1.githubusercontent.com/u/1442206?v=4","gravatar_id":"","url":"https://api.github.com/users/magicgoose","html_url":"https://github.com/magicgoose","followers_url":"https://api.github.com/users/magicgoose/followers","following_url":"https://api.github.com/users/magicgoose/following{/other_user}","gists_url":"https://api.github.com/users/magicgoose/gists{/gist_id}","starred_url":"https://api.github.com/users/magicgoose/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/magicgoose/subscriptions","organizations_url":"https://api.github.com/users/magicgoose/orgs","repos_url":"https://api.github.com/users/magicgoose/repos","events_url":"https://api.github.com/users/magicgoose/events{/privacy}","received_events_url":"https://api.github.com/users/magicgoose/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2016-12-04T16:31:04Z","updated_at":"2016-12-07T18:52:33Z","closed_at":"2016-12-04T18:24:52Z","author_association":"CONTRIBUTOR","body":"libgdx already [supports loading `TextureArray`s](https://github.com/libgdx/libgdx/pull/3807), that's great, but their most useful application (drawing regions from multi-page atlases in arbitrary order) are currently out of reach because TextureAtlas can't use TextureArray yet, right?\r\n\r\nI might actually try to implement it myself, but I wonder if someone is already working on it, and if there are any potential pitfalls or maybe I'm missed something.","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4453/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4452","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4452/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4452/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4452/events","html_url":"https://github.com/libgdx/libgdx/pull/4452","id":193280847,"number":4452,"title":"Added KTX extensions: general utilities for LibGDX application written in Kotlin","user":{"login":"czyzby","id":11707612,"avatar_url":"https://avatars0.githubusercontent.com/u/11707612?v=4","gravatar_id":"","url":"https://api.github.com/users/czyzby","html_url":"https://github.com/czyzby","followers_url":"https://api.github.com/users/czyzby/followers","following_url":"https://api.github.com/users/czyzby/following{/other_user}","gists_url":"https://api.github.com/users/czyzby/gists{/gist_id}","starred_url":"https://api.github.com/users/czyzby/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/czyzby/subscriptions","organizations_url":"https://api.github.com/users/czyzby/orgs","repos_url":"https://api.github.com/users/czyzby/repos","events_url":"https://api.github.com/users/czyzby/events{/privacy}","received_events_url":"https://api.github.com/users/czyzby/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2016-12-03T11:08:13Z","updated_at":"2017-07-09T08:22:59Z","closed_at":null,"author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4452","html_url":"https://github.com/libgdx/libgdx/pull/4452","diff_url":"https://github.com/libgdx/libgdx/pull/4452.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4452.patch"},"body":"See [KTX repository](https://github.com/czyzby/ktx).","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4452/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4451","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4451/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4451/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4451/events","html_url":"https://github.com/libgdx/libgdx/pull/4451","id":193262349,"number":4451,"title":"Fix PolygonSpriteBatch error message","user":{"login":"cypherdare","id":1843131,"avatar_url":"https://avatars2.githubusercontent.com/u/1843131?v=4","gravatar_id":"","url":"https://api.github.com/users/cypherdare","html_url":"https://github.com/cypherdare","followers_url":"https://api.github.com/users/cypherdare/followers","following_url":"https://api.github.com/users/cypherdare/following{/other_user}","gists_url":"https://api.github.com/users/cypherdare/gists{/gist_id}","starred_url":"https://api.github.com/users/cypherdare/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cypherdare/subscriptions","organizations_url":"https://api.github.com/users/cypherdare/orgs","repos_url":"https://api.github.com/users/cypherdare/repos","events_url":"https://api.github.com/users/cypherdare/events{/privacy}","received_events_url":"https://api.github.com/users/cypherdare/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-12-03T03:26:52Z","updated_at":"2016-12-03T04:34:23Z","closed_at":"2016-12-03T04:34:23Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4451","html_url":"https://github.com/libgdx/libgdx/pull/4451","diff_url":"https://github.com/libgdx/libgdx/pull/4451.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4451.patch"},"body":"","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4451/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4450","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4450/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4450/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4450/events","html_url":"https://github.com/libgdx/libgdx/pull/4450","id":193087471,"number":4450,"title":"Fix typo in IllegalArgumentException.","user":{"login":"pharan","id":1911082,"avatar_url":"https://avatars1.githubusercontent.com/u/1911082?v=4","gravatar_id":"","url":"https://api.github.com/users/pharan","html_url":"https://github.com/pharan","followers_url":"https://api.github.com/users/pharan/followers","following_url":"https://api.github.com/users/pharan/following{/other_user}","gists_url":"https://api.github.com/users/pharan/gists{/gist_id}","starred_url":"https://api.github.com/users/pharan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pharan/subscriptions","organizations_url":"https://api.github.com/users/pharan/orgs","repos_url":"https://api.github.com/users/pharan/repos","events_url":"https://api.github.com/users/pharan/events{/privacy}","received_events_url":"https://api.github.com/users/pharan/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2016-12-02T10:52:15Z","updated_at":"2016-12-04T15:51:00Z","closed_at":"2016-12-03T02:46:27Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4450","html_url":"https://github.com/libgdx/libgdx/pull/4450","diff_url":"https://github.com/libgdx/libgdx/pull/4450.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4450.patch"},"body":"","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4450/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4449","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4449/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4449/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4449/events","html_url":"https://github.com/libgdx/libgdx/pull/4449","id":192897160,"number":4449,"title":"Pixmap method chaining","user":{"login":"BenMcLean","id":1747250,"avatar_url":"https://avatars1.githubusercontent.com/u/1747250?v=4","gravatar_id":"","url":"https://api.github.com/users/BenMcLean","html_url":"https://github.com/BenMcLean","followers_url":"https://api.github.com/users/BenMcLean/followers","following_url":"https://api.github.com/users/BenMcLean/following{/other_user}","gists_url":"https://api.github.com/users/BenMcLean/gists{/gist_id}","starred_url":"https://api.github.com/users/BenMcLean/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/BenMcLean/subscriptions","organizations_url":"https://api.github.com/users/BenMcLean/orgs","repos_url":"https://api.github.com/users/BenMcLean/repos","events_url":"https://api.github.com/users/BenMcLean/events{/privacy}","received_events_url":"https://api.github.com/users/BenMcLean/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2016-12-01T16:36:34Z","updated_at":"2017-03-05T11:15:55Z","closed_at":"2017-03-05T11:15:55Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4449","html_url":"https://github.com/libgdx/libgdx/pull/4449","diff_url":"https://github.com/libgdx/libgdx/pull/4449.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4449.patch"},"body":"Adds method chaining to draw methods in Pixmap","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4449/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4448","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4448/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4448/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4448/events","html_url":"https://github.com/libgdx/libgdx/pull/4448","id":192734068,"number":4448,"title":"Generic Animation class","user":{"login":"cypherdare","id":1843131,"avatar_url":"https://avatars2.githubusercontent.com/u/1843131?v=4","gravatar_id":"","url":"https://api.github.com/users/cypherdare","html_url":"https://github.com/cypherdare","followers_url":"https://api.github.com/users/cypherdare/followers","following_url":"https://api.github.com/users/cypherdare/following{/other_user}","gists_url":"https://api.github.com/users/cypherdare/gists{/gist_id}","starred_url":"https://api.github.com/users/cypherdare/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cypherdare/subscriptions","organizations_url":"https://api.github.com/users/cypherdare/orgs","repos_url":"https://api.github.com/users/cypherdare/repos","events_url":"https://api.github.com/users/cypherdare/events{/privacy}","received_events_url":"https://api.github.com/users/cypherdare/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2016-12-01T01:53:21Z","updated_at":"2016-12-03T17:55:42Z","closed_at":"2016-12-03T04:34:02Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4448","html_url":"https://github.com/libgdx/libgdx/pull/4448","diff_url":"https://github.com/libgdx/libgdx/pull/4448.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4448.patch"},"body":"I have found myself copy-pasting the Animation class a few times to support NinePatches or certain types of Drawables. I think PolygonRegions would be another common need. I'm also playing around with multi-texturing for normal-mapped sprites, so an animation made up of TextureRegionPairs would be useful. So it makes sense for the frame type to be generic.\r\n\r\nThis is one way to do it that shouldn't affect existing code, unless someone is serializing Animations for some reason (although I doubt anyone is trying to serialize TextureRegions, nor does it make sense to serialize assets). I created a new Animation class in the `utils` package (since this theoretically could be used for more than just 2D animation frames, think decals or some sort of state manager). The existing Animation class extends from it and has a pass-through PlayMode class to prevent code breakage, and having to fully qualify PlayMode if the g2d.Animation class has been imported.\r\n\r\nHere are some alternative ways to do this. Any opinions?\r\n\r\n1. Do it like this PR, except that the existing g2d.Animation class is untouched. Zero chance of code breakage, but now we'd have two classes with a bunch of duplicate code.\r\n2. Do it like this PR, but give the utils.Animation class a different name to avoid confusion. Maybe could also remove the g2d.Animation.PlayMode pass-through class, although that would force people to fix up some code by importing the new class.\r\n3. Keep this PR as is, deprecate the old g2d.Animation class, with a Javadoc explaining the change, and remove it in a year or two. In the long term this may be the cleanest.\r\n4. Rip off the Band-Aid by deleting the g2d.Animation class now.\r\n5. Forget the new class. Just make g2d.Animation generic, and force people to update code to specify &lt;TextureRegion&gt;. This is a nice middle-ground. Code will be broken, but is easy to fix, and it avoids adding a new class.","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4448/reactions","total_count":3,"+1":3,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4447","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4447/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4447/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4447/events","html_url":"https://github.com/libgdx/libgdx/pull/4447","id":192587806,"number":4447,"title":"Fix #4446 (ProgressBar knobAfter)","user":{"login":"cypherdare","id":1843131,"avatar_url":"https://avatars2.githubusercontent.com/u/1843131?v=4","gravatar_id":"","url":"https://api.github.com/users/cypherdare","html_url":"https://github.com/cypherdare","followers_url":"https://api.github.com/users/cypherdare/followers","following_url":"https://api.github.com/users/cypherdare/following{/other_user}","gists_url":"https://api.github.com/users/cypherdare/gists{/gist_id}","starred_url":"https://api.github.com/users/cypherdare/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cypherdare/subscriptions","organizations_url":"https://api.github.com/users/cypherdare/orgs","repos_url":"https://api.github.com/users/cypherdare/repos","events_url":"https://api.github.com/users/cypherdare/events{/privacy}","received_events_url":"https://api.github.com/users/cypherdare/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-11-30T15:01:12Z","updated_at":"2016-12-03T02:44:08Z","closed_at":"2016-12-03T02:44:03Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4447","html_url":"https://github.com/libgdx/libgdx/pull/4447","diff_url":"https://github.com/libgdx/libgdx/pull/4447.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4447.patch"},"body":"Fixes #4446","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4447/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4446","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4446/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4446/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4446/events","html_url":"https://github.com/libgdx/libgdx/issues/4446","id":192465087,"number":4446,"title":"Slider/ProgressBar knobAfter incorrect length","user":{"login":"raeleus","id":12948924,"avatar_url":"https://avatars1.githubusercontent.com/u/12948924?v=4","gravatar_id":"","url":"https://api.github.com/users/raeleus","html_url":"https://github.com/raeleus","followers_url":"https://api.github.com/users/raeleus/followers","following_url":"https://api.github.com/users/raeleus/following{/other_user}","gists_url":"https://api.github.com/users/raeleus/gists{/gist_id}","starred_url":"https://api.github.com/users/raeleus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/raeleus/subscriptions","organizations_url":"https://api.github.com/users/raeleus/orgs","repos_url":"https://api.github.com/users/raeleus/repos","events_url":"https://api.github.com/users/raeleus/events{/privacy}","received_events_url":"https://api.github.com/users/raeleus/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-11-30T03:18:07Z","updated_at":"2016-12-03T02:44:03Z","closed_at":"2016-12-03T02:44:03Z","author_association":"NONE","body":"#### Issue details\r\nRecent changes in the 1.9.5-SNAPSHOT have negatively affected how sliders and progress bars render. If you include a \"knob\" and a \"knobAfter\" in the ProgressBarStyle or SliderStyle, the knobAfter will extend outside of the bar to the right if oriented horizontally. It is inconsistent to behavior in previous versions. See below for the expected behavior (1.9.4):\r\n![preview1](https://cloud.githubusercontent.com/assets/12948924/20738426/e4396e72-b667-11e6-9a36-4627f7f8a4a7.png)\r\n\r\nAnd the result from updating to 1.9.5-SNAPSHOT:\r\n![preview2](https://cloud.githubusercontent.com/assets/12948924/20738433/f225b4a0-b667-11e6-8f61-0b5fa8e19221.png)\r\n\r\nNotice how the knobAfter extends well past the edge of the background drawable.\r\n\r\n#### Reproduction steps/code\r\nUsing these images:\r\n\r\n![background](https://cloud.githubusercontent.com/assets/12948924/20738471/3952ae32-b668-11e6-9c16-5717af99e5f8.png) ![knob](https://cloud.githubusercontent.com/assets/12948924/20738477/40cb88f0-b668-11e6-9484-53d41bf731a4.png) ![knob-before](https://cloud.githubusercontent.com/assets/12948924/20738484/451a148a-b668-11e6-92eb-c131e0e78877.png) ![knob-after](https://cloud.githubusercontent.com/assets/12948924/20738489/48e77a44-b668-11e6-95cf-400d2a6943ce.png)\r\n\r\n\r\n\r\n\r\nI wrote the following class to reproduce the issue:\r\n\r\n```java\r\npackage com.ray3k.slidertest;\r\n\r\nimport com.badlogic.gdx.ApplicationAdapter;\r\nimport com.badlogic.gdx.Gdx;\r\nimport com.badlogic.gdx.graphics.GL20;\r\nimport com.badlogic.gdx.graphics.Pixmap;\r\nimport com.badlogic.gdx.graphics.Texture;\r\nimport com.badlogic.gdx.graphics.g2d.PixmapPacker;\r\nimport com.badlogic.gdx.graphics.g2d.TextureAtlas;\r\nimport com.badlogic.gdx.scenes.scene2d.Actor;\r\nimport com.badlogic.gdx.scenes.scene2d.Stage;\r\nimport com.badlogic.gdx.scenes.scene2d.ui.ProgressBar;\r\nimport com.badlogic.gdx.scenes.scene2d.ui.ProgressBar.ProgressBarStyle;\r\nimport com.badlogic.gdx.scenes.scene2d.ui.Skin;\r\nimport com.badlogic.gdx.scenes.scene2d.ui.Slider;\r\nimport com.badlogic.gdx.scenes.scene2d.ui.Slider.SliderStyle;\r\nimport com.badlogic.gdx.scenes.scene2d.ui.Table;\r\nimport com.badlogic.gdx.scenes.scene2d.utils.ChangeListener;\r\nimport com.badlogic.gdx.utils.viewport.ScreenViewport;\r\n\r\npublic class Main extends ApplicationAdapter {\r\n    private Stage stage;\r\n    private Skin skin;\r\n    \r\n    @Override\r\n    public void create() {\r\n        stage = new Stage(new ScreenViewport());\r\n        Gdx.input.setInputProcessor(stage);\r\n        \r\n        Table root = new Table();\r\n        root.setFillParent(true);\r\n        stage.addActor(root);\r\n        \r\n        //pack test images\r\n        PixmapPacker packer = new PixmapPacker(1024, 1024, Pixmap.Format.RGBA8888, 2, true);\r\n        packer.pack(\"background\", new Pixmap(Gdx.files.internal(\"background.png\")));\r\n        packer.pack(\"knob\", new Pixmap(Gdx.files.internal(\"knob.png\")));\r\n        packer.pack(\"knob-before\", new Pixmap(Gdx.files.internal(\"knob-before.png\")));\r\n        packer.pack(\"knob-after\", new Pixmap(Gdx.files.internal(\"knob-after.png\")));\r\n        TextureAtlas atlas = packer.generateTextureAtlas(Texture.TextureFilter.Linear, Texture.TextureFilter.Linear, false);\r\n        skin = new Skin(atlas);\r\n        packer.dispose();\r\n        \r\n        //create slider\r\n        SliderStyle sliderStyle = new SliderStyle();\r\n        sliderStyle.background = skin.getDrawable(\"background\");\r\n        sliderStyle.knob = skin.getDrawable(\"knob\");\r\n        sliderStyle.knobBefore = skin.getDrawable(\"knob-before\");\r\n        sliderStyle.knobAfter = skin.getDrawable(\"knob-after\");\r\n        \r\n        final Slider slider = new Slider(0.0f, 100.0f, 1.0f, false, sliderStyle);\r\n        root.add(slider);\r\n        \r\n        //create progress bar\r\n        ProgressBarStyle progressBarStyle = new ProgressBarStyle();\r\n        progressBarStyle.background = skin.getDrawable(\"background\");\r\n        progressBarStyle.knob = skin.getDrawable(\"knob\");\r\n        progressBarStyle.knobBefore = skin.getDrawable(\"knob-before\");\r\n        progressBarStyle.knobAfter = skin.getDrawable(\"knob-after\");\r\n        \r\n        root.row();\r\n        final ProgressBar progressBar = new ProgressBar(0.0f, 100.0f, 1.0f, false, progressBarStyle);\r\n        root.add(progressBar).padTop(10.0f);\r\n        \r\n        //change progress bar value with slider value\r\n        slider.addListener(new ChangeListener() {\r\n            @Override\r\n            public void changed(ChangeListener.ChangeEvent event, Actor actor) {\r\n                progressBar.setValue(slider.getValue());\r\n            }\r\n        });\r\n    }\r\n\r\n    @Override\r\n    public void render() {\r\n        Gdx.gl.glClearColor(1, 1, 1, 1);\r\n        Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);\r\n\r\n        stage.act();\r\n        stage.draw();\r\n    }\r\n\r\n    @Override\r\n    public void resize(int width, int height) {\r\n        stage.getViewport().update(width, height, true);\r\n    }\r\n\r\n    @Override\r\n    public void dispose() {\r\n        stage.dispose();\r\n        skin.dispose();\r\n    }\r\n}\r\n```\r\n\r\n#### Version of LibGDX and/or relevant dependencies\r\n1.9.5-SNAPSHOT\r\n\r\nThanks for looking into this matter.\r\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4446/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4445","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4445/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4445/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4445/events","html_url":"https://github.com/libgdx/libgdx/issues/4445","id":192429614,"number":4445,"title":"List.draw() method draws items as selected when they are not","user":{"login":"Betalord","id":22757675,"avatar_url":"https://avatars3.githubusercontent.com/u/22757675?v=4","gravatar_id":"","url":"https://api.github.com/users/Betalord","html_url":"https://github.com/Betalord","followers_url":"https://api.github.com/users/Betalord/followers","following_url":"https://api.github.com/users/Betalord/following{/other_user}","gists_url":"https://api.github.com/users/Betalord/gists{/gist_id}","starred_url":"https://api.github.com/users/Betalord/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Betalord/subscriptions","organizations_url":"https://api.github.com/users/Betalord/orgs","repos_url":"https://api.github.com/users/Betalord/repos","events_url":"https://api.github.com/users/Betalord/events{/privacy}","received_events_url":"https://api.github.com/users/Betalord/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-11-29T23:15:15Z","updated_at":"2016-11-30T02:04:41Z","closed_at":"2016-11-30T02:04:41Z","author_association":"NONE","body":"I just found a bug in the List.draw() method: when using List\\<String\\>, all items that have the same name will be drawn as selected when in reality only one of them is selected. This is due to String.equals() comparison instead of \"==\" comparison.\r\n\r\nThis is the affected code (from the List.draw()):\r\n\r\n```\r\nfont.setColor(fontColorUnselected.r, fontColorUnselected.g, fontColorUnselected.b, fontColorUnselected.a * parentAlpha);\r\nfor (int i = 0; i < items.size; i++) {\r\n\tif (cullingArea == null || (itemY - itemHeight <= cullingArea.y + cullingArea.height && itemY >= cullingArea.y)) {\r\n\t\tT item = items.get(i);\r\n\t\tboolean selected = selection.contains(item);\r\n\t\tif (selected) {\r\n\t\t\tselectedDrawable.draw(batch, x, y + itemY - itemHeight, width, itemHeight);\r\n\t\t\tfont.setColor(fontColorSelected.r, fontColorSelected.g, fontColorSelected.b, fontColorSelected.a * parentAlpha);\r\n\t\t}\r\n\t\tdrawItem(batch, font, i, item, x + textOffsetX, y + itemY - textOffsetY);\r\n\t\tif (selected) {\r\n\t\t\tfont.setColor(fontColorUnselected.r, fontColorUnselected.g, fontColorUnselected.b,\r\n\t\t\t\tfontColorUnselected.a * parentAlpha);\r\n\t\t}\r\n\t} else if (itemY < cullingArea.y) {\r\n\t\tbreak;\r\n\t}\r\n\titemY -= itemHeight;\r\n}\r\n```\r\n\r\nThe problem is in this line:\r\n`boolean selected = selection.contains(item);`\r\nThe contains() method (deeper down the line) uses \"equals()\" instead of \"==\" comparison, this is why this bug occurs. So instead of drawing only 1 line as selected, it will draw multiple lines as selected (all the lines that have the same string value).","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4445/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4444","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4444/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4444/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4444/events","html_url":"https://github.com/libgdx/libgdx/pull/4444","id":192412205,"number":4444,"title":"Add contains circle to math.Rectangle","user":{"login":"tentone","id":9158354,"avatar_url":"https://avatars0.githubusercontent.com/u/9158354?v=4","gravatar_id":"","url":"https://api.github.com/users/tentone","html_url":"https://github.com/tentone","followers_url":"https://api.github.com/users/tentone/followers","following_url":"https://api.github.com/users/tentone/following{/other_user}","gists_url":"https://api.github.com/users/tentone/gists{/gist_id}","starred_url":"https://api.github.com/users/tentone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tentone/subscriptions","organizations_url":"https://api.github.com/users/tentone/orgs","repos_url":"https://api.github.com/users/tentone/repos","events_url":"https://api.github.com/users/tentone/events{/privacy}","received_events_url":"https://api.github.com/users/tentone/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2016-11-29T21:51:36Z","updated_at":"2016-12-04T21:34:13Z","closed_at":"2016-12-04T21:34:09Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4444","html_url":"https://github.com/libgdx/libgdx/pull/4444","diff_url":"https://github.com/libgdx/libgdx/pull/4444.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4444.patch"},"body":"Hi\r\n\r\nAdded contains method to math.Rectangle to check if a circle is contained in the Rectangle\r\nIt might be helpful \r\n\r\nCumps\r\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4444/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":1}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4443","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4443/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4443/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4443/events","html_url":"https://github.com/libgdx/libgdx/pull/4443","id":192374067,"number":4443,"title":"OrthogonalTiledMapIterator","user":{"login":"BenMcLean","id":1747250,"avatar_url":"https://avatars1.githubusercontent.com/u/1747250?v=4","gravatar_id":"","url":"https://api.github.com/users/BenMcLean","html_url":"https://github.com/BenMcLean","followers_url":"https://api.github.com/users/BenMcLean/followers","following_url":"https://api.github.com/users/BenMcLean/following{/other_user}","gists_url":"https://api.github.com/users/BenMcLean/gists{/gist_id}","starred_url":"https://api.github.com/users/BenMcLean/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/BenMcLean/subscriptions","organizations_url":"https://api.github.com/users/BenMcLean/orgs","repos_url":"https://api.github.com/users/BenMcLean/repos","events_url":"https://api.github.com/users/BenMcLean/events{/privacy}","received_events_url":"https://api.github.com/users/BenMcLean/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2016-11-29T19:20:26Z","updated_at":"2017-01-12T04:05:14Z","closed_at":"2017-01-12T04:05:14Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4443","html_url":"https://github.com/libgdx/libgdx/pull/4443","diff_url":"https://github.com/libgdx/libgdx/pull/4443.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4443.patch"},"body":"I wrote an iterator which cycles over visible tiles drawn by OrthogonalTiledMapRenderer. This makes it easy to draw things (like health bars or fire or whatever) on top of visible tiles in an orthogonal tile map.\r\n\r\nAlso included is a test which demonstrates this working.\r\n\r\nIt may be desirable to also create similar iterators for other tiled map renderers at some point.","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4443/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4442","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4442/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4442/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4442/events","html_url":"https://github.com/libgdx/libgdx/pull/4442","id":191811641,"number":4442,"title":"fixes libgdx/libgdx#2252 reduce CPU usage in OpenALAudioDevice","user":{"login":"mgsx-dev","id":8074238,"avatar_url":"https://avatars3.githubusercontent.com/u/8074238?v=4","gravatar_id":"","url":"https://api.github.com/users/mgsx-dev","html_url":"https://github.com/mgsx-dev","followers_url":"https://api.github.com/users/mgsx-dev/followers","following_url":"https://api.github.com/users/mgsx-dev/following{/other_user}","gists_url":"https://api.github.com/users/mgsx-dev/gists{/gist_id}","starred_url":"https://api.github.com/users/mgsx-dev/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mgsx-dev/subscriptions","organizations_url":"https://api.github.com/users/mgsx-dev/orgs","repos_url":"https://api.github.com/users/mgsx-dev/repos","events_url":"https://api.github.com/users/mgsx-dev/events{/privacy}","received_events_url":"https://api.github.com/users/mgsx-dev/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2016-11-26T15:36:36Z","updated_at":"2017-01-05T08:58:22Z","closed_at":"2017-01-04T23:31:00Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4442","html_url":"https://github.com/libgdx/libgdx/pull/4442","diff_url":"https://github.com/libgdx/libgdx/pull/4442.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4442.patch"},"body":"I had the same problem as in libgdx/libgdx#2252. When writing to audio device, Thread is not sleeping because of a wrong time calculation which result to zero (no sleep at all) with sample rate of 44100 Hz or above.","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4442/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4441","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4441/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4441/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4441/events","html_url":"https://github.com/libgdx/libgdx/pull/4441","id":191811527,"number":4441,"title":"Update CONTRIBUTORS.","user":{"login":"3xp0n3nt","id":1281275,"avatar_url":"https://avatars1.githubusercontent.com/u/1281275?v=4","gravatar_id":"","url":"https://api.github.com/users/3xp0n3nt","html_url":"https://github.com/3xp0n3nt","followers_url":"https://api.github.com/users/3xp0n3nt/followers","following_url":"https://api.github.com/users/3xp0n3nt/following{/other_user}","gists_url":"https://api.github.com/users/3xp0n3nt/gists{/gist_id}","starred_url":"https://api.github.com/users/3xp0n3nt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/3xp0n3nt/subscriptions","organizations_url":"https://api.github.com/users/3xp0n3nt/orgs","repos_url":"https://api.github.com/users/3xp0n3nt/repos","events_url":"https://api.github.com/users/3xp0n3nt/events{/privacy}","received_events_url":"https://api.github.com/users/3xp0n3nt/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-11-26T15:34:26Z","updated_at":"2016-11-27T20:44:04Z","closed_at":"2016-11-27T20:44:04Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4441","html_url":"https://github.com/libgdx/libgdx/pull/4441","diff_url":"https://github.com/libgdx/libgdx/pull/4441.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4441.patch"},"body":"","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4441/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4440","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4440/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4440/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4440/events","html_url":"https://github.com/libgdx/libgdx/pull/4440","id":191807046,"number":4440,"title":"Fix LWJGL2 NPE when GPU driver is unsupported.","user":{"login":"3xp0n3nt","id":1281275,"avatar_url":"https://avatars1.githubusercontent.com/u/1281275?v=4","gravatar_id":"","url":"https://api.github.com/users/3xp0n3nt","html_url":"https://github.com/3xp0n3nt","followers_url":"https://api.github.com/users/3xp0n3nt/followers","following_url":"https://api.github.com/users/3xp0n3nt/following{/other_user}","gists_url":"https://api.github.com/users/3xp0n3nt/gists{/gist_id}","starred_url":"https://api.github.com/users/3xp0n3nt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/3xp0n3nt/subscriptions","organizations_url":"https://api.github.com/users/3xp0n3nt/orgs","repos_url":"https://api.github.com/users/3xp0n3nt/repos","events_url":"https://api.github.com/users/3xp0n3nt/events{/privacy}","received_events_url":"https://api.github.com/users/3xp0n3nt/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-11-26T13:52:54Z","updated_at":"2016-11-26T14:44:45Z","closed_at":"2016-11-26T14:44:45Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4440","html_url":"https://github.com/libgdx/libgdx/pull/4440","diff_url":"https://github.com/libgdx/libgdx/pull/4440.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4440.patch"},"body":"Problem:\r\n\r\n- In LwjglGraphics, glVersion is not initialized until after\r\n  #createDisplayPixelFormat is called, yet when all else fails when\r\n  creating an OpenGL context in this method, throwing a\r\n  GdxRuntimeException, it attempts to call\r\n  glVersion#getDebugVersionString, which always results in a\r\n  NullPointerException, because glVersion is always null here.\r\n\r\n- This NPE swallows the original, useful error message (\"OpenGL is not\r\n  supported by the video driver: \"), as well as the original exception,\r\n  which most likely is an LwjglException with the message \"pixel format\r\n  not accelerated.\", which is also useful.\r\n\r\nSolution:\r\n\r\n- Do not attempt to get the non-existent OpenGL debug string when\r\n  re-throwing an exception from #createDisplayPixelFormat.\r\n\r\n- Reword the error message to exclude the debug string.\r\n\r\nOther:\r\n\r\n- Update CHANGES file with fix.\r\n\r\nRelated to #4356.","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4440/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4439","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4439/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4439/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4439/events","html_url":"https://github.com/libgdx/libgdx/issues/4439","id":191751627,"number":4439,"title":"Bits#lastSetBit, enhancement proposal","user":{"login":"kerberjg","id":16939117,"avatar_url":"https://avatars1.githubusercontent.com/u/16939117?v=4","gravatar_id":"","url":"https://api.github.com/users/kerberjg","html_url":"https://github.com/kerberjg","followers_url":"https://api.github.com/users/kerberjg/followers","following_url":"https://api.github.com/users/kerberjg/following{/other_user}","gists_url":"https://api.github.com/users/kerberjg/gists{/gist_id}","starred_url":"https://api.github.com/users/kerberjg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kerberjg/subscriptions","organizations_url":"https://api.github.com/users/kerberjg/orgs","repos_url":"https://api.github.com/users/kerberjg/repos","events_url":"https://api.github.com/users/kerberjg/events{/privacy}","received_events_url":"https://api.github.com/users/kerberjg/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-11-25T18:30:03Z","updated_at":"2016-12-04T11:23:49Z","closed_at":"2016-12-04T11:23:49Z","author_association":"CONTRIBUTOR","body":"I'm using the [Bits](https://github.com/libgdx/libgdx/blob/master/gdx/src/com/badlogic/gdx/utils/Bits.java) class to write a faster version of [IntMap](https://github.com/libgdx/libgdx/blob/master/gdx/src/com/badlogic/gdx/utils/IntMap.java) which doesn't use hashes for mapping, by simply keeping a raw array of objects instead of a hash table, and a bitset for faster allocation.\r\n\r\nWhen writing the `shrink()` method for my `FastIntMap` class, I found myself in need of finding the index of the *last set bit*, in order to know from which position should the array be trimmed.\r\n\r\nI could implement this in my own code, but it would be just plain ugly. If this is something that could be of use to others as well, I'd be glad to submit a PR for Bits.","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4439/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4438","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4438/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4438/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4438/events","html_url":"https://github.com/libgdx/libgdx/pull/4438","id":191703273,"number":4438,"title":"+ Added mappings for Xbox 360 Controller on Linux","user":{"login":"WilliamHayward","id":13954460,"avatar_url":"https://avatars3.githubusercontent.com/u/13954460?v=4","gravatar_id":"","url":"https://api.github.com/users/WilliamHayward","html_url":"https://github.com/WilliamHayward","followers_url":"https://api.github.com/users/WilliamHayward/followers","following_url":"https://api.github.com/users/WilliamHayward/following{/other_user}","gists_url":"https://api.github.com/users/WilliamHayward/gists{/gist_id}","starred_url":"https://api.github.com/users/WilliamHayward/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/WilliamHayward/subscriptions","organizations_url":"https://api.github.com/users/WilliamHayward/orgs","repos_url":"https://api.github.com/users/WilliamHayward/repos","events_url":"https://api.github.com/users/WilliamHayward/events{/privacy}","received_events_url":"https://api.github.com/users/WilliamHayward/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2016-11-25T13:33:04Z","updated_at":"2017-01-25T15:30:40Z","closed_at":"2017-01-25T15:30:40Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4438","html_url":"https://github.com/libgdx/libgdx/pull/4438","diff_url":"https://github.com/libgdx/libgdx/pull/4438.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4438.patch"},"body":"+ Added button code for pressing in thumbsticks\r\n+ Fixed typo where bumpers were referred to as axis, instead of triggers\r\n\r\nAlso I started mapping out the Windows versions, but I ran into some issues. Namely that the guide button wouldn't register, and both triggers were \"Axis 4\", with one being negative (resulting in some weirdness and overlapping values). I can make a pull request with a partially complete set of Windows values if you want though.","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4438/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4437","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4437/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4437/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4437/events","html_url":"https://github.com/libgdx/libgdx/issues/4437","id":191663941,"number":4437,"title":"Gradle distribution URL in gdx-setup should be changed to https","user":{"login":"sp-1234","id":19407943,"avatar_url":"https://avatars0.githubusercontent.com/u/19407943?v=4","gravatar_id":"","url":"https://api.github.com/users/sp-1234","html_url":"https://github.com/sp-1234","followers_url":"https://api.github.com/users/sp-1234/followers","following_url":"https://api.github.com/users/sp-1234/following{/other_user}","gists_url":"https://api.github.com/users/sp-1234/gists{/gist_id}","starred_url":"https://api.github.com/users/sp-1234/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sp-1234/subscriptions","organizations_url":"https://api.github.com/users/sp-1234/orgs","repos_url":"https://api.github.com/users/sp-1234/repos","events_url":"https://api.github.com/users/sp-1234/events{/privacy}","received_events_url":"https://api.github.com/users/sp-1234/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-11-25T09:56:27Z","updated_at":"2016-12-04T11:29:57Z","closed_at":"2016-12-04T11:29:57Z","author_association":"NONE","body":"https://github.com/libgdx/libgdx/blob/master/extensions/gdx-setup/src/com/badlogic/gdx/setup/resources/gradle/wrapper/gradle-wrapper.properties\r\n\r\nInsert \"s\" after \"http\" at line 6.\r\n\r\nOtherwise gdx-setup tries to download gradle over plain http and execute it, which is a serious vulnerability.\r\n\r\nCurrent workaround is to immediately kill the gdx-setup application once it wrote the project files, make the change by hand and run gradle yourself, but this is not obvious at all for those who know/care less about their machine security.","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4437/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4436","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4436/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4436/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4436/events","html_url":"https://github.com/libgdx/libgdx/issues/4436","id":191539121,"number":4436,"title":"There are no non-deprecated 1-channel texture formats for desktop","user":{"login":"sp-1234","id":19407943,"avatar_url":"https://avatars0.githubusercontent.com/u/19407943?v=4","gravatar_id":"","url":"https://api.github.com/users/sp-1234","html_url":"https://github.com/sp-1234","followers_url":"https://api.github.com/users/sp-1234/followers","following_url":"https://api.github.com/users/sp-1234/following{/other_user}","gists_url":"https://api.github.com/users/sp-1234/gists{/gist_id}","starred_url":"https://api.github.com/users/sp-1234/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sp-1234/subscriptions","organizations_url":"https://api.github.com/users/sp-1234/orgs","repos_url":"https://api.github.com/users/sp-1234/repos","events_url":"https://api.github.com/users/sp-1234/events{/privacy}","received_events_url":"https://api.github.com/users/sp-1234/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2016-11-24T14:53:36Z","updated_at":"2016-11-25T09:47:29Z","closed_at":"2016-11-25T09:47:29Z","author_association":"NONE","body":"The formats GL_ALPHA, GL_LUMINANCE, GL_LUMINANCE_ALPHA and GL_INTENSITY have been deprecated in OpenGL (non-ES), long ago. There are still one and two channel formats — GL_RED and GL_RG.\r\n\r\nBut `Gdx2DPixmap` doesn't know about these non-deprecated formats as can be seen from this code:\r\n\r\n```\r\n\tpublic static int toGlFormat (int format) {\r\n\t\tswitch (format) {\r\n\t\tcase GDX2D_FORMAT_ALPHA:\r\n\t\t\treturn GL20.GL_ALPHA;\r\n\t\tcase GDX2D_FORMAT_LUMINANCE_ALPHA:\r\n\t\t\treturn GL20.GL_LUMINANCE_ALPHA;\r\n\t\tcase GDX2D_FORMAT_RGB888:\r\n\t\tcase GDX2D_FORMAT_RGB565:\r\n\t\t\treturn GL20.GL_RGB;\r\n\t\tcase GDX2D_FORMAT_RGBA8888:\r\n\t\tcase GDX2D_FORMAT_RGBA4444:\r\n\t\t\treturn GL20.GL_RGBA;\r\n\t\tdefault:\r\n\t\t\tthrow new GdxRuntimeException(\"unknown format: \" + format);\r\n\t\t}\r\n\t}\r\n```\r\n\r\nI think it should be possible to use 1 and 2 channel textures with libgdx on newest hardware (which might drop support for deprecated OpenGL features)","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4436/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4435","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4435/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4435/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4435/events","html_url":"https://github.com/libgdx/libgdx/pull/4435","id":191261929,"number":4435,"title":"Lwjgl3 backend's OpenAL audio on a dedicated thread","user":{"login":"voidburn","id":1438321,"avatar_url":"https://avatars3.githubusercontent.com/u/1438321?v=4","gravatar_id":"","url":"https://api.github.com/users/voidburn","html_url":"https://github.com/voidburn","followers_url":"https://api.github.com/users/voidburn/followers","following_url":"https://api.github.com/users/voidburn/following{/other_user}","gists_url":"https://api.github.com/users/voidburn/gists{/gist_id}","starred_url":"https://api.github.com/users/voidburn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/voidburn/subscriptions","organizations_url":"https://api.github.com/users/voidburn/orgs","repos_url":"https://api.github.com/users/voidburn/repos","events_url":"https://api.github.com/users/voidburn/events{/privacy}","received_events_url":"https://api.github.com/users/voidburn/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2016-11-23T12:47:37Z","updated_at":"2017-01-13T13:34:16Z","closed_at":"2017-01-13T13:34:16Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4435","html_url":"https://github.com/libgdx/libgdx/pull/4435","diff_url":"https://github.com/libgdx/libgdx/pull/4435.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4435.patch"},"body":"- Synchronized access for the music add/remove/update methods\r\n- Moved dispose method in the dedicated thread (The MockAudio won't use natives that require disposal anyway)\r\n- Testers welcome!","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4435/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4434","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4434/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4434/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4434/events","html_url":"https://github.com/libgdx/libgdx/issues/4434","id":190829363,"number":4434,"title":"[Lwjgl3 backend] Window crashes when resizing via window corner drag","user":{"login":"voidburn","id":1438321,"avatar_url":"https://avatars3.githubusercontent.com/u/1438321?v=4","gravatar_id":"","url":"https://api.github.com/users/voidburn","html_url":"https://github.com/voidburn","followers_url":"https://api.github.com/users/voidburn/followers","following_url":"https://api.github.com/users/voidburn/following{/other_user}","gists_url":"https://api.github.com/users/voidburn/gists{/gist_id}","starred_url":"https://api.github.com/users/voidburn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/voidburn/subscriptions","organizations_url":"https://api.github.com/users/voidburn/orgs","repos_url":"https://api.github.com/users/voidburn/repos","events_url":"https://api.github.com/users/voidburn/events{/privacy}","received_events_url":"https://api.github.com/users/voidburn/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2016-11-21T20:37:31Z","updated_at":"2016-11-22T17:17:30Z","closed_at":"2016-11-22T17:17:30Z","author_association":"CONTRIBUTOR","body":"#### Issue details\r\nWhen resizing the window via mouse and drag on a corner (any corner, but not single edges) the application crashes in the natives layer.\r\n\r\n#### Reproduction steps/code\r\nOpen the Lwjgl3TestStarter, grab a corner (CORNER, does not happen if only an edge is being resized) of the window and start resizing.\r\n\r\nTested on Windows 10 64bit\r\nVideo card: GTX 980ti\r\nNvidia drivers 375.70\r\n\r\nTested on Linux Ubuntu 16.04.x\r\nVideo card: iGPU on an intel i5 3570k\r\nDrivers: mesa 11.0\r\n\r\n#### Version of LibGDX and/or relevant dependencies\r\nSnapshot from the current master (commit b68e50bb4ef06e679e86d5eb14fb751b59b0da91)\r\n\r\n#### Stacktrace\r\nNone given, it crashes in the natives. Traced it back to the Lwjgl3Graphics class, in the resize callback handler:\r\n\r\n```java\r\nprivate GLFWFramebufferSizeCallback resizeCallback = new GLFWFramebufferSizeCallback() {\r\n\t\t@Override\r\n\t\tpublic void invoke(long windowHandle, final int width, final int height) {\r\n\t\t\tupdateFramebufferInfo();\r\n\t\t\tif (!window.isListenerInitialized()) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\twindow.makeCurrent();\r\n\t\t\tgl20.glViewport(0, 0, width, height);\r\n\t\t\twindow.getListener().resize(getWidth(), getHeight());\r\n\t\t\twindow.getListener().render();\r\n\t\t\tGLFW.glfwSwapBuffers(windowHandle); //<--- Commenting this buffer swap avoids the crash\r\n\t\t}\r\n\t};\r\n```\r\n\r\n#### Please select the affected platforms\r\n- [ ] Android\r\n- [ ] iOS (robovm)\r\n- [ ] iOS (MOE)\r\n- [ ] HTML/GWT\r\n- [x] Windows (Only tested on windows)\r\n- [x] Linux (Does not crash, but the application is hit hard and takes a while to recover)\r\n- [ ] MacOS\r\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4434/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4433","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4433/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4433/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4433/events","html_url":"https://github.com/libgdx/libgdx/issues/4433","id":190719711,"number":4433,"title":"GWT Compilation Error","user":{"login":"doit-ceo","id":8027780,"avatar_url":"https://avatars2.githubusercontent.com/u/8027780?v=4","gravatar_id":"","url":"https://api.github.com/users/doit-ceo","html_url":"https://github.com/doit-ceo","followers_url":"https://api.github.com/users/doit-ceo/followers","following_url":"https://api.github.com/users/doit-ceo/following{/other_user}","gists_url":"https://api.github.com/users/doit-ceo/gists{/gist_id}","starred_url":"https://api.github.com/users/doit-ceo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/doit-ceo/subscriptions","organizations_url":"https://api.github.com/users/doit-ceo/orgs","repos_url":"https://api.github.com/users/doit-ceo/repos","events_url":"https://api.github.com/users/doit-ceo/events{/privacy}","received_events_url":"https://api.github.com/users/doit-ceo/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-11-21T13:40:22Z","updated_at":"2016-11-21T14:36:42Z","closed_at":"2016-11-21T14:36:18Z","author_association":"NONE","body":"#### Issue details\r\nI tried to build the html/GWT project to publish my app, but I'm getting error \"Invoking Linker Cross-Site-Iframe\" , also I never edited the *.gwt.xml files and I don't see any of the problematic files soundmanager2-setup.js or soundmanager2-jsmin.js in it (they are in the html file)\r\n\r\n#### Reproduction steps/code\r\nJust compile the project !\r\n`\r\n   Compiling 5 permutations\r\n      Compiling permutation 0...\r\n      Compiling permutation 1...\r\n      Compiling permutation 2...\r\n      Compiling permutation 3...\r\n      Compiling permutation 4...\r\n   Compile of permutations succeeded\r\n   Compilation succeeded -- 176.992s\r\nLinking into /home/alaa/git/doit-liger-demo/build/demo\r\n   Invoking Linker Cross-Site-Iframe\r\n      [ERROR] The Cross-Site-Iframe linker does not support <script> tags in the gwt.xml files, but the gwt.xml file (or the gwt.xml files which it includes) contains the following script tags: \r\nsoundmanager2-setup.js\r\nsoundmanager2-jsmin.js\r\nIn order for your application to run correctly, you will need to include these tags in your host page directly. In order to avoid this error, you will need to remove the script tags from the gwt.xml file, or add this property to the gwt.xml file: <set-configuration-property name='xsiframe.failIfScriptTag' value='FALSE'/>\r\n`\r\n#### Version of LibGDX and/or relevant dependencies\r\n1.9.4\r\n\r\n#### Stacktrace\r\n```java\r\n//Please provide the stacktrace if applicable \r\n```\r\n\r\n#### Please select the affected platforms\r\n- [ ] Android\r\n- [ ] iOS (robovm)\r\n- [ ] iOS (MOE)\r\n- [X ] HTML/GWT\r\n- [ ] Windows\r\n- [ ] Linux\r\n- [ ] MacOS\r\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4433/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4432","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4432/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4432/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4432/events","html_url":"https://github.com/libgdx/libgdx/pull/4432","id":190512390,"number":4432,"title":"Fix #4431","user":{"login":"sonirico","id":9306588,"avatar_url":"https://avatars1.githubusercontent.com/u/9306588?v=4","gravatar_id":"","url":"https://api.github.com/users/sonirico","html_url":"https://github.com/sonirico","followers_url":"https://api.github.com/users/sonirico/followers","following_url":"https://api.github.com/users/sonirico/following{/other_user}","gists_url":"https://api.github.com/users/sonirico/gists{/gist_id}","starred_url":"https://api.github.com/users/sonirico/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sonirico/subscriptions","organizations_url":"https://api.github.com/users/sonirico/orgs","repos_url":"https://api.github.com/users/sonirico/repos","events_url":"https://api.github.com/users/sonirico/events{/privacy}","received_events_url":"https://api.github.com/users/sonirico/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-11-19T18:34:56Z","updated_at":"2016-11-20T02:31:04Z","closed_at":"2016-11-20T02:31:03Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4432","html_url":"https://github.com/libgdx/libgdx/pull/4432","diff_url":"https://github.com/libgdx/libgdx/pull/4432.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4432.patch"},"body":"","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4432/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4431","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4431/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4431/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4431/events","html_url":"https://github.com/libgdx/libgdx/issues/4431","id":190511932,"number":4431,"title":"Question: \"else\" keyword missing?","user":{"login":"sonirico","id":9306588,"avatar_url":"https://avatars1.githubusercontent.com/u/9306588?v=4","gravatar_id":"","url":"https://api.github.com/users/sonirico","html_url":"https://github.com/sonirico","followers_url":"https://api.github.com/users/sonirico/followers","following_url":"https://api.github.com/users/sonirico/following{/other_user}","gists_url":"https://api.github.com/users/sonirico/gists{/gist_id}","starred_url":"https://api.github.com/users/sonirico/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sonirico/subscriptions","organizations_url":"https://api.github.com/users/sonirico/orgs","repos_url":"https://api.github.com/users/sonirico/repos","events_url":"https://api.github.com/users/sonirico/events{/privacy}","received_events_url":"https://api.github.com/users/sonirico/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-11-19T18:27:08Z","updated_at":"2016-11-20T02:31:10Z","closed_at":"2016-11-20T02:31:10Z","author_association":"CONTRIBUTOR","body":"Browsing classes and documentation I bumped into this line:\r\nhttps://github.com/libgdx/libgdx/blob/master/gdx/src/com/badlogic/gdx/maps/tiled/renderers/BatchTiledMapRenderer.java#L141\r\n\r\nComparing it to the other overloaded render methods, I couldn't help but notice that an `else`might be missing. It will not affect the logic, anyway.","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4431/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4430","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4430/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4430/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4430/events","html_url":"https://github.com/libgdx/libgdx/issues/4430","id":190502241,"number":4430,"title":"iOS sounds and the ringer/mute switch","user":{"login":"serhii-k","id":10563821,"avatar_url":"https://avatars2.githubusercontent.com/u/10563821?v=4","gravatar_id":"","url":"https://api.github.com/users/serhii-k","html_url":"https://github.com/serhii-k","followers_url":"https://api.github.com/users/serhii-k/followers","following_url":"https://api.github.com/users/serhii-k/following{/other_user}","gists_url":"https://api.github.com/users/serhii-k/gists{/gist_id}","starred_url":"https://api.github.com/users/serhii-k/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/serhii-k/subscriptions","organizations_url":"https://api.github.com/users/serhii-k/orgs","repos_url":"https://api.github.com/users/serhii-k/repos","events_url":"https://api.github.com/users/serhii-k/events{/privacy}","received_events_url":"https://api.github.com/users/serhii-k/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2016-11-19T15:28:12Z","updated_at":"2016-12-04T12:25:34Z","closed_at":"2016-12-04T11:33:36Z","author_association":"NONE","body":"When the ringer/mute switch on a side of an iPhone is enabled, all sounds/music inside a game become silent. There are other games that continue to play sounds in this state.\r\n\r\nAs I understand, these lines set such behaviour:\r\n\r\nhttps://github.com/libgdx/libgdx/blob/master/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSAudio.java#L36\r\n\r\nhttps://github.com/libgdx/libgdx/blob/master/backends/gdx-backend-moe/src/com/badlogic/gdx/backends/iosmoe/IOSAudio.java#L36\r\n\r\nIs there any way to make this behaviour configurable?\r\n\r\n#### Please select the affected platforms\r\n- [X] iOS (robovm)\r\n- [X] iOS (MOE)\r\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4430/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4429","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4429/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4429/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4429/events","html_url":"https://github.com/libgdx/libgdx/issues/4429","id":190501479,"number":4429,"title":"iOS sounds are muted after a timer/incoming call","user":{"login":"serhii-k","id":10563821,"avatar_url":"https://avatars2.githubusercontent.com/u/10563821?v=4","gravatar_id":"","url":"https://api.github.com/users/serhii-k","html_url":"https://github.com/serhii-k","followers_url":"https://api.github.com/users/serhii-k/followers","following_url":"https://api.github.com/users/serhii-k/following{/other_user}","gists_url":"https://api.github.com/users/serhii-k/gists{/gist_id}","starred_url":"https://api.github.com/users/serhii-k/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/serhii-k/subscriptions","organizations_url":"https://api.github.com/users/serhii-k/orgs","repos_url":"https://api.github.com/users/serhii-k/repos","events_url":"https://api.github.com/users/serhii-k/events{/privacy}","received_events_url":"https://api.github.com/users/serhii-k/received_events","type":"User","site_admin":false},"labels":[{"id":11336980,"url":"https://api.github.com/repos/libgdx/libgdx/labels/bug","name":"bug","color":"fc2929","default":true},{"id":59604199,"url":"https://api.github.com/repos/libgdx/libgdx/labels/ios","name":"ios","color":"207de5","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2016-11-19T15:15:08Z","updated_at":"2016-12-18T12:41:06Z","closed_at":"2016-12-10T18:11:49Z","author_association":"NONE","body":"The issue was probably introduced with iOS 10.\r\n\r\nSounds, that are obtained from Gdx.audio.newSound() become silent when:\r\n1) a timer popup is shown\r\n2) after an incoming call\r\n\r\nMusic, obtained from Gdx.audio.newMusic() plays as normal.\r\n\r\n#### Reproduction steps/code\r\nSet the timer to 1 minute. Return to your game and play. When you see the timer popup, all sounds become muted.\r\n\r\nOr, make an incoming call from another phone, while you are playing.\r\n\r\nTo hear sounds again, you need to restart the app:\r\n- Press the \"home\" button twice, swipe away your app. Restart it again.\r\n\r\n#### Version of LibGDX and/or relevant dependencies\r\nI only tried 1.9.4 with robovm. I didn't have much time to familiarize with MOE yet...\r\n\r\n#### Please select the affected platforms\r\n- [X] iOS (robovm)\r\n- [not tested] iOS (MOE)\r\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4429/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}}],"meta":{"x-ratelimit-limit":"5000","x-ratelimit-remaining":"4984","x-ratelimit-reset":"1506844633","x-github-request-id":"A94E:110A:247D4E3:40BCEA6:59D09341","x-github-media-type":"github.squirrel-girl-preview","link":"<https://api.github.com/repositories/5373551/issues?state=all&page=17>; rel=\"next\", <https://api.github.com/repositories/5373551/issues?state=all&page=164>; rel=\"last\", <https://api.github.com/repositories/5373551/issues?state=all&page=1>; rel=\"first\", <https://api.github.com/repositories/5373551/issues?state=all&page=15>; rel=\"prev\"","etag":"\"f81984bd8d6830e23225c26d6531ab56\"","status":"200 OK"}}
