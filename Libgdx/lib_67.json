{"data":[{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2925","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2925/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2925/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2925/events","html_url":"https://github.com/libgdx/libgdx/pull/2925","id":60366149,"number":2925,"title":"Fixed bug in EarClippingTriangulator where vertex offset is ignored when computing triangles","user":{"login":"afomins","id":7146780,"avatar_url":"https://avatars2.githubusercontent.com/u/7146780?v=4","gravatar_id":"","url":"https://api.github.com/users/afomins","html_url":"https://github.com/afomins","followers_url":"https://api.github.com/users/afomins/followers","following_url":"https://api.github.com/users/afomins/following{/other_user}","gists_url":"https://api.github.com/users/afomins/gists{/gist_id}","starred_url":"https://api.github.com/users/afomins/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afomins/subscriptions","organizations_url":"https://api.github.com/users/afomins/orgs","repos_url":"https://api.github.com/users/afomins/repos","events_url":"https://api.github.com/users/afomins/events{/privacy}","received_events_url":"https://api.github.com/users/afomins/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2015-03-09T16:03:22Z","updated_at":"2015-03-09T16:41:51Z","closed_at":"2015-03-09T16:41:23Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2925","html_url":"https://github.com/libgdx/libgdx/pull/2925","diff_url":"https://github.com/libgdx/libgdx/pull/2925.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2925.patch"},"body":"Bug: When vertices array describes multiple polygons then only first polygon is triangulated correctly; offset of all following polygons is ignored and function returns random triangles.\n\nFix:\n1) Added offset when initializing indices\n2) Added offset when computing winding\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2925/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2924","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2924/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2924/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2924/events","html_url":"https://github.com/libgdx/libgdx/issues/2924","id":60353994,"number":2924,"title":"Sound doesn't work in Super Jumper on iOS device","user":{"login":"badlogic","id":514052,"avatar_url":"https://avatars1.githubusercontent.com/u/514052?v=4","gravatar_id":"","url":"https://api.github.com/users/badlogic","html_url":"https://github.com/badlogic","followers_url":"https://api.github.com/users/badlogic/followers","following_url":"https://api.github.com/users/badlogic/following{/other_user}","gists_url":"https://api.github.com/users/badlogic/gists{/gist_id}","starred_url":"https://api.github.com/users/badlogic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/badlogic/subscriptions","organizations_url":"https://api.github.com/users/badlogic/orgs","repos_url":"https://api.github.com/users/badlogic/repos","events_url":"https://api.github.com/users/badlogic/events{/privacy}","received_events_url":"https://api.github.com/users/badlogic/received_events","type":"User","site_admin":false},"labels":[{"id":11336980,"url":"https://api.github.com/repos/libgdx/libgdx/labels/bug","name":"bug","color":"fc2929","default":true},{"id":59604199,"url":"https://api.github.com/repos/libgdx/libgdx/labels/ios","name":"ios","color":"207de5","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2015-03-09T14:49:01Z","updated_at":"2015-04-13T09:40:19Z","closed_at":"2015-04-13T09:40:19Z","author_association":"OWNER","body":"","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2924/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2923","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2923/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2923/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2923/events","html_url":"https://github.com/libgdx/libgdx/issues/2923","id":60340939,"number":2923,"title":"Incorrect resizing with drawPixmap()","user":{"login":"DarthCreationist","id":10283290,"avatar_url":"https://avatars0.githubusercontent.com/u/10283290?v=4","gravatar_id":"","url":"https://api.github.com/users/DarthCreationist","html_url":"https://github.com/DarthCreationist","followers_url":"https://api.github.com/users/DarthCreationist/followers","following_url":"https://api.github.com/users/DarthCreationist/following{/other_user}","gists_url":"https://api.github.com/users/DarthCreationist/gists{/gist_id}","starred_url":"https://api.github.com/users/DarthCreationist/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DarthCreationist/subscriptions","organizations_url":"https://api.github.com/users/DarthCreationist/orgs","repos_url":"https://api.github.com/users/DarthCreationist/repos","events_url":"https://api.github.com/users/DarthCreationist/events{/privacy}","received_events_url":"https://api.github.com/users/DarthCreationist/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2015-03-09T13:13:18Z","updated_at":"2016-04-11T23:59:33Z","closed_at":null,"author_association":"NONE","body":"Hi there,\n\nmy original issue (https://github.com/libgdx/libgdx/issues/2732) was not re-opened, although I gave the needed example, I think it was missed. In a nutshell, the problem is that I resizie a Pixmap to half its original size. When I do that, the image is not just lower-resolution, it is also moved, which is incorrect.\n\nThis application reproduces the problem:\n\n```\nimport com.badlogic.gdx.ApplicationListener;\nimport com.badlogic.gdx.Gdx;\nimport com.badlogic.gdx.graphics.GL20;\nimport com.badlogic.gdx.graphics.Pixmap;\nimport com.badlogic.gdx.graphics.Texture;\nimport com.badlogic.gdx.graphics.g2d.SpriteBatch;\n\n\n\n\npublic class MyApplication implements ApplicationListener {\n    @Override\n    public void create() {\n        sprite = new SpriteBatch();\n        test = new Texture(\"test.png\");\n\n        Pixmap src = new Pixmap(Gdx.files.internal(\"test.png\"));\n        Pixmap dest = new Pixmap(src.getWidth() / 2, src.getHeight() / 2, src.getFormat());\n        dest.drawPixmap(src, 0, 0, src.getWidth(), src.getHeight(), 0, 0, dest.getWidth(), dest.getHeight());\n        test_resized = new Texture(dest);\n    }\n\n\n    @Override\n    public void dispose() {\n    }\n\n\n    @Override\n    public void resize(int width, int height) {\n        this.width = width;\n        this.height = height;\n    }\n\n\n    @Override\n    public void pause() {\n    }\n\n\n    @Override\n    public void resume() {\n    }\n\n\n    @Override\n    public void render() {\n        Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);\n\n        sprite.begin();\n        sprite.draw(test, 0, 0, width / 2, height);\n        sprite.draw(test_resized, width / 2, 0, width / 2, height);\n        sprite.end();\n    }\n\n\n    private SpriteBatch sprite;\n    private Texture test;\n    private Texture test_resized;\n    private int width;\n    private int height;\n}\n```\n\nThis is what the application displays:\n![scale_error](https://cloud.githubusercontent.com/assets/10283290/6177151/6df28356-b304-11e4-96e0-6d61d85a5b9b.png)\n\nThe left half of the screen is the original texture and the right one is the scaled down version. You can clearly see that the right half is shifted to the lower right corner.\n\nHere is the texture \"test.png\" so that you can try it for yourself (put to android/assets):\n![test](https://cloud.githubusercontent.com/assets/10283290/6177184/acf0123a-b304-11e4-8402-69e9638469cf.png)\n\nLet me know if I can help more to reproduce this problem.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2923/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2922","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2922/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2922/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2922/events","html_url":"https://github.com/libgdx/libgdx/issues/2922","id":60282557,"number":2922,"title":"Sound.play fails on iOS","user":{"login":"badlogic","id":514052,"avatar_url":"https://avatars1.githubusercontent.com/u/514052?v=4","gravatar_id":"","url":"https://api.github.com/users/badlogic","html_url":"https://github.com/badlogic","followers_url":"https://api.github.com/users/badlogic/followers","following_url":"https://api.github.com/users/badlogic/following{/other_user}","gists_url":"https://api.github.com/users/badlogic/gists{/gist_id}","starred_url":"https://api.github.com/users/badlogic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/badlogic/subscriptions","organizations_url":"https://api.github.com/users/badlogic/orgs","repos_url":"https://api.github.com/users/badlogic/repos","events_url":"https://api.github.com/users/badlogic/events{/privacy}","received_events_url":"https://api.github.com/users/badlogic/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2015-03-08T23:27:27Z","updated_at":"2015-03-09T01:26:58Z","closed_at":"2015-03-08T23:54:20Z","author_association":"OWNER","body":"I assume this has to do with the latest fix regarding preloaded sound effects. Simple to reproduce on both device and simulator:\n\n``` java\npublic class MyGdxGame extends ApplicationAdapter {\n    @Override\n    public void create () {\n        Sound sound = Gdx.audio.newSound(Gdx.files.internal(\"shotgun.wav\"));\n        sound.play(1);\n    }\n}\n```\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2922/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2921","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2921/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2921/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2921/events","html_url":"https://github.com/libgdx/libgdx/issues/2921","id":60275777,"number":2921,"title":"libgdx gdx-setup.jar Build failed","user":{"login":"GruchaAP","id":11379999,"avatar_url":"https://avatars0.githubusercontent.com/u/11379999?v=4","gravatar_id":"","url":"https://api.github.com/users/GruchaAP","html_url":"https://github.com/GruchaAP","followers_url":"https://api.github.com/users/GruchaAP/followers","following_url":"https://api.github.com/users/GruchaAP/following{/other_user}","gists_url":"https://api.github.com/users/GruchaAP/gists{/gist_id}","starred_url":"https://api.github.com/users/GruchaAP/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/GruchaAP/subscriptions","organizations_url":"https://api.github.com/users/GruchaAP/orgs","repos_url":"https://api.github.com/users/GruchaAP/repos","events_url":"https://api.github.com/users/GruchaAP/events{/privacy}","received_events_url":"https://api.github.com/users/GruchaAP/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":12,"created_at":"2015-03-08T20:57:54Z","updated_at":"2016-12-19T08:50:05Z","closed_at":"2015-03-08T21:15:32Z","author_association":"NONE","body":"Hi all,\nI have problem with resolving dependencies. Have you guys had similar issue? Any ideas?\nthanks in advance\n\nFAILURE: Build failed with an exception.\n- What went wrong:\n  A problem occurred configuring root project 'test'.\n  > Could not resolve all dependencies for configuration ':classpath'.\n  > Could not find org.robovm:robovm-gradle-plugin:1.0.0-SNAPSHOT.\n   Searched in the following locations:\n       https://repo1.maven.org/maven2/org/robovm/robovm-gradle-plugin/1.0.0-SNAPSHOT/maven-metadata.xml\n       https://repo1.maven.org/maven2/org/robovm/robovm-gradle-plugin/1.0.0-SNAPSHOT/robovm-gradle-plugin-1.0.0-SNAPSHOT.pom\n       https://repo1.maven.org/maven2/org/robovm/robovm-gradle-plugin/1.0.0-SNAPSHOT/robovm-gradle-plugin-1.0.0-SNAPSHOT.jar\n       https://jcenter.bintray.com/org/robovm/robovm-gradle-plugin/1.0.0-SNAPSHOT/maven-metadata.xml\n       https://jcenter.bintray.com/org/robovm/robovm-gradle-plugin/1.0.0-SNAPSHOT/robovm-gradle-plugin-1.0.0-SNAPSHOT.pom\n       https://jcenter.bintray.com/org/robovm/robovm-gradle-plugin/1.0.0-SNAPSHOT/robovm-gradle-plugin-1.0.0-SNAPSHOT.jar\n   Required by:\n       :test:unspecified\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2921/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2920","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2920/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2920/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2920/events","html_url":"https://github.com/libgdx/libgdx/pull/2920","id":60262113,"number":2920,"title":"Added HttpRequestBuilder to gdx.gwt.xml","user":{"login":"nooone","id":5896510,"avatar_url":"https://avatars3.githubusercontent.com/u/5896510?v=4","gravatar_id":"","url":"https://api.github.com/users/nooone","html_url":"https://github.com/nooone","followers_url":"https://api.github.com/users/nooone/followers","following_url":"https://api.github.com/users/nooone/following{/other_user}","gists_url":"https://api.github.com/users/nooone/gists{/gist_id}","starred_url":"https://api.github.com/users/nooone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nooone/subscriptions","organizations_url":"https://api.github.com/users/nooone/orgs","repos_url":"https://api.github.com/users/nooone/repos","events_url":"https://api.github.com/users/nooone/events{/privacy}","received_events_url":"https://api.github.com/users/nooone/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2015-03-08T15:46:26Z","updated_at":"2015-03-08T15:48:35Z","closed_at":"2015-03-08T15:48:35Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2920","html_url":"https://github.com/libgdx/libgdx/pull/2920","diff_url":"https://github.com/libgdx/libgdx/pull/2920.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2920.patch"},"body":"> [ERROR] Line 19: No source code is available for type com.badlogic.gdx.net.HttpRequestBuilder; did you forget to inherit a required module?\n\nThat's what I get when I try to run my game via GWT. This should fix that problem.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2920/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2919","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2919/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2919/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2919/events","html_url":"https://github.com/libgdx/libgdx/pull/2919","id":60245480,"number":2919,"title":"keepWithinStage method in Window class in Scene2d-ui","user":{"login":"pablo-cardenas","id":8154773,"avatar_url":"https://avatars3.githubusercontent.com/u/8154773?v=4","gravatar_id":"","url":"https://api.github.com/users/pablo-cardenas","html_url":"https://github.com/pablo-cardenas","followers_url":"https://api.github.com/users/pablo-cardenas/followers","following_url":"https://api.github.com/users/pablo-cardenas/following{/other_user}","gists_url":"https://api.github.com/users/pablo-cardenas/gists{/gist_id}","starred_url":"https://api.github.com/users/pablo-cardenas/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pablo-cardenas/subscriptions","organizations_url":"https://api.github.com/users/pablo-cardenas/orgs","repos_url":"https://api.github.com/users/pablo-cardenas/repos","events_url":"https://api.github.com/users/pablo-cardenas/events{/privacy}","received_events_url":"https://api.github.com/users/pablo-cardenas/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2015-03-08T07:21:04Z","updated_at":"2015-03-08T09:52:37Z","closed_at":"2015-03-08T09:52:37Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2919","html_url":"https://github.com/libgdx/libgdx/pull/2919","diff_url":"https://github.com/libgdx/libgdx/pull/2919.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2919.patch"},"body":"When the camera changes position, keepWithinStage set limits in the initial\nposition. Now, keepWithinStage sets limits depending the Camera.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2919/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2918","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2918/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2918/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2918/events","html_url":"https://github.com/libgdx/libgdx/issues/2918","id":60221561,"number":2918,"title":"Json trim leading zeros when reading number String with outputType minimal","user":{"login":"bachtrong43","id":6166994,"avatar_url":"https://avatars0.githubusercontent.com/u/6166994?v=4","gravatar_id":"","url":"https://api.github.com/users/bachtrong43","html_url":"https://github.com/bachtrong43","followers_url":"https://api.github.com/users/bachtrong43/followers","following_url":"https://api.github.com/users/bachtrong43/following{/other_user}","gists_url":"https://api.github.com/users/bachtrong43/gists{/gist_id}","starred_url":"https://api.github.com/users/bachtrong43/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bachtrong43/subscriptions","organizations_url":"https://api.github.com/users/bachtrong43/orgs","repos_url":"https://api.github.com/users/bachtrong43/repos","events_url":"https://api.github.com/users/bachtrong43/events{/privacy}","received_events_url":"https://api.github.com/users/bachtrong43/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2015-03-07T19:53:30Z","updated_at":"2017-01-16T14:59:40Z","closed_at":"2015-03-07T22:05:31Z","author_association":"NONE","body":"With outputType minimal and testcase:\n\n``` javascript\n               Test t = new Test();\n        t.abc = \"00lead\";\n        String output = json.toJson(t, Test.class);\n        Logger.log(output);\n        t = json.fromJson(Test.class, output);\n        Logger.log(t.abc);\n        t.abc = \"0012321\";\n        output = json.toJson(t, Test.class);\n        Logger.log(output);\n        t = json.fromJson(Test.class, output);\n        Logger.log(t.abc);\n```\n\n``` javascript\n        static class Test implements Serializable {\n        public String abc;\n\n        @Override\n        public void write(Json json) {\n            json.writeValue(\"abc\", abc, String.class);\n        }\n\n        @Override\n        public void read(Json json, JsonValue jsonData) {\n            abc = json.readValue(\"abc\", String.class, \"\", jsonData);\n        }\n    }\n```\n\noutput\n\n``` javascript\n{abc:00lead}\n00lead\n{abc:0012321}\n12321\n```\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2918/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2917","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2917/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2917/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2917/events","html_url":"https://github.com/libgdx/libgdx/pull/2917","id":60189485,"number":2917,"title":"Added id as a property to MapObject for Issue #2873","user":{"login":"RenrokB","id":2769172,"avatar_url":"https://avatars2.githubusercontent.com/u/2769172?v=4","gravatar_id":"","url":"https://api.github.com/users/RenrokB","html_url":"https://github.com/RenrokB","followers_url":"https://api.github.com/users/RenrokB/followers","following_url":"https://api.github.com/users/RenrokB/following{/other_user}","gists_url":"https://api.github.com/users/RenrokB/gists{/gist_id}","starred_url":"https://api.github.com/users/RenrokB/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/RenrokB/subscriptions","organizations_url":"https://api.github.com/users/RenrokB/orgs","repos_url":"https://api.github.com/users/RenrokB/repos","events_url":"https://api.github.com/users/RenrokB/events{/privacy}","received_events_url":"https://api.github.com/users/RenrokB/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2015-03-07T04:08:12Z","updated_at":"2015-03-08T01:29:18Z","closed_at":"2015-03-07T12:52:06Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2917","html_url":"https://github.com/libgdx/libgdx/pull/2917","diff_url":"https://github.com/libgdx/libgdx/pull/2917.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2917.patch"},"body":"Added id as a property since Tiled recently added unique IDs to objects. Closes #2873.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2917/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2916","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2916/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2916/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2916/events","html_url":"https://github.com/libgdx/libgdx/pull/2916","id":60149914,"number":2916,"title":"Added FilehandleResolver for classpaths","user":{"login":"ClaudiuBele","id":3679149,"avatar_url":"https://avatars0.githubusercontent.com/u/3679149?v=4","gravatar_id":"","url":"https://api.github.com/users/ClaudiuBele","html_url":"https://github.com/ClaudiuBele","followers_url":"https://api.github.com/users/ClaudiuBele/followers","following_url":"https://api.github.com/users/ClaudiuBele/following{/other_user}","gists_url":"https://api.github.com/users/ClaudiuBele/gists{/gist_id}","starred_url":"https://api.github.com/users/ClaudiuBele/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ClaudiuBele/subscriptions","organizations_url":"https://api.github.com/users/ClaudiuBele/orgs","repos_url":"https://api.github.com/users/ClaudiuBele/repos","events_url":"https://api.github.com/users/ClaudiuBele/events{/privacy}","received_events_url":"https://api.github.com/users/ClaudiuBele/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2015-03-06T19:52:11Z","updated_at":"2015-03-12T17:32:53Z","closed_at":"2015-03-12T17:32:48Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2916","html_url":"https://github.com/libgdx/libgdx/pull/2916","diff_url":"https://github.com/libgdx/libgdx/pull/2916.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2916.patch"},"body":"Case: The resolver will be useful for libraries that use Libgdx as a backend and have default assets packed in the library in case a desired asset can't be found to draw/play/etc. \n\nThe InternalFileHandleResolver does not suffice, as it prioritizes looking in the internal storage first. From the documentation: \"If a file can't be found on the internal storage, the file module falls back to searching the file on the classpath\". In my case ClasspathFileHandleResolver will be used because we do not want to potentially use assets with the same name that the user has placed in the assets folder. \n\nExample: Have a \"Missing texture\" texture drawn when developer using my library want to draw a texture from a filehandle that does not exist. The \"Missing texture\" could in this case be located at MissingTexture.png in the classpath. If the developer using the library already has a MissingTexture.png file in internal storage, that one would be used instead if we resolve the file using InternalFileHandleResolver. We don't want the developer using my library have to know by heart file names that have to be avoided.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2916/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2915","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2915/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2915/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2915/events","html_url":"https://github.com/libgdx/libgdx/issues/2915","id":60145627,"number":2915,"title":"Images not displaying","user":{"login":"aaryadev","id":4547451,"avatar_url":"https://avatars0.githubusercontent.com/u/4547451?v=4","gravatar_id":"","url":"https://api.github.com/users/aaryadev","html_url":"https://github.com/aaryadev","followers_url":"https://api.github.com/users/aaryadev/followers","following_url":"https://api.github.com/users/aaryadev/following{/other_user}","gists_url":"https://api.github.com/users/aaryadev/gists{/gist_id}","starred_url":"https://api.github.com/users/aaryadev/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aaryadev/subscriptions","organizations_url":"https://api.github.com/users/aaryadev/orgs","repos_url":"https://api.github.com/users/aaryadev/repos","events_url":"https://api.github.com/users/aaryadev/events{/privacy}","received_events_url":"https://api.github.com/users/aaryadev/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2015-03-06T19:19:18Z","updated_at":"2015-03-13T13:16:43Z","closed_at":"2015-03-12T20:16:32Z","author_association":"NONE","body":"While reading :https://github.com/libgdx/libgdx/wiki/Textures,-textureregion-and-spritebatch\nnoticed that images are not loading !. Are they removed ?\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2915/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2914","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2914/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2914/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2914/events","html_url":"https://github.com/libgdx/libgdx/pull/2914","id":60135733,"number":2914,"title":"more functionalities (restart, setFrame, ..)","user":{"login":"JoJpeg","id":9414172,"avatar_url":"https://avatars1.githubusercontent.com/u/9414172?v=4","gravatar_id":"","url":"https://api.github.com/users/JoJpeg","html_url":"https://github.com/JoJpeg","followers_url":"https://api.github.com/users/JoJpeg/followers","following_url":"https://api.github.com/users/JoJpeg/following{/other_user}","gists_url":"https://api.github.com/users/JoJpeg/gists{/gist_id}","starred_url":"https://api.github.com/users/JoJpeg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JoJpeg/subscriptions","organizations_url":"https://api.github.com/users/JoJpeg/orgs","repos_url":"https://api.github.com/users/JoJpeg/repos","events_url":"https://api.github.com/users/JoJpeg/events{/privacy}","received_events_url":"https://api.github.com/users/JoJpeg/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2015-03-06T17:55:26Z","updated_at":"2015-03-06T18:16:19Z","closed_at":"2015-03-06T18:16:19Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2914","html_url":"https://github.com/libgdx/libgdx/pull/2914","diff_url":"https://github.com/libgdx/libgdx/pull/2914.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2914.patch"},"body":"- added getTextureRegionAtIndex(int i)\n- added restartAnimation()\n- added setFrame(int f)\n\nTo keep the lightweight method for rendering/updating the AnimatedMapTiles, I use a timeOffset to move inside the different animation frames. I would highly appreciate any kind of criticism on this, through I don't think this is the best method, but can't find a different, better one. \n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2914/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2913","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2913/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2913/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2913/events","html_url":"https://github.com/libgdx/libgdx/pull/2913","id":60124655,"number":2913,"title":"changing the loopduration","user":{"login":"JoJpeg","id":9414172,"avatar_url":"https://avatars1.githubusercontent.com/u/9414172?v=4","gravatar_id":"","url":"https://api.github.com/users/JoJpeg","html_url":"https://github.com/JoJpeg","followers_url":"https://api.github.com/users/JoJpeg/followers","following_url":"https://api.github.com/users/JoJpeg/following{/other_user}","gists_url":"https://api.github.com/users/JoJpeg/gists{/gist_id}","starred_url":"https://api.github.com/users/JoJpeg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JoJpeg/subscriptions","organizations_url":"https://api.github.com/users/JoJpeg/orgs","repos_url":"https://api.github.com/users/JoJpeg/repos","events_url":"https://api.github.com/users/JoJpeg/events{/privacy}","received_events_url":"https://api.github.com/users/JoJpeg/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2015-03-06T16:30:57Z","updated_at":"2015-03-06T18:08:26Z","closed_at":"2015-03-06T16:53:07Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2913","html_url":"https://github.com/libgdx/libgdx/pull/2913","diff_url":"https://github.com/libgdx/libgdx/pull/2913.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2913.patch"},"body":"Whoops, this is very important to correctly determine the frame.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2913/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2912","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2912/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2912/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2912/events","html_url":"https://github.com/libgdx/libgdx/pull/2912","id":60113443,"number":2912,"title":"Fix conditional packing  for issue #2883","user":{"login":"voidburn","id":1438321,"avatar_url":"https://avatars3.githubusercontent.com/u/1438321?v=4","gravatar_id":"","url":"https://api.github.com/users/voidburn","html_url":"https://github.com/voidburn","followers_url":"https://api.github.com/users/voidburn/followers","following_url":"https://api.github.com/users/voidburn/following{/other_user}","gists_url":"https://api.github.com/users/voidburn/gists{/gist_id}","starred_url":"https://api.github.com/users/voidburn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/voidburn/subscriptions","organizations_url":"https://api.github.com/users/voidburn/orgs","repos_url":"https://api.github.com/users/voidburn/repos","events_url":"https://api.github.com/users/voidburn/events{/privacy}","received_events_url":"https://api.github.com/users/voidburn/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2015-03-06T15:09:31Z","updated_at":"2015-03-06T15:56:14Z","closed_at":"2015-03-06T15:35:03Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2912","html_url":"https://github.com/libgdx/libgdx/pull/2912","diff_url":"https://github.com/libgdx/libgdx/pull/2912.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2912.patch"},"body":"Augmented the **TexturePacker.isModified** method with the inclusion of a **TexturePacker.Settings** instance reference, which allows to retrieve the currently configured extension string for the atlas files.\n\nChanged both overloads of the method **TexturePacker.processIfModified** to reflect that change (defaulting to the standard settings if none are passed by the user).\n\nWith this change the input string (raw assets folder to pack) will be checked against the generated atlas file that the packer produces. If a change is detected between the **last modified date** of the raw assets folder and the current (if existing) atlas file, the packing process should be triggered.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2912/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2911","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2911/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2911/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2911/events","html_url":"https://github.com/libgdx/libgdx/issues/2911","id":60110661,"number":2911,"title":"Sort keys in preferences [desktop]","user":{"login":"mk1x86","id":4849383,"avatar_url":"https://avatars2.githubusercontent.com/u/4849383?v=4","gravatar_id":"","url":"https://api.github.com/users/mk1x86","html_url":"https://github.com/mk1x86","followers_url":"https://api.github.com/users/mk1x86/followers","following_url":"https://api.github.com/users/mk1x86/following{/other_user}","gists_url":"https://api.github.com/users/mk1x86/gists{/gist_id}","starred_url":"https://api.github.com/users/mk1x86/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mk1x86/subscriptions","organizations_url":"https://api.github.com/users/mk1x86/orgs","repos_url":"https://api.github.com/users/mk1x86/repos","events_url":"https://api.github.com/users/mk1x86/events{/privacy}","received_events_url":"https://api.github.com/users/mk1x86/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2015-03-06T14:48:07Z","updated_at":"2015-05-17T20:42:07Z","closed_at":"2015-05-17T20:42:07Z","author_association":"NONE","body":"I've got quite a few entries in my preferences and sometimes I need to manually edit them (desktop only) for testing purposes. It seems like they're stored in a hashmap and thus not ordered which results in a total mess. I've got a few entries for gamepads, all starting with \"controller...\" and it'd be nice to see them in order.\nI guess this isn't a difficult change since all that has to be done is using an ordered hashmap. Would be nice to have.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2911/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2910","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2910/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2910/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2910/events","html_url":"https://github.com/libgdx/libgdx/pull/2910","id":60078427,"number":2910,"title":"AnimatedMapTile - Getter and Setter fot animationIntervals","user":{"login":"JoJpeg","id":9414172,"avatar_url":"https://avatars1.githubusercontent.com/u/9414172?v=4","gravatar_id":"","url":"https://api.github.com/users/JoJpeg","html_url":"https://github.com/JoJpeg","followers_url":"https://api.github.com/users/JoJpeg/followers","following_url":"https://api.github.com/users/JoJpeg/following{/other_user}","gists_url":"https://api.github.com/users/JoJpeg/gists{/gist_id}","starred_url":"https://api.github.com/users/JoJpeg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JoJpeg/subscriptions","organizations_url":"https://api.github.com/users/JoJpeg/orgs","repos_url":"https://api.github.com/users/JoJpeg/repos","events_url":"https://api.github.com/users/JoJpeg/events{/privacy}","received_events_url":"https://api.github.com/users/JoJpeg/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2015-03-06T09:29:19Z","updated_at":"2015-03-06T13:44:39Z","closed_at":"2015-03-06T10:54:08Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2910","html_url":"https://github.com/libgdx/libgdx/pull/2910","diff_url":"https://github.com/libgdx/libgdx/pull/2910.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2910.patch"},"body":"to change the animation speed in runtime\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2910/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2909","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2909/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2909/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2909/events","html_url":"https://github.com/libgdx/libgdx/pull/2909","id":60076878,"number":2909,"title":"Getter and Setter for animationIntervals","user":{"login":"JoJpeg","id":9414172,"avatar_url":"https://avatars1.githubusercontent.com/u/9414172?v=4","gravatar_id":"","url":"https://api.github.com/users/JoJpeg","html_url":"https://github.com/JoJpeg","followers_url":"https://api.github.com/users/JoJpeg/followers","following_url":"https://api.github.com/users/JoJpeg/following{/other_user}","gists_url":"https://api.github.com/users/JoJpeg/gists{/gist_id}","starred_url":"https://api.github.com/users/JoJpeg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JoJpeg/subscriptions","organizations_url":"https://api.github.com/users/JoJpeg/orgs","repos_url":"https://api.github.com/users/JoJpeg/repos","events_url":"https://api.github.com/users/JoJpeg/events{/privacy}","received_events_url":"https://api.github.com/users/JoJpeg/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2015-03-06T09:12:48Z","updated_at":"2015-03-06T09:19:12Z","closed_at":"2015-03-06T09:14:10Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2909","html_url":"https://github.com/libgdx/libgdx/pull/2909","diff_url":"https://github.com/libgdx/libgdx/pull/2909.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2909.patch"},"body":"To change the animation speed in code and runtime\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2909/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2908","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2908/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2908/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2908/events","html_url":"https://github.com/libgdx/libgdx/issues/2908","id":60034430,"number":2908,"title":"Mixup in IOSDevice","user":{"login":"pinkushn","id":10940577,"avatar_url":"https://avatars2.githubusercontent.com/u/10940577?v=4","gravatar_id":"","url":"https://api.github.com/users/pinkushn","html_url":"https://github.com/pinkushn","followers_url":"https://api.github.com/users/pinkushn/followers","following_url":"https://api.github.com/users/pinkushn/following{/other_user}","gists_url":"https://api.github.com/users/pinkushn/gists{/gist_id}","starred_url":"https://api.github.com/users/pinkushn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pinkushn/subscriptions","organizations_url":"https://api.github.com/users/pinkushn/orgs","repos_url":"https://api.github.com/users/pinkushn/repos","events_url":"https://api.github.com/users/pinkushn/events{/privacy}","received_events_url":"https://api.github.com/users/pinkushn/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2015-03-05T23:29:54Z","updated_at":"2015-03-06T00:04:24Z","closed_at":"2015-03-05T23:49:04Z","author_association":"NONE","body":"I believe there is a mixup in the IOSDevice enum (backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSDevice.java).  The ppi for iPhone 6 and iPhone 6+ are reversed.  The code currently reads:\n\n```\nIPHONE_6_PLUS(\"iPhone7,1\", 326),\nIPHONE_6(\"iPhone7,2\", 401),\n```\n\nThe 326 should say 401 and the 401 should say 326.\n\nRegards,\n\nJosh\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2908/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2907","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2907/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2907/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2907/events","html_url":"https://github.com/libgdx/libgdx/pull/2907","id":59969938,"number":2907,"title":"Add spotlight support in Environment","user":{"login":"realitix","id":6367936,"avatar_url":"https://avatars1.githubusercontent.com/u/6367936?v=4","gravatar_id":"","url":"https://api.github.com/users/realitix","html_url":"https://github.com/realitix","followers_url":"https://api.github.com/users/realitix/followers","following_url":"https://api.github.com/users/realitix/following{/other_user}","gists_url":"https://api.github.com/users/realitix/gists{/gist_id}","starred_url":"https://api.github.com/users/realitix/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/realitix/subscriptions","organizations_url":"https://api.github.com/users/realitix/orgs","repos_url":"https://api.github.com/users/realitix/repos","events_url":"https://api.github.com/users/realitix/events{/privacy}","received_events_url":"https://api.github.com/users/realitix/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2015-03-05T15:46:14Z","updated_at":"2015-03-13T13:26:29Z","closed_at":"2015-03-09T14:04:25Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2907","html_url":"https://github.com/libgdx/libgdx/pull/2907","diff_url":"https://github.com/libgdx/libgdx/pull/2907.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2907.patch"},"body":"Hello,\nThis is my first Pull Request.\nThis Pull Request add support of spotlight in environment. It doesn't modify the shader so spotlight can't be used with default shader. But it allows to use spotlight in custom shader.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2907/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2906","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2906/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2906/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2906/events","html_url":"https://github.com/libgdx/libgdx/issues/2906","id":59965257,"number":2906,"title":"IOSSound preloading leaks memory on iOS client","user":{"login":"ericnondahl","id":1621682,"avatar_url":"https://avatars3.githubusercontent.com/u/1621682?v=4","gravatar_id":"","url":"https://api.github.com/users/ericnondahl","html_url":"https://github.com/ericnondahl","followers_url":"https://api.github.com/users/ericnondahl/followers","following_url":"https://api.github.com/users/ericnondahl/following{/other_user}","gists_url":"https://api.github.com/users/ericnondahl/gists{/gist_id}","starred_url":"https://api.github.com/users/ericnondahl/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ericnondahl/subscriptions","organizations_url":"https://api.github.com/users/ericnondahl/orgs","repos_url":"https://api.github.com/users/ericnondahl/repos","events_url":"https://api.github.com/users/ericnondahl/events{/privacy}","received_events_url":"https://api.github.com/users/ericnondahl/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2015-03-05T15:14:58Z","updated_at":"2015-03-06T00:38:20Z","closed_at":"2015-03-06T00:38:20Z","author_association":"CONTRIBUTOR","body":"When looking into a memory leak using XCode Instruments, our total allocations increased significantly each time we loaded an `IOSSound` and then never decreased, even when dispose() was called on the `IOSSound` (I added logging to make sure this was being properly called.)\n\nWe use an `AssetManager` to get `IOSSound` objects in our iOS libGDX game, and then play them with `sound.play(volume, 1, 0)`. The `AssetManager` properly handles the Sound lifecycle - they are loaded and then unloaded at the correct times.\n\nVia a process of elimination, I found that calling `preloadEffect` allocates sound memory, and the subsequent `dispose()` does not free it:\n\n```\npublic IOSSound (FileHandle filePath) {\n    soundPath = filePath.file().getPath().replace('\\\\', '/');\n\n    // ------ remove this preloading to fix memory leak ------- //\n    soundBuffer = OALSimpleAudio.sharedInstance().preloadEffect(soundPath);\n\n    channel = OALSimpleAudio.sharedInstance().getChannelSource();\n    sourcePool = channel.getSourcePool().getSources();\n}\n```\n\nlater in IOSSound:\n\n```\n@Override\n    public void dispose () {\n    // ----- should always free sound memory, but doesn’t ------- //\n    OALSimpleAudio.sharedInstance().unloadEffect(soundPath);\n}\n```\n\nIt may be that when a sound is playing, it does not free memory correctly. Or the `unloadEffect` does not work in general. I'll look into making a PR. I was crunched for time so I was more interested in working around the issue than fixing it in libgdx, but we should definitely fix it. The memory leak here was pretty major, around ~16mb total sound memory leaked per screen that used sound.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2906/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2905","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2905/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2905/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2905/events","html_url":"https://github.com/libgdx/libgdx/issues/2905","id":59960350,"number":2905,"title":"TextField blink and non continuous rendering.","user":{"login":"RotaruDan","id":5658058,"avatar_url":"https://avatars2.githubusercontent.com/u/5658058?v=4","gravatar_id":"","url":"https://api.github.com/users/RotaruDan","html_url":"https://github.com/RotaruDan","followers_url":"https://api.github.com/users/RotaruDan/followers","following_url":"https://api.github.com/users/RotaruDan/following{/other_user}","gists_url":"https://api.github.com/users/RotaruDan/gists{/gist_id}","starred_url":"https://api.github.com/users/RotaruDan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/RotaruDan/subscriptions","organizations_url":"https://api.github.com/users/RotaruDan/orgs","repos_url":"https://api.github.com/users/RotaruDan/repos","events_url":"https://api.github.com/users/RotaruDan/events{/privacy}","received_events_url":"https://api.github.com/users/RotaruDan/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2015-03-05T14:40:54Z","updated_at":"2015-03-06T09:44:08Z","closed_at":"2015-03-06T09:44:08Z","author_association":"CONTRIBUTOR","body":"Should the TextField's cursor blink with non continuous rendering?\n\nI've realised that requestRendering() isn't called when the cursor is suposed to blink, is this the desired behavior?\n\n(I guess that the same behavior is happening with TextAreas)\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2905/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2904","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2904/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2904/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2904/events","html_url":"https://github.com/libgdx/libgdx/issues/2904","id":59883440,"number":2904,"title":"Hiero exports wrong base value","user":{"login":"s4ge","id":5221391,"avatar_url":"https://avatars1.githubusercontent.com/u/5221391?v=4","gravatar_id":"","url":"https://api.github.com/users/s4ge","html_url":"https://github.com/s4ge","followers_url":"https://api.github.com/users/s4ge/followers","following_url":"https://api.github.com/users/s4ge/following{/other_user}","gists_url":"https://api.github.com/users/s4ge/gists{/gist_id}","starred_url":"https://api.github.com/users/s4ge/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s4ge/subscriptions","organizations_url":"https://api.github.com/users/s4ge/orgs","repos_url":"https://api.github.com/users/s4ge/repos","events_url":"https://api.github.com/users/s4ge/events{/privacy}","received_events_url":"https://api.github.com/users/s4ge/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2015-03-05T00:02:49Z","updated_at":"2015-03-05T00:02:49Z","closed_at":null,"author_association":"NONE","body":"When a font is exported/created using Hiero, and a padding has been set, the vertical offset is wrong. I noticed that this can be fixed by adding the half of the top/bottom padding to the exported base value of the .fnt file.\n\nWhen I export a font using a top and bottom padding of top, bottom(6,6) and the spacing set to x,y(-12, -12)\n\nThe resulting .fnt looks like this:\n`info face=\"Lato Regular\" size=16 bold=0 italic=0 charset=\"\" unicode=0 stretchH=100 smooth=1 aa=1    padding=6,6,6,6 spacing=-12,-12\n    common lineHeight=22 base=16 scaleW=512 scaleH=512 pages=1 packed=0`\n\nThis leads to a font which is rendered just a little bit lower than the expected base line.\nChanging the base value to 22 in this case fixes the issue. Actually I don't know if this is just by accident correct, but it definitely looks like that the base value if not correctly calculated.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2904/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2903","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2903/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2903/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2903/events","html_url":"https://github.com/libgdx/libgdx/issues/2903","id":59818993,"number":2903,"title":"OutOfMemoryError in ObjectSet<String>","user":{"login":"nikialeksey","id":5731084,"avatar_url":"https://avatars2.githubusercontent.com/u/5731084?v=4","gravatar_id":"","url":"https://api.github.com/users/nikialeksey","html_url":"https://github.com/nikialeksey","followers_url":"https://api.github.com/users/nikialeksey/followers","following_url":"https://api.github.com/users/nikialeksey/following{/other_user}","gists_url":"https://api.github.com/users/nikialeksey/gists{/gist_id}","starred_url":"https://api.github.com/users/nikialeksey/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nikialeksey/subscriptions","organizations_url":"https://api.github.com/users/nikialeksey/orgs","repos_url":"https://api.github.com/users/nikialeksey/repos","events_url":"https://api.github.com/users/nikialeksey/events{/privacy}","received_events_url":"https://api.github.com/users/nikialeksey/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2015-03-04T16:06:27Z","updated_at":"2015-03-05T04:50:11Z","closed_at":"2015-03-05T04:43:48Z","author_association":"NONE","body":"```\npublic class Test extends ApplicationAdapter {\n\n    final static int cntWord = 2 * 100 * 100;\n    final static int lenWord = 2;\n    final static int cntDistinctLetter = 100;\n    Random random = new Random();\n\n    ObjectSet<String> objSet = new ObjectSet<String>();\n\n    String generateRandomString(int lenWord, int cntDistinctLetter) {\n        StringBuilder stringBuilder = new StringBuilder();\n        for (int i = 0; i < lenWord; i++)\n            stringBuilder.append((char)(random.nextInt() % cntDistinctLetter + 32));\n        return stringBuilder.toString();\n    }\n\n    double tms(Consumer<String[]> consumer, String[] items) {\n        long start = System.nanoTime();\n\n        consumer.accept(items);\n\n        return (System.nanoTime() - start) / 1000000.0;\n    }\n\n    void objectSetAdd(String[] items) {\n        for (int i = 0; i < cntWord; i++)\n            objSet.add(items[i]);\n    }\n\n    @Override\n    public void create () {\n\n        String[] items = new String[cntWord];\n        for (int i = 0; i < cntWord; i++)\n            items[i] = generateRandomString(lenWord, cntDistinctLetter);\n\n        double t = tms(this::objectSetAdd, items);\n\n        System.err.println(\"=========Testing========\");\n\n        System.err.println(\"ObjectSet: Adding: \" + String.format(\"%.2f\", t));\n\n        System.err.println(\"=========Testing========\");\n    }\n\n    @Override\n    public void render () {\n    }\n}\n```\n\nAfter run this code i got OutOfMemoryError. \n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2903/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2902","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2902/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2902/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2902/events","html_url":"https://github.com/libgdx/libgdx/pull/2902","id":59802196,"number":2902,"title":"Fix stuff in SuperKoalio","user":{"login":"UgoRaffaele","id":1210314,"avatar_url":"https://avatars1.githubusercontent.com/u/1210314?v=4","gravatar_id":"","url":"https://api.github.com/users/UgoRaffaele","html_url":"https://github.com/UgoRaffaele","followers_url":"https://api.github.com/users/UgoRaffaele/followers","following_url":"https://api.github.com/users/UgoRaffaele/following{/other_user}","gists_url":"https://api.github.com/users/UgoRaffaele/gists{/gist_id}","starred_url":"https://api.github.com/users/UgoRaffaele/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/UgoRaffaele/subscriptions","organizations_url":"https://api.github.com/users/UgoRaffaele/orgs","repos_url":"https://api.github.com/users/UgoRaffaele/repos","events_url":"https://api.github.com/users/UgoRaffaele/events{/privacy}","received_events_url":"https://api.github.com/users/UgoRaffaele/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2015-03-04T14:10:29Z","updated_at":"2015-03-11T04:08:11Z","closed_at":"2015-03-11T04:08:11Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2902","html_url":"https://github.com/libgdx/libgdx/pull/2902","diff_url":"https://github.com/libgdx/libgdx/pull/2902.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2902.patch"},"body":"- Added multiple touches detection on mobile;\n- Expanded \"jump\" area (starting from 0.5 of X axis, previously 0.75);\n- Fixed MapTiles Layers references (now \"walls\", previously 1) and ClassCastException of TiledMapTileLayer;\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2902/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2901","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2901/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2901/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2901/events","html_url":"https://github.com/libgdx/libgdx/issues/2901","id":59795158,"number":2901,"title":"DragAndDrop not working if DragActor is the Source Actor","user":{"login":"bachtrong43","id":6166994,"avatar_url":"https://avatars0.githubusercontent.com/u/6166994?v=4","gravatar_id":"","url":"https://api.github.com/users/bachtrong43","html_url":"https://github.com/bachtrong43","followers_url":"https://api.github.com/users/bachtrong43/followers","following_url":"https://api.github.com/users/bachtrong43/following{/other_user}","gists_url":"https://api.github.com/users/bachtrong43/gists{/gist_id}","starred_url":"https://api.github.com/users/bachtrong43/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bachtrong43/subscriptions","organizations_url":"https://api.github.com/users/bachtrong43/orgs","repos_url":"https://api.github.com/users/bachtrong43/repos","events_url":"https://api.github.com/users/bachtrong43/events{/privacy}","received_events_url":"https://api.github.com/users/bachtrong43/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2015-03-04T13:08:49Z","updated_at":"2015-03-04T18:27:04Z","closed_at":"2015-03-04T18:27:04Z","author_association":"NONE","body":"I don't know this is an issue or not, but it's uncomfortable when use DragAndDrop with DragActor set to the Source Actor. At the moment, I have to clone the Source Actor and set it as the DragActor, when DragStart set source actor invisible and visible when DragStop.\n\n``` javascript\nDragAndDrop dr = new DragAndDrop();\n        dr.addSource(new Source(imgCross) {\n\n            @Override\n            public Payload dragStart(InputEvent event, float x, float y,\n                    int pointer) {\n                Logger.log(\"start\"); \n                Payload pl = new Payload();\n                pl.setDragActor(imgCross);\n                return pl;\n            }\n\n            @Override\n            public void dragStop(InputEvent event, float x, float y,\n                    int pointer, Payload payload, Target target) {\n                super.dragStop(event, x, y, pointer, payload, target);\n                Logger.log(\"stop\");\n            }\n        });\n```\n\nWith above code, the dragStop is called immediately after 1 call of drag. Because in the removeActor method:\n\n``` javascript\npublic boolean removeActor (Actor actor) {\n        if (!children.removeValue(actor, true)) return false;\n        Stage stage = getStage();\n        if (stage != null) stage.unfocus(actor);\n        actor.setParent(null);\n        actor.setStage(null);\n        childrenChanged();\n        return true;\n    }\n```\n\nWhen DragActor is added to Stage, it will be removed from stage first, so stage.unfocus will be called:\n\n``` javascript\npublic void unfocus (Actor actor) {\n        cancelTouchFocus(actor);\n        if (scrollFocus != null && scrollFocus.isDescendantOf(actor)) scrollFocus = null;\n        if (keyboardFocus != null && keyboardFocus.isDescendantOf(actor)) keyboardFocus = null;\n    }\n```\n\nThe result is stage will cancel touch focus on dragActor, it makes the DragAndDrop call dragStop after 1 call of drag. Old version of libgdx doesn't have this issue.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2901/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2900","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2900/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2900/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2900/events","html_url":"https://github.com/libgdx/libgdx/issues/2900","id":59728126,"number":2900,"title":"ParticleEmitter copy constructor does not copy premultiplied alpha attribute","user":{"login":"cypherdare","id":1843131,"avatar_url":"https://avatars2.githubusercontent.com/u/1843131?v=4","gravatar_id":"","url":"https://api.github.com/users/cypherdare","html_url":"https://github.com/cypherdare","followers_url":"https://api.github.com/users/cypherdare/followers","following_url":"https://api.github.com/users/cypherdare/following{/other_user}","gists_url":"https://api.github.com/users/cypherdare/gists{/gist_id}","starred_url":"https://api.github.com/users/cypherdare/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cypherdare/subscriptions","organizations_url":"https://api.github.com/users/cypherdare/orgs","repos_url":"https://api.github.com/users/cypherdare/repos","events_url":"https://api.github.com/users/cypherdare/events{/privacy}","received_events_url":"https://api.github.com/users/cypherdare/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2015-03-04T00:01:17Z","updated_at":"2015-03-04T00:18:44Z","closed_at":"2015-03-04T00:16:32Z","author_association":"CONTRIBUTOR","body":"I discovered this while trying to use a ParticleEffect that has ParticleEmitters with premultiplied alpha with a ParticleEffectPool.\n\nNot sure why the comment \"Backwards compatibility\" is used in reference to loading premultiplied alpha state in the `load (BufferedReader reader)`. Is premultiplied alpha not really supported? Premultiplied alpha is super helpful for particle effects. It opens up a lot of possibilities that alpha blending and additive blending don't offer.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2900/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2899","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2899/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2899/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2899/events","html_url":"https://github.com/libgdx/libgdx/pull/2899","id":59666953,"number":2899,"title":"ShapeRenderer: allow use of custom shader","user":{"login":"code-disaster","id":4644167,"avatar_url":"https://avatars1.githubusercontent.com/u/4644167?v=4","gravatar_id":"","url":"https://api.github.com/users/code-disaster","html_url":"https://github.com/code-disaster","followers_url":"https://api.github.com/users/code-disaster/followers","following_url":"https://api.github.com/users/code-disaster/following{/other_user}","gists_url":"https://api.github.com/users/code-disaster/gists{/gist_id}","starred_url":"https://api.github.com/users/code-disaster/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/code-disaster/subscriptions","organizations_url":"https://api.github.com/users/code-disaster/orgs","repos_url":"https://api.github.com/users/code-disaster/repos","events_url":"https://api.github.com/users/code-disaster/events{/privacy}","received_events_url":"https://api.github.com/users/code-disaster/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2015-03-03T16:30:12Z","updated_at":"2015-11-02T12:27:01Z","closed_at":"2015-03-03T16:34:04Z","author_association":"MEMBER","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2899","html_url":"https://github.com/libgdx/libgdx/pull/2899","diff_url":"https://github.com/libgdx/libgdx/pull/2899.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2899.patch"},"body":"Already implemented by ImmediateModeRenderer20, just not exposed through the ShapeRenderer API.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2899/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2898","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2898/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2898/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2898/events","html_url":"https://github.com/libgdx/libgdx/pull/2898","id":59664590,"number":2898,"title":"Lwjgl30 override EXTFramebufferObject usage","user":{"login":"code-disaster","id":4644167,"avatar_url":"https://avatars1.githubusercontent.com/u/4644167?v=4","gravatar_id":"","url":"https://api.github.com/users/code-disaster","html_url":"https://github.com/code-disaster","followers_url":"https://api.github.com/users/code-disaster/followers","following_url":"https://api.github.com/users/code-disaster/following{/other_user}","gists_url":"https://api.github.com/users/code-disaster/gists{/gist_id}","starred_url":"https://api.github.com/users/code-disaster/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/code-disaster/subscriptions","organizations_url":"https://api.github.com/users/code-disaster/orgs","repos_url":"https://api.github.com/users/code-disaster/repos","events_url":"https://api.github.com/users/code-disaster/events{/privacy}","received_events_url":"https://api.github.com/users/code-disaster/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2015-03-03T16:15:13Z","updated_at":"2015-11-02T12:25:22Z","closed_at":"2015-03-09T14:20:06Z","author_association":"MEMBER","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2898","html_url":"https://github.com/libgdx/libgdx/pull/2898","diff_url":"https://github.com/libgdx/libgdx/pull/2898.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2898.patch"},"body":"Separated from #2897. Overrides all uses of EXTFramebufferObject with the GL3 core functions.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2898/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2897","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2897/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2897/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2897/events","html_url":"https://github.com/libgdx/libgdx/pull/2897","id":59620198,"number":2897,"title":"Lwjgl30 override EXTFramebufferObject usage","user":{"login":"code-disaster","id":4644167,"avatar_url":"https://avatars1.githubusercontent.com/u/4644167?v=4","gravatar_id":"","url":"https://api.github.com/users/code-disaster","html_url":"https://github.com/code-disaster","followers_url":"https://api.github.com/users/code-disaster/followers","following_url":"https://api.github.com/users/code-disaster/following{/other_user}","gists_url":"https://api.github.com/users/code-disaster/gists{/gist_id}","starred_url":"https://api.github.com/users/code-disaster/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/code-disaster/subscriptions","organizations_url":"https://api.github.com/users/code-disaster/orgs","repos_url":"https://api.github.com/users/code-disaster/repos","events_url":"https://api.github.com/users/code-disaster/events{/privacy}","received_events_url":"https://api.github.com/users/code-disaster/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2015-03-03T10:09:21Z","updated_at":"2015-03-03T16:05:29Z","closed_at":"2015-03-03T15:40:03Z","author_association":"MEMBER","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2897","html_url":"https://github.com/libgdx/libgdx/pull/2897","diff_url":"https://github.com/libgdx/libgdx/pull/2897.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2897.patch"},"body":"I'm doing some experiments with multi-target rendering (G-Buffers), for now using the gl32core branch by @nelsonsilva. I'm doing a separate PR because the changes are independent of this pending work.\n- Overrides all uses of EXTFramebufferObject with the GL3 core functions.\n- The second, small change is a new Texture() constructor which takes an existing GL handle. I'm using this to easily pass G-Buffer textures to Batch.draw() for debugging.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2897/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2896","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2896/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2896/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2896/events","html_url":"https://github.com/libgdx/libgdx/issues/2896","id":59616994,"number":2896,"title":"Gdx.app.exit() does't work on ios!","user":{"login":"panli32811","id":8217836,"avatar_url":"https://avatars0.githubusercontent.com/u/8217836?v=4","gravatar_id":"","url":"https://api.github.com/users/panli32811","html_url":"https://github.com/panli32811","followers_url":"https://api.github.com/users/panli32811/followers","following_url":"https://api.github.com/users/panli32811/following{/other_user}","gists_url":"https://api.github.com/users/panli32811/gists{/gist_id}","starred_url":"https://api.github.com/users/panli32811/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/panli32811/subscriptions","organizations_url":"https://api.github.com/users/panli32811/orgs","repos_url":"https://api.github.com/users/panli32811/repos","events_url":"https://api.github.com/users/panli32811/events{/privacy}","received_events_url":"https://api.github.com/users/panli32811/received_events","type":"User","site_admin":false},"labels":[{"id":59604199,"url":"https://api.github.com/repos/libgdx/libgdx/labels/ios","name":"ios","color":"207de5","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2015-03-03T09:39:54Z","updated_at":"2015-08-19T10:19:13Z","closed_at":"2015-08-19T10:19:13Z","author_association":"NONE","body":"","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2896/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}}],"meta":{"x-ratelimit-limit":"5000","x-ratelimit-remaining":"4933","x-ratelimit-reset":"1506844633","x-github-request-id":"8AD4:110A:248772E:40CE15B:59D09520","x-github-media-type":"github.squirrel-girl-preview","link":"<https://api.github.com/repositories/5373551/issues?state=all&page=68>; rel=\"next\", <https://api.github.com/repositories/5373551/issues?state=all&page=164>; rel=\"last\", <https://api.github.com/repositories/5373551/issues?state=all&page=1>; rel=\"first\", <https://api.github.com/repositories/5373551/issues?state=all&page=66>; rel=\"prev\"","etag":"\"93577533990b10a6e993f57211ca2461\"","status":"200 OK"}}
