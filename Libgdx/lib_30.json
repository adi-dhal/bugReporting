{"data":[{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4038","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4038/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4038/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4038/events","html_url":"https://github.com/libgdx/libgdx/pull/4038","id":149548813,"number":4038,"title":"Added â‚¬ to default characters","user":{"login":"NilsFagerburg","id":6000481,"avatar_url":"https://avatars2.githubusercontent.com/u/6000481?v=4","gravatar_id":"","url":"https://api.github.com/users/NilsFagerburg","html_url":"https://github.com/NilsFagerburg","followers_url":"https://api.github.com/users/NilsFagerburg/followers","following_url":"https://api.github.com/users/NilsFagerburg/following{/other_user}","gists_url":"https://api.github.com/users/NilsFagerburg/gists{/gist_id}","starred_url":"https://api.github.com/users/NilsFagerburg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NilsFagerburg/subscriptions","organizations_url":"https://api.github.com/users/NilsFagerburg/orgs","repos_url":"https://api.github.com/users/NilsFagerburg/repos","events_url":"https://api.github.com/users/NilsFagerburg/events{/privacy}","received_events_url":"https://api.github.com/users/NilsFagerburg/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-04-19T18:48:27Z","updated_at":"2016-05-11T08:33:10Z","closed_at":"2016-05-11T08:33:08Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4038","html_url":"https://github.com/libgdx/libgdx/pull/4038","diff_url":"https://github.com/libgdx/libgdx/pull/4038.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4038.patch"},"body":"","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4038/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4037","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4037/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4037/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4037/events","html_url":"https://github.com/libgdx/libgdx/pull/4037","id":149537885,"number":4037,"title":"Fixes #4035 and missing \"iPad 6,7\"","user":{"login":"mikemee","id":550990,"avatar_url":"https://avatars3.githubusercontent.com/u/550990?v=4","gravatar_id":"","url":"https://api.github.com/users/mikemee","html_url":"https://github.com/mikemee","followers_url":"https://api.github.com/users/mikemee/followers","following_url":"https://api.github.com/users/mikemee/following{/other_user}","gists_url":"https://api.github.com/users/mikemee/gists{/gist_id}","starred_url":"https://api.github.com/users/mikemee/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikemee/subscriptions","organizations_url":"https://api.github.com/users/mikemee/orgs","repos_url":"https://api.github.com/users/mikemee/repos","events_url":"https://api.github.com/users/mikemee/events{/privacy}","received_events_url":"https://api.github.com/users/mikemee/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2016-04-19T18:05:43Z","updated_at":"2016-04-20T14:34:00Z","closed_at":"2016-04-20T14:33:54Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4037","html_url":"https://github.com/libgdx/libgdx/pull/4037","diff_url":"https://github.com/libgdx/libgdx/pull/4037.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4037.patch"},"body":"I cross checked against https://www.theiphonewiki.com/wiki/Models and found that \"iPad6,7\" was also missing, so I added it too.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4037/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4036","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4036/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4036/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4036/events","html_url":"https://github.com/libgdx/libgdx/pull/4036","id":149534384,"number":4036,"title":"Fix Gdx.input.getCurrentEventTime() not being set, see #3673","user":{"login":"intrigus","id":10353467,"avatar_url":"https://avatars2.githubusercontent.com/u/10353467?v=4","gravatar_id":"","url":"https://api.github.com/users/intrigus","html_url":"https://github.com/intrigus","followers_url":"https://api.github.com/users/intrigus/followers","following_url":"https://api.github.com/users/intrigus/following{/other_user}","gists_url":"https://api.github.com/users/intrigus/gists{/gist_id}","starred_url":"https://api.github.com/users/intrigus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/intrigus/subscriptions","organizations_url":"https://api.github.com/users/intrigus/orgs","repos_url":"https://api.github.com/users/intrigus/repos","events_url":"https://api.github.com/users/intrigus/events{/privacy}","received_events_url":"https://api.github.com/users/intrigus/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-04-19T17:55:48Z","updated_at":"2016-04-20T14:38:37Z","closed_at":"2016-04-20T14:38:37Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4036","html_url":"https://github.com/libgdx/libgdx/pull/4036","diff_url":"https://github.com/libgdx/libgdx/pull/4036.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4036.patch"},"body":"See https://github.com/libgdx/libgdx/issues/3673#issuecomment-186189355 and https://github.com/libgdx/libgdx/issues/3673#issuecomment-179474566\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4036/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4035","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4035/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4035/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4035/events","html_url":"https://github.com/libgdx/libgdx/issues/4035","id":149534057,"number":4035,"title":"Not recognizing iOS devices properly (file: IOSDevice.java)","user":{"login":"mikemee","id":550990,"avatar_url":"https://avatars3.githubusercontent.com/u/550990?v=4","gravatar_id":"","url":"https://api.github.com/users/mikemee","html_url":"https://github.com/mikemee","followers_url":"https://api.github.com/users/mikemee/followers","following_url":"https://api.github.com/users/mikemee/following{/other_user}","gists_url":"https://api.github.com/users/mikemee/gists{/gist_id}","starred_url":"https://api.github.com/users/mikemee/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikemee/subscriptions","organizations_url":"https://api.github.com/users/mikemee/orgs","repos_url":"https://api.github.com/users/mikemee/repos","events_url":"https://api.github.com/users/mikemee/events{/privacy}","received_events_url":"https://api.github.com/users/mikemee/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-04-19T17:54:53Z","updated_at":"2016-04-20T14:34:04Z","closed_at":"2016-04-20T14:34:04Z","author_association":"CONTRIBUTOR","body":"With the release of the new (smaller) iPad Pro, it seems the values in `iOSDevice.java` need updating again. I.e. like #3426 and previously.\n\nI.e. per https://www.theiphonewiki.com/wiki/Models the file [IOSDevice.java](https://github.com/libgdx/libgdx/blob/master/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSDevice.java) needs to have 2 new entries:\n\n```\nIPAD_PRO(\"iPad6,3\", 264),\nIPAD_PRO(\"iPad6,4\", 264),\n```\n\nI can do a PR with that if it is helpful, but I don't have an easy way to confirm it right now.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4035/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4034","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4034/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4034/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4034/events","html_url":"https://github.com/libgdx/libgdx/issues/4034","id":149524916,"number":4034,"title":"Pressing \"Enter\" on Mac using the LWJGL3 backend doesn't insert a new line into a TextArea","user":{"login":"intrigus","id":10353467,"avatar_url":"https://avatars2.githubusercontent.com/u/10353467?v=4","gravatar_id":"","url":"https://api.github.com/users/intrigus","html_url":"https://github.com/intrigus","followers_url":"https://api.github.com/users/intrigus/followers","following_url":"https://api.github.com/users/intrigus/following{/other_user}","gists_url":"https://api.github.com/users/intrigus/gists{/gist_id}","starred_url":"https://api.github.com/users/intrigus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/intrigus/subscriptions","organizations_url":"https://api.github.com/users/intrigus/orgs","repos_url":"https://api.github.com/users/intrigus/repos","events_url":"https://api.github.com/users/intrigus/events{/privacy}","received_events_url":"https://api.github.com/users/intrigus/received_events","type":"User","site_admin":false},"labels":[{"id":11336980,"url":"https://api.github.com/repos/libgdx/libgdx/labels/bug","name":"bug","color":"fc2929","default":true},{"id":309796149,"url":"https://api.github.com/repos/libgdx/libgdx/labels/LWJGL3","name":"LWJGL3","color":"d4c5f9","default":false}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2016-04-19T17:18:40Z","updated_at":"2016-12-04T14:13:24Z","closed_at":null,"author_association":"CONTRIBUTOR","body":"#### Issue details\n\nPressing \"Enter\" on a Mac using the LWJGL3 backend doesn't insert a new line into a `TextArea`.\nIt works perfectly fine using LWJGL2.\n#### Reproduction steps/code\n\n``` java\npublic class LWJGL3TextAreaTest extends GdxTest {\n    private Stage stage;\n    private Skin skin;\n\n    @Override\n    public void create () {\n        stage = new Stage();\n        Gdx.input.setInputProcessor(stage);\n        skin = new Skin(Gdx.files.internal(\"data/uiskin.json\"));\n        TextArea textArea = new TextArea(\n            \"Text Area\\nEssentially, a text field\\nwith\\nmultiple\\nlines.\\n\"\n                + \"It can even handle very loooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooong lines.\",\n            skin);\n        textArea.setX(10);\n        textArea.setY(10);\n        textArea.setWidth(200);\n        textArea.setHeight(200);\n\n        TextField textField = new TextField(\"Text field\", skin);\n        textField.setX(10);\n        textField.setY(220);\n        textField.setWidth(200);\n        textField.setHeight(30);\n        stage.addActor(textArea);\n        stage.addActor(textField);\n    }\n\n    @Override\n    public void render () {\n        Gdx.gl.glClearColor(0.2f, 0.2f, 0.2f, 1);\n        Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);\n        stage.act();\n        stage.draw();\n    }\n\n    @Override\n    public void resize (int width, int height) {\n        stage.getViewport().update(width, height, true);\n    }\n\n    @Override\n    public void dispose () {\n        stage.dispose();\n        skin.dispose();\n    }\n}\n\n```\n#### Version of LibGDX and/or relevant dependencies\n\nLatest Master/ Libgdx 1.9.3-SNAPSHOT \nLWJGL3 backend\n#### Issue description/solution\n\nThe problem is that LWJGL3 generates '\\r' on an enter press, while LWJGL2 generated a '\\n' on an enter press. Therefore [this line](https://github.com/libgdx/libgdx/blob/a1a2cb9df14016d34b735995e826f44386b3796e/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextField.java#L950) (`ENTER_ANDROID` is '\\r') is executed, which selects the next text field.\n#### How to fix?\n\nI don't know how to fix this issue. We could either generate '\\n' key events instead of '\\r' events or we could fix the `TextField` class.\n#### Please select the affected platforms\n- [ ] Android\n- [ ] iOS\n- [ ] HTML/GWT\n- [ ] Windows\n- [ ] Linux\n- [x] MacOS\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4034/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4033","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4033/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4033/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4033/events","html_url":"https://github.com/libgdx/libgdx/issues/4033","id":149403682,"number":4033,"title":"SequenceAction not restarting","user":{"login":"ivanvinski","id":14854181,"avatar_url":"https://avatars1.githubusercontent.com/u/14854181?v=4","gravatar_id":"","url":"https://api.github.com/users/ivanvinski","html_url":"https://github.com/ivanvinski","followers_url":"https://api.github.com/users/ivanvinski/followers","following_url":"https://api.github.com/users/ivanvinski/following{/other_user}","gists_url":"https://api.github.com/users/ivanvinski/gists{/gist_id}","starred_url":"https://api.github.com/users/ivanvinski/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ivanvinski/subscriptions","organizations_url":"https://api.github.com/users/ivanvinski/orgs","repos_url":"https://api.github.com/users/ivanvinski/repos","events_url":"https://api.github.com/users/ivanvinski/events{/privacy}","received_events_url":"https://api.github.com/users/ivanvinski/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-04-19T09:34:24Z","updated_at":"2016-04-19T16:32:11Z","closed_at":"2016-04-19T16:24:19Z","author_association":"NONE","body":"#### Issue details\n\n_When I call restart() on SequenceAction, it doesn't restart. When I call it on Action, it restarts._\n#### Reproduction steps/code\n\n_http://www.java-gaming.org/topics/libgdx-action-restart-works-sequencedaction-restart-doesn-t-work/37350/view.html\nor\nhttp://www.badlogicgames.com/forum/viewtopic.php?f=11&t=22349_\n#### Version of LibGDX and/or relevant dependencies\n\n_1.9.1_\n#### Stacktrace\n\n``` java\nNo stack trace.\n```\n#### Please select the affected platforms\n- [*] Android\n- [*] iOS\n- [*] HTML/GWT\n- [*] Windows\n- [*] Linux\n- [*] MacOS\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4033/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4032","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4032/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4032/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4032/events","html_url":"https://github.com/libgdx/libgdx/pull/4032","id":149271552,"number":4032,"title":"Add getter for deadzone","user":{"login":"Dibro89","id":16293890,"avatar_url":"https://avatars2.githubusercontent.com/u/16293890?v=4","gravatar_id":"","url":"https://api.github.com/users/Dibro89","html_url":"https://github.com/Dibro89","followers_url":"https://api.github.com/users/Dibro89/followers","following_url":"https://api.github.com/users/Dibro89/following{/other_user}","gists_url":"https://api.github.com/users/Dibro89/gists{/gist_id}","starred_url":"https://api.github.com/users/Dibro89/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Dibro89/subscriptions","organizations_url":"https://api.github.com/users/Dibro89/orgs","repos_url":"https://api.github.com/users/Dibro89/repos","events_url":"https://api.github.com/users/Dibro89/events{/privacy}","received_events_url":"https://api.github.com/users/Dibro89/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2016-04-18T21:07:25Z","updated_at":"2016-05-12T21:12:23Z","closed_at":"2016-05-11T08:34:11Z","author_association":"NONE","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4032","html_url":"https://github.com/libgdx/libgdx/pull/4032","diff_url":"https://github.com/libgdx/libgdx/pull/4032.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4032.patch"},"body":"","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4032/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4031","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4031/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4031/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4031/events","html_url":"https://github.com/libgdx/libgdx/pull/4031","id":149269969,"number":4031,"title":"Add getter for deadzone","user":{"login":"Dibro89","id":16293890,"avatar_url":"https://avatars2.githubusercontent.com/u/16293890?v=4","gravatar_id":"","url":"https://api.github.com/users/Dibro89","html_url":"https://github.com/Dibro89","followers_url":"https://api.github.com/users/Dibro89/followers","following_url":"https://api.github.com/users/Dibro89/following{/other_user}","gists_url":"https://api.github.com/users/Dibro89/gists{/gist_id}","starred_url":"https://api.github.com/users/Dibro89/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Dibro89/subscriptions","organizations_url":"https://api.github.com/users/Dibro89/orgs","repos_url":"https://api.github.com/users/Dibro89/repos","events_url":"https://api.github.com/users/Dibro89/events{/privacy}","received_events_url":"https://api.github.com/users/Dibro89/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-04-18T21:01:22Z","updated_at":"2016-04-18T21:05:04Z","closed_at":"2016-04-18T21:05:04Z","author_association":"NONE","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4031","html_url":"https://github.com/libgdx/libgdx/pull/4031","diff_url":"https://github.com/libgdx/libgdx/pull/4031.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4031.patch"},"body":"","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4031/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4030","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4030/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4030/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4030/events","html_url":"https://github.com/libgdx/libgdx/issues/4030","id":149235188,"number":4030,"title":"Positive rotation of Polygon gives incorrect result","user":{"login":"tomcashman","id":1745420,"avatar_url":"https://avatars2.githubusercontent.com/u/1745420?v=4","gravatar_id":"","url":"https://api.github.com/users/tomcashman","html_url":"https://github.com/tomcashman","followers_url":"https://api.github.com/users/tomcashman/followers","following_url":"https://api.github.com/users/tomcashman/following{/other_user}","gists_url":"https://api.github.com/users/tomcashman/gists{/gist_id}","starred_url":"https://api.github.com/users/tomcashman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tomcashman/subscriptions","organizations_url":"https://api.github.com/users/tomcashman/orgs","repos_url":"https://api.github.com/users/tomcashman/repos","events_url":"https://api.github.com/users/tomcashman/events{/privacy}","received_events_url":"https://api.github.com/users/tomcashman/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2016-04-18T18:37:35Z","updated_at":"2016-04-18T19:19:15Z","closed_at":"2016-04-18T19:19:15Z","author_association":"NONE","body":"#### Issue details\n\nRotating a polygon by a positive amount of degrees gives incorrect results.\n\nGiven the following polygon (a rectangle):\n\n```\nPolygon @ 0.0 degrees [0.0, 0.0] [10.0, 0.0] [10.0, 10.0] [0.0, 10.0]\n```\n\nRotated -90 degrees:\n\n```\n//Correct\nPolygon @ -90.0 degrees [0.0, 0.0] [0.0, -10.0] [10.0, -10.0] [10.0, 0.0]\n```\n\nRotated 90 degrees:\n\n```\n//Incorrect\nPolygon @ 90.0 degrees [0.0, 0.0] [-8.742278E-7, 10.0] [-10.000001, 9.999999] [-10.0, -8.742278E-7]\n```\n\nShould be:\n\n```\nPolygon @ 0.0 degrees [0.0, 0.0] [0.0, 10.0] [-10.0, 10.0] [-10.0, 0.0]\n```\n#### Reproduction steps/code\n\n``` java\npublic class LibGdxPolygonTest {\n\n    public static void main(String [] args) {\n        com.badlogic.gdx.math.Polygon polygon = new com.badlogic.gdx.math.Polygon(new float [] {\n                0f, 0f,\n                10f, 0f,\n                10f, 10f,\n                0f, 10f\n        });\n        System.out.println(\"The following is correct:\");\n        print(polygon);\n        polygon.rotate(-90f);\n        print(polygon);\n\n        polygon = new com.badlogic.gdx.math.Polygon(new float [] {\n                0f, 0f,\n                10f, 0f,\n                10f, 10f,\n                0f, 10f\n        });\n        System.out.println(\"The following is incorrect:\");\n        print(polygon);\n        polygon.rotate(90f);\n        print(polygon);\n    }\n\n    public static void print(com.badlogic.gdx.math.Polygon polygon) {\n        StringBuilder result = new StringBuilder();\n        result.append(\"Polygon @ \");\n        result.append(polygon.getRotation());\n        result.append(\" degrees \");\n        for(int i = 0; i < polygon.getTransformedVertices().length; i += 2) {\n            result.append(\"[\");\n            result.append(polygon.getTransformedVertices()[i]);\n            result.append(\",\");\n            result.append(polygon.getTransformedVertices()[i + 1]);\n            result.append(\"]\");\n        }\n        System.out.println(result.toString());\n    }\n}\n```\n#### Version of LibGDX\n\n1.9.2\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4030/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4029","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4029/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4029/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4029/events","html_url":"https://github.com/libgdx/libgdx/issues/4029","id":149081044,"number":4029,"title":"Grayscale png not properly loaded","user":{"login":"realitix","id":6367936,"avatar_url":"https://avatars1.githubusercontent.com/u/6367936?v=4","gravatar_id":"","url":"https://api.github.com/users/realitix","html_url":"https://github.com/realitix","followers_url":"https://api.github.com/users/realitix/followers","following_url":"https://api.github.com/users/realitix/following{/other_user}","gists_url":"https://api.github.com/users/realitix/gists{/gist_id}","starred_url":"https://api.github.com/users/realitix/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/realitix/subscriptions","organizations_url":"https://api.github.com/users/realitix/orgs","repos_url":"https://api.github.com/users/realitix/repos","events_url":"https://api.github.com/users/realitix/events{/privacy}","received_events_url":"https://api.github.com/users/realitix/received_events","type":"User","site_admin":false},"labels":[{"id":361360212,"url":"https://api.github.com/repos/libgdx/libgdx/labels/GL","name":"GL","color":"e99695","default":false}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":14,"created_at":"2016-04-18T08:32:27Z","updated_at":"2017-01-30T10:06:50Z","closed_at":null,"author_association":"CONTRIBUTOR","body":"#### Issue details\n\nI want to use a grayscale image (with palette) like this one: [image](https://upload.wikimedia.org/wikipedia/commons/f/fa/Grayscale_8bits_palette_sample_image.png) | [Format detail](http://transloadit.imagemagick.org/MagickStudio/scripts/MagickStudio.cgi?CacheID=405480173.984812;SessionID=354a4d35530228b272eb0faf359864cbf74295dba6e7e467af67350ef4586db57c3ae07778c978ff3b55954699a04a63a85263fd2397b59b1f9e7a39a254a34a;Path=/var/www/html/ImageMagick/MagickStudio/workarea/364f0fde1770e57f00f197508f65a607323dedb764f168ed7ba7ed89320fe0b75f4927bf64045d1097847a17b9221af5e88a72838ac323be8cf6f4b4c351198b;Name=Grayscale_8bits_palette_sample_image;Magick=png;Action=mogrify;ToolType=Identify). \n\nWhen I load this image, `Pixmap.Format` is set to `Alpha`, good! But in my shader, when I sample the alpha channel, it's just white. I tried with `LuminanceAlpha` and `Intensity` on all channels and it's not working either.\n\nWhen loading image with `Texture(FileHandle, Format, Mipmap)`, if I force format to be `RGBA8888`, it works in the alpha channel of my shader! So I have to force the `RGBA8888` with a grayscale image (wasting memory).\n#### Version of LibGDX and/or relevant dependencies\n\n1.9.3-Snapshot\nOpenglEs3 enabled\n#### Please select the affected platforms\n- [ ] Android\n- [ ] iOS\n- [ ] HTML/GWT\n- [X] Windows\n- [X] Linux\n- [ ] MacOS\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4029/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4028","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4028/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4028/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4028/events","html_url":"https://github.com/libgdx/libgdx/pull/4028","id":148989894,"number":4028,"title":"Add test starter, allows to start all tests using LWJGL3 backend","user":{"login":"intrigus","id":10353467,"avatar_url":"https://avatars2.githubusercontent.com/u/10353467?v=4","gravatar_id":"","url":"https://api.github.com/users/intrigus","html_url":"https://github.com/intrigus","followers_url":"https://api.github.com/users/intrigus/followers","following_url":"https://api.github.com/users/intrigus/following{/other_user}","gists_url":"https://api.github.com/users/intrigus/gists{/gist_id}","starred_url":"https://api.github.com/users/intrigus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/intrigus/subscriptions","organizations_url":"https://api.github.com/users/intrigus/orgs","repos_url":"https://api.github.com/users/intrigus/repos","events_url":"https://api.github.com/users/intrigus/events{/privacy}","received_events_url":"https://api.github.com/users/intrigus/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2016-04-17T19:56:38Z","updated_at":"2016-05-11T08:34:44Z","closed_at":"2016-05-11T08:34:44Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4028","html_url":"https://github.com/libgdx/libgdx/pull/4028","diff_url":"https://github.com/libgdx/libgdx/pull/4028.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4028.patch"},"body":"This is a replacement for the old AWT test starter. It has been\nnecessary since AWT can't be used with LWJGL 3.\nA new test is created in a new window, using the new window APIs from\nLWJGL3.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4028/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4027","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4027/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4027/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4027/events","html_url":"https://github.com/libgdx/libgdx/pull/4027","id":148981362,"number":4027,"title":"Make it possible to use multiple ParticleSystems","user":{"login":"intrigus","id":10353467,"avatar_url":"https://avatars2.githubusercontent.com/u/10353467?v=4","gravatar_id":"","url":"https://api.github.com/users/intrigus","html_url":"https://github.com/intrigus","followers_url":"https://api.github.com/users/intrigus/followers","following_url":"https://api.github.com/users/intrigus/following{/other_user}","gists_url":"https://api.github.com/users/intrigus/gists{/gist_id}","starred_url":"https://api.github.com/users/intrigus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/intrigus/subscriptions","organizations_url":"https://api.github.com/users/intrigus/orgs","repos_url":"https://api.github.com/users/intrigus/repos","events_url":"https://api.github.com/users/intrigus/events{/privacy}","received_events_url":"https://api.github.com/users/intrigus/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-04-17T18:50:08Z","updated_at":"2016-05-14T22:04:36Z","closed_at":"2016-05-14T22:04:36Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4027","html_url":"https://github.com/libgdx/libgdx/pull/4027","diff_url":"https://github.com/libgdx/libgdx/pull/4027.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4027.patch"},"body":"This makes it possible to use multiple `ParticleSystems`.\nThere is no reason, for `ParticleSystems` being static.\nThis could also fix https://github.com/libgdx/libgdx/issues/3018 , although it's unclear whether `ParticleSystem` caused the issue at all.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4027/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4026","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4026/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4026/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4026/events","html_url":"https://github.com/libgdx/libgdx/pull/4026","id":148877176,"number":4026,"title":"Fix RenderableShapeBuilder","user":{"login":"realitix","id":6367936,"avatar_url":"https://avatars1.githubusercontent.com/u/6367936?v=4","gravatar_id":"","url":"https://api.github.com/users/realitix","html_url":"https://github.com/realitix","followers_url":"https://api.github.com/users/realitix/followers","following_url":"https://api.github.com/users/realitix/following{/other_user}","gists_url":"https://api.github.com/users/realitix/gists{/gist_id}","starred_url":"https://api.github.com/users/realitix/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/realitix/subscriptions","organizations_url":"https://api.github.com/users/realitix/orgs","repos_url":"https://api.github.com/users/realitix/repos","events_url":"https://api.github.com/users/realitix/events{/privacy}","received_events_url":"https://api.github.com/users/realitix/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2016-04-16T18:24:34Z","updated_at":"2016-04-17T12:50:20Z","closed_at":"2016-04-17T12:50:15Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4026","html_url":"https://github.com/libgdx/libgdx/pull/4026","diff_url":"https://github.com/libgdx/libgdx/pull/4026.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4026.patch"},"body":"Increase performance in RenderableShapeBuilder.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4026/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4025","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4025/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4025/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4025/events","html_url":"https://github.com/libgdx/libgdx/pull/4025","id":148778797,"number":4025,"title":"Add wrapper class for btActionInterface","user":{"login":"floralvikings","id":2981766,"avatar_url":"https://avatars1.githubusercontent.com/u/2981766?v=4","gravatar_id":"","url":"https://api.github.com/users/floralvikings","html_url":"https://github.com/floralvikings","followers_url":"https://api.github.com/users/floralvikings/followers","following_url":"https://api.github.com/users/floralvikings/following{/other_user}","gists_url":"https://api.github.com/users/floralvikings/gists{/gist_id}","starred_url":"https://api.github.com/users/floralvikings/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/floralvikings/subscriptions","organizations_url":"https://api.github.com/users/floralvikings/orgs","repos_url":"https://api.github.com/users/floralvikings/repos","events_url":"https://api.github.com/users/floralvikings/events{/privacy}","received_events_url":"https://api.github.com/users/floralvikings/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2016-04-15T21:54:54Z","updated_at":"2016-04-28T19:06:50Z","closed_at":"2016-04-28T19:06:41Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4025","html_url":"https://github.com/libgdx/libgdx/pull/4025","diff_url":"https://github.com/libgdx/libgdx/pull/4025.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4025.patch"},"body":"See #4022 \n\nThe first commit contains the non-generated files; `CustomActionInterface.h` wraps the btActionInterface C++ class and the changes to `dynamics.i` include this new class and specify it as a director class.\n\nThe second commit is the regeneration of the swig source files; swig 3.0.8 was used, most of the changes are just updates to the version number in the leading comment.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4025/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4024","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4024/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4024/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4024/events","html_url":"https://github.com/libgdx/libgdx/issues/4024","id":148644017,"number":4024,"title":"DecalBatch should explicitly bind textures to unit 0.","user":{"login":"tdzbdao","id":795948,"avatar_url":"https://avatars1.githubusercontent.com/u/795948?v=4","gravatar_id":"","url":"https://api.github.com/users/tdzbdao","html_url":"https://github.com/tdzbdao","followers_url":"https://api.github.com/users/tdzbdao/followers","following_url":"https://api.github.com/users/tdzbdao/following{/other_user}","gists_url":"https://api.github.com/users/tdzbdao/gists{/gist_id}","starred_url":"https://api.github.com/users/tdzbdao/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tdzbdao/subscriptions","organizations_url":"https://api.github.com/users/tdzbdao/orgs","repos_url":"https://api.github.com/users/tdzbdao/repos","events_url":"https://api.github.com/users/tdzbdao/events{/privacy}","received_events_url":"https://api.github.com/users/tdzbdao/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-04-15T12:09:28Z","updated_at":"2016-04-20T15:02:09Z","closed_at":"2016-04-20T15:02:09Z","author_association":"NONE","body":"Please ensure you have given all the following requested information in your report.\n#### Issue details\n\nWhen using a `DecalBatch` along with custom texture binding, `Material.set()` called in `DecalBatch.render()` is not guaranteed to bind to texture unit 0 anymore. This results in garbage results while rendering. An easy fix would be to add this line before calling Material.set(): \n`Gdx.gl.glActiveTexture(GL20.GL_TEXTURE0);`\n#### Reproduction steps/code\n\nManually binding any texture to texture in prior to call `DecalBatch.flush()` will trigger this. The reason this is happening is because `Material.set()` does not explicitly bind the texture to a fixed unit. Instead, the currently active texture unit state is used. The shader program used for decal rendering on the other hand requires `u_texture` to be bound at texture unit 0.\n#### Version of LibGDX and/or relevant dependencies\n\n1.7.2\n#### Please select the affected platforms\n- [x] Android\n- [x] iOS\n- [x] HTML/GWT\n- [x] Windows\n- [x] Linux\n- [x] MacOS\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4024/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4023","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4023/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4023/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4023/events","html_url":"https://github.com/libgdx/libgdx/issues/4023","id":148519534,"number":4023,"title":"3D Perspective Camera Gimbal Lock","user":{"login":"LousyLynx","id":6763209,"avatar_url":"https://avatars0.githubusercontent.com/u/6763209?v=4","gravatar_id":"","url":"https://api.github.com/users/LousyLynx","html_url":"https://github.com/LousyLynx","followers_url":"https://api.github.com/users/LousyLynx/followers","following_url":"https://api.github.com/users/LousyLynx/following{/other_user}","gists_url":"https://api.github.com/users/LousyLynx/gists{/gist_id}","starred_url":"https://api.github.com/users/LousyLynx/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/LousyLynx/subscriptions","organizations_url":"https://api.github.com/users/LousyLynx/orgs","repos_url":"https://api.github.com/users/LousyLynx/repos","events_url":"https://api.github.com/users/LousyLynx/events{/privacy}","received_events_url":"https://api.github.com/users/LousyLynx/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2016-04-15T00:25:34Z","updated_at":"2016-04-19T12:59:45Z","closed_at":"2016-04-19T12:59:45Z","author_association":"NONE","body":"Please ensure you have given all the following requested information in your report.\n#### Issue details\n\nI am working on a new project, and I have come across an issue when using a similar version of FirstPersonCameraController. When the player looks directly up, or down, the screen has a sort of spasm. I think it is rotating, trying to make sure the player does not look down too far, but in my game, I don't want it to rotate the camera.\n#### Reproduction steps/code\n\nCopy FirstPersonCameraController to project, and set it up. Import a model. Look directly up, or down.\n#### Version of LibGDX and/or relevant dependencies\n\nLibGDX version 1.9.2\n#### Please select the affected platforms\n- [ ] Android\n- [ ] iOS\n- [ ] HTML/GWT\n- [X] Windows\n- [X] Linux\n- [X] MacOS\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4023/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4022","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4022/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4022/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4022/events","html_url":"https://github.com/libgdx/libgdx/issues/4022","id":148509497,"number":4022,"title":"Bullet - btActionInterface Inheritance","user":{"login":"floralvikings","id":2981766,"avatar_url":"https://avatars1.githubusercontent.com/u/2981766?v=4","gravatar_id":"","url":"https://api.github.com/users/floralvikings","html_url":"https://github.com/floralvikings","followers_url":"https://api.github.com/users/floralvikings/followers","following_url":"https://api.github.com/users/floralvikings/following{/other_user}","gists_url":"https://api.github.com/users/floralvikings/gists{/gist_id}","starred_url":"https://api.github.com/users/floralvikings/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/floralvikings/subscriptions","organizations_url":"https://api.github.com/users/floralvikings/orgs","repos_url":"https://api.github.com/users/floralvikings/repos","events_url":"https://api.github.com/users/floralvikings/events{/privacy}","received_events_url":"https://api.github.com/users/floralvikings/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2016-04-14T23:15:11Z","updated_at":"2016-04-16T10:03:36Z","closed_at":"2016-04-16T10:03:36Z","author_association":"CONTRIBUTOR","body":"#### Issue details\n\nIt would be very useful if it were possible to inherit from the `btActionInterface` class to create custom actions to be executed during a simulation step of a `btDynamicsWorld`; this is how the example `btKinematicCharacterController` class included in Bullet works.\n\nI'm not terribly familiar with JNI, SWIG or how the native wrapping in libGDX works, but if I understand SWIG correctly it should be possible to generate a \"director\" class from the native C++ code that acts as a go-between for Java and C++.  According to the [Wiki Page](https://github.com/libgdx/libgdx/wiki/Bullet-Wrapper---Using-the-wrapper) on using the Bullet wrapper, there are already several callback classes that do something similar, but I'm completely clueless with regards to how those classes were created/written.\n#### Reproduction steps/code\n\nNot really a bug, as you wouldn't expect it to work in the first place, but inheriting from the `btActionInterface` and overriding the `updateAction` method has no effect on the native Bullet code.  \n\nWithout knowing that the Bullet classes are wrapped native C++, I would've assumed that the overridden `updateAction` method would execute during the `stepSimulation` call on a `btDynamicsWorld`. \n\nUsing an anonymous override of `btKinematicCharacterController` as an example; as far as I'm aware, this and `btRayCastVehicle` are the only concrete implementations of this class:\n\n``` java\nnew btKinematicCharacterController(body, shape,  DEFAULT_SIZE.y * 0.5f) {\n    @Override\n    public void updateAction(btCollisionWorld collisionWorld, float deltaTimeStep) {\n        super.updateAction(collisionWorld, deltaTimeStep);\n        System.out.println(\"Test\"); // Doesn't execute, no native calls to the Java code\n    }\n};\n```\n#### Version of LibGDX and/or relevant dependencies\n\nAll versions of gdx-bullet\n#### Stacktrace\n\nNot Applicable\n#### Please select the affected platforms\n- [x] Android\n- [x] iOS\n- [ ] HTML/GWT\n- [x] Windows\n- [x] Linux\n- [x] MacOS\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4022/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4021","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4021/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4021/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4021/events","html_url":"https://github.com/libgdx/libgdx/pull/4021","id":148262923,"number":4021,"title":"Improve jnigen to generate critical natives","user":{"login":"szszss","id":3639840,"avatar_url":"https://avatars2.githubusercontent.com/u/3639840?v=4","gravatar_id":"","url":"https://api.github.com/users/szszss","html_url":"https://github.com/szszss","followers_url":"https://api.github.com/users/szszss/followers","following_url":"https://api.github.com/users/szszss/following{/other_user}","gists_url":"https://api.github.com/users/szszss/gists{/gist_id}","starred_url":"https://api.github.com/users/szszss/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/szszss/subscriptions","organizations_url":"https://api.github.com/users/szszss/orgs","repos_url":"https://api.github.com/users/szszss/repos","events_url":"https://api.github.com/users/szszss/events{/privacy}","received_events_url":"https://api.github.com/users/szszss/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":12,"created_at":"2016-04-14T06:22:15Z","updated_at":"2016-05-11T08:37:38Z","closed_at":"2016-05-11T08:37:37Z","author_association":"NONE","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4021","html_url":"https://github.com/libgdx/libgdx/pull/4021","diff_url":"https://github.com/libgdx/libgdx/pull/4021.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4021.patch"},"body":"According to [an answer on StackOverflow](http://stackoverflow.com/questions/36298111/is-it-possible-to-use-sun-misc-unsafe-to-call-c-functions-without-jni/36309652#36309652), Hotspot JVM had an undocumented feature: Critical Natives, since Java7. It makes an improvement to reducing overhead of calling native methods (with some limits, anyway). This commit made the Jnigen be able to generate critical natives <del>automatically</del> on all eligible native methods.\n## What did it change\n- Made the Jnigen be able to generate critical natives. Only affects desktop version. (Because only desktop has Hotspot, of course. <del>TODO: Is there any better definition to differentiate Linux and Android? I heard that __linux__ is defined in both of them...</del> )\n- An new \"keyword\" for Jnigen: _CRITICAL_. <del>Likes _MANUAL_, but it's used to **assert** that the method is a critical native. If Jnigen can't generate a critical native for that method, it will throw an exception. (Generating critical natives for eligible methods is automatic and enforced.)</del>\n  UPDATE: Since the second commit, generating critical natives for eligible methods is no longer automatic. The keyword _CRITICAL_ is used for marking out native methods for generaing critical natives.\n## How does it work\n- When parser scanning the source and creating JavaMethod, [it will also check if the method meets the condition](https://github.com/libgdx/libgdx/pull/4021/files#diff-ae13bdb9bf9640664a9c06cd8bbbe92eR196) (static & non-synchronized, every arguments must be either primitive or primitive array).\n- When parser injecting native codes to the JavaMethod, it will check the codes by a RegExp. If the native function uses _env_ or _clazz_, it will be kicked out, too.\n- Time to emit something. [Any JavaMethod which is critical native will always emit a wrapper method](https://github.com/libgdx/libgdx/pull/4021/files#diff-97645e59007ba8ffc5c27196496859f2R417).\n- When emitting the wrapper, it won't generate \"JNIEnv\\* env, jclass clazz\" since they are disable. Instead, it will generate \"bool _isCriticalNative\" as the first arguments. This is used to indicate which one called the wrapper. Should be useful when debug. And then, [it will generate all arguments with critical-native-style](https://github.com/libgdx/libgdx/pull/4021/files#diff-97645e59007ba8ffc5c27196496859f2R513). There is another work need to do when processing arrays. It will check if the codes uses the lengths of array. If not, it will not generate the length of array argument.\n- Time to emit standard native function. The codes are pre-generated in [emitJniSetupCode](https://github.com/libgdx/libgdx/pull/4021/files#diff-97645e59007ba8ffc5c27196496859f2R563). Just emit 'em all.\n- <del>The last work.</del> [Generate critical native function](https://github.com/libgdx/libgdx/pull/4021/files#diff-97645e59007ba8ffc5c27196496859f2R692). UPDATE: Since the second commit, Jnigen no longer generates critical native after standard native. It will buffer them and emit at the end of generated source at once. \n## How to use\n1. Ensure the native methods satisfy the requirements. (see the post on StackOverflow, or the first item of _How does it work_)\n2. Add _CRITICAL_ at the head of block comment. For example: \n\n```\nprivate static native void hotNative(int imPrimitive, float[] imArray); /*CRITICAL\n  someworks(imPrimitive, imArray, imArrayLength);\n*/\n```\n\nJnigen will generate that:\n\n```\nstatic inline void wrapped_Java_[package]_[class]_hotNative\n    (bool _isCriticalNative, jint imPrimitive, jint imArrayLength, jfloat* imArray)\n{\n  someworks(imPrimitive, imArray, imArrayLength);\n}\n\nJNIEXPORT void JNICALL Java_[package]_[class]_hotNative\n    (JNIEnv* env, jclass clazz, jint imPrimitive, jfloatArray obj_imArray)\n{\nfloat* imArray = (float*)env->GetPrimitiveArrayCritical(obj_imArray, 0);\njsize imArrayLength= env->GetArrayLength(obj_imArray);\nwrapped_Java_[package]_[class]_hotNative(false, imPrimitive, imArrayLength, imArray);\nenv->ReleasePrimitiveArrayCritical(obj_imArray, imArray , 0);\n}\n\n// Some preprocessor to check if it's on desktop.\n#if defined(__DESKTOP__)\nextern \"C\" JNIEXPORT void JNICALL JavaCritical_[package]_[class]_hotNative\n    (jint imPrimitive, jint imArrayLength, jfloat* imArray)\n{\nwrapped_Java_[package]_[class]_hotNative(true, imPrimitive, imArrayLength, imArray);\n}\n#endif \n```\n\nAs you see, if you want to get the length of array, you can use _[arrayName]Length_. (On the other side, if you already have an array argument named _XXX_, don't name any other argument as _XXXLength_) If you want to check if the code are called from the critical path, you can use __isCriticalNative_. (Don't forget that Hotspot has a _lazy critical entry logic_ for critical natives. The first time calling critical native will always run the normal native function (starts with \"Java_\"). After some times (could be hundreds) the Hotspot will replace the normal function with critical one (starts with \"JavaCritical_\").)\n## Pros:\n- Gives a free performance improving (especially to Matrix4) for desktop. A critical matrix multiplication takes about 35ns when the vanilla one takes about 69ns. A rough SSE+Critical version only takes 24ns (It seems that MinGW can't optimize SSE well? In another native matrix multiplication implementation with MSVC it can takes only 15ns. Whether or not, it should be solved at another time, not now). For comparison, the JOML implementation takes 26ns.\n## Cons:\n- Only works on desktop and Hotspot JVM. I don't know if ExcelsiorJET JVM supports this feature.\n- Makes the libraries larger! (about 15kb pre library, *laugh*)\n- Although critical natives is not an new technology, but it's new for using on unofficial projects.\n\nAnyway, it should be treated and tested carefully since it affects all projects which are using Jnigen. I don't know if an engine which focuses on mobile need a desktop-only over-optimization, but it's good for desktop games which depend on heavy matrix operations, and should be enough to quiet the people who complain the performance of matrix of Gdx. ðŸ˜…\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4021/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4020","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4020/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4020/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4020/events","html_url":"https://github.com/libgdx/libgdx/pull/4020","id":148124931,"number":4020,"title":"Update .gitignore fix #4016","user":{"login":"intrigus","id":10353467,"avatar_url":"https://avatars2.githubusercontent.com/u/10353467?v=4","gravatar_id":"","url":"https://api.github.com/users/intrigus","html_url":"https://github.com/intrigus","followers_url":"https://api.github.com/users/intrigus/followers","following_url":"https://api.github.com/users/intrigus/following{/other_user}","gists_url":"https://api.github.com/users/intrigus/gists{/gist_id}","starred_url":"https://api.github.com/users/intrigus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/intrigus/subscriptions","organizations_url":"https://api.github.com/users/intrigus/orgs","repos_url":"https://api.github.com/users/intrigus/repos","events_url":"https://api.github.com/users/intrigus/events{/privacy}","received_events_url":"https://api.github.com/users/intrigus/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-04-13T17:13:10Z","updated_at":"2016-04-20T14:34:17Z","closed_at":"2016-04-20T14:34:17Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4020","html_url":"https://github.com/libgdx/libgdx/pull/4020","diff_url":"https://github.com/libgdx/libgdx/pull/4020.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4020.patch"},"body":"See #4016 \n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4020/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4019","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4019/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4019/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4019/events","html_url":"https://github.com/libgdx/libgdx/pull/4019","id":148026633,"number":4019,"title":"add parameters for FreeTypeFontGenerator","user":{"login":"TomGrill","id":9935213,"avatar_url":"https://avatars1.githubusercontent.com/u/9935213?v=4","gravatar_id":"","url":"https://api.github.com/users/TomGrill","html_url":"https://github.com/TomGrill","followers_url":"https://api.github.com/users/TomGrill/followers","following_url":"https://api.github.com/users/TomGrill/following{/other_user}","gists_url":"https://api.github.com/users/TomGrill/gists{/gist_id}","starred_url":"https://api.github.com/users/TomGrill/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/TomGrill/subscriptions","organizations_url":"https://api.github.com/users/TomGrill/orgs","repos_url":"https://api.github.com/users/TomGrill/repos","events_url":"https://api.github.com/users/TomGrill/events{/privacy}","received_events_url":"https://api.github.com/users/TomGrill/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2016-04-13T11:16:13Z","updated_at":"2016-05-14T09:54:56Z","closed_at":"2016-05-14T09:54:56Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4019","html_url":"https://github.com/libgdx/libgdx/pull/4019","diff_url":"https://github.com/libgdx/libgdx/pull/4019.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4019.patch"},"body":"added parameters for FreeTypeFontGenerator. This allows one to use maxTextureSize when using AssetManager with FreeTypeFonts.\n\nremoved unused imports\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4019/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4018","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4018/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4018/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4018/events","html_url":"https://github.com/libgdx/libgdx/pull/4018","id":147969477,"number":4018,"title":"Headless backend. Remove unused stuff part 2.","user":{"login":"semtiko","id":496349,"avatar_url":"https://avatars3.githubusercontent.com/u/496349?v=4","gravatar_id":"","url":"https://api.github.com/users/semtiko","html_url":"https://github.com/semtiko","followers_url":"https://api.github.com/users/semtiko/followers","following_url":"https://api.github.com/users/semtiko/following{/other_user}","gists_url":"https://api.github.com/users/semtiko/gists{/gist_id}","starred_url":"https://api.github.com/users/semtiko/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/semtiko/subscriptions","organizations_url":"https://api.github.com/users/semtiko/orgs","repos_url":"https://api.github.com/users/semtiko/repos","events_url":"https://api.github.com/users/semtiko/events{/privacy}","received_events_url":"https://api.github.com/users/semtiko/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-04-13T07:22:56Z","updated_at":"2016-04-20T14:34:32Z","closed_at":"2016-04-20T14:34:32Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4018","html_url":"https://github.com/libgdx/libgdx/pull/4018","diff_url":"https://github.com/libgdx/libgdx/pull/4018.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4018.patch"},"body":"","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4018/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4017","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4017/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4017/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4017/events","html_url":"https://github.com/libgdx/libgdx/pull/4017","id":147845404,"number":4017,"title":"Properly add what PR#3903 tried fixing, also see #3997. Added test","user":{"login":"intrigus","id":10353467,"avatar_url":"https://avatars2.githubusercontent.com/u/10353467?v=4","gravatar_id":"","url":"https://api.github.com/users/intrigus","html_url":"https://github.com/intrigus","followers_url":"https://api.github.com/users/intrigus/followers","following_url":"https://api.github.com/users/intrigus/following{/other_user}","gists_url":"https://api.github.com/users/intrigus/gists{/gist_id}","starred_url":"https://api.github.com/users/intrigus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/intrigus/subscriptions","organizations_url":"https://api.github.com/users/intrigus/orgs","repos_url":"https://api.github.com/users/intrigus/repos","events_url":"https://api.github.com/users/intrigus/events{/privacy}","received_events_url":"https://api.github.com/users/intrigus/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-04-12T19:10:50Z","updated_at":"2016-04-22T21:52:44Z","closed_at":"2016-04-22T21:52:44Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4017","html_url":"https://github.com/libgdx/libgdx/pull/4017","diff_url":"https://github.com/libgdx/libgdx/pull/4017.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4017.patch"},"body":"Fixes what #3903 tried fixing. \nI've also added a new test that checks that \n`Gdx.graphics.getDisplayMode()` and `Gdx.graphics.getDisplayMode(Gdx.graphics.getMonitor())` return the same display mode.\nThe test also checks that \n`Gdx.graphics.getDisplayModes()` and \n`Gdx.graphics.getDisplayModes(Gdx.graphics.getMonitor())` are equal.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4017/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4016","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4016/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4016/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4016/events","html_url":"https://github.com/libgdx/libgdx/issues/4016","id":147842966,"number":4016,"title":"ARM64/x86_64 Android binaries not ignored by version control","user":{"login":"Fringale","id":2722396,"avatar_url":"https://avatars1.githubusercontent.com/u/2722396?v=4","gravatar_id":"","url":"https://api.github.com/users/Fringale","html_url":"https://github.com/Fringale","followers_url":"https://api.github.com/users/Fringale/followers","following_url":"https://api.github.com/users/Fringale/following{/other_user}","gists_url":"https://api.github.com/users/Fringale/gists{/gist_id}","starred_url":"https://api.github.com/users/Fringale/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Fringale/subscriptions","organizations_url":"https://api.github.com/users/Fringale/orgs","repos_url":"https://api.github.com/users/Fringale/repos","events_url":"https://api.github.com/users/Fringale/events{/privacy}","received_events_url":"https://api.github.com/users/Fringale/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2016-04-12T19:01:05Z","updated_at":"2017-01-16T14:53:43Z","closed_at":"2016-04-20T14:34:22Z","author_association":"NONE","body":"#### Issue details\n\nItâ€™s not really important, but the recently added ARM64 and x86_64 binaries for Android can inadvertently get committed to version control, as the following paths havenâ€™t been added yet to the corresponding gitignore file (https://github.com/libgdx/libgdx/blob/master/extensions/gdx-setup/src/com/badlogic/gdx/setup/resources/gitignore#L21):\n\n> android/libs/arm64-v8a\n> android/libs/x86_64\n#### Reproduction steps/code\n- Create a new LibGDX project\n- (Iâ€™m using Mercurial, so I rename .gitignore to .hgignore and add `syntax: glob`, but, well, it shouldn't matter : p )\n- Use the 'status' command of the VCS or refresh using the IDE\n\n=> The `android/libs/arm64-v8a/libgdx.so` and `android/libs/x86_64/libgdx.so` binaries show up with the other unversioned files to add.\n#### Version of LibGDX and/or relevant dependencies\n\n1.9.2\n#### Stacktrace\n\nN/A\n#### Please select the affected platforms\n\nN/A\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4016/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4015","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4015/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4015/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4015/events","html_url":"https://github.com/libgdx/libgdx/pull/4015","id":147815482,"number":4015,"title":"Headless backend. Remove unused stuff.","user":{"login":"semtiko","id":496349,"avatar_url":"https://avatars3.githubusercontent.com/u/496349?v=4","gravatar_id":"","url":"https://api.github.com/users/semtiko","html_url":"https://github.com/semtiko","followers_url":"https://api.github.com/users/semtiko/followers","following_url":"https://api.github.com/users/semtiko/following{/other_user}","gists_url":"https://api.github.com/users/semtiko/gists{/gist_id}","starred_url":"https://api.github.com/users/semtiko/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/semtiko/subscriptions","organizations_url":"https://api.github.com/users/semtiko/orgs","repos_url":"https://api.github.com/users/semtiko/repos","events_url":"https://api.github.com/users/semtiko/events{/privacy}","received_events_url":"https://api.github.com/users/semtiko/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-04-12T17:08:25Z","updated_at":"2016-04-12T17:36:56Z","closed_at":"2016-04-12T17:36:50Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4015","html_url":"https://github.com/libgdx/libgdx/pull/4015","diff_url":"https://github.com/libgdx/libgdx/pull/4015.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4015.patch"},"body":"To avoid \"yellow\" warnings.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4015/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4014","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4014/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4014/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4014/events","html_url":"https://github.com/libgdx/libgdx/issues/4014","id":147623117,"number":4014,"title":"BOX2D ERROR.","user":{"login":"crazywolf132","id":6337115,"avatar_url":"https://avatars2.githubusercontent.com/u/6337115?v=4","gravatar_id":"","url":"https://api.github.com/users/crazywolf132","html_url":"https://github.com/crazywolf132","followers_url":"https://api.github.com/users/crazywolf132/followers","following_url":"https://api.github.com/users/crazywolf132/following{/other_user}","gists_url":"https://api.github.com/users/crazywolf132/gists{/gist_id}","starred_url":"https://api.github.com/users/crazywolf132/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/crazywolf132/subscriptions","organizations_url":"https://api.github.com/users/crazywolf132/orgs","repos_url":"https://api.github.com/users/crazywolf132/repos","events_url":"https://api.github.com/users/crazywolf132/events{/privacy}","received_events_url":"https://api.github.com/users/crazywolf132/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-04-12T03:38:29Z","updated_at":"2016-04-12T04:04:19Z","closed_at":"2016-04-12T04:04:19Z","author_association":"NONE","body":"How can I fix this? I am getting a similar error:\n\n/Library/Java/JavaVirtualMachines/jdk1.8.0_73.jdk/Contents/Home/bin/java -Didea.launcher.port=7532 \"-Didea.launcher.bin.path=/Volumes/IntelliJ IDEA/IntelliJ IDEA.app/Contents/bin\" -Dfile.encoding=UTF-8 -classpath \"/Library/Java/JavaVirtualMachines/jdk1.8.0_73.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_73.jdk/Contents/Home/jre/lib/deploy.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_73.jdk/Contents/Home/jre/lib/ext/cldrdata.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_73.jdk/Contents/Home/jre/lib/ext/dnsns.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_73.jdk/Contents/Home/jre/lib/ext/jaccess.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_73.jdk/Contents/Home/jre/lib/ext/jfxrt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_73.jdk/Contents/Home/jre/lib/ext/localedata.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_73.jdk/Contents/Home/jre/lib/ext/nashorn.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_73.jdk/Contents/Home/jre/lib/ext/sunec.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_73.jdk/Contents/Home/jre/lib/ext/sunjce_provider.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_73.jdk/Contents/Home/jre/lib/ext/sunpkcs11.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_73.jdk/Contents/Home/jre/lib/ext/zipfs.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_73.jdk/Contents/Home/jre/lib/javaws.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_73.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_73.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_73.jdk/Contents/Home/jre/lib/jfxswt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_73.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_73.jdk/Contents/Home/jre/lib/management-agent.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_73.jdk/Contents/Home/jre/lib/plugin.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_73.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_73.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_73.jdk/Contents/Home/lib/ant-javafx.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_73.jdk/Contents/Home/lib/dt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_73.jdk/Contents/Home/lib/javafx-mx.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_73.jdk/Contents/Home/lib/jconsole.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_73.jdk/Contents/Home/lib/packager.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_73.jdk/Contents/Home/lib/sa-jdi.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_73.jdk/Contents/Home/lib/tools.jar:/Users/Brayden/Downloads/SpaceGame-master/out/production/desktop:/Users/Brayden/Downloads/SpaceGame-master/out/production/main:/Users/Brayden/.gradle/caches/modules-2/files-2.1/com.badlogicgames.gdx/gdx/1.6.4/13ed9a042554afce8c8b38c53e9b6d6d9c10600e/gdx-1.6.4.jar:/Users/Brayden/.gradle/caches/modules-2/files-2.1/com.badlogicgames.gdx/gdx-box2d/1.6.4/eb089b58828b842bbdd4f7cb48b54626924cfdd5/gdx-box2d-1.6.4.jar:/Users/Brayden/.gradle/caches/modules-2/files-2.1/com.badlogicgames.gdx/gdx-controllers/1.6.4/2a313baf017a28b3361716c84e6cfb46ef8ea0aa/gdx-controllers-1.6.4.jar:/Users/Brayden/.gradle/caches/modules-2/files-2.1/com.badlogicgames.gdx/gdx-backend-lwjgl/1.6.4/5e1068f6e7081aba4dc03cfe3f6353b6e615c5e1/gdx-backend-lwjgl-1.6.4.jar:/Users/Brayden/.gradle/caches/modules-2/files-2.1/com.badlogicgames.gdx/gdx-platform/1.6.4/2c2a39fba93a5c4ba5a5d291ac4b5b7d642bf5d8/gdx-platform-1.6.4-natives-desktop.jar:/Users/Brayden/.gradle/caches/modules-2/files-2.1/com.badlogicgames.gdx/gdx-box2d-platform/1.6.4/dedfa0b11b17473b49f64b550d5407249a0ae234/gdx-box2d-platform-1.6.4-natives-desktop.jar:/Users/Brayden/.gradle/caches/modules-2/files-2.1/com.badlogicgames.gdx/gdx-controllers-desktop/1.6.4/d2ccdce5b084501d4cf4536ffe4a2d67ccaa88d8/gdx-controllers-desktop-1.6.4.jar:/Users/Brayden/.gradle/caches/modules-2/files-2.1/com.badlogicgames.gdx/gdx-controllers-platform/1.6.4/f4289ef5905d08eb990e7ead7d2901dec7dcdfac/gdx-controllers-platform-1.6.4-natives-desktop.jar:/Users/Brayden/.gradle/caches/modules-2/files-2.1/org.lwjgl.lwjgl/lwjgl/2.9.2/a9d80fe5935c7a9149f6584d9777cfd471f65489/lwjgl-2.9.2.jar:/Users/Brayden/.gradle/caches/modules-2/files-2.1/org.lwjgl.lwjgl/lwjgl_util/2.9.2/4b9e37300a87799856e0bd15ed81663cdb6b0947/lwjgl_util-2.9.2.jar:/Users/Brayden/.gradle/caches/modules-2/files-2.1/com.badlogicgames.jlayer/jlayer/1.0.1-gdx/7cca83cec5c1b2f011362f4d85aabd71a73b049d/jlayer-1.0.1-gdx.jar:/Users/Brayden/.gradle/caches/modules-2/files-2.1/org.jcraft/jorbis/0.0.17/8872d22b293e8f5d7d56ff92be966e6dc28ebdc6/jorbis-0.0.17.jar:/Users/Brayden/.gradle/caches/modules-2/files-2.1/org.lwjgl.lwjgl/lwjgl-platform/2.9.2/510c7d317f5e9e700b9cfaac5fd38bdebf0702e0/lwjgl-platform-2.9.2-natives-windows.jar:/Users/Brayden/.gradle/caches/modules-2/files-2.1/org.lwjgl.lwjgl/lwjgl-platform/2.9.2/d276cdf61fe2b516c7b7f4aa1b8dea91dbdc8d56/lwjgl-platform-2.9.2-natives-linux.jar:/Users/Brayden/.gradle/caches/modules-2/files-2.1/org.lwjgl.lwjgl/lwjgl-platform/2.9.2/d55b46b40b40249d627a83a7f7f22649709d70c3/lwjgl-platform-2.9.2-natives-osx.jar:/Users/Brayden/.gradle/caches/modules-2/files-2.1/net.java.jinput/jinput/2.0.5/39c7796b469a600f72380316f6b1f11db6c2c7c4/jinput-2.0.5.jar:/Users/Brayden/.gradle/caches/modules-2/files-2.1/net.java.jutils/jutils/1.0.0/e12fe1fda814bd348c1579329c86943d2cd3c6a6/jutils-1.0.0.jar:/Users/Brayden/.gradle/caches/modules-2/files-2.1/net.java.jinput/jinput-platform/2.0.5/7ff832a6eb9ab6a767f1ade2b548092d0fa64795/jinput-platform-2.0.5-natives-linux.jar:/Users/Brayden/.gradle/caches/modules-2/files-2.1/net.java.jinput/jinput-platform/2.0.5/385ee093e01f587f30ee1c8a2ee7d408fd732e16/jinput-platform-2.0.5-natives-windows.jar:/Users/Brayden/.gradle/caches/modules-2/files-2.1/net.java.jinput/jinput-platform/2.0.5/53f9c919f34d2ca9de8c51fc4e1e8282029a9232/jinput-platform-2.0.5-natives-osx.jar:/Volumes/IntelliJ IDEA/IntelliJ IDEA.app/Contents/lib/idea_rt.jar\" com.intellij.rt.execution.application.AppMain com.miloshpetrov.sol2.desktop.SolDesktop\n2016-04-12 13:02:50.240 java[16045:2725766] 13:02:50.240 WARNING:  140: This application, or a library it uses, is using the deprecated Carbon Component Manager for hosting Audio Units. Support for this will be removed in a future release. Also, this makes the host incompatible with version 3 audio units. Please transition to the API's in AudioComponent.h.\nAssertion failed: (false), function Set, file /Users/badlogic/jenkins/workspace/libgdx-mac/extensions/gdx-box2d/gdx-box2d/jni/Box2D/Collision/Shapes/b2PolygonShape.cpp, line 158.\n\nProcess finished with exit code 134\n\nPlease help\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4014/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4013","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4013/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4013/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4013/events","html_url":"https://github.com/libgdx/libgdx/issues/4013","id":147602228,"number":4013,"title":"Crash: ava.lang.NullPointerException in com.badlogic.gdx.backends.android.AndroidInput.lookUpPointerIndex","user":{"login":"ldthai","id":7313130,"avatar_url":"https://avatars1.githubusercontent.com/u/7313130?v=4","gravatar_id":"","url":"https://api.github.com/users/ldthai","html_url":"https://github.com/ldthai","followers_url":"https://api.github.com/users/ldthai/followers","following_url":"https://api.github.com/users/ldthai/following{/other_user}","gists_url":"https://api.github.com/users/ldthai/gists{/gist_id}","starred_url":"https://api.github.com/users/ldthai/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ldthai/subscriptions","organizations_url":"https://api.github.com/users/ldthai/orgs","repos_url":"https://api.github.com/users/ldthai/repos","events_url":"https://api.github.com/users/ldthai/events{/privacy}","received_events_url":"https://api.github.com/users/ldthai/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-04-12T01:08:09Z","updated_at":"2016-04-12T01:10:30Z","closed_at":"2016-04-12T01:10:30Z","author_association":"NONE","body":"I got crash on Galaxy Ace2 (GT-I8160), android 2.3.3-2.3.7\n#### Issue details\n\n`java.lang.NullPointerException\n    at com.badlogic.gdx.backends.android.AndroidInput.lookUpPointerIndex(AndroidInput.java:802)\n    at com.badlogic.gdx.backends.android.AndroidMultiTouchHandler.onTouch(AndroidMultiTouchHandler.java:64)\n    at com.badlogic.gdx.backends.android.AndroidInput.onTouch(AndroidInput.java:429)\n    at android.view.View.dispatchTouchEvent(View.java:4081)\n    at android.view.ViewGroup.dispatchTouchEvent(ViewGroup.java:942)\n    at android.view.ViewGroup.dispatchTouchEvent(ViewGroup.java:942)\n    at android.view.ViewGroup.dispatchDetachedFromWindow(ViewGroup.java:1154)\n    at android.view.ViewRoot.dispatchDetachedFromWindow(ViewRoot.java:1764)\n    at android.view.ViewRoot.doDie(ViewRoot.java:2867)\n    at android.view.ViewRoot.die(ViewRoot.java:2837)\n    at android.view.WindowManagerImpl.removeViewImmediate(WindowManagerImpl.java:244)\n    at android.view.Window$LocalWindowManager.removeViewImmediate(Window.java:436)\n    at android.app.ActivityThread.handleDestroyActivity(ActivityThread.java:2705)\n    at android.app.ActivityThread.access$2100(ActivityThread.java:117)\n    at android.app.ActivityThread$H.handleMessage(ActivityThread.java:968)\n    at android.os.Handler.dispatchMessage(Handler.java:99)\n    at android.os.Looper.loop(Looper.java:130)\n    at android.app.ActivityThread.main(ActivityThread.java:3691)\n    at java.lang.reflect.Method.invokeNative(Native Method)\n    at java.lang.reflect.Method.invoke(Method.java:507)\n    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:912)\n    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:670)\n    at dalvik.system.NativeStart.main(Native Method)`\n#### Version of LibGDX and/or relevant dependencies\n\n1.9.3-SNAPSHOT\n#### Please select the affected platforms\n- [x] Android\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4013/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4012","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4012/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4012/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4012/events","html_url":"https://github.com/libgdx/libgdx/issues/4012","id":147600841,"number":4012,"title":"java.lang.NullPointerException in com.badlogic.gdx.backends.android.AndroidMouseHandler.onGenericMotion","user":{"login":"ldthai","id":7313130,"avatar_url":"https://avatars1.githubusercontent.com/u/7313130?v=4","gravatar_id":"","url":"https://api.github.com/users/ldthai","html_url":"https://github.com/ldthai","followers_url":"https://api.github.com/users/ldthai/followers","following_url":"https://api.github.com/users/ldthai/following{/other_user}","gists_url":"https://api.github.com/users/ldthai/gists{/gist_id}","starred_url":"https://api.github.com/users/ldthai/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ldthai/subscriptions","organizations_url":"https://api.github.com/users/ldthai/orgs","repos_url":"https://api.github.com/users/ldthai/repos","events_url":"https://api.github.com/users/ldthai/events{/privacy}","received_events_url":"https://api.github.com/users/ldthai/received_events","type":"User","site_admin":false},"labels":[{"id":59604218,"url":"https://api.github.com/repos/libgdx/libgdx/labels/android","name":"android","color":"009800","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2016-04-12T00:56:01Z","updated_at":"2016-05-26T22:33:31Z","closed_at":"2016-05-26T22:33:31Z","author_association":"NONE","body":"I got crash on Lenovo(A880), android 4.2\n#### Issue details\n\n`java.lang.NullPointerException\n    at com.badlogic.gdx.backends.android.AndroidMouseHandler.onGenericMotion(AndroidMouseHandler.java:62)\n    at com.badlogic.gdx.backends.android.AndroidInputThreePlus.onGenericMotion(AndroidInputThreePlus.java:47)\n    at android.view.View.dispatchGenericMotionEventInternal(View.java:7415)\n    at android.view.View.dispatchGenericMotionEvent(View.java:7402)\n    at android.view.ViewGroup.dispatchTransformedGenericPointerEvent(ViewGroup.java:1799)\n    at android.view.ViewGroup.dispatchHoverEvent(ViewGroup.java:1533)\n    at android.view.View.dispatchGenericMotionEvent(View.java:7392)\n    at android.view.ViewGroup.dispatchTransformedGenericPointerEvent(ViewGroup.java:1799)\n    at android.view.ViewGroup.dispatchHoverEvent(ViewGroup.java:1533)\n    at android.view.View.dispatchGenericMotionEvent(View.java:7392)\n    at android.view.ViewGroup.dispatchTransformedGenericPointerEvent(ViewGroup.java:1799)\n    at android.view.ViewGroup.dispatchHoverEvent(ViewGroup.java:1533)\n    at android.view.View.dispatchGenericMotionEvent(View.java:7392)\n    at android.view.ViewGroup.dispatchTransformedGenericPointerEvent(ViewGroup.java:1799)\n    at android.view.ViewGroup.dispatchHoverEvent(ViewGroup.java:1533)\n    at android.view.ViewGroup.exitHoverTargets(ViewGroup.java:1615)\n    at android.view.ViewGroup.dispatchDetachedFromWindow(ViewGroup.java:2613)\n    at android.view.ViewRootImpl.dispatchDetachedFromWindow(ViewRootImpl.java:2997)\n    at android.view.ViewRootImpl.doDie(ViewRootImpl.java:4598)\n    at android.view.ViewRootImpl.die(ViewRootImpl.java:4578)\n    at android.view.WindowManagerGlobal.removeViewLocked(WindowManagerGlobal.java:338)\n    at android.view.WindowManagerGlobal.removeView(WindowManagerGlobal.java:288)\n    at android.view.WindowManagerImpl.removeViewImmediate(WindowManagerImpl.java:84)\n    at android.app.ActivityThread.handleDestroyActivity(ActivityThread.java:3790)\n    at android.app.ActivityThread.access$1200(ActivityThread.java:165)\n    at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1426)\n    at android.os.Handler.dispatchMessage(Handler.java:107)\n    at android.os.Looper.loop(Looper.java:194)\n    at android.app.ActivityThread.main(ActivityThread.java:5476)\n    at java.lang.reflect.Method.invokeNative(Native Method)\n    at java.lang.reflect.Method.invoke(Method.java:525)\n    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:833)\n    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:600)\n    at dalvik.system.NativeStart.main(Native Method)`\n#### Version of LibGDX and/or relevant dependencies\n\n1.9.3-SNAPSHOT\n#### Please select the affected platforms\n- [x] Android\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4012/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4011","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4011/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4011/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4011/events","html_url":"https://github.com/libgdx/libgdx/pull/4011","id":147515540,"number":4011,"title":"Fix LifecycleListener's dispose method not being called on LWJGL3 backend","user":{"login":"intrigus","id":10353467,"avatar_url":"https://avatars2.githubusercontent.com/u/10353467?v=4","gravatar_id":"","url":"https://api.github.com/users/intrigus","html_url":"https://github.com/intrigus","followers_url":"https://api.github.com/users/intrigus/followers","following_url":"https://api.github.com/users/intrigus/following{/other_user}","gists_url":"https://api.github.com/users/intrigus/gists{/gist_id}","starred_url":"https://api.github.com/users/intrigus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/intrigus/subscriptions","organizations_url":"https://api.github.com/users/intrigus/orgs","repos_url":"https://api.github.com/users/intrigus/repos","events_url":"https://api.github.com/users/intrigus/events{/privacy}","received_events_url":"https://api.github.com/users/intrigus/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2016-04-11T18:40:01Z","updated_at":"2016-05-31T21:11:00Z","closed_at":"2016-05-31T21:11:00Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4011","html_url":"https://github.com/libgdx/libgdx/pull/4011","diff_url":"https://github.com/libgdx/libgdx/pull/4011.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4011.patch"},"body":"See https://github.com/libgdx/libgdx/issues/3673#issuecomment-172115381 and https://github.com/libgdx/libgdx/issues/3673#issuecomment-207808454 .\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4011/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4010","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4010/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4010/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4010/events","html_url":"https://github.com/libgdx/libgdx/pull/4010","id":147468086,"number":4010,"title":"Remove emulated IOException, use GWT's emulation. Fix #4007","user":{"login":"intrigus","id":10353467,"avatar_url":"https://avatars2.githubusercontent.com/u/10353467?v=4","gravatar_id":"","url":"https://api.github.com/users/intrigus","html_url":"https://github.com/intrigus","followers_url":"https://api.github.com/users/intrigus/followers","following_url":"https://api.github.com/users/intrigus/following{/other_user}","gists_url":"https://api.github.com/users/intrigus/gists{/gist_id}","starred_url":"https://api.github.com/users/intrigus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/intrigus/subscriptions","organizations_url":"https://api.github.com/users/intrigus/orgs","repos_url":"https://api.github.com/users/intrigus/repos","events_url":"https://api.github.com/users/intrigus/events{/privacy}","received_events_url":"https://api.github.com/users/intrigus/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-04-11T15:38:00Z","updated_at":"2016-04-11T15:49:20Z","closed_at":"2016-04-11T15:49:20Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4010","html_url":"https://github.com/libgdx/libgdx/pull/4010","diff_url":"https://github.com/libgdx/libgdx/pull/4010.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4010.patch"},"body":"See #4007 \n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4010/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4009","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4009/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4009/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4009/events","html_url":"https://github.com/libgdx/libgdx/issues/4009","id":147436589,"number":4009,"title":"Model builder rotate the first node","user":{"login":"ghost","id":10137,"avatar_url":"https://avatars3.githubusercontent.com/u/10137?v=4","gravatar_id":"","url":"https://api.github.com/users/ghost","html_url":"https://github.com/ghost","followers_url":"https://api.github.com/users/ghost/followers","following_url":"https://api.github.com/users/ghost/following{/other_user}","gists_url":"https://api.github.com/users/ghost/gists{/gist_id}","starred_url":"https://api.github.com/users/ghost/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ghost/subscriptions","organizations_url":"https://api.github.com/users/ghost/orgs","repos_url":"https://api.github.com/users/ghost/repos","events_url":"https://api.github.com/users/ghost/events{/privacy}","received_events_url":"https://api.github.com/users/ghost/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2016-04-11T13:52:03Z","updated_at":"2016-04-11T17:15:21Z","closed_at":"2016-04-11T17:09:31Z","author_association":"NONE","body":"Please ensure you have given all the following requested information in your report.\n#### Issue details\n\nI'm using ModelBuilder to generate a 3D model from a bitmapfont\n\nFor the first model, it's rotated in the wrong axis (see image below)\n\n![2016-04-11_15-42-05](https://cloud.githubusercontent.com/assets/4980894/14429179/9944e936-fffc-11e5-8f9e-fadaa96392b3.png)\n\nI checked the font texture generated and it has no character rotated (see image below)\n\n![font_skin](https://cloud.githubusercontent.com/assets/4980894/14429197/af5d713e-fffc-11e5-8263-ae0c425e2447.png)\n#### Reproduction steps/code\n\nHere is a ready to use code to see the problem:\n\nFont file: \nhttp://www.dafont.com/pf-ronda-seven.font\n\n``` java\npackage com.scellow.game;\n\nimport com.badlogic.gdx.ApplicationAdapter;\nimport com.badlogic.gdx.Gdx;\nimport com.badlogic.gdx.graphics.*;\nimport com.badlogic.gdx.graphics.g2d.BitmapFont;\nimport com.badlogic.gdx.graphics.g2d.TextureRegion;\nimport com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator;\nimport com.badlogic.gdx.graphics.g3d.*;\nimport com.badlogic.gdx.graphics.g3d.attributes.BlendingAttribute;\nimport com.badlogic.gdx.graphics.g3d.attributes.ColorAttribute;\nimport com.badlogic.gdx.graphics.g3d.attributes.TextureAttribute;\n\nimport com.badlogic.gdx.graphics.g3d.model.Node;\nimport com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder;\nimport com.badlogic.gdx.graphics.g3d.utils.ModelBuilder;\n\nimport com.badlogic.gdx.math.Vector3;\n\npublic class Test extends ApplicationAdapter\n{\n    private BitmapFont font_skin;\n\n    private ModelBatch batch;\n    private PerspectiveCamera camera;\n\n    private ModelInstance modelInstance;\n\n    @Override\n    public void create ()\n    {\n        batch = new ModelBatch();\n        camera = new PerspectiveCamera(90,Gdx.graphics.getWidth(), Gdx.graphics.getHeight());\n        camera.direction.set(0,-90,-50);\n        camera.near = 1f;\n        camera.far = 2048;\n\n        camera.position.set(new Vector3(0, 78,44));\n        camera.update();\n\n\n        FreeTypeFontGenerator generator = new FreeTypeFontGenerator(Gdx.files.internal(\"data/fonts/pf_ronda_seven.ttf\")); //pf_ronda_seven\n        FreeTypeFontGenerator.FreeTypeFontParameter parameter = new FreeTypeFontGenerator.FreeTypeFontParameter();\n        parameter.borderWidth = 1.5f;\n        parameter.borderColor = Color.BLACK;\n        parameter.genMipMaps = true;\n        parameter.minFilter = Texture.TextureFilter.Linear;\n        parameter.magFilter = Texture.TextureFilter.MipMapLinearLinear;\n        parameter.size = 12;\n        font_skin = generator.generateFont(parameter);\n        generator.dispose();\n\n\n        modelInstance = new ModelInstance(createText(\"Scellow\"));\n\n\n        // Let's see how the font texture looks like, we will see that no characters are rotated...\n        Texture fontTex = font_skin.getRegion().getTexture();\n        Pixmap pixmap = fontTex.getTextureData().consumePixmap();\n        PixmapIO.writePNG(Gdx.files.local(\"font_skin.png\"), pixmap);\n        pixmap.dispose();\n    }\n\n\n    @Override\n    public void render ()\n    {\n\n        Gdx.gl.glViewport(0, 0, Gdx.graphics.getWidth(), Gdx.graphics.getHeight());\n        Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT | GL20.GL_DEPTH_BUFFER_BIT);\n        Gdx.gl.glClearColor(Color.DARK_GRAY.r, Color.DARK_GRAY.g, Color.DARK_GRAY.b, 1f);\n\n\n        batch.begin(camera);\n\n        batch.render(modelInstance);\n\n        batch.end();\n\n    }\n\n    @Override\n    public void resize(int width, int height)\n    {\n        super.resize(width, height);\n    }\n\n    public Model createText(String message)\n    {\n        char[] chars = message.toCharArray();\n\n        ModelBuilder modelBuilder = new ModelBuilder();\n        modelBuilder.begin();\n        float lastX =  0;\n\n        for(int i = 0; i < chars.length; i++)\n        {\n            TextureRegion region = getGlyphRegion(font_skin, chars[i]);\n\n            float width = region.getRegionWidth();\n            float height = region.getRegionHeight();\n            float x  = lastX + region.getRegionWidth();\n            lastX = x;\n\n            MeshPartBuilder meshBuilder;\n\n            Material material = new Material();\n            material.set(new TextureAttribute(TextureAttribute.Diffuse, region));\n            material.set(new ColorAttribute(ColorAttribute.Diffuse, Color.WHITE));\n            material.set( new BlendingAttribute(GL20.GL_SRC_ALPHA, GL20.GL_ONE_MINUS_SRC_ALPHA));\n\n            meshBuilder = modelBuilder.part((String.valueOf(i)), GL20.GL_TRIANGLES, VertexAttributes.Usage.Position | VertexAttributes.Usage.Normal |VertexAttributes.Usage.TextureCoordinates, material);\n            meshBuilder.box(width, 0.1f, height);\n            Node node = modelBuilder.node();\n            node.translation.set(x,0,0);\n            node.rotation.set(Vector3.Y, 90);\n        }\n        return modelBuilder.end();\n    }\n\n    public TextureRegion getGlyphRegion (BitmapFont font, char ch)\n    {\n\n        BitmapFont.Glyph glyph = font.getData().getGlyph(ch);\n        return new TextureRegion(font.getRegion(glyph.page), glyph.srcX,glyph.srcY,glyph.width, glyph.height);\n    }\n}\n\n```\n#### Version of LibGDX and/or relevant dependencies\n\n1.9.3 SNAPSHOT\n#### Stacktrace\n\nNone\n#### Please select the affected platforms\n- [ ] Android\n- [ ] iOS\n- [ ] HTML/GWT\n-  [x] Windows\n- [ ] Linux\n- [ ] MacOS\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4009/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}}],"meta":{"x-ratelimit-limit":"5000","x-ratelimit-remaining":"4970","x-ratelimit-reset":"1506844633","x-github-request-id":"C0FA:1109:13DACFB:28616A2:59D093DE","x-github-media-type":"github.squirrel-girl-preview","link":"<https://api.github.com/repositories/5373551/issues?state=all&page=31>; rel=\"next\", <https://api.github.com/repositories/5373551/issues?state=all&page=164>; rel=\"last\", <https://api.github.com/repositories/5373551/issues?state=all&page=1>; rel=\"first\", <https://api.github.com/repositories/5373551/issues?state=all&page=29>; rel=\"prev\"","etag":"\"4df77e3c4e309a8215b65f80f56f5c9a\"","status":"200 OK"}}
