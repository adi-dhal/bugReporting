{"data":[{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3408","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3408/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3408/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3408/events","html_url":"https://github.com/libgdx/libgdx/pull/3408","id":105812830,"number":3408,"title":"Add APK expansion support","user":{"login":"sarkanyi","id":1218556,"avatar_url":"https://avatars0.githubusercontent.com/u/1218556?v=4","gravatar_id":"","url":"https://api.github.com/users/sarkanyi","html_url":"https://github.com/sarkanyi","followers_url":"https://api.github.com/users/sarkanyi/followers","following_url":"https://api.github.com/users/sarkanyi/following{/other_user}","gists_url":"https://api.github.com/users/sarkanyi/gists{/gist_id}","starred_url":"https://api.github.com/users/sarkanyi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sarkanyi/subscriptions","organizations_url":"https://api.github.com/users/sarkanyi/orgs","repos_url":"https://api.github.com/users/sarkanyi/repos","events_url":"https://api.github.com/users/sarkanyi/events{/privacy}","received_events_url":"https://api.github.com/users/sarkanyi/received_events","type":"User","site_admin":false},"labels":[{"id":59604218,"url":"https://api.github.com/repos/libgdx/libgdx/labels/android","name":"android","color":"009800","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2015-09-10T14:03:36Z","updated_at":"2015-10-09T12:14:23Z","closed_at":"2015-10-07T17:17:41Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3408","html_url":"https://github.com/libgdx/libgdx/pull/3408","diff_url":"https://github.com/libgdx/libgdx/pull/3408.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3408.patch"},"body":"The change is transparent to the user, Gdx.files.internal() can be used to access assets inside expansion files.\nThe application must call ((AndroidFiles)Gdx.files).setAPKExpansion() first, to open the expansion file(s). The function returns true if it was opened successfully.\nThis replaces https://github.com/libgdx/libgdx/pull/3381\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3408/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3407","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3407/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3407/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3407/events","html_url":"https://github.com/libgdx/libgdx/pull/3407","id":105707827,"number":3407,"title":"gdx-setup: updated libgdx-utils 3rd party extension","user":{"login":"dermetfan","id":4956158,"avatar_url":"https://avatars1.githubusercontent.com/u/4956158?v=4","gravatar_id":"","url":"https://api.github.com/users/dermetfan","html_url":"https://github.com/dermetfan","followers_url":"https://api.github.com/users/dermetfan/followers","following_url":"https://api.github.com/users/dermetfan/following{/other_user}","gists_url":"https://api.github.com/users/dermetfan/gists{/gist_id}","starred_url":"https://api.github.com/users/dermetfan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dermetfan/subscriptions","organizations_url":"https://api.github.com/users/dermetfan/orgs","repos_url":"https://api.github.com/users/dermetfan/repos","events_url":"https://api.github.com/users/dermetfan/events{/privacy}","received_events_url":"https://api.github.com/users/dermetfan/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2015-09-10T00:14:13Z","updated_at":"2015-09-10T05:18:54Z","closed_at":"2015-09-10T05:18:54Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3407","html_url":"https://github.com/libgdx/libgdx/pull/3407","diff_url":"https://github.com/libgdx/libgdx/pull/3407.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3407.patch"},"body":"","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3407/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3406","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3406/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3406/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3406/events","html_url":"https://github.com/libgdx/libgdx/pull/3406","id":105271578,"number":3406,"title":"Add Gwt support for custom Cursors","user":{"login":"intrigus","id":10353467,"avatar_url":"https://avatars2.githubusercontent.com/u/10353467?v=4","gravatar_id":"","url":"https://api.github.com/users/intrigus","html_url":"https://github.com/intrigus","followers_url":"https://api.github.com/users/intrigus/followers","following_url":"https://api.github.com/users/intrigus/following{/other_user}","gists_url":"https://api.github.com/users/intrigus/gists{/gist_id}","starred_url":"https://api.github.com/users/intrigus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/intrigus/subscriptions","organizations_url":"https://api.github.com/users/intrigus/orgs","repos_url":"https://api.github.com/users/intrigus/repos","events_url":"https://api.github.com/users/intrigus/events{/privacy}","received_events_url":"https://api.github.com/users/intrigus/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2015-09-07T22:10:20Z","updated_at":"2015-10-06T17:02:25Z","closed_at":"2015-09-09T23:21:52Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3406","html_url":"https://github.com/libgdx/libgdx/pull/3406","diff_url":"https://github.com/libgdx/libgdx/pull/3406.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3406.patch"},"body":"Added Gwt support for custom Cursors.\n\nCursors should not work in IE according to\nhttp://reference.sitepoint.com/css/cursor because we convert the canvas\nto a data-url of the png format and IE only supports .cur and .ani\nfiles.\nIE would also not support setting hotspot coordinates, it only supports\nhotspot coords in .cur files.\nNot all opera version seem to support cursors using the \"cursor:url()\"\nsyntax\n\nAny suggestions?\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3406/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3405","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3405/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3405/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3405/events","html_url":"https://github.com/libgdx/libgdx/issues/3405","id":105262427,"number":3405,"title":"Stuttering when not running in fullscreen","user":{"login":"tobloef","id":12204005,"avatar_url":"https://avatars1.githubusercontent.com/u/12204005?v=4","gravatar_id":"","url":"https://api.github.com/users/tobloef","html_url":"https://github.com/tobloef","followers_url":"https://api.github.com/users/tobloef/followers","following_url":"https://api.github.com/users/tobloef/following{/other_user}","gists_url":"https://api.github.com/users/tobloef/gists{/gist_id}","starred_url":"https://api.github.com/users/tobloef/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tobloef/subscriptions","organizations_url":"https://api.github.com/users/tobloef/orgs","repos_url":"https://api.github.com/users/tobloef/repos","events_url":"https://api.github.com/users/tobloef/events{/privacy}","received_events_url":"https://api.github.com/users/tobloef/received_events","type":"User","site_admin":false},"labels":[{"id":119244972,"url":"https://api.github.com/repos/libgdx/libgdx/labels/desktop","name":"desktop","color":"eb6420","default":false}],"state":"closed","locked":false,"assignee":{"login":"badlogic","id":514052,"avatar_url":"https://avatars1.githubusercontent.com/u/514052?v=4","gravatar_id":"","url":"https://api.github.com/users/badlogic","html_url":"https://github.com/badlogic","followers_url":"https://api.github.com/users/badlogic/followers","following_url":"https://api.github.com/users/badlogic/following{/other_user}","gists_url":"https://api.github.com/users/badlogic/gists{/gist_id}","starred_url":"https://api.github.com/users/badlogic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/badlogic/subscriptions","organizations_url":"https://api.github.com/users/badlogic/orgs","repos_url":"https://api.github.com/users/badlogic/repos","events_url":"https://api.github.com/users/badlogic/events{/privacy}","received_events_url":"https://api.github.com/users/badlogic/received_events","type":"User","site_admin":false},"assignees":[{"login":"badlogic","id":514052,"avatar_url":"https://avatars1.githubusercontent.com/u/514052?v=4","gravatar_id":"","url":"https://api.github.com/users/badlogic","html_url":"https://github.com/badlogic","followers_url":"https://api.github.com/users/badlogic/followers","following_url":"https://api.github.com/users/badlogic/following{/other_user}","gists_url":"https://api.github.com/users/badlogic/gists{/gist_id}","starred_url":"https://api.github.com/users/badlogic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/badlogic/subscriptions","organizations_url":"https://api.github.com/users/badlogic/orgs","repos_url":"https://api.github.com/users/badlogic/repos","events_url":"https://api.github.com/users/badlogic/events{/privacy}","received_events_url":"https://api.github.com/users/badlogic/received_events","type":"User","site_admin":false}],"milestone":null,"comments":10,"created_at":"2015-09-07T19:57:12Z","updated_at":"2016-12-10T18:47:48Z","closed_at":"2016-12-10T18:47:48Z","author_association":"NONE","body":"**Background**\nFor some time I have been facing a problem where my game would stutter once per second or so. I searched far and wide for a solution, as I thought I was doing something wrong, until I came upon [this thread](http://badlogicgames.com/forum/viewtopic.php?f=11&t=8909) on the forums. It was here someone suggested that I put my game in fullscreen, which completely fixed the problem. Problem is, some people might want to play in windowed mode.\n\n**Steps to reproduce**\nI have a very simple project to demonstrate the bug. Run this on desktop and you should see the stuttering. Note: It might not occur on all computers, but I know I'm not the only one having this problem.\n\n``` java\npublic class LagTest extends ApplicationAdapter {\n    SpriteBatch batch;\n    Texture dot;\n    float x;\n    float y;\n    int speed;\n    float dotWidth;\n    int screenWidth;\n\n    @Override\n    public void create () {\n        batch = new SpriteBatch();\n        dot = new Texture(\"dot.png\");\n        x = 100f;\n        y = Gdx.graphics.getHeight()/2f - dot.getHeight()/2f;\n        speed = 500;\n        dotWidth = dot.getWidth();\n        screenWidth = Gdx.graphics.getWidth();\n    }\n\n    @Override\n    public void render () {\n        Gdx.gl.glClearColor(0.2f, 0.4f, 0.8f, 1);\n        Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);\n        batch.begin();\n        batch.draw(dot, x, y);\n        batch.end();\n        if (x < 0) {\n            speed = 500;\n        } else if (x > screenWidth - dotWidth) {\n            speed = -500;\n        }\n        x += speed * Gdx.graphics.getDeltaTime();\n    }\n\n        public static void main (String[] arg) throws Exception {\n        LwjglApplicationConfiguration config = new LwjglApplicationConfiguration();\n        config.width = 1920;\n        config.height = 1080;\n        new LwjglApplication(new LagTest(), config);\n    }\n}\n```\n\nI can only assume this is a bug in libGDX, as the \"game\" will run fine in fullscreen, but not in windowed mode. Please let me know if I'm wrong.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3405/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3404","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3404/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3404/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3404/events","html_url":"https://github.com/libgdx/libgdx/pull/3404","id":105201838,"number":3404,"title":"Update extensions.xml","user":{"login":"azakhary","id":2115888,"avatar_url":"https://avatars0.githubusercontent.com/u/2115888?v=4","gravatar_id":"","url":"https://api.github.com/users/azakhary","html_url":"https://github.com/azakhary","followers_url":"https://api.github.com/users/azakhary/followers","following_url":"https://api.github.com/users/azakhary/following{/other_user}","gists_url":"https://api.github.com/users/azakhary/gists{/gist_id}","starred_url":"https://api.github.com/users/azakhary/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/azakhary/subscriptions","organizations_url":"https://api.github.com/users/azakhary/orgs","repos_url":"https://api.github.com/users/azakhary/repos","events_url":"https://api.github.com/users/azakhary/events{/privacy}","received_events_url":"https://api.github.com/users/azakhary/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2015-09-07T11:52:26Z","updated_at":"2015-09-07T14:59:48Z","closed_at":"2015-09-07T14:59:48Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3404","html_url":"https://github.com/libgdx/libgdx/pull/3404","diff_url":"https://github.com/libgdx/libgdx/pull/3404.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3404.patch"},"body":"Version 0.1.1 supporting latest editor and latest libGDX released\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3404/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3403","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3403/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3403/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3403/events","html_url":"https://github.com/libgdx/libgdx/issues/3403","id":105121434,"number":3403,"title":"Ninepatch wrong work with flipped TextureRegion","user":{"login":"igorushko","id":9007174,"avatar_url":"https://avatars3.githubusercontent.com/u/9007174?v=4","gravatar_id":"","url":"https://api.github.com/users/igorushko","html_url":"https://github.com/igorushko","followers_url":"https://api.github.com/users/igorushko/followers","following_url":"https://api.github.com/users/igorushko/following{/other_user}","gists_url":"https://api.github.com/users/igorushko/gists{/gist_id}","starred_url":"https://api.github.com/users/igorushko/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/igorushko/subscriptions","organizations_url":"https://api.github.com/users/igorushko/orgs","repos_url":"https://api.github.com/users/igorushko/repos","events_url":"https://api.github.com/users/igorushko/events{/privacy}","received_events_url":"https://api.github.com/users/igorushko/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2015-09-06T22:50:03Z","updated_at":"2016-12-10T18:49:23Z","closed_at":"2016-12-10T18:49:23Z","author_association":"NONE","body":"if a textureregion is flipped and then new a ninepatch using this region, the drawing is not correct.\nhttp://www.badlogicgames.com/forum/viewtopic.php?f=11&t=6193&p=80344&hilit=NinePatch+flip#p80344\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3403/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3402","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3402/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3402/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3402/events","html_url":"https://github.com/libgdx/libgdx/pull/3402","id":105116349,"number":3402,"title":"Fix for issue #3350","user":{"login":"davebaol","id":2366334,"avatar_url":"https://avatars3.githubusercontent.com/u/2366334?v=4","gravatar_id":"","url":"https://api.github.com/users/davebaol","html_url":"https://github.com/davebaol","followers_url":"https://api.github.com/users/davebaol/followers","following_url":"https://api.github.com/users/davebaol/following{/other_user}","gists_url":"https://api.github.com/users/davebaol/gists{/gist_id}","starred_url":"https://api.github.com/users/davebaol/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davebaol/subscriptions","organizations_url":"https://api.github.com/users/davebaol/orgs","repos_url":"https://api.github.com/users/davebaol/repos","events_url":"https://api.github.com/users/davebaol/events{/privacy}","received_events_url":"https://api.github.com/users/davebaol/received_events","type":"User","site_admin":false},"labels":[{"id":67383148,"url":"https://api.github.com/repos/libgdx/libgdx/labels/gwt","name":"gwt","color":"5319e7","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2015-09-06T20:46:58Z","updated_at":"2015-09-11T10:12:46Z","closed_at":"2015-09-11T10:12:46Z","author_association":"MEMBER","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3402","html_url":"https://github.com/libgdx/libgdx/pull/3402","diff_url":"https://github.com/libgdx/libgdx/pull/3402.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3402.patch"},"body":"This should definitely fix #3350. Utf8 sequences across buffer boundaries are handled properly.\nBasically, the Utf8Decoder is a port of [Björn Höhrmann's algorithm](http://bjoern.hoehrmann.de/utf-8/decoder/dfa/).\nIt's fast and does not allocate additional buffers while decoding.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3402/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3401","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3401/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3401/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3401/events","html_url":"https://github.com/libgdx/libgdx/pull/3401","id":105104270,"number":3401,"title":"Added support for name provider in SelectBox and List","user":{"login":"kotcrab","id":4594081,"avatar_url":"https://avatars1.githubusercontent.com/u/4594081?v=4","gravatar_id":"","url":"https://api.github.com/users/kotcrab","html_url":"https://github.com/kotcrab","followers_url":"https://api.github.com/users/kotcrab/followers","following_url":"https://api.github.com/users/kotcrab/following{/other_user}","gists_url":"https://api.github.com/users/kotcrab/gists{/gist_id}","starred_url":"https://api.github.com/users/kotcrab/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kotcrab/subscriptions","organizations_url":"https://api.github.com/users/kotcrab/orgs","repos_url":"https://api.github.com/users/kotcrab/repos","events_url":"https://api.github.com/users/kotcrab/events{/privacy}","received_events_url":"https://api.github.com/users/kotcrab/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2015-09-06T17:01:57Z","updated_at":"2015-09-24T23:02:42Z","closed_at":"2015-09-24T23:02:18Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3401","html_url":"https://github.com/libgdx/libgdx/pull/3401","diff_url":"https://github.com/libgdx/libgdx/pull/3401.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3401.patch"},"body":"Current implementation of SelectBox and List is limited and always uses `toString()` method to show item as text. I added way to set custom name provider for SelectBox/List. This way it's possible to customize what text will be shown for given item (or just call different method than `toString()`). \nIf provider is not set it defaults to `toString()` so it doesn't break old stuff.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3401/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3400","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3400/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3400/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3400/events","html_url":"https://github.com/libgdx/libgdx/issues/3400","id":105101617,"number":3400,"title":"GWT: GdxTestsGwt does not compile","user":{"login":"davebaol","id":2366334,"avatar_url":"https://avatars3.githubusercontent.com/u/2366334?v=4","gravatar_id":"","url":"https://api.github.com/users/davebaol","html_url":"https://github.com/davebaol","followers_url":"https://api.github.com/users/davebaol/followers","following_url":"https://api.github.com/users/davebaol/following{/other_user}","gists_url":"https://api.github.com/users/davebaol/gists{/gist_id}","starred_url":"https://api.github.com/users/davebaol/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davebaol/subscriptions","organizations_url":"https://api.github.com/users/davebaol/orgs","repos_url":"https://api.github.com/users/davebaol/repos","events_url":"https://api.github.com/users/davebaol/events{/privacy}","received_events_url":"https://api.github.com/users/davebaol/received_events","type":"User","site_admin":false},"labels":[{"id":67383148,"url":"https://api.github.com/repos/libgdx/libgdx/labels/gwt","name":"gwt","color":"5319e7","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2015-09-06T16:06:27Z","updated_at":"2015-09-28T04:52:46Z","closed_at":"2015-09-28T04:52:46Z","author_association":"MEMBER","body":"I get this error\n\n```\nCompiling module com.badlogic.gdx.tests.gwt.GdxTestsGwt\n   Validating units:\n      [ERROR] Errors in 'file:/libgdx/tests/gdx-tests/src/com/badlogic/gdx/tests/g3d/HeightField.java'\n         [ERROR] Line 326: The method set(ByteBuffer, Pixmap.Format) in the type HeightField is not applicable for the arguments (Buffer, Pixmap.Format)\n   [ERROR] Aborting compile due to errors in some input files\n```\n\nA quick workaround is to exclude `HeightMapTest.java` and `HeightField.java` from the source in `GdxTests.gwt.xml`. \n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3400/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3399","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3399/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3399/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3399/events","html_url":"https://github.com/libgdx/libgdx/pull/3399","id":105091513,"number":3399,"title":"Fix for Android music Nu Player issues","user":{"login":"obigu","id":1794492,"avatar_url":"https://avatars0.githubusercontent.com/u/1794492?v=4","gravatar_id":"","url":"https://api.github.com/users/obigu","html_url":"https://github.com/obigu","followers_url":"https://api.github.com/users/obigu/followers","following_url":"https://api.github.com/users/obigu/following{/other_user}","gists_url":"https://api.github.com/users/obigu/gists{/gist_id}","starred_url":"https://api.github.com/users/obigu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/obigu/subscriptions","organizations_url":"https://api.github.com/users/obigu/orgs","repos_url":"https://api.github.com/users/obigu/repos","events_url":"https://api.github.com/users/obigu/events{/privacy}","received_events_url":"https://api.github.com/users/obigu/received_events","type":"User","site_admin":false},"labels":[{"id":59604218,"url":"https://api.github.com/repos/libgdx/libgdx/labels/android","name":"android","color":"009800","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2015-09-06T12:24:10Z","updated_at":"2016-04-08T18:09:29Z","closed_at":"2015-11-20T16:43:38Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3399","html_url":"https://github.com/libgdx/libgdx/pull/3399","diff_url":"https://github.com/libgdx/libgdx/pull/3399.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3399.patch"},"body":"Android Music has several issues on Android 5.0+ devices using the new Nu Player by default.\n\nThese are two of the issues specific to Nu Player this patch fixes\n\n1- setPosition() not working after stop() is called\n\n```\nmusic.play();\n// Wait\nmusic.stop();\n// Wait\nmusic.play();\nmusic.setPosition(30f);\n[Music starts from the beginning]\n```\n\n2- Calling stop() before play() throws IllegalStateException()\n\n```\nmusic.stop();\nmusic.play();\n```\n\nThe problem seems to be related to the call to player.seekTo(0) on the AndroidMusic stop() method. This was added most probably as a workaround to MediaPlayer not restarting the music after a stop call in some cases (see http://stackoverflow.com/questions/5985874/android-mediaplayer-clipping-on-restart-after-seekto and http://stackoverflow.com/questions/6849045/mediaplayer-instance-stop-behaves-like-a-pause). Porbably what's happening is that because seekTo() is assynchronous (http://developer.android.com/reference/android/media/MediaPlayer.html) it's returning after stop() has been executed and that is messing with Nu Player state.\n\nThe fix has been tested on a Nexus 4 and a Nexus 5 for both default Nu Player and Awesome Player for backwards compatibility but it has not been tested on Froyo devices that are supposed to be buggy (does libGDX support that?).\n\nOther issues have been reported that may be related like https://github.com/libgdx/libgdx/issues/2663 but I haven't tested.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3399/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3398","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3398/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3398/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3398/events","html_url":"https://github.com/libgdx/libgdx/pull/3398","id":105042579,"number":3398,"title":"Fixed Label setEllipsis method","user":{"login":"kotcrab","id":4594081,"avatar_url":"https://avatars1.githubusercontent.com/u/4594081?v=4","gravatar_id":"","url":"https://api.github.com/users/kotcrab","html_url":"https://github.com/kotcrab","followers_url":"https://api.github.com/users/kotcrab/followers","following_url":"https://api.github.com/users/kotcrab/following{/other_user}","gists_url":"https://api.github.com/users/kotcrab/gists{/gist_id}","starred_url":"https://api.github.com/users/kotcrab/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kotcrab/subscriptions","organizations_url":"https://api.github.com/users/kotcrab/orgs","repos_url":"https://api.github.com/users/kotcrab/repos","events_url":"https://api.github.com/users/kotcrab/events{/privacy}","received_events_url":"https://api.github.com/users/kotcrab/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2015-09-05T18:38:28Z","updated_at":"2015-09-05T21:11:23Z","closed_at":"2015-09-05T21:11:23Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3398","html_url":"https://github.com/libgdx/libgdx/pull/3398","diff_url":"https://github.com/libgdx/libgdx/pull/3398.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3398.patch"},"body":"Label#setEllipsis(boolean ellipsis) was ignoring boolean argument.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3398/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3397","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3397/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3397/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3397/events","html_url":"https://github.com/libgdx/libgdx/issues/3397","id":105036829,"number":3397,"title":"Field API lacks optimization for primitive types","user":{"login":"antag99","id":7714919,"avatar_url":"https://avatars3.githubusercontent.com/u/7714919?v=4","gravatar_id":"","url":"https://api.github.com/users/antag99","html_url":"https://github.com/antag99","followers_url":"https://api.github.com/users/antag99/followers","following_url":"https://api.github.com/users/antag99/following{/other_user}","gists_url":"https://api.github.com/users/antag99/gists{/gist_id}","starred_url":"https://api.github.com/users/antag99/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/antag99/subscriptions","organizations_url":"https://api.github.com/users/antag99/orgs","repos_url":"https://api.github.com/users/antag99/repos","events_url":"https://api.github.com/users/antag99/events{/privacy}","received_events_url":"https://api.github.com/users/antag99/received_events","type":"User","site_admin":false},"labels":[{"id":11336982,"url":"https://api.github.com/repos/libgdx/libgdx/labels/enhancement","name":"enhancement","color":"84b6eb","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2015-09-05T16:47:51Z","updated_at":"2015-11-17T00:00:26Z","closed_at":"2015-11-17T00:00:26Z","author_association":"CONTRIBUTOR","body":"Java's reflection API offers primitive variations of the `get(Object)` and `set(Object, Object)` methods in `java.lang.reflect.Field` that can be used to avoid boxing. The reflection wrapper does not expose this functionality, which I need to reduce overhead when comparing lots of objects that contain primitive fields.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3397/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3396","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3396/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3396/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3396/events","html_url":"https://github.com/libgdx/libgdx/issues/3396","id":105011394,"number":3396,"title":"Add History In 'gdx-setup.jar'","user":{"login":"johanessurya","id":2444537,"avatar_url":"https://avatars3.githubusercontent.com/u/2444537?v=4","gravatar_id":"","url":"https://api.github.com/users/johanessurya","html_url":"https://github.com/johanessurya","followers_url":"https://api.github.com/users/johanessurya/followers","following_url":"https://api.github.com/users/johanessurya/following{/other_user}","gists_url":"https://api.github.com/users/johanessurya/gists{/gist_id}","starred_url":"https://api.github.com/users/johanessurya/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/johanessurya/subscriptions","organizations_url":"https://api.github.com/users/johanessurya/orgs","repos_url":"https://api.github.com/users/johanessurya/repos","events_url":"https://api.github.com/users/johanessurya/events{/privacy}","received_events_url":"https://api.github.com/users/johanessurya/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2015-09-05T07:30:52Z","updated_at":"2015-09-06T16:06:37Z","closed_at":"2015-09-06T16:06:37Z","author_association":"NONE","body":"It is not bug but it would be great if you add history recently that we have create last time. For example: We have create first project and fill all field.\nNext day, we want to create new project, but we should fill all of them again, besides we only want to change the title or class. \n\nIt would be great id you add dropdown that have recent history of it, and just load it when it clicked.\n\nFor Android SDK field you could detech ANDROID_HOME first if not found then add default value. It would make a lot easier to generate new project.\n\n![libgdx history](https://cloud.githubusercontent.com/assets/2444537/9698301/1a02be4c-53da-11e5-9c51-17369844d7c8.jpg)\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3396/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3395","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3395/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3395/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3395/events","html_url":"https://github.com/libgdx/libgdx/issues/3395","id":105011041,"number":3395,"title":"libGDX Setup Layout is too big in resolution 1366x768","user":{"login":"johanessurya","id":2444537,"avatar_url":"https://avatars3.githubusercontent.com/u/2444537?v=4","gravatar_id":"","url":"https://api.github.com/users/johanessurya","html_url":"https://github.com/johanessurya","followers_url":"https://api.github.com/users/johanessurya/followers","following_url":"https://api.github.com/users/johanessurya/following{/other_user}","gists_url":"https://api.github.com/users/johanessurya/gists{/gist_id}","starred_url":"https://api.github.com/users/johanessurya/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/johanessurya/subscriptions","organizations_url":"https://api.github.com/users/johanessurya/orgs","repos_url":"https://api.github.com/users/johanessurya/repos","events_url":"https://api.github.com/users/johanessurya/events{/privacy}","received_events_url":"https://api.github.com/users/johanessurya/received_events","type":"User","site_admin":false},"labels":[{"id":11336982,"url":"https://api.github.com/repos/libgdx/libgdx/labels/enhancement","name":"enhancement","color":"84b6eb","default":true}],"state":"closed","locked":false,"assignee":{"login":"Tom-Ski","id":4346114,"avatar_url":"https://avatars0.githubusercontent.com/u/4346114?v=4","gravatar_id":"","url":"https://api.github.com/users/Tom-Ski","html_url":"https://github.com/Tom-Ski","followers_url":"https://api.github.com/users/Tom-Ski/followers","following_url":"https://api.github.com/users/Tom-Ski/following{/other_user}","gists_url":"https://api.github.com/users/Tom-Ski/gists{/gist_id}","starred_url":"https://api.github.com/users/Tom-Ski/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Tom-Ski/subscriptions","organizations_url":"https://api.github.com/users/Tom-Ski/orgs","repos_url":"https://api.github.com/users/Tom-Ski/repos","events_url":"https://api.github.com/users/Tom-Ski/events{/privacy}","received_events_url":"https://api.github.com/users/Tom-Ski/received_events","type":"User","site_admin":false},"assignees":[{"login":"Tom-Ski","id":4346114,"avatar_url":"https://avatars0.githubusercontent.com/u/4346114?v=4","gravatar_id":"","url":"https://api.github.com/users/Tom-Ski","html_url":"https://github.com/Tom-Ski","followers_url":"https://api.github.com/users/Tom-Ski/followers","following_url":"https://api.github.com/users/Tom-Ski/following{/other_user}","gists_url":"https://api.github.com/users/Tom-Ski/gists{/gist_id}","starred_url":"https://api.github.com/users/Tom-Ski/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Tom-Ski/subscriptions","organizations_url":"https://api.github.com/users/Tom-Ski/orgs","repos_url":"https://api.github.com/users/Tom-Ski/repos","events_url":"https://api.github.com/users/Tom-Ski/events{/privacy}","received_events_url":"https://api.github.com/users/Tom-Ski/received_events","type":"User","site_admin":false}],"milestone":null,"comments":3,"created_at":"2015-09-05T07:19:12Z","updated_at":"2015-11-18T01:37:02Z","closed_at":"2015-11-18T01:37:02Z","author_association":"NONE","body":"This is not bug but it would better if you make 'gdx-setup.jar' more friendly with smaller resolution.\n\nHere the screenshot. Look at the bottom of the 'gdx-setup.jar'. I can't see the rest of it. \n![libgdx it too big](https://cloud.githubusercontent.com/assets/2444537/9698266/d80136d2-53d8-11e5-9b20-c093dca78890.png)\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3395/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3394","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3394/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3394/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3394/events","html_url":"https://github.com/libgdx/libgdx/pull/3394","id":105010317,"number":3394,"title":"Add preferences directory in headless config","user":{"login":"htynkn","id":659135,"avatar_url":"https://avatars2.githubusercontent.com/u/659135?v=4","gravatar_id":"","url":"https://api.github.com/users/htynkn","html_url":"https://github.com/htynkn","followers_url":"https://api.github.com/users/htynkn/followers","following_url":"https://api.github.com/users/htynkn/following{/other_user}","gists_url":"https://api.github.com/users/htynkn/gists{/gist_id}","starred_url":"https://api.github.com/users/htynkn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/htynkn/subscriptions","organizations_url":"https://api.github.com/users/htynkn/orgs","repos_url":"https://api.github.com/users/htynkn/repos","events_url":"https://api.github.com/users/htynkn/events{/privacy}","received_events_url":"https://api.github.com/users/htynkn/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2015-09-05T06:58:54Z","updated_at":"2015-09-08T19:14:06Z","closed_at":"2015-09-08T19:14:06Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3394","html_url":"https://github.com/libgdx/libgdx/pull/3394","diff_url":"https://github.com/libgdx/libgdx/pull/3394.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3394.patch"},"body":"Hi guys,\n\nI don't know why the config for headless only have one option `renderInterval`, but I need change the `preferencesDirectory` when use headless backend.\n\nI follow the same logic as other backend, it should works.\n\nAnd a very small fix for HeadlessFiles, it hard code file separator as '/'.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3394/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3393","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3393/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3393/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3393/events","html_url":"https://github.com/libgdx/libgdx/issues/3393","id":104886836,"number":3393,"title":"Bullet - btBvhTriangleMeshShape allows only 1024 mesh parts","user":{"login":"realitix","id":6367936,"avatar_url":"https://avatars1.githubusercontent.com/u/6367936?v=4","gravatar_id":"","url":"https://api.github.com/users/realitix","html_url":"https://github.com/realitix","followers_url":"https://api.github.com/users/realitix/followers","following_url":"https://api.github.com/users/realitix/following{/other_user}","gists_url":"https://api.github.com/users/realitix/gists{/gist_id}","starred_url":"https://api.github.com/users/realitix/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/realitix/subscriptions","organizations_url":"https://api.github.com/users/realitix/orgs","repos_url":"https://api.github.com/users/realitix/repos","events_url":"https://api.github.com/users/realitix/events{/privacy}","received_events_url":"https://api.github.com/users/realitix/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2015-09-04T13:04:17Z","updated_at":"2015-09-04T20:37:01Z","closed_at":"2015-09-04T17:36:38Z","author_association":"CONTRIBUTOR","body":"Hello everyone,\nI'm using btBvhTriangleMeshShape in conjunction with the HeightField from Xoppa to generate my height map.\nHowever I found a bug but I don't know if it's bullet or the libgdx bullet wrapper.\nI use it like that:\n\n```\nbtBvhTriangleMeshShape shape = new btBvhTriangleMeshShape(this.model.meshParts);\n```\n\nIf the mesh part number is upper 1024, then bullet wouldn't create no more physical triangle, it will stop at 1024 triangles max.\n\nbut if I don't use the 'useQuantizedAabbCompression', it works.\n\n```\nbtBvhTriangleMeshShape shape = new btBvhTriangleMeshShape(this.model.meshParts, false);\n```\n\n1024 = 10 bits = 1111111111.\nSo I think, there is somewhere an array with only 10 bits for key.\nIt's just a guess, I tried to get into the wrapper code but it's JNI and difficult to understand.\n\nPS: I use the gdx-bullet-1.6.5 wrapper\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3393/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3392","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3392/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3392/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3392/events","html_url":"https://github.com/libgdx/libgdx/pull/3392","id":104789240,"number":3392,"title":"Color.valueOf(String s)","user":{"login":"alexcrist","id":11337548,"avatar_url":"https://avatars0.githubusercontent.com/u/11337548?v=4","gravatar_id":"","url":"https://api.github.com/users/alexcrist","html_url":"https://github.com/alexcrist","followers_url":"https://api.github.com/users/alexcrist/followers","following_url":"https://api.github.com/users/alexcrist/following{/other_user}","gists_url":"https://api.github.com/users/alexcrist/gists{/gist_id}","starred_url":"https://api.github.com/users/alexcrist/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexcrist/subscriptions","organizations_url":"https://api.github.com/users/alexcrist/orgs","repos_url":"https://api.github.com/users/alexcrist/repos","events_url":"https://api.github.com/users/alexcrist/events{/privacy}","received_events_url":"https://api.github.com/users/alexcrist/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":19,"created_at":"2015-09-03T21:54:11Z","updated_at":"2015-10-06T20:40:47Z","closed_at":"2015-10-03T22:57:53Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3392","html_url":"https://github.com/libgdx/libgdx/pull/3392","diff_url":"https://github.com/libgdx/libgdx/pull/3392.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3392.patch"},"body":"I modified Color.valueOf(String s) so it can now also accept hex strings that start with a '#'\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3392/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3391","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3391/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3391/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3391/events","html_url":"https://github.com/libgdx/libgdx/pull/3391","id":104786151,"number":3391,"title":"Color.valueof(String s)","user":{"login":"alexcrist","id":11337548,"avatar_url":"https://avatars0.githubusercontent.com/u/11337548?v=4","gravatar_id":"","url":"https://api.github.com/users/alexcrist","html_url":"https://github.com/alexcrist","followers_url":"https://api.github.com/users/alexcrist/followers","following_url":"https://api.github.com/users/alexcrist/following{/other_user}","gists_url":"https://api.github.com/users/alexcrist/gists{/gist_id}","starred_url":"https://api.github.com/users/alexcrist/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexcrist/subscriptions","organizations_url":"https://api.github.com/users/alexcrist/orgs","repos_url":"https://api.github.com/users/alexcrist/repos","events_url":"https://api.github.com/users/alexcrist/events{/privacy}","received_events_url":"https://api.github.com/users/alexcrist/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2015-09-03T21:33:14Z","updated_at":"2015-09-03T21:50:31Z","closed_at":"2015-09-03T21:50:31Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3391","html_url":"https://github.com/libgdx/libgdx/pull/3391","diff_url":"https://github.com/libgdx/libgdx/pull/3391.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3391.patch"},"body":"I was using libgdx's Color class, specifically to create a color from a hex string. In Java's standard Color class, you are able to enter hex strings that start with a `#`.\n\nI think myself and many others may have been briefly confused because `Color.valueOf(String s)` does not accept strings that start with a `#`.\n\nI believe the following code will fix this. Thanks for the great library! :-)\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3391/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3390","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3390/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3390/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3390/events","html_url":"https://github.com/libgdx/libgdx/pull/3390","id":104644666,"number":3390,"title":"Exposes SpriteBatch members as protected","user":{"login":"realitix","id":6367936,"avatar_url":"https://avatars1.githubusercontent.com/u/6367936?v=4","gravatar_id":"","url":"https://api.github.com/users/realitix","html_url":"https://github.com/realitix","followers_url":"https://api.github.com/users/realitix/followers","following_url":"https://api.github.com/users/realitix/following{/other_user}","gists_url":"https://api.github.com/users/realitix/gists{/gist_id}","starred_url":"https://api.github.com/users/realitix/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/realitix/subscriptions","organizations_url":"https://api.github.com/users/realitix/orgs","repos_url":"https://api.github.com/users/realitix/repos","events_url":"https://api.github.com/users/realitix/events{/privacy}","received_events_url":"https://api.github.com/users/realitix/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":16,"created_at":"2015-09-03T08:16:17Z","updated_at":"2015-09-04T08:40:23Z","closed_at":"2015-09-03T12:21:59Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3390","html_url":"https://github.com/libgdx/libgdx/pull/3390","diff_url":"https://github.com/libgdx/libgdx/pull/3390.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3390.patch"},"body":"Allows the sprite batch to be override by converting all \"private\" to \"protected\".\nI wanted to add RenderContext to the sprite batch but I couldn't due to all theses private properties.\nSo I had to copy/paste all the sprite batch. This is not a good solution.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3390/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3389","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3389/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3389/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3389/events","html_url":"https://github.com/libgdx/libgdx/issues/3389","id":104607431,"number":3389,"title":"(1.6.5) TextField width can't be changed","user":{"login":"federicodangelo","id":1854523,"avatar_url":"https://avatars2.githubusercontent.com/u/1854523?v=4","gravatar_id":"","url":"https://api.github.com/users/federicodangelo","html_url":"https://github.com/federicodangelo","followers_url":"https://api.github.com/users/federicodangelo/followers","following_url":"https://api.github.com/users/federicodangelo/following{/other_user}","gists_url":"https://api.github.com/users/federicodangelo/gists{/gist_id}","starred_url":"https://api.github.com/users/federicodangelo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/federicodangelo/subscriptions","organizations_url":"https://api.github.com/users/federicodangelo/orgs","repos_url":"https://api.github.com/users/federicodangelo/repos","events_url":"https://api.github.com/users/federicodangelo/events{/privacy}","received_events_url":"https://api.github.com/users/federicodangelo/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2015-09-03T02:15:45Z","updated_at":"2015-09-24T23:05:19Z","closed_at":"2015-09-24T23:05:19Z","author_association":"NONE","body":"The getter TextField.getPrefWidth() return a fixed value of 150, so there is no way to change the default width of a TextField, it would be nice to have a setPrefWidth() method and using an instance variable to store the prefWidth, with a default value of 150.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3389/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3388","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3388/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3388/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3388/events","html_url":"https://github.com/libgdx/libgdx/issues/3388","id":104359576,"number":3388,"title":"(v1.6.5) GlyphLayout.setText.197 - ArrayIndexOutOfBoundsException","user":{"login":"fuatcoskun","id":3381496,"avatar_url":"https://avatars0.githubusercontent.com/u/3381496?v=4","gravatar_id":"","url":"https://api.github.com/users/fuatcoskun","html_url":"https://github.com/fuatcoskun","followers_url":"https://api.github.com/users/fuatcoskun/followers","following_url":"https://api.github.com/users/fuatcoskun/following{/other_user}","gists_url":"https://api.github.com/users/fuatcoskun/gists{/gist_id}","starred_url":"https://api.github.com/users/fuatcoskun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fuatcoskun/subscriptions","organizations_url":"https://api.github.com/users/fuatcoskun/orgs","repos_url":"https://api.github.com/users/fuatcoskun/repos","events_url":"https://api.github.com/users/fuatcoskun/events{/privacy}","received_events_url":"https://api.github.com/users/fuatcoskun/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2015-09-01T21:36:16Z","updated_at":"2015-09-18T11:48:13Z","closed_at":"2015-09-18T11:48:13Z","author_association":"NONE","body":"Hi guys,\n\nI have upgraded my game from libgdx version 1.5.4 to 1.6.5 and facing GlyphLayout issue as seen on following stack trace :\n\n```\njava.lang.ArrayIndexOutOfBoundsException: src.length=8 srcPos=0 dst.length=14 dstPos=0 length=9\n       at java.lang.System.arraycopy(System.java)\n       at com.badlogic.gdx.utils.Array.resize(Array.java:339)\n       at com.badlogic.gdx.utils.Array.add(Array.java:100)\n       at com.badlogic.gdx.utils.Pool.free(Pool.java:58)\n       at com.badlogic.gdx.graphics.g2d.GlyphLayout.setText(GlyphLayout.java:197)\n       at com.badlogic.gdx.scenes.scene2d.ui.Label.layout(Label.java:201)\n       at com.badlogic.gdx.scenes.scene2d.ui.Widget.validate(Widget.java:88)\n       at com.badlogic.gdx.scenes.scene2d.ui.Label.draw(Label.java:208)\n       at com.badlogic.gdx.scenes.scene2d.Group.drawChildren(Group.java:110)\n       at com.badlogic.gdx.scenes.scene2d.Group.draw(Group.java:57)\n       at net.games.mobile.core.ui.widget.AnimatedLoadingWidget.draw(AnimatedLoadingWidget.java:86)\n       at com.badlogic.gdx.scenes.scene2d.Group.drawChildren(Group.java:110)\n       at com.badlogic.gdx.scenes.scene2d.Group.draw(Group.java:57)\n       at com.badlogic.gdx.scenes.scene2d.Stage.draw(Stage.java:128)\n       at net.games.libgdx.stagebuilder.core.AbstractScreen.render(AbstractScreen.java:120)\n       at net.games.mobile.hearts.core.view.CardGameScreen.render(CardGameScreen.java:114)\n       at net.games.libgdx.stagebuilder.core.AbstractGame.render(AbstractGame.java:84)\n       at net.games.mobile.hearts.core.CardGame.render(CardGame.java:273)\n       at com.badlogic.gdx.backends.android.AndroidGraphics.onDrawFrame(AndroidGraphics.java:422)\n       at android.opengl.GLSurfaceView$GLThread.guardedRun(GLSurfaceView.java:1531)\n       at android.opengl.GLSurfaceView$GLThread.run(GLSurfaceView.java:1248)\n```\n\nI saw suggestions about preventing multiple thread access to UI elements but I already accessing my widget via Gdx.app.postRunnable() blocks as seen below :\n\n```\npublic void displayLoadingWidget(final int timeout) {\n        Gdx.app.postRunnable(new Runnable() {\n            @Override\n            public void run() {\n                if (loadingWidget != null) {\n                    loadingWidget.remove();\n                }\n                AnimatedLoadingWidget.AnimatedLoadingWidgetStyle style = new AnimatedLoadingWidget.AnimatedLoadingWidgetStyle();\n                style.atlasName = Constants.COMMON_ATLAS;\n                style.spriteName = \"loading\";\n                style.fontName = Constants.FONT_26;\n                style.frameDuration = 40;\n\n                loadingWidget = new AnimatedLoadingWidget(style, cardGame.getAssetsInterface(), game.getResolutionHelper());\n                stage.addActor(loadingWidget);\n                loadingWidget.setText(cardGame.getLocalizationService().getString(\"loading\"));\n                loadingWidget.setTimeout(timeout);\n                loadingWidget.setVisible(true);\n            }\n        });\n    }\n```\n\n```\npublic void removeLoadingWidget() {\n        Gdx.app.postRunnable(new Runnable() {\n            @Override\n            public void run() {\n                log.d(\"Dismissing loading widget.\");\n                if (loadingWidget != null) {\n                    loadingWidget.setVisible(false);\n                }\n            }\n        });\n    }\n```\n\nProblem is that \n\n```\nSystem.arraycopy(items, 0, newItems, 0, Math.min(size, newItems.length));\n```\n\n\"size\" field of Array.java is somehow bigger than \"items.length\". They should be the same in normal case. I couldn't find any reason for this difference and can not reproduce the issue always, so this situation is uncertain.\n\nI want to highlight this :\n\n```\nsrc.length=8 \nsrcPos=0 \ndst.length=14 \ndstPos=0 \nlength=9\n```\n\nHere, length is the result of \"Math.min(size, newItems.length)\" and it is \"9\" so size equals to \"9\".\nBut src.length = \"8\" which means items.length.\n\nHow can this possible except of multi-threaded access problem?\n\nThis is my AnimatedLoadingWidget class and problem occurs on draw methods first line \n( super.draw(batch, parentAlpha);)\n:\n\n```\npackage net.games.mobile.core.ui.widget;\n\nimport com.badlogic.gdx.Gdx;\nimport com.badlogic.gdx.graphics.Color;\nimport com.badlogic.gdx.graphics.GL20;\nimport com.badlogic.gdx.graphics.g2d.Batch;\nimport com.badlogic.gdx.graphics.g2d.TextureAtlas;\nimport com.badlogic.gdx.graphics.glutils.ShapeRenderer;\nimport com.badlogic.gdx.graphics.glutils.ShapeRenderer.ShapeType;\nimport com.badlogic.gdx.scenes.scene2d.Actor;\nimport com.badlogic.gdx.scenes.scene2d.Group;\nimport com.badlogic.gdx.scenes.scene2d.Touchable;\nimport com.badlogic.gdx.scenes.scene2d.ui.Label;\nimport com.badlogic.gdx.scenes.scene2d.utils.Align;\nimport com.badlogic.gdx.scenes.scene2d.utils.Drawable;\nimport net.games.libgdx.stagebuilder.core.assets.AssetsInterface;\nimport net.games.libgdx.stagebuilder.core.assets.ResolutionHelper;\n\nimport java.util.ArrayList;\n\npublic class AnimatedLoadingWidget extends Group{\n    private AssetsInterface assets;\n    private SequentialImage loadingImage;\n    private ShapeRenderer shapeRenderer;\n    private Label text;\n    private AnimatedLoadingWidgetStyle style;\n    private int timeout = 0;\n    private long showTime;\n\n    public AnimatedLoadingWidget(){\n\n    }\n\n    public AnimatedLoadingWidget(AnimatedLoadingWidgetStyle style, AssetsInterface assets, ResolutionHelper resolutionHelper) {\n        this.assets = assets;\n        this.style = style;\n        initialize(resolutionHelper);\n    }\n    private void buildLoadingImage(ResolutionHelper resolutionHelper) {\n        ArrayList<Drawable> images = new ArrayList<Drawable>();\n        TextureAtlas textureAtlas = assets.getTextureAtlas(style.atlasName);\n        SequentialImage.SequentialImageStyle sequentialImageStyle = new SequentialImage.SequentialImageStyle();\n        sequentialImageStyle.images = textureAtlas.findRegions(style.spriteName);\n        sequentialImageStyle.frameDuration = style.frameDuration;\n\n        loadingImage = new SequentialImage(sequentialImageStyle);\n        loadingImage.setWidth(sequentialImageStyle.images.get(0).getRegionWidth() * resolutionHelper.getSizeMultiplier());\n        loadingImage.setHeight(sequentialImageStyle.images.get(0).getRegionHeight() * resolutionHelper.getSizeMultiplier());\n\n        loadingImage.setX((getWidth()-loadingImage.getWidth())/2);\n        loadingImage.setY((getHeight()-loadingImage.getHeight())/2);\n\n        addActor(loadingImage);\n    }\n    public void initialize(ResolutionHelper resolutionHelper) {\n        float sizeMultiplier = resolutionHelper.getSizeMultiplier();\n\n        shapeRenderer = new ShapeRenderer();\n\n        setSize(Gdx.graphics.getWidth(), Gdx.graphics.getHeight());\n\n        buildLoadingImage(resolutionHelper);\n        Label.LabelStyle labelStyle = new Label.LabelStyle(assets.getFont(style.fontName), Color.WHITE);\n\n        text = new Label(\"\", labelStyle);\n        text.setBounds(0, loadingImage.getY()-40, getWidth(), 40);\n        text.setAlignment(Align.center | Align.top);\n        addActor(text);\n        setTouchable(Touchable.enabled);\n    }\n    public void setText(String string){\n        text.setText(string);\n    }\n\n    private void resizeActor(Actor actor, float sizeMultiplier) {\n        actor.setScale(sizeMultiplier);\n    }\n\n    public void setTimeout(int timeout){\n        this.timeout = timeout;\n        showTime = System.currentTimeMillis();\n    }\n\n    @Override\n    public void draw (Batch batch, float parentAlpha) {\n        super.draw(batch, parentAlpha);\n\n        Gdx.gl.glEnable(GL20.GL_BLEND);\n        Gdx.gl.glBlendFunc(GL20.GL_SRC_ALPHA, GL20.GL_ONE_MINUS_SRC_ALPHA);\n\n        shapeRenderer.setProjectionMatrix(batch.getProjectionMatrix());\n        shapeRenderer.begin(ShapeType.Filled);\n        shapeRenderer.setColor(0f, 0f, 0f, 0.4f);\n        shapeRenderer.rect(0, 0, Gdx.graphics.getWidth(), Gdx.graphics.getHeight());\n        shapeRenderer.end();\n\n        if (timeout > 0) {\n            if (this.showTime + this.timeout < System.currentTimeMillis()) {\n                setVisible(false);\n            }\n        }\n    }\n\n    public static class AnimatedLoadingWidgetStyle{\n        public String atlasName;\n        public String spriteName;\n        public String fontName;\n        public int frameDuration;\n    }\n}\n```\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3388/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3387","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3387/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3387/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3387/events","html_url":"https://github.com/libgdx/libgdx/issues/3387","id":104325417,"number":3387,"title":"Fatal error when exiting LibGDX game after graphic driver update","user":{"login":"PojahnM","id":5539893,"avatar_url":"https://avatars0.githubusercontent.com/u/5539893?v=4","gravatar_id":"","url":"https://api.github.com/users/PojahnM","html_url":"https://github.com/PojahnM","followers_url":"https://api.github.com/users/PojahnM/followers","following_url":"https://api.github.com/users/PojahnM/following{/other_user}","gists_url":"https://api.github.com/users/PojahnM/gists{/gist_id}","starred_url":"https://api.github.com/users/PojahnM/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/PojahnM/subscriptions","organizations_url":"https://api.github.com/users/PojahnM/orgs","repos_url":"https://api.github.com/users/PojahnM/repos","events_url":"https://api.github.com/users/PojahnM/events{/privacy}","received_events_url":"https://api.github.com/users/PojahnM/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2015-09-01T18:20:01Z","updated_at":"2015-09-01T18:41:29Z","closed_at":"2015-09-01T18:41:29Z","author_association":"NONE","body":"I installed new drivers for my AMD Radeon HD 69*\\* card. After that, I get some strange exception whenever I exit a LibGDX:\n\nA fatal error has been detected by the Java Runtime Environment:\n\nEXCEPTION_ACCESS_VIOLATION (0xc0000005) at pc=0x000007fee145d6c4, pid=5876, tid=2100\n\nJRE version: Java(TM) SE Runtime Environment (8.0_05-b13) (build 1.8.0_05-b13)\nJava VM: Java HotSpot(TM) 64-Bit Server VM (25.5-b02 mixed mode windows-amd64 compressed oops)\nProblematic frame:\nC  [OPENGL32.dll+0xdd6c4]\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3387/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3386","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3386/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3386/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3386/events","html_url":"https://github.com/libgdx/libgdx/issues/3386","id":104046872,"number":3386,"title":"Mesh with Integer Indices","user":{"login":"wsrdzg","id":10890481,"avatar_url":"https://avatars2.githubusercontent.com/u/10890481?v=4","gravatar_id":"","url":"https://api.github.com/users/wsrdzg","html_url":"https://github.com/wsrdzg","followers_url":"https://api.github.com/users/wsrdzg/followers","following_url":"https://api.github.com/users/wsrdzg/following{/other_user}","gists_url":"https://api.github.com/users/wsrdzg/gists{/gist_id}","starred_url":"https://api.github.com/users/wsrdzg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wsrdzg/subscriptions","organizations_url":"https://api.github.com/users/wsrdzg/orgs","repos_url":"https://api.github.com/users/wsrdzg/repos","events_url":"https://api.github.com/users/wsrdzg/events{/privacy}","received_events_url":"https://api.github.com/users/wsrdzg/received_events","type":"User","site_admin":false},"labels":[{"id":11336982,"url":"https://api.github.com/repos/libgdx/libgdx/labels/enhancement","name":"enhancement","color":"84b6eb","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2015-08-31T12:44:44Z","updated_at":"2015-10-03T18:21:51Z","closed_at":"2015-10-03T18:21:51Z","author_association":"NONE","body":"At the moment Mesh uses short for indices. Because Java has no unsigned short this means you can only use 2^15 vertices. Therefore you can't render a big world at once even if it all uses the same Material. I could render my complete game world in one render call, but instead I have to use over 100. That is really bad for the frame rate.\n\nAn Mesh with Integer Indices would solve this problem?\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3386/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3385","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3385/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3385/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3385/events","html_url":"https://github.com/libgdx/libgdx/issues/3385","id":104026595,"number":3385,"title":"gdx Json format","user":{"login":"JFixby","id":1580663,"avatar_url":"https://avatars0.githubusercontent.com/u/1580663?v=4","gravatar_id":"","url":"https://api.github.com/users/JFixby","html_url":"https://github.com/JFixby","followers_url":"https://api.github.com/users/JFixby/followers","following_url":"https://api.github.com/users/JFixby/following{/other_user}","gists_url":"https://api.github.com/users/JFixby/gists{/gist_id}","starred_url":"https://api.github.com/users/JFixby/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JFixby/subscriptions","organizations_url":"https://api.github.com/users/JFixby/orgs","repos_url":"https://api.github.com/users/JFixby/repos","events_url":"https://api.github.com/users/JFixby/events{/privacy}","received_events_url":"https://api.github.com/users/JFixby/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2015-08-31T10:29:13Z","updated_at":"2015-08-31T17:23:39Z","closed_at":"2015-08-31T17:23:39Z","author_association":"CONTRIBUTOR","body":"Hi,\n\nI'm not sure if it is a bug or it was done intentionally, but looks like GDX-produced Json is not compatible with the Json.org format standard.\n\nAt least it is what the validator https://jsonformatter.curiousconcept.com/ says:\n\"Strings should be wrapped in double quotes.\"\n\nCheers.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3385/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3384","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3384/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3384/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3384/events","html_url":"https://github.com/libgdx/libgdx/issues/3384","id":103974537,"number":3384,"title":"Loss of controller input when changing displayMode","user":{"login":"clubmine","id":1495140,"avatar_url":"https://avatars0.githubusercontent.com/u/1495140?v=4","gravatar_id":"","url":"https://api.github.com/users/clubmine","html_url":"https://github.com/clubmine","followers_url":"https://api.github.com/users/clubmine/followers","following_url":"https://api.github.com/users/clubmine/following{/other_user}","gists_url":"https://api.github.com/users/clubmine/gists{/gist_id}","starred_url":"https://api.github.com/users/clubmine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clubmine/subscriptions","organizations_url":"https://api.github.com/users/clubmine/orgs","repos_url":"https://api.github.com/users/clubmine/repos","events_url":"https://api.github.com/users/clubmine/events{/privacy}","received_events_url":"https://api.github.com/users/clubmine/received_events","type":"User","site_admin":false},"labels":[{"id":11336980,"url":"https://api.github.com/repos/libgdx/libgdx/labels/bug","name":"bug","color":"fc2929","default":true}],"state":"closed","locked":false,"assignee":{"login":"badlogic","id":514052,"avatar_url":"https://avatars1.githubusercontent.com/u/514052?v=4","gravatar_id":"","url":"https://api.github.com/users/badlogic","html_url":"https://github.com/badlogic","followers_url":"https://api.github.com/users/badlogic/followers","following_url":"https://api.github.com/users/badlogic/following{/other_user}","gists_url":"https://api.github.com/users/badlogic/gists{/gist_id}","starred_url":"https://api.github.com/users/badlogic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/badlogic/subscriptions","organizations_url":"https://api.github.com/users/badlogic/orgs","repos_url":"https://api.github.com/users/badlogic/repos","events_url":"https://api.github.com/users/badlogic/events{/privacy}","received_events_url":"https://api.github.com/users/badlogic/received_events","type":"User","site_admin":false},"assignees":[{"login":"badlogic","id":514052,"avatar_url":"https://avatars1.githubusercontent.com/u/514052?v=4","gravatar_id":"","url":"https://api.github.com/users/badlogic","html_url":"https://github.com/badlogic","followers_url":"https://api.github.com/users/badlogic/followers","following_url":"https://api.github.com/users/badlogic/following{/other_user}","gists_url":"https://api.github.com/users/badlogic/gists{/gist_id}","starred_url":"https://api.github.com/users/badlogic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/badlogic/subscriptions","organizations_url":"https://api.github.com/users/badlogic/orgs","repos_url":"https://api.github.com/users/badlogic/repos","events_url":"https://api.github.com/users/badlogic/events{/privacy}","received_events_url":"https://api.github.com/users/badlogic/received_events","type":"User","site_admin":false}],"milestone":null,"comments":2,"created_at":"2015-08-31T02:30:34Z","updated_at":"2016-01-05T17:03:31Z","closed_at":"2016-01-05T17:03:31Z","author_association":"NONE","body":"When the displaymode is changed from fullscreen to windowed or vice versa, the controller loses input and reports the last values before the displaymode change. This issue has been posted before and was reportedly fixed but the current version seems to still have this problem. I am running Windows 10 and have tested a Xbox One controller as well as a Xbox 360 USB Controller. \n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3384/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3383","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3383/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3383/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3383/events","html_url":"https://github.com/libgdx/libgdx/issues/3383","id":103878384,"number":3383,"title":"Headless Backend doesn't properly Mock up all of the backend pieces","user":{"login":"TheAks999","id":539751,"avatar_url":"https://avatars0.githubusercontent.com/u/539751?v=4","gravatar_id":"","url":"https://api.github.com/users/TheAks999","html_url":"https://github.com/TheAks999","followers_url":"https://api.github.com/users/TheAks999/followers","following_url":"https://api.github.com/users/TheAks999/following{/other_user}","gists_url":"https://api.github.com/users/TheAks999/gists{/gist_id}","starred_url":"https://api.github.com/users/TheAks999/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/TheAks999/subscriptions","organizations_url":"https://api.github.com/users/TheAks999/orgs","repos_url":"https://api.github.com/users/TheAks999/repos","events_url":"https://api.github.com/users/TheAks999/events{/privacy}","received_events_url":"https://api.github.com/users/TheAks999/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2015-08-29T20:21:32Z","updated_at":"2015-08-30T00:02:14Z","closed_at":"2015-08-30T00:02:14Z","author_association":"NONE","body":"When you create a new headless application there are some crucial components that are missed in initialization that are needed for using part of the backend.\n\nSo far I have found that it missed Gdx.gl and Gdx.gl20 and you cannot create a new texture without these. Also there are a lot of little things inside of that area that need more than just mock(GL20.class)\n\nlike compiling shaders:\ncom.badlogic.gdx.graphics.g2d.SpriteBatch.createDefaultShader(SpriteBatch.java:157)\n\nThis is for libgdx version 1.6.5, however the appropriate code doesn't look like it is available for more recent versions.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3383/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3382","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3382/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3382/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3382/events","html_url":"https://github.com/libgdx/libgdx/issues/3382","id":103779346,"number":3382,"title":"Exclude fields from toJson","user":{"login":"mtsr","id":1319584,"avatar_url":"https://avatars2.githubusercontent.com/u/1319584?v=4","gravatar_id":"","url":"https://api.github.com/users/mtsr","html_url":"https://github.com/mtsr","followers_url":"https://api.github.com/users/mtsr/followers","following_url":"https://api.github.com/users/mtsr/following{/other_user}","gists_url":"https://api.github.com/users/mtsr/gists{/gist_id}","starred_url":"https://api.github.com/users/mtsr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mtsr/subscriptions","organizations_url":"https://api.github.com/users/mtsr/orgs","repos_url":"https://api.github.com/users/mtsr/repos","events_url":"https://api.github.com/users/mtsr/events{/privacy}","received_events_url":"https://api.github.com/users/mtsr/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2015-08-28T19:18:22Z","updated_at":"2015-08-28T19:41:39Z","closed_at":"2015-08-28T19:41:20Z","author_association":"NONE","body":"It would be super useful to be able to exclude fields from Json.writeFields(), for example by adding a @Transient annotation.\n\nPS If this is something that would be considered, I can do a PR for it.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3382/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3381","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3381/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3381/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3381/events","html_url":"https://github.com/libgdx/libgdx/pull/3381","id":103740955,"number":3381,"title":"Added APK Expansions support","user":{"login":"sarkanyi","id":1218556,"avatar_url":"https://avatars0.githubusercontent.com/u/1218556?v=4","gravatar_id":"","url":"https://api.github.com/users/sarkanyi","html_url":"https://github.com/sarkanyi","followers_url":"https://api.github.com/users/sarkanyi/followers","following_url":"https://api.github.com/users/sarkanyi/following{/other_user}","gists_url":"https://api.github.com/users/sarkanyi/gists{/gist_id}","starred_url":"https://api.github.com/users/sarkanyi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sarkanyi/subscriptions","organizations_url":"https://api.github.com/users/sarkanyi/orgs","repos_url":"https://api.github.com/users/sarkanyi/repos","events_url":"https://api.github.com/users/sarkanyi/events{/privacy}","received_events_url":"https://api.github.com/users/sarkanyi/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2015-08-28T15:35:22Z","updated_at":"2015-09-14T06:41:01Z","closed_at":"2015-09-10T13:33:06Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3381","html_url":"https://github.com/libgdx/libgdx/pull/3381","diff_url":"https://github.com/libgdx/libgdx/pull/3381.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3381.patch"},"body":"Adds APK expansion support. This is especially important for Audio, because otherwise lots of hacks have to be made to play audio.\nThe ZipFileHandleResolver can be used with the AssetManager to automatically load assets from the OBB instead of the local storage (AssetManager.setLoader() ha to be used).\nThe changes wouldn't break anything and add some extra convenience for those who want to release on the Play Store and have lots of assets (both audio and graphics).\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3381/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3380","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3380/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3380/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3380/events","html_url":"https://github.com/libgdx/libgdx/issues/3380","id":103738516,"number":3380,"title":"Suggestion: add setAlpha() for Actor","user":{"login":"rotter","id":918721,"avatar_url":"https://avatars2.githubusercontent.com/u/918721?v=4","gravatar_id":"","url":"https://api.github.com/users/rotter","html_url":"https://github.com/rotter","followers_url":"https://api.github.com/users/rotter/followers","following_url":"https://api.github.com/users/rotter/following{/other_user}","gists_url":"https://api.github.com/users/rotter/gists{/gist_id}","starred_url":"https://api.github.com/users/rotter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rotter/subscriptions","organizations_url":"https://api.github.com/users/rotter/orgs","repos_url":"https://api.github.com/users/rotter/repos","events_url":"https://api.github.com/users/rotter/events{/privacy}","received_events_url":"https://api.github.com/users/rotter/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2015-08-28T15:21:54Z","updated_at":"2015-08-29T23:01:48Z","closed_at":"2015-08-29T07:26:26Z","author_association":"NONE","body":"Quick/simple suggestion, as I end up doing this manually all the time:\n\nAdd the following method around line 631 of Actor.java.\n\nFile/line: https://github.com/libgdx/libgdx/blob/master/gdx/src/com/badlogic/gdx/scenes/scene2d/Actor.java#L630\n\nMethod:\npublic void setAlpha (float a) {\n    color.set(color.r, color.g, color.b, a);\n}\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3380/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3379","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3379/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3379/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3379/events","html_url":"https://github.com/libgdx/libgdx/pull/3379","id":103544133,"number":3379,"title":"Add .jpeg support","user":{"login":"kotcrab","id":4594081,"avatar_url":"https://avatars1.githubusercontent.com/u/4594081?v=4","gravatar_id":"","url":"https://api.github.com/users/kotcrab","html_url":"https://github.com/kotcrab","followers_url":"https://api.github.com/users/kotcrab/followers","following_url":"https://api.github.com/users/kotcrab/following{/other_user}","gists_url":"https://api.github.com/users/kotcrab/gists{/gist_id}","starred_url":"https://api.github.com/users/kotcrab/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kotcrab/subscriptions","organizations_url":"https://api.github.com/users/kotcrab/orgs","repos_url":"https://api.github.com/users/kotcrab/repos","events_url":"https://api.github.com/users/kotcrab/events{/privacy}","received_events_url":"https://api.github.com/users/kotcrab/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2015-08-27T16:12:12Z","updated_at":"2015-08-30T20:01:36Z","closed_at":"2015-08-30T20:01:36Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3379","html_url":"https://github.com/libgdx/libgdx/pull/3379","diff_url":"https://github.com/libgdx/libgdx/pull/3379.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3379.patch"},"body":"Fixed some problems with `*.jpeg` files support, like texture packer ignoring jpeg files. Jpeg and jpg and essentially the same so it's just few lines changed.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3379/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}}],"meta":{"x-ratelimit-limit":"5000","x-ratelimit-remaining":"4949","x-ratelimit-reset":"1506844633","x-github-request-id":"E160:0285:1030630:1FBF72C:59D094A3","x-github-media-type":"github.squirrel-girl-preview","link":"<https://api.github.com/repositories/5373551/issues?state=all&page=52>; rel=\"next\", <https://api.github.com/repositories/5373551/issues?state=all&page=164>; rel=\"last\", <https://api.github.com/repositories/5373551/issues?state=all&page=1>; rel=\"first\", <https://api.github.com/repositories/5373551/issues?state=all&page=50>; rel=\"prev\"","etag":"\"9b6a0c4fb2818e1d971fc53b0fa0cce8\"","status":"200 OK"}}
