{"data":[{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3738","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3738/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3738/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3738/events","html_url":"https://github.com/libgdx/libgdx/pull/3738","id":127027797,"number":3738,"title":"Make btDbvtNode and btDbvtAabbMm poolable","user":{"login":"jsjolund","id":174467,"avatar_url":"https://avatars0.githubusercontent.com/u/174467?v=4","gravatar_id":"","url":"https://api.github.com/users/jsjolund","html_url":"https://github.com/jsjolund","followers_url":"https://api.github.com/users/jsjolund/followers","following_url":"https://api.github.com/users/jsjolund/following{/other_user}","gists_url":"https://api.github.com/users/jsjolund/gists{/gist_id}","starred_url":"https://api.github.com/users/jsjolund/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jsjolund/subscriptions","organizations_url":"https://api.github.com/users/jsjolund/orgs","repos_url":"https://api.github.com/users/jsjolund/repos","events_url":"https://api.github.com/users/jsjolund/events{/privacy}","received_events_url":"https://api.github.com/users/jsjolund/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-01-16T14:17:12Z","updated_at":"2016-01-16T14:21:50Z","closed_at":"2016-01-16T14:21:43Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3738","html_url":"https://github.com/libgdx/libgdx/pull/3738","diff_url":"https://github.com/libgdx/libgdx/pull/3738.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3738.patch"},"body":"The Bullet wrapper changes from https://github.com/libgdx/libgdx/pull/3730\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3738/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3737","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3737/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3737/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3737/events","html_url":"https://github.com/libgdx/libgdx/issues/3737","id":126893236,"number":3737,"title":"HTML sample compile error","user":{"login":"slajar","id":1584274,"avatar_url":"https://avatars0.githubusercontent.com/u/1584274?v=4","gravatar_id":"","url":"https://api.github.com/users/slajar","html_url":"https://github.com/slajar","followers_url":"https://api.github.com/users/slajar/followers","following_url":"https://api.github.com/users/slajar/following{/other_user}","gists_url":"https://api.github.com/users/slajar/gists{/gist_id}","starred_url":"https://api.github.com/users/slajar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/slajar/subscriptions","organizations_url":"https://api.github.com/users/slajar/orgs","repos_url":"https://api.github.com/users/slajar/repos","events_url":"https://api.github.com/users/slajar/events{/privacy}","received_events_url":"https://api.github.com/users/slajar/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2016-01-15T15:20:23Z","updated_at":"2016-01-18T09:07:29Z","closed_at":"2016-01-15T16:04:23Z","author_association":"NONE","body":"I just downloaded the samplecode by gdx-setup.jar and ran desktop --> worked. After that I ran the gradle compileGwt task and it gives:\n\n<code>\n[ERROR] Unable to find 'com/artemis/backends/artemis_backends_gwt.gwt.xml' on your classpath; could be a typo, or maybe you forgot to include a classpath entry for source?\n</code>\n\nIt seems that html compile is broken.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3737/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3736","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3736/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3736/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3736/events","html_url":"https://github.com/libgdx/libgdx/issues/3736","id":126817448,"number":3736,"title":"Android networking code fails on numerous devices on WIFI if domain name is resolved to an IPv6 address","user":{"login":"JavaNoobsyBoobsy","id":261571,"avatar_url":"https://avatars1.githubusercontent.com/u/261571?v=4","gravatar_id":"","url":"https://api.github.com/users/JavaNoobsyBoobsy","html_url":"https://github.com/JavaNoobsyBoobsy","followers_url":"https://api.github.com/users/JavaNoobsyBoobsy/followers","following_url":"https://api.github.com/users/JavaNoobsyBoobsy/following{/other_user}","gists_url":"https://api.github.com/users/JavaNoobsyBoobsy/gists{/gist_id}","starred_url":"https://api.github.com/users/JavaNoobsyBoobsy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JavaNoobsyBoobsy/subscriptions","organizations_url":"https://api.github.com/users/JavaNoobsyBoobsy/orgs","repos_url":"https://api.github.com/users/JavaNoobsyBoobsy/repos","events_url":"https://api.github.com/users/JavaNoobsyBoobsy/events{/privacy}","received_events_url":"https://api.github.com/users/JavaNoobsyBoobsy/received_events","type":"User","site_admin":false},"labels":[{"id":59604218,"url":"https://api.github.com/repos/libgdx/libgdx/labels/android","name":"android","color":"009800","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2016-01-15T06:48:28Z","updated_at":"2016-01-22T01:47:12Z","closed_at":"2016-01-22T01:47:12Z","author_association":"NONE","body":"We have a networked game communicating with servers using HTTP. We have received dozen of complaints of players not being able to connect to the server. \n\nThe issue is 100% reproductible \nIF your network receives an IPv6 AND\nIF you have an Android device with OS < 4.3 (possibly also affects newer devices).\n\nThe current network implementation for Android fails immediately in `NetJavaImpl.sendHttpRequest`\nThe reason is because a time out value is set on the connection. If a timeout value is set on the connection, the call to `connection.connect()` fails immediately (1 sec.) instead of exhausting the timeout value (30,000 = 30 sec.) if an IPv6 is provided by the network.\nerror: \"failed to connect to game.uniwar.com/2600:3c00::f03c:91ff:fea8:53af (port 80) after 30000ms\"\ndespite what this message says, it fails immediately.\n\n_NOT CALLING the method below fixes the problem_.\n`connection.setConnectTimeout(httpRequest.getTimeOut());`\nI suggest to remove this line from the Android implementation or to change the API to have 2 time out setters one for the connection & one for the read. Anyway, I am not even sure if Android implements a timeout on the connection...\n\nI am wondering if the Android implementation is buggy. When failing to connect to IPv6 address, it will not try to connect to IPv4 as it should. The internal Android Implementation does not seem to follow the contract described below:\n\n[Android spec URLConnection](http://developer.android.com/reference/java/net/URLConnection.html#setConnectTimeout%28int%29)\n\nSome posts from [Google suggesting that their implementation might be broken](https://code.google.com/p/android/issues/detail?id=40874)\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3736/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3735","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3735/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3735/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3735/events","html_url":"https://github.com/libgdx/libgdx/pull/3735","id":126817402,"number":3735,"title":"Add optional GLES3 functionality to the FrameBuffer class","user":{"login":"sastraxi","id":898348,"avatar_url":"https://avatars3.githubusercontent.com/u/898348?v=4","gravatar_id":"","url":"https://api.github.com/users/sastraxi","html_url":"https://github.com/sastraxi","followers_url":"https://api.github.com/users/sastraxi/followers","following_url":"https://api.github.com/users/sastraxi/following{/other_user}","gists_url":"https://api.github.com/users/sastraxi/gists{/gist_id}","starred_url":"https://api.github.com/users/sastraxi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sastraxi/subscriptions","organizations_url":"https://api.github.com/users/sastraxi/orgs","repos_url":"https://api.github.com/users/sastraxi/repos","events_url":"https://api.github.com/users/sastraxi/events{/privacy}","received_events_url":"https://api.github.com/users/sastraxi/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2016-01-15T06:47:52Z","updated_at":"2016-05-25T12:11:06Z","closed_at":null,"author_association":"NONE","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3735","html_url":"https://github.com/libgdx/libgdx/pull/3735","diff_url":"https://github.com/libgdx/libgdx/pull/3735.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3735.patch"},"body":"A new class that exposes OpenGL ES 3.0 framebuffer features to libgdx\n- floating-point textures/renderbuffers\n- multiple (color) render targets\n- depth/depth+stencil textures (in addition to renderbuffers)\n\nWould love to get some comments on the approach used here. I haven't run through the style checker yet as I would like some feedback before cleaning up; I'll also add a test class that uses its functionality.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3735/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3734","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3734/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3734/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3734/events","html_url":"https://github.com/libgdx/libgdx/issues/3734","id":126810053,"number":3734,"title":"TextureAttribute does not implement java.lang.Comparable correctly","user":{"login":"vinaysshenoyhl","id":15632203,"avatar_url":"https://avatars3.githubusercontent.com/u/15632203?v=4","gravatar_id":"","url":"https://api.github.com/users/vinaysshenoyhl","html_url":"https://github.com/vinaysshenoyhl","followers_url":"https://api.github.com/users/vinaysshenoyhl/followers","following_url":"https://api.github.com/users/vinaysshenoyhl/following{/other_user}","gists_url":"https://api.github.com/users/vinaysshenoyhl/gists{/gist_id}","starred_url":"https://api.github.com/users/vinaysshenoyhl/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vinaysshenoyhl/subscriptions","organizations_url":"https://api.github.com/users/vinaysshenoyhl/orgs","repos_url":"https://api.github.com/users/vinaysshenoyhl/repos","events_url":"https://api.github.com/users/vinaysshenoyhl/events{/privacy}","received_events_url":"https://api.github.com/users/vinaysshenoyhl/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-01-15T05:25:27Z","updated_at":"2016-01-15T18:01:34Z","closed_at":"2016-01-15T18:01:34Z","author_association":"NONE","body":"The [Comparable](https://docs.oracle.com/javase/7/docs/api/java/lang/Comparable.html) interface contract states that the method should return a negative value if this object is less than, 0 if this object is equal and a positive value if this object is greater than the other object.\n\nI noticed that the TextureAttribute class seems to be doing the opposite when comparing the offset and scale fields.\n\nhttps://github.com/libgdx/libgdx/blob/master/gdx/src/com/badlogic/gdx/graphics/g3d/attributes/TextureAttribute.java#L188\n\nIs this intentional?\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3734/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3733","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3733/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3733/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3733/events","html_url":"https://github.com/libgdx/libgdx/issues/3733","id":126656929,"number":3733,"title":"TV remote gamepad profile support for tvos","user":{"login":"cobolfoo","id":7122729,"avatar_url":"https://avatars1.githubusercontent.com/u/7122729?v=4","gravatar_id":"","url":"https://api.github.com/users/cobolfoo","html_url":"https://github.com/cobolfoo","followers_url":"https://api.github.com/users/cobolfoo/followers","following_url":"https://api.github.com/users/cobolfoo/following{/other_user}","gists_url":"https://api.github.com/users/cobolfoo/gists{/gist_id}","starred_url":"https://api.github.com/users/cobolfoo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cobolfoo/subscriptions","organizations_url":"https://api.github.com/users/cobolfoo/orgs","repos_url":"https://api.github.com/users/cobolfoo/repos","events_url":"https://api.github.com/users/cobolfoo/events{/privacy}","received_events_url":"https://api.github.com/users/cobolfoo/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-01-14T13:41:52Z","updated_at":"2016-01-14T13:41:52Z","closed_at":null,"author_association":"CONTRIBUTOR","body":"I would really like to have gamepad profile supported in robovm for tvos, I want to port my game (http://store.steampowered.com/app/412230/) to it but I need at least 2 buttons to be supported (jump, crouch) along the dpad.\n\nSo far, the TV remote generates touchUp, touchDown and touchDragged events, which is great but it will not make the difference between a click on the touchpad andr a simple swipe. The other buttons do not generate anything.\n\nHere is what I have done so far. \n- I added 2 frameworks to robovm.xml:\n  <framework>CoreBluetooth</framework>\n  <framework>GameController</framework>\n- When I run the game I do that (after intialization):\n  if (GCController.getControllers().size() > 0) {\n            controller = GCController.getControllers().first();\n            System.out.println(\"CONTROLLER:\" + controller);\n            System.out.println(\"VENDOR NAME:\" + controller.getVendorName());\n            System.out.println(\"ATTACHED?:\" + controller.isAttachedToDevice());\n            System.out.println(\"PLAYER INDEX:\" + controller.getPlayerIndex());\n            System.out.println(\"GAMEPAD EXTENDED: \" + controller.getExtendedGamepad());\n            System.out.println(\"GAMEPAD:\" + controller.getGamepad());\n  }\n\nI detect 1 controller, which is a Remote (vendor name),  attached is false, player index is not set. \nBoth gamepad and extended gamepad are NULL.\n\nIt looks like to me that robovm needs to implement GCMicroGamepad. https://developer.apple.com/library/tvos/documentation/GameController/Reference/GCMicroGamepad_Ref/index.html\n\nBut again I don't have access to robovm source. Maybe all the controller stuff is full of stub functions :)\n\nIt is possible to extends the current GCController class than use the BRO thing to add support for GCMicroGamepad?\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3733/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3732","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3732/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3732/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3732/events","html_url":"https://github.com/libgdx/libgdx/issues/3732","id":126656752,"number":3732,"title":"Gdx.input.setCursorPosition bug when catched [LWJGL 3]","user":{"login":"MrJavaFrank","id":5160805,"avatar_url":"https://avatars2.githubusercontent.com/u/5160805?v=4","gravatar_id":"","url":"https://api.github.com/users/MrJavaFrank","html_url":"https://github.com/MrJavaFrank","followers_url":"https://api.github.com/users/MrJavaFrank/followers","following_url":"https://api.github.com/users/MrJavaFrank/following{/other_user}","gists_url":"https://api.github.com/users/MrJavaFrank/gists{/gist_id}","starred_url":"https://api.github.com/users/MrJavaFrank/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MrJavaFrank/subscriptions","organizations_url":"https://api.github.com/users/MrJavaFrank/orgs","repos_url":"https://api.github.com/users/MrJavaFrank/repos","events_url":"https://api.github.com/users/MrJavaFrank/events{/privacy}","received_events_url":"https://api.github.com/users/MrJavaFrank/received_events","type":"User","site_admin":false},"labels":[{"id":309796149,"url":"https://api.github.com/repos/libgdx/libgdx/labels/LWJGL3","name":"LWJGL3","color":"d4c5f9","default":false}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-01-14T13:40:45Z","updated_at":"2016-03-14T14:37:55Z","closed_at":null,"author_association":"NONE","body":"With the new LWJGL 3 backend the `Gdx.input.setCursorPosition(x, y)` method works fine as long as the cursor isn't catched. However when the cursor is catched, it behaves really weird. So it is always near the position i want it to be, but never exactly at the position.\nHere the releveant code snippet to test :\n\n``` java\npublic class CursorTest extends ApplicationAdapter implements InputProcessor {\n    boolean holdMouse;\n\n    @Override\n    public void create () {\n        Gdx.input.setInputProcessor(this);\n    }\n\n    @Override\n    public void render () {\n        if(holdMouse) { \n            Gdx.input.setCursorPosition(100, 100);\n        }\n        Gdx.app.log(\"Mouse Position\", Gdx.input.getX() + \", \" + Gdx.input.getY());\n    }\n\n    @Override\n    public boolean keyDown(int keycode) {\n        if(keycode == Keys.C) Gdx.input.setCursorCatched(!Gdx.input.isCursorCatched());\n        if(keycode == Keys.M) holdMouse = !holdMouse;\n        return false;\n    }\n    ...\n}\n```\n\n[Desktop, Java 8 Update 66 (64 Bit), libGDX 1.8.0/1.8.1-SNAPSHOT with the LWJGL 3 backend, Windows 10]\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3732/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3731","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3731/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3731/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3731/events","html_url":"https://github.com/libgdx/libgdx/issues/3731","id":126508238,"number":3731,"title":"Pixmap#GetPixel() may return wrong value after line()","user":{"login":"intrigus","id":10353467,"avatar_url":"https://avatars2.githubusercontent.com/u/10353467?v=4","gravatar_id":"","url":"https://api.github.com/users/intrigus","html_url":"https://github.com/intrigus","followers_url":"https://api.github.com/users/intrigus/followers","following_url":"https://api.github.com/users/intrigus/following{/other_user}","gists_url":"https://api.github.com/users/intrigus/gists{/gist_id}","starred_url":"https://api.github.com/users/intrigus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/intrigus/subscriptions","organizations_url":"https://api.github.com/users/intrigus/orgs","repos_url":"https://api.github.com/users/intrigus/repos","events_url":"https://api.github.com/users/intrigus/events{/privacy}","received_events_url":"https://api.github.com/users/intrigus/received_events","type":"User","site_admin":false},"labels":[{"id":67383148,"url":"https://api.github.com/repos/libgdx/libgdx/labels/gwt","name":"gwt","color":"5319e7","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-01-13T20:40:30Z","updated_at":"2016-01-14T17:30:45Z","closed_at":"2016-01-13T21:20:22Z","author_association":"CONTRIBUTOR","body":"https://github.com/libgdx/libgdx/blob/master/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/com/badlogic/gdx/graphics/Pixmap.java#L353\n\nThe value for getPixel() is only updated when pixels == null; \nAll other drawing functions set pixels == null, so it gets updated.\n https://github.com/libgdx/libgdx/blob/master/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/com/badlogic/gdx/graphics/Pixmap.java#L397 https://github.com/libgdx/libgdx/blob/master/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/com/badlogic/gdx/graphics/Pixmap.java#L438  https://github.com/libgdx/libgdx/blob/master/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/com/badlogic/gdx/graphics/Pixmap.java#L464 https://github.com/libgdx/libgdx/blob/master/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/com/badlogic/gdx/graphics/Pixmap.java#L481\n\n`line(int x, int y, int x2, int y2, DrawType drawType)` doesn't: https://github.com/libgdx/libgdx/blob/master/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/com/badlogic/gdx/graphics/Pixmap.java#L418\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3731/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3730","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3730/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3730/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3730/events","html_url":"https://github.com/libgdx/libgdx/pull/3730","id":126471341,"number":3730,"title":"Bullet k-DOP and occlusion culling test.","user":{"login":"jsjolund","id":174467,"avatar_url":"https://avatars0.githubusercontent.com/u/174467?v=4","gravatar_id":"","url":"https://api.github.com/users/jsjolund","html_url":"https://github.com/jsjolund","followers_url":"https://api.github.com/users/jsjolund/followers","following_url":"https://api.github.com/users/jsjolund/following{/other_user}","gists_url":"https://api.github.com/users/jsjolund/gists{/gist_id}","starred_url":"https://api.github.com/users/jsjolund/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jsjolund/subscriptions","organizations_url":"https://api.github.com/users/jsjolund/orgs","repos_url":"https://api.github.com/users/jsjolund/repos","events_url":"https://api.github.com/users/jsjolund/events{/privacy}","received_events_url":"https://api.github.com/users/jsjolund/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2016-01-13T17:31:07Z","updated_at":"2016-01-17T00:27:54Z","closed_at":"2016-01-17T00:27:54Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3730","html_url":"https://github.com/libgdx/libgdx/pull/3730","diff_url":"https://github.com/libgdx/libgdx/pull/3730.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3730.patch"},"body":"Occlusion culling is a camera frustum culling technique which calculates not only whether an object is inside the frustum, but also if it is visible from the point of view of the camera.\n\nk-DOP culling (k-Discrete Oriented Polytope) is a more conventional frustum culling, which uses the broadphase bounding volume tree to accelerate the culling. In this way, not all objects in the world need to be checked whether or not they are inside the frustum.\n\nDemo: http://youtu.be/c1ncEbdDRvo\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3730/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3729","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3729/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3729/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3729/events","html_url":"https://github.com/libgdx/libgdx/pull/3729","id":126456175,"number":3729,"title":"Preparing for gdx-bullet-gwt.","user":{"login":"xpenatan","id":6472084,"avatar_url":"https://avatars3.githubusercontent.com/u/6472084?v=4","gravatar_id":"","url":"https://api.github.com/users/xpenatan","html_url":"https://github.com/xpenatan","followers_url":"https://api.github.com/users/xpenatan/followers","following_url":"https://api.github.com/users/xpenatan/following{/other_user}","gists_url":"https://api.github.com/users/xpenatan/gists{/gist_id}","starred_url":"https://api.github.com/users/xpenatan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xpenatan/subscriptions","organizations_url":"https://api.github.com/users/xpenatan/orgs","repos_url":"https://api.github.com/users/xpenatan/repos","events_url":"https://api.github.com/users/xpenatan/events{/privacy}","received_events_url":"https://api.github.com/users/xpenatan/received_events","type":"User","site_admin":false},"labels":[{"id":67383148,"url":"https://api.github.com/repos/libgdx/libgdx/labels/gwt","name":"gwt","color":"5319e7","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2016-01-13T16:23:41Z","updated_at":"2016-03-14T22:26:44Z","closed_at":"2016-03-14T22:26:44Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3729","html_url":"https://github.com/libgdx/libgdx/pull/3729","diff_url":"https://github.com/libgdx/libgdx/pull/3729.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3729.patch"},"body":"I'm creating bullet gwt extension and for it to work fine with gdx-test and other projects a small change is needed. (https://github.com/xpenatan/gdx-bullet-gwt)  \n\n1: System.Load  not supported in GWT. \n2: a .gwt file has to be in bullet directory.  It exclude some files when launching gwt.\n\nI rollback a commit to remove the generated jni ContactListener changes.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3729/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3728","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3728/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3728/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3728/events","html_url":"https://github.com/libgdx/libgdx/pull/3728","id":126280655,"number":3728,"title":"logo replaced with clean version","user":{"login":"jppresents","id":6362294,"avatar_url":"https://avatars1.githubusercontent.com/u/6362294?v=4","gravatar_id":"","url":"https://api.github.com/users/jppresents","html_url":"https://github.com/jppresents","followers_url":"https://api.github.com/users/jppresents/followers","following_url":"https://api.github.com/users/jppresents/following{/other_user}","gists_url":"https://api.github.com/users/jppresents/gists{/gist_id}","starred_url":"https://api.github.com/users/jppresents/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jppresents/subscriptions","organizations_url":"https://api.github.com/users/jppresents/orgs","repos_url":"https://api.github.com/users/jppresents/repos","events_url":"https://api.github.com/users/jppresents/events{/privacy}","received_events_url":"https://api.github.com/users/jppresents/received_events","type":"User","site_admin":false},"labels":[{"id":67383148,"url":"https://api.github.com/repos/libgdx/libgdx/labels/gwt","name":"gwt","color":"5319e7","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-01-12T21:29:36Z","updated_at":"2016-01-19T20:25:05Z","closed_at":"2016-01-19T20:25:05Z","author_association":"NONE","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3728","html_url":"https://github.com/libgdx/libgdx/pull/3728","diff_url":"https://github.com/libgdx/libgdx/pull/3728.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3728.patch"},"body":"I noticed that the libgdx logo that is displayed when loading gwt builds had alot of dirty pixels (see picture 1) and that there was a clean logo already displayed in the readme.md.\n\nI replaced the \"dirty\" logo with the clean one, and I think it looks much nicer. (see picture 2).\n\nThe pull request replaces the logo with the other one (while keeping the png dimensions the same).\n\nBoth pictures are screenshots from a libgdx loading screen in chrome (default background color).\nNotice the artifacts around the \"b\" and some of the \"GDX\".\n\npicture 1:http://i.imgur.com/WajBHMy.png\n\npicture 2: http://i.imgur.com/YLroSke.png\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3728/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3727","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3727/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3727/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3727/events","html_url":"https://github.com/libgdx/libgdx/issues/3727","id":126211533,"number":3727,"title":"Fonts in LibGDX1.8","user":{"login":"Trurl101","id":1546629,"avatar_url":"https://avatars0.githubusercontent.com/u/1546629?v=4","gravatar_id":"","url":"https://api.github.com/users/Trurl101","html_url":"https://github.com/Trurl101","followers_url":"https://api.github.com/users/Trurl101/followers","following_url":"https://api.github.com/users/Trurl101/following{/other_user}","gists_url":"https://api.github.com/users/Trurl101/gists{/gist_id}","starred_url":"https://api.github.com/users/Trurl101/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Trurl101/subscriptions","organizations_url":"https://api.github.com/users/Trurl101/orgs","repos_url":"https://api.github.com/users/Trurl101/repos","events_url":"https://api.github.com/users/Trurl101/events{/privacy}","received_events_url":"https://api.github.com/users/Trurl101/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2016-01-12T16:01:32Z","updated_at":"2016-03-29T04:57:47Z","closed_at":"2016-03-29T04:57:47Z","author_association":"CONTRIBUTOR","body":"Some issues I found with the fonts/labels in LibGDX 1.8\n\nIf I use very large size for a freetype font (like above 300px) the fonts is messed up. Some char textures are displaced. It seems this happens only when the font size is so big that more than one 1024x1024 texture is used for the character texture.\n\nIf I use scene2D label with an empty string the font data is messed up for all Labels created after that (fonts appear invisible or displaced).\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3727/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3726","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3726/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3726/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3726/events","html_url":"https://github.com/libgdx/libgdx/issues/3726","id":126210945,"number":3726,"title":"gdx-tools should not reference gdx-backend-lwjgl directly","user":{"login":"darkfrog26","id":877534,"avatar_url":"https://avatars2.githubusercontent.com/u/877534?v=4","gravatar_id":"","url":"https://api.github.com/users/darkfrog26","html_url":"https://github.com/darkfrog26","followers_url":"https://api.github.com/users/darkfrog26/followers","following_url":"https://api.github.com/users/darkfrog26/following{/other_user}","gists_url":"https://api.github.com/users/darkfrog26/gists{/gist_id}","starred_url":"https://api.github.com/users/darkfrog26/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/darkfrog26/subscriptions","organizations_url":"https://api.github.com/users/darkfrog26/orgs","repos_url":"https://api.github.com/users/darkfrog26/repos","events_url":"https://api.github.com/users/darkfrog26/events{/privacy}","received_events_url":"https://api.github.com/users/darkfrog26/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2016-01-12T15:58:40Z","updated_at":"2016-12-10T18:28:26Z","closed_at":"2016-12-10T18:28:26Z","author_association":"NONE","body":"I am trying to switch from gdx-backend-lwjgl to gdx-backend-lwjgl3 and it's still pulling in gdx-backend-lwjgl because of the reference in gdx-tools to it.  This is a problem since I am using tools in my application (BitmapFontWriter to create font caches).\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3726/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3725","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3725/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3725/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3725/events","html_url":"https://github.com/libgdx/libgdx/issues/3725","id":125977994,"number":3725,"title":"GWT DataOutputStream writeUTF(\"\")","user":{"login":"TaiVuong","id":12879647,"avatar_url":"https://avatars0.githubusercontent.com/u/12879647?v=4","gravatar_id":"","url":"https://api.github.com/users/TaiVuong","html_url":"https://github.com/TaiVuong","followers_url":"https://api.github.com/users/TaiVuong/followers","following_url":"https://api.github.com/users/TaiVuong/following{/other_user}","gists_url":"https://api.github.com/users/TaiVuong/gists{/gist_id}","starred_url":"https://api.github.com/users/TaiVuong/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/TaiVuong/subscriptions","organizations_url":"https://api.github.com/users/TaiVuong/orgs","repos_url":"https://api.github.com/users/TaiVuong/repos","events_url":"https://api.github.com/users/TaiVuong/events{/privacy}","received_events_url":"https://api.github.com/users/TaiVuong/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2016-01-11T16:11:18Z","updated_at":"2016-01-11T16:30:31Z","closed_at":"2016-01-11T16:24:06Z","author_association":"NONE","body":"add 2 byte to check empty string\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3725/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3724","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3724/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3724/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3724/events","html_url":"https://github.com/libgdx/libgdx/issues/3724","id":125974722,"number":3724,"title":"GWT Reflection unknown error","user":{"login":"bornskilled200","id":2602658,"avatar_url":"https://avatars0.githubusercontent.com/u/2602658?v=4","gravatar_id":"","url":"https://api.github.com/users/bornskilled200","html_url":"https://github.com/bornskilled200","followers_url":"https://api.github.com/users/bornskilled200/followers","following_url":"https://api.github.com/users/bornskilled200/following{/other_user}","gists_url":"https://api.github.com/users/bornskilled200/gists{/gist_id}","starred_url":"https://api.github.com/users/bornskilled200/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bornskilled200/subscriptions","organizations_url":"https://api.github.com/users/bornskilled200/orgs","repos_url":"https://api.github.com/users/bornskilled200/repos","events_url":"https://api.github.com/users/bornskilled200/events{/privacy}","received_events_url":"https://api.github.com/users/bornskilled200/received_events","type":"User","site_admin":false},"labels":[{"id":67383148,"url":"https://api.github.com/repos/libgdx/libgdx/labels/gwt","name":"gwt","color":"5319e7","default":false}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2016-01-11T15:55:59Z","updated_at":"2016-01-13T20:56:35Z","closed_at":null,"author_association":"CONTRIBUTOR","body":"Getting a type, which is not in the cache, for a field an javascript exception in GWT rather than returning null or maybe a ReflectionException.\n\nTest.java\n\n```\npackage com.unseenspace.test;\n\nimport com.badlogic.gdx.ApplicationAdapter;\nimport com.badlogic.gdx.Gdx;\nimport com.badlogic.gdx.graphics.g2d.SpriteBatch;\nimport com.badlogic.gdx.scenes.scene2d.Actor;\nimport com.badlogic.gdx.utils.reflect.ClassReflection;\nimport com.badlogic.gdx.utils.reflect.Field;\nimport com.badlogic.gdx.utils.reflect.ReflectionException;\n\npublic class ReflectionTest extends ApplicationAdapter {\n    @Override\n    public void create() {\n        try {\n            printFields();\n            printField(\"itself\");\n            printField(\"cli\");\n            printField(\"string\");\n            printField(\"batch\");\n            printField(\"output\");\n        } catch (ReflectionException e) {\n            Gdx.app.error(\"Outer\", \"ReflectionException thrown\");\n            e.printStackTrace();\n        }\n    }\n\n    private void printField(String name) throws ReflectionException {\n        Field field = ClassReflection.getDeclaredField(Bean.class, name);\n        Class type = null;\n        try {\n            type = field.getType();\n        } catch (RuntimeException e) {\n            Gdx.app.error(\"Inner\", \"Inner Exception thrown\" + e + e.getMessage());\n            e.printStackTrace();\n        }\n        Gdx.app.error(\"Outcome\", \"type of \" + name + \" is \" + type);\n        Gdx.app.error(\"\", \"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\");\n    }\n\n    private void printFields() throws ReflectionException {\n        Field[] fields = ClassReflection.getDeclaredFields(Bean.class);\n        for (Field field : fields) {\n            Class type = null;\n            try {\n                type = field.getType();\n            } catch (RuntimeException e) {\n                Gdx.app.error(\"Inner\", \"Inner Exception thrown\" + e + e.getMessage());\n                e.printStackTrace();\n            }\n            Gdx.app.error(\"Outcome\", \"type of \" + field.getName()  + \" is \" + type);\n            Gdx.app.error(\"\", \"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\");\n        }\n    }\n\n    public static class Bean {\n        private SpriteBatch batch;\n        private String string = \"something\";\n        private Actor actor;\n        private Bean itself = this;\n    }\n}\n```\n\nyour .gwt.xml should have\n\n```\n<extend-configuration-property name=\"gdx.reflect.include\" value=\"com.unseenspace.test.ReflectionTest\" />\n```\n\noutput\n\n```\nInner: Inner Exception thrownjava.lang.RuntimeException: Couldn't find Type for class 'com.badlogic.gdx.graphics.g2d.SpriteBatch'Couldn't find Type for class 'com.badlogic.gdx.graphics.g2d.SpriteBatch'\n\nOutcome: type of batch is null\n\n: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nOutcome: type of string is class java.lang.String\n\n: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nOutcome: type of actor is class com.badlogic.gdx.scenes.scene2d.Actor\n\n: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nOutcome: type of itself is class com.unseenspace.test.ReflectionTest$Bean\n\n: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nInner: Inner Exception throwncom.google.gwt.core.client.JavaScriptException: (TypeError) \n __gwt$exception: <skipped>: Cannot read property 'type_0' of null(TypeError) \n __gwt$exception: <skipped>: Cannot read property 'type_0' of null\n\nOutcome: type of itself is null\n\n: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nInner: Inner Exception throwncom.google.gwt.core.client.JavaScriptException: (TypeError) \n __gwt$exception: <skipped>: Cannot read property 'type_0' of null(TypeError) \n __gwt$exception: <skipped>: Cannot read property 'type_0' of null\n\nOutcome: type of cli is null\n\n: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nInner: Inner Exception throwncom.google.gwt.core.client.JavaScriptException: (TypeError) \n __gwt$exception: <skipped>: Cannot read property 'type_0' of null(TypeError) \n __gwt$exception: <skipped>: Cannot read property 'type_0' of null\n\nOutcome: type of string is null\n\n: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nInner: Inner Exception throwncom.google.gwt.core.client.JavaScriptException: (TypeError) \n __gwt$exception: <skipped>: Cannot read property 'type_0' of null(TypeError) \n __gwt$exception: <skipped>: Cannot read property 'type_0' of null\n\nOutcome: type of batch is null\n\n: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nInner: Inner Exception throwncom.google.gwt.core.client.JavaScriptException: (TypeError) \n __gwt$exception: <skipped>: Cannot read property 'type_0' of null(TypeError) \n __gwt$exception: <skipped>: Cannot read property 'type_0' of null\n\nOutcome: type of output is null\n\n: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n```\n\nI feel like it is comming from this line of code\nhttps://github.com/libgdx/libgdx/blob/master/backends/gdx-backends-gwt/src/com/badlogic/gwtref/client/ReflectionCache.java#L34\nIt is definitely weird returning a null so maybe you can throw a subclassed RuntimeException that we can catch instead?\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3724/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3723","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3723/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3723/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3723/events","html_url":"https://github.com/libgdx/libgdx/pull/3723","id":125893660,"number":3723,"title":"added pinchStop() to GestureDetector","user":{"login":"jberberick","id":1994382,"avatar_url":"https://avatars0.githubusercontent.com/u/1994382?v=4","gravatar_id":"","url":"https://api.github.com/users/jberberick","html_url":"https://github.com/jberberick","followers_url":"https://api.github.com/users/jberberick/followers","following_url":"https://api.github.com/users/jberberick/following{/other_user}","gists_url":"https://api.github.com/users/jberberick/gists{/gist_id}","starred_url":"https://api.github.com/users/jberberick/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jberberick/subscriptions","organizations_url":"https://api.github.com/users/jberberick/orgs","repos_url":"https://api.github.com/users/jberberick/repos","events_url":"https://api.github.com/users/jberberick/events{/privacy}","received_events_url":"https://api.github.com/users/jberberick/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2016-01-11T08:27:36Z","updated_at":"2016-03-29T05:40:37Z","closed_at":"2016-03-29T05:40:37Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3723","html_url":"https://github.com/libgdx/libgdx/pull/3723","diff_url":"https://github.com/libgdx/libgdx/pull/3723.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3723.patch"},"body":"","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3723/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3722","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3722/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3722/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3722/events","html_url":"https://github.com/libgdx/libgdx/issues/3722","id":125846832,"number":3722,"title":"PolygonSprite:  setRegion uses mutable Color instance without resetting to vertex values","user":{"login":"bryanwagner","id":4308569,"avatar_url":"https://avatars0.githubusercontent.com/u/4308569?v=4","gravatar_id":"","url":"https://api.github.com/users/bryanwagner","html_url":"https://github.com/bryanwagner","followers_url":"https://api.github.com/users/bryanwagner/followers","following_url":"https://api.github.com/users/bryanwagner/following{/other_user}","gists_url":"https://api.github.com/users/bryanwagner/gists{/gist_id}","starred_url":"https://api.github.com/users/bryanwagner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bryanwagner/subscriptions","organizations_url":"https://api.github.com/users/bryanwagner/orgs","repos_url":"https://api.github.com/users/bryanwagner/repos","events_url":"https://api.github.com/users/bryanwagner/events{/privacy}","received_events_url":"https://api.github.com/users/bryanwagner/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2016-01-10T21:21:42Z","updated_at":"2017-01-25T15:33:49Z","closed_at":"2017-01-25T15:33:49Z","author_association":"CONTRIBUTOR","body":"In PolygonSprite, `getVertexColor` should be called inside `setRegion` before using the mutable `Color` instance, otherwise the color can be modified by side-effects.\n\nExample:\n\n``` java\nimport com.badlogic.gdx.*;\nimport com.badlogic.gdx.Input.Keys;\nimport com.badlogic.gdx.backends.lwjgl.LwjglApplication;\nimport com.badlogic.gdx.graphics.*;\nimport com.badlogic.gdx.graphics.g2d.*;\n\npublic class BarebonesBatch extends ApplicationAdapter {\n    PolygonSpriteBatch batch;\n    Texture texture;\n    PolygonRegion region;\n    PolygonSprite sprite;\n\n    public void create () {\n        batch = new PolygonSpriteBatch();\n        texture = new Texture(Gdx.files.internal(\"data/badlogic.jpg\"));\n        region = new PolygonRegion(new TextureRegion(texture), new float[] { 0, 0, 0, 100, 100, 100 }, new short[] { 0, 1, 2 });\n        sprite = new PolygonSprite(region);\n        sprite.setColor(0, 1, 0, 1);\n    }\n\n    public void render () {\n        // Example:  calling getColor and modifying it causes a side-effect\n        if (Gdx.input.isKeyJustPressed(Keys.SPACE)) {\n          Color color = sprite.getColor();\n          color.set(1, 0, 0, 1);  // only setColor should actually change the color\n          //sprite.getVertexColor();  // fix: getVertexColor should be called inside setRegion\n          sprite.setRegion(region);\n        }\n        Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);\n        batch.begin();\n        sprite.draw(batch);\n        batch.end();\n    }\n\n    public static void main (String[] args) throws Exception {\n        new LwjglApplication(new BarebonesBatch());\n    }\n}\n```\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3722/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3721","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3721/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3721/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3721/events","html_url":"https://github.com/libgdx/libgdx/pull/3721","id":125822164,"number":3721,"title":"GwtFileHandle lists all asset types and directories instead of only","user":{"login":"Snack-a-Dog","id":16405806,"avatar_url":"https://avatars1.githubusercontent.com/u/16405806?v=4","gravatar_id":"","url":"https://api.github.com/users/Snack-a-Dog","html_url":"https://github.com/Snack-a-Dog","followers_url":"https://api.github.com/users/Snack-a-Dog/followers","following_url":"https://api.github.com/users/Snack-a-Dog/following{/other_user}","gists_url":"https://api.github.com/users/Snack-a-Dog/gists{/gist_id}","starred_url":"https://api.github.com/users/Snack-a-Dog/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Snack-a-Dog/subscriptions","organizations_url":"https://api.github.com/users/Snack-a-Dog/orgs","repos_url":"https://api.github.com/users/Snack-a-Dog/repos","events_url":"https://api.github.com/users/Snack-a-Dog/events{/privacy}","received_events_url":"https://api.github.com/users/Snack-a-Dog/received_events","type":"User","site_admin":false},"labels":[{"id":67383148,"url":"https://api.github.com/repos/libgdx/libgdx/labels/gwt","name":"gwt","color":"5319e7","default":false}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":11,"created_at":"2016-01-10T14:12:03Z","updated_at":"2016-05-26T17:48:47Z","closed_at":null,"author_association":"NONE","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3721","html_url":"https://github.com/libgdx/libgdx/pull/3721","diff_url":"https://github.com/libgdx/libgdx/pull/3721.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3721.patch"},"body":"See http://www.badlogicgames.com/forum/viewtopic.php?f=11&t=21494&p=88835\n\nThe Preloader class, and therefore the delegating GwtFileHandle class, was only reporting assets of the text type in its list() methods. Fixed so that now all asset types and directories are reported.\n\nMost changes result from the libgdx formatter having fixed the wrong code style in the Preloader's previous version. The actual changes are on the bottom of the file - a couple of new private methods and rewritten list() methods.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3721/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3720","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3720/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3720/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3720/events","html_url":"https://github.com/libgdx/libgdx/issues/3720","id":125815708,"number":3720,"title":"gdx-backend-lwjgl3 build error","user":{"login":"vmilea","id":278476,"avatar_url":"https://avatars1.githubusercontent.com/u/278476?v=4","gravatar_id":"","url":"https://api.github.com/users/vmilea","html_url":"https://github.com/vmilea","followers_url":"https://api.github.com/users/vmilea/followers","following_url":"https://api.github.com/users/vmilea/following{/other_user}","gists_url":"https://api.github.com/users/vmilea/gists{/gist_id}","starred_url":"https://api.github.com/users/vmilea/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vmilea/subscriptions","organizations_url":"https://api.github.com/users/vmilea/orgs","repos_url":"https://api.github.com/users/vmilea/repos","events_url":"https://api.github.com/users/vmilea/events{/privacy}","received_events_url":"https://api.github.com/users/vmilea/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-01-10T12:01:20Z","updated_at":"2016-01-11T15:23:17Z","closed_at":"2016-01-11T15:23:17Z","author_association":"CONTRIBUTOR","body":"When trying to build libgdx, `ant -f fetch.xml && ant` fails at Lwjgl3Net.java because of missing Apple extensions.\n\n```\n[javac] e:\\dev\\libgdx\\backends\\gdx-backend-lwjgl3\\src\\com\\badlogic\\gdx\\backends\\lwjgl3\\Lwjgl3Net.java:23: error: package com.apple.eio does not exist\n```\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3720/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3719","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3719/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3719/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3719/events","html_url":"https://github.com/libgdx/libgdx/issues/3719","id":125815000,"number":3719,"title":"Laggy Actor movement","user":{"login":"Try4W","id":5736157,"avatar_url":"https://avatars1.githubusercontent.com/u/5736157?v=4","gravatar_id":"","url":"https://api.github.com/users/Try4W","html_url":"https://github.com/Try4W","followers_url":"https://api.github.com/users/Try4W/followers","following_url":"https://api.github.com/users/Try4W/following{/other_user}","gists_url":"https://api.github.com/users/Try4W/gists{/gist_id}","starred_url":"https://api.github.com/users/Try4W/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Try4W/subscriptions","organizations_url":"https://api.github.com/users/Try4W/orgs","repos_url":"https://api.github.com/users/Try4W/repos","events_url":"https://api.github.com/users/Try4W/events{/privacy}","received_events_url":"https://api.github.com/users/Try4W/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2016-01-10T11:42:07Z","updated_at":"2016-01-10T12:06:22Z","closed_at":"2016-01-10T12:06:22Z","author_association":"NONE","body":"Video that show this glitch:\nhttp://www.youtube.com/watch?v=WaDH_clyJsg\n\nAs you can see, sometimes actor brings back.\nI checked the time between `draw()` method calls and it's always about 15-20 milliseconds. `getX()` never returns lower value that in last draw execution.\n\nSample screen:\n\n``` java\npublic class DemoScreen implements Screen {\n\n    private Stage stage;\n    private Image someImage;\n\n    public DemoScreen() {\n        stage = new Stage(new ExtendViewport(800, 600));\n        someImage = new Image(Assets.getInstance().getAtlas().createSprite(\"background/sun\"));\n        someImage.addAction(\n                Actions.forever(\n                        Actions.sequence(\n                                Actions.moveBy(400, 0, 1.0F)\n                        )\n                )\n        );\n        stage.addActor(someImage);\n\n        stage.setDebugAll(true);\n    }\n\n    @Override\n    public void show() {\n\n    }\n\n    @Override\n    public void render(float delta) {\n        stage.getCamera().position.set(someImage.getX(), someImage.getY(), 0);\n\n        stage.act(delta);\n        stage.draw();\n    }\n\n    @Override\n    public void resize(int width, int height) {\n\n    }\n\n    @Override\n    public void pause() {\n\n    }\n\n    @Override\n    public void resume() {\n\n    }\n\n    @Override\n    public void hide() {\n\n    }\n\n    @Override\n    public void dispose() {\n        stage.dispose();\n    }\n\n}\n\n```\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3719/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3718","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3718/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3718/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3718/events","html_url":"https://github.com/libgdx/libgdx/issues/3718","id":125796739,"number":3718,"title":"LWJGL 3 miss ApplicationListener.resize notification when changing between windowed and full screen mode","user":{"login":"titovmaxim","id":1524918,"avatar_url":"https://avatars0.githubusercontent.com/u/1524918?v=4","gravatar_id":"","url":"https://api.github.com/users/titovmaxim","html_url":"https://github.com/titovmaxim","followers_url":"https://api.github.com/users/titovmaxim/followers","following_url":"https://api.github.com/users/titovmaxim/following{/other_user}","gists_url":"https://api.github.com/users/titovmaxim/gists{/gist_id}","starred_url":"https://api.github.com/users/titovmaxim/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/titovmaxim/subscriptions","organizations_url":"https://api.github.com/users/titovmaxim/orgs","repos_url":"https://api.github.com/users/titovmaxim/repos","events_url":"https://api.github.com/users/titovmaxim/events{/privacy}","received_events_url":"https://api.github.com/users/titovmaxim/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2016-01-10T03:29:58Z","updated_at":"2016-01-12T10:56:33Z","closed_at":"2016-01-11T15:30:26Z","author_association":"CONTRIBUTOR","body":"The ApplicationListener.resize is no called during changing between windowed and full screen mode by calling Gdx.graphics.setFullscreenMode and Gdx.graphics.setWindowedMode. Also tap events starts to report wrong coordinates. Version: libgdx 1.8.0 & lwjgl 3.0.\n\nThe temporal solution which works is to call Gdx.app.getApplicationListener().resize explicitly after every full screen <-> windowed change.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3718/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3717","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3717/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3717/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3717/events","html_url":"https://github.com/libgdx/libgdx/issues/3717","id":125761749,"number":3717,"title":"RepeatAction does not work","user":{"login":"Try4W","id":5736157,"avatar_url":"https://avatars1.githubusercontent.com/u/5736157?v=4","gravatar_id":"","url":"https://api.github.com/users/Try4W","html_url":"https://github.com/Try4W","followers_url":"https://api.github.com/users/Try4W/followers","following_url":"https://api.github.com/users/Try4W/following{/other_user}","gists_url":"https://api.github.com/users/Try4W/gists{/gist_id}","starred_url":"https://api.github.com/users/Try4W/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Try4W/subscriptions","organizations_url":"https://api.github.com/users/Try4W/orgs","repos_url":"https://api.github.com/users/Try4W/repos","events_url":"https://api.github.com/users/Try4W/events{/privacy}","received_events_url":"https://api.github.com/users/Try4W/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2016-01-09T14:35:52Z","updated_at":"2016-01-09T21:44:41Z","closed_at":"2016-01-09T21:44:41Z","author_association":"NONE","body":"For example:\nimage.addAction(Actions.forever(Actions.rotateTo(359.0F, 1.0F)));\n\nAction runs only one time.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3717/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3716","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3716/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3716/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3716/events","html_url":"https://github.com/libgdx/libgdx/issues/3716","id":125752546,"number":3716,"title":"ImageButton not affected by setSize() when up-scaling","user":{"login":"chandruscm","id":7499644,"avatar_url":"https://avatars2.githubusercontent.com/u/7499644?v=4","gravatar_id":"","url":"https://api.github.com/users/chandruscm","html_url":"https://github.com/chandruscm","followers_url":"https://api.github.com/users/chandruscm/followers","following_url":"https://api.github.com/users/chandruscm/following{/other_user}","gists_url":"https://api.github.com/users/chandruscm/gists{/gist_id}","starred_url":"https://api.github.com/users/chandruscm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/chandruscm/subscriptions","organizations_url":"https://api.github.com/users/chandruscm/orgs","repos_url":"https://api.github.com/users/chandruscm/repos","events_url":"https://api.github.com/users/chandruscm/events{/privacy}","received_events_url":"https://api.github.com/users/chandruscm/received_events","type":"User","site_admin":false},"labels":[{"id":89047068,"url":"https://api.github.com/repos/libgdx/libgdx/labels/scene2d","name":"scene2d","color":"ff00ff","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-01-09T10:53:20Z","updated_at":"2016-03-29T05:37:50Z","closed_at":"2016-03-29T05:37:50Z","author_association":"NONE","body":"skin = new Skin(atlas); // I have a texture atlas named 'atlas' initialized.\nbutton = new ImageButton(skin.getDrawable(\"buttonUp\"),skin.getDrawable(\"buttonDown\"));\n\nbutton.setSize(button.getWidth() / 1.5f, button.getHeight() / 1.5f); // This works\nbutton.setSize(button.getWidth() \\* 1.5f, button.getHeight() \\* 1.5f); // This does not work\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3716/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3715","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3715/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3715/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3715/events","html_url":"https://github.com/libgdx/libgdx/issues/3715","id":125750830,"number":3715,"title":"backgroundFPS affecting foreground framerate","user":{"login":"vmilea","id":278476,"avatar_url":"https://avatars1.githubusercontent.com/u/278476?v=4","gravatar_id":"","url":"https://api.github.com/users/vmilea","html_url":"https://github.com/vmilea","followers_url":"https://api.github.com/users/vmilea/followers","following_url":"https://api.github.com/users/vmilea/following{/other_user}","gists_url":"https://api.github.com/users/vmilea/gists{/gist_id}","starred_url":"https://api.github.com/users/vmilea/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vmilea/subscriptions","organizations_url":"https://api.github.com/users/vmilea/orgs","repos_url":"https://api.github.com/users/vmilea/repos","events_url":"https://api.github.com/users/vmilea/events{/privacy}","received_events_url":"https://api.github.com/users/vmilea/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2016-01-09T10:16:11Z","updated_at":"2016-03-29T08:27:45Z","closed_at":"2016-03-29T05:37:00Z","author_association":"CONTRIBUTOR","body":"With non-continuous rendering over LWJGL backend, the foreground app could end up in a busy loop (main loop keeps hogging CPU without updating display).\n\nRelevant code in `LwjglApplication.mainLoop()` :\n\n```\nif (!isActive && graphics.config.backgroundFPS == -1) shouldRender = false;\nint frameRate = isActive ? graphics.config.foregroundFPS : graphics.config.backgroundFPS;\nif (shouldRender) {\n    graphics.updateTime();\n    graphics.frameId++;\n    listener.render();\n    Display.update(false);\n} else {\n    // Sleeps to avoid wasting CPU in an empty loop.\n    if (frameRate == -1) frameRate = 10;\n    if (frameRate == 0) frameRate = graphics.config.backgroundFPS;\n    if (frameRate == 0) frameRate = 30;\n}\nif (frameRate > 0) Display.sync(frameRate);\n```\n\nRequired setup: non-continuous rendering, v-sync off, `foregoundFPS = 0`, `backgroundFPS = -1`, window active. This ends up with `frameRate = -1`, so `Display.sync()` won't get called.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3715/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3714","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3714/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3714/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3714/events","html_url":"https://github.com/libgdx/libgdx/issues/3714","id":125741206,"number":3714,"title":"OpenGL Timer Query support ?","user":{"login":"JorenJoestar","id":7187160,"avatar_url":"https://avatars2.githubusercontent.com/u/7187160?v=4","gravatar_id":"","url":"https://api.github.com/users/JorenJoestar","html_url":"https://github.com/JorenJoestar","followers_url":"https://api.github.com/users/JorenJoestar/followers","following_url":"https://api.github.com/users/JorenJoestar/following{/other_user}","gists_url":"https://api.github.com/users/JorenJoestar/gists{/gist_id}","starred_url":"https://api.github.com/users/JorenJoestar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JorenJoestar/subscriptions","organizations_url":"https://api.github.com/users/JorenJoestar/orgs","repos_url":"https://api.github.com/users/JorenJoestar/repos","events_url":"https://api.github.com/users/JorenJoestar/events{/privacy}","received_events_url":"https://api.github.com/users/JorenJoestar/received_events","type":"User","site_admin":false},"labels":[{"id":11336982,"url":"https://api.github.com/repos/libgdx/libgdx/labels/enhancement","name":"enhancement","color":"84b6eb","default":true},{"id":172870364,"url":"https://api.github.com/repos/libgdx/libgdx/labels/need%20more%20info","name":"need more info","color":"bfdadc","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-01-09T06:12:55Z","updated_at":"2016-01-14T19:58:31Z","closed_at":"2016-01-14T19:58:31Z","author_association":"NONE","body":"Hello there,\n   I was wondering if you have plan to add Timer Query support, many times when developing GPU features it is helpful to know the exact timing!\n\nThank you!\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3714/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3713","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3713/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3713/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3713/events","html_url":"https://github.com/libgdx/libgdx/issues/3713","id":125672924,"number":3713,"title":"Using setFontScale has undesired effect post v1.7.1","user":{"login":"ebbybeh","id":1280342,"avatar_url":"https://avatars1.githubusercontent.com/u/1280342?v=4","gravatar_id":"","url":"https://api.github.com/users/ebbybeh","html_url":"https://github.com/ebbybeh","followers_url":"https://api.github.com/users/ebbybeh/followers","following_url":"https://api.github.com/users/ebbybeh/following{/other_user}","gists_url":"https://api.github.com/users/ebbybeh/gists{/gist_id}","starred_url":"https://api.github.com/users/ebbybeh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ebbybeh/subscriptions","organizations_url":"https://api.github.com/users/ebbybeh/orgs","repos_url":"https://api.github.com/users/ebbybeh/repos","events_url":"https://api.github.com/users/ebbybeh/events{/privacy}","received_events_url":"https://api.github.com/users/ebbybeh/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-01-08T19:05:41Z","updated_at":"2016-01-11T15:34:29Z","closed_at":"2016-01-11T15:34:29Z","author_association":"NONE","body":"My font was fine in 1.7.1. When using setFontScale(0.5f) my font looked like this: \n![image](https://cloud.githubusercontent.com/assets/1280342/12206678/7fdaade2-b5ff-11e5-8aa9-c415eaac34f6.png)\n\nNow, after upgrading to 1.7.2, it looks like this: \n![image](https://cloud.githubusercontent.com/assets/1280342/12206720/b5fce1ce-b5ff-11e5-98c9-630b2b1a7e74.png)\n\nScaling down in general seems to look bad. \n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3713/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3712","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3712/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3712/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3712/events","html_url":"https://github.com/libgdx/libgdx/issues/3712","id":125663685,"number":3712,"title":"scene2d/ui: problem extending  package classes","user":{"login":"voidburn","id":1438321,"avatar_url":"https://avatars3.githubusercontent.com/u/1438321?v=4","gravatar_id":"","url":"https://api.github.com/users/voidburn","html_url":"https://github.com/voidburn","followers_url":"https://api.github.com/users/voidburn/followers","following_url":"https://api.github.com/users/voidburn/following{/other_user}","gists_url":"https://api.github.com/users/voidburn/gists{/gist_id}","starred_url":"https://api.github.com/users/voidburn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/voidburn/subscriptions","organizations_url":"https://api.github.com/users/voidburn/orgs","repos_url":"https://api.github.com/users/voidburn/repos","events_url":"https://api.github.com/users/voidburn/events{/privacy}","received_events_url":"https://api.github.com/users/voidburn/received_events","type":"User","site_admin":false},"labels":[{"id":11336982,"url":"https://api.github.com/repos/libgdx/libgdx/labels/enhancement","name":"enhancement","color":"84b6eb","default":true},{"id":89047068,"url":"https://api.github.com/repos/libgdx/libgdx/labels/scene2d","name":"scene2d","color":"ff00ff","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2016-01-08T18:14:23Z","updated_at":"2016-03-29T05:30:28Z","closed_at":"2016-03-29T05:30:28Z","author_association":"CONTRIBUTOR","body":"When having to customize a widget or component, sometimes even small changes ( lately happened with the Window class, when I needed the titleTable to take into account the font size in the titleLabel ) I found it impossible to extend the class and apply the changes by overriding the methods, due to the fact that almost every useful field is private.\n\nThis so far has lead me to creating my own class dumping all the original class code in there and swapping all instances of the component/widget with my own. This feels really really wrong for massive classes such as ScrollPane and Window, and makes it difficult to track and integrate fixes from the upstream.\n\nCould this be made more flexible by making the fields protected instead of private? Any suggestions for better dealing with this otherwise?\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3712/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3711","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3711/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3711/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3711/events","html_url":"https://github.com/libgdx/libgdx/issues/3711","id":125564966,"number":3711,"title":"Add ability to allow 'software mode' rendering in LWJGL 3 backend.","user":{"login":"me4502","id":546754,"avatar_url":"https://avatars1.githubusercontent.com/u/546754?v=4","gravatar_id":"","url":"https://api.github.com/users/me4502","html_url":"https://github.com/me4502","followers_url":"https://api.github.com/users/me4502/followers","following_url":"https://api.github.com/users/me4502/following{/other_user}","gists_url":"https://api.github.com/users/me4502/gists{/gist_id}","starred_url":"https://api.github.com/users/me4502/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/me4502/subscriptions","organizations_url":"https://api.github.com/users/me4502/orgs","repos_url":"https://api.github.com/users/me4502/repos","events_url":"https://api.github.com/users/me4502/events{/privacy}","received_events_url":"https://api.github.com/users/me4502/received_events","type":"User","site_admin":false},"labels":[{"id":11336982,"url":"https://api.github.com/repos/libgdx/libgdx/labels/enhancement","name":"enhancement","color":"84b6eb","default":true},{"id":309796149,"url":"https://api.github.com/repos/libgdx/libgdx/labels/LWJGL3","name":"LWJGL3","color":"d4c5f9","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2016-01-08T08:26:10Z","updated_at":"2016-12-11T08:07:02Z","closed_at":"2016-12-10T18:29:41Z","author_association":"NONE","body":"The previous LWJGL backend allowed the option of allowing 'software mode' rendering. This is useful in cases where you are making software with LibGDX that is not very graphics intensive, and you want to regain maximum compatibility.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3711/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3710","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3710/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3710/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3710/events","html_url":"https://github.com/libgdx/libgdx/pull/3710","id":125563711,"number":3710,"title":"Correct gdx.gwt.xml file","user":{"login":"realitix","id":6367936,"avatar_url":"https://avatars1.githubusercontent.com/u/6367936?v=4","gravatar_id":"","url":"https://api.github.com/users/realitix","html_url":"https://github.com/realitix","followers_url":"https://api.github.com/users/realitix/followers","following_url":"https://api.github.com/users/realitix/following{/other_user}","gists_url":"https://api.github.com/users/realitix/gists{/gist_id}","starred_url":"https://api.github.com/users/realitix/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/realitix/subscriptions","organizations_url":"https://api.github.com/users/realitix/orgs","repos_url":"https://api.github.com/users/realitix/repos","events_url":"https://api.github.com/users/realitix/events{/privacy}","received_events_url":"https://api.github.com/users/realitix/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-01-08T08:14:52Z","updated_at":"2016-01-09T19:35:32Z","closed_at":"2016-01-09T19:35:32Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3710","html_url":"https://github.com/libgdx/libgdx/pull/3710","diff_url":"https://github.com/libgdx/libgdx/pull/3710.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3710.patch"},"body":"Add DistanceFieldFont.java and remove TextMarkup.java.\n\nSee https://github.com/libgdx/libgdx/tree/master/gdx/src/com/badlogic/gdx/graphics/g2d\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3710/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3709","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3709/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3709/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3709/events","html_url":"https://github.com/libgdx/libgdx/pull/3709","id":125494913,"number":3709,"title":"Change how is Retina handled on iOS","user":{"login":"Darkyenus","id":5280068,"avatar_url":"https://avatars0.githubusercontent.com/u/5280068?v=4","gravatar_id":"","url":"https://api.github.com/users/Darkyenus","html_url":"https://github.com/Darkyenus","followers_url":"https://api.github.com/users/Darkyenus/followers","following_url":"https://api.github.com/users/Darkyenus/following{/other_user}","gists_url":"https://api.github.com/users/Darkyenus/gists{/gist_id}","starred_url":"https://api.github.com/users/Darkyenus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Darkyenus/subscriptions","organizations_url":"https://api.github.com/users/Darkyenus/orgs","repos_url":"https://api.github.com/users/Darkyenus/repos","events_url":"https://api.github.com/users/Darkyenus/events{/privacy}","received_events_url":"https://api.github.com/users/Darkyenus/received_events","type":"User","site_admin":false},"labels":[{"id":59604199,"url":"https://api.github.com/repos/libgdx/libgdx/labels/ios","name":"ios","color":"207de5","default":false}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":14,"created_at":"2016-01-07T22:03:02Z","updated_at":"2016-08-26T19:20:08Z","closed_at":null,"author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3709","html_url":"https://github.com/libgdx/libgdx/pull/3709","diff_url":"https://github.com/libgdx/libgdx/pull/3709.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3709.patch"},"body":"This is a breaking change, but makes the API consistent with the core API.\n\nIt gets rid of the `configuration.displayScaleIf` fields in favor of correct `getWidth/Height` and `getBackBufferWidth/Height` implementations. This makes development of cross platform hi-dpi applications much easier.\n\nInput and `getW/H` previously returned pixels, now it returns points.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3709/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}}],"meta":{"x-ratelimit-limit":"5000","x-ratelimit-remaining":"4960","x-ratelimit-reset":"1506844633","x-github-request-id":"D0E6:110A:2482E3A:40C6356:59D09442","x-github-media-type":"github.squirrel-girl-preview","link":"<https://api.github.com/repositories/5373551/issues?state=all&page=41>; rel=\"next\", <https://api.github.com/repositories/5373551/issues?state=all&page=164>; rel=\"last\", <https://api.github.com/repositories/5373551/issues?state=all&page=1>; rel=\"first\", <https://api.github.com/repositories/5373551/issues?state=all&page=39>; rel=\"prev\"","etag":"\"64cc88c4b99e54459a00caa9cfd6b70b\"","status":"200 OK"}}
