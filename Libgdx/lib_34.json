{"data":[{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3918","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3918/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3918/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3918/events","html_url":"https://github.com/libgdx/libgdx/pull/3918","id":140353116,"number":3918,"title":"Correct duplicate vertices issue when Intersect polygons share points.","user":{"login":"AldousP","id":9387019,"avatar_url":"https://avatars0.githubusercontent.com/u/9387019?v=4","gravatar_id":"","url":"https://api.github.com/users/AldousP","html_url":"https://github.com/AldousP","followers_url":"https://api.github.com/users/AldousP/followers","following_url":"https://api.github.com/users/AldousP/following{/other_user}","gists_url":"https://api.github.com/users/AldousP/gists{/gist_id}","starred_url":"https://api.github.com/users/AldousP/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AldousP/subscriptions","organizations_url":"https://api.github.com/users/AldousP/orgs","repos_url":"https://api.github.com/users/AldousP/repos","events_url":"https://api.github.com/users/AldousP/events{/privacy}","received_events_url":"https://api.github.com/users/AldousP/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2016-03-12T06:35:46Z","updated_at":"2016-03-13T16:33:32Z","closed_at":"2016-03-13T16:33:28Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3918","html_url":"https://github.com/libgdx/libgdx/pull/3918","diff_url":"https://github.com/libgdx/libgdx/pull/3918.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3918.patch"},"body":"Addresses Issue  [#3804.](https://github.com/libgdx/libgdx/issues/3804)\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3918/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3917","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3917/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3917/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3917/events","html_url":"https://github.com/libgdx/libgdx/issues/3917","id":140242557,"number":3917,"title":"Gdx2DPixmap.setPixel() actually performs drawing pixel, not setting it, Also doing it wrong.","user":{"login":"JFixby","id":1580663,"avatar_url":"https://avatars0.githubusercontent.com/u/1580663?v=4","gravatar_id":"","url":"https://api.github.com/users/JFixby","html_url":"https://github.com/JFixby","followers_url":"https://api.github.com/users/JFixby/followers","following_url":"https://api.github.com/users/JFixby/following{/other_user}","gists_url":"https://api.github.com/users/JFixby/gists{/gist_id}","starred_url":"https://api.github.com/users/JFixby/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JFixby/subscriptions","organizations_url":"https://api.github.com/users/JFixby/orgs","repos_url":"https://api.github.com/users/JFixby/repos","events_url":"https://api.github.com/users/JFixby/events{/privacy}","received_events_url":"https://api.github.com/users/JFixby/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2016-03-11T17:23:21Z","updated_at":"2016-03-11T18:02:38Z","closed_at":"2016-03-11T17:57:50Z","author_association":"CONTRIBUTOR","body":"I have a tricky problem here which is the result of the subject.\n\nBasically I have a Pixmap and I want to set it's pixel to a specific color.\n`Pixmap` has no method to do that. <- **important fact A**\n\nHowever it has the `drawPixel()` method that calls `Gdx2DPixmap.setPixel()`\n\n```\n/** Draws a pixel at the given location with the given color.\n     * \n     * @param x the x-coordinate\n     * @param y the y-coordinate\n     * @param color the color in RGBA8888 format. */\n    public void drawPixel (int x, int y, int color) {\n        pixmap.setPixel(x, y, color);\n    }\n```\n\nSeems like a lucky mistake at first but unfortunately the `Gdx2DPixmap.setPixel()` doesn't set pixel to a specific color. Instead it draws the parameter color on top of the previous one. <- **important fact B**\n\nAnd here something bad is happening. When the original color had Alpha=0 and the new color has Alpha !=1 the draw method takes the original color and mixes it with the new one.\n\nExample:\noriginal color RGBA = **#0000FF00** // transparent Blue\nnew color RGBA = **#FFFFFF80** // 50% white\nCall `Gdx2DPixmap.setPixel()`\nOutput color should be **#FFFFFF80**\nOutput color is: **#8080FF80**\n\nHere is example code to reproduce the issue:\n\n```\n public static void main(String[] args) {\n    GdxNativesLoader.load();\n    final float W = 400;\n    final float H = 400;\n    Pixmap pixmap = new Pixmap((int) W, (int) H, Format.RGBA8888);\n    pixmap.setColor(0x0000FF00);// clear background, Alpha == 0\n    pixmap.fill();\n    for (int x = 0; x < W; x++) {\n        for (int y = 0; y < H; y++) {\n        pixmap.setColor(0xffffff80);// set color White with Alpha=0.5\n        pixmap.drawPixel(x, y);\n        }\n    }\n    FileHandle file = new FileHandle(\"1.png\");\n    System.out.println(\"writing: \" + file);\n    PixmapIO.writePNG(file, pixmap);\n    pixmap.dispose();\n\n    }\n\n```\n\nWhat I expect to get: image with 50%-opacity white.\nWhat I actually get:  image with 50%-opacity blue.\n\n![1](https://cloud.githubusercontent.com/assets/1580663/13709675/7e2b0216-e7b5-11e5-8836-2ce7a433c7ff.png)\n\nSo in summary:\n-  `Pixmap.drawPixel()` calls `Gdx2DPixmap.setPixel()` while should call `Gdx2DPixmap.drawPixel()`\n-  `Pixmap` has no `setPixel()` method\n-  `Gdx2DPixmap` has no `drawPixel()` method\n- `Gdx2DPixmap.setPixel()` doesn't perform set operation, actually it does drawing and do it wrong by taking in account RGB value of a color with zero alpha.\n\nSuggestion about how it should be fixed:\n`Pixmap` and `Gdx2DPixmap` both should have two methods: `setPixel()` and `drawPixel()`\n- `setPixel()` - sets the new color value ignoring the previous one. In the given example `setPixel()` must result into **#FFFFFF80**\n-  `drawPixel()` - draws new value on top of the previous one taking in account the original alpha and resulting into a mixed color. When the original color's alpha is zero, the color shouldn't affect the result.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3917/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3916","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3916/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3916/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3916/events","html_url":"https://github.com/libgdx/libgdx/pull/3916","id":140140025,"number":3916,"title":"Clean up performance in VBOWithVAO and supply performance test","user":{"login":"Tom-Ski","id":4346114,"avatar_url":"https://avatars0.githubusercontent.com/u/4346114?v=4","gravatar_id":"","url":"https://api.github.com/users/Tom-Ski","html_url":"https://github.com/Tom-Ski","followers_url":"https://api.github.com/users/Tom-Ski/followers","following_url":"https://api.github.com/users/Tom-Ski/following{/other_user}","gists_url":"https://api.github.com/users/Tom-Ski/gists{/gist_id}","starred_url":"https://api.github.com/users/Tom-Ski/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Tom-Ski/subscriptions","organizations_url":"https://api.github.com/users/Tom-Ski/orgs","repos_url":"https://api.github.com/users/Tom-Ski/repos","events_url":"https://api.github.com/users/Tom-Ski/events{/privacy}","received_events_url":"https://api.github.com/users/Tom-Ski/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-03-11T09:47:42Z","updated_at":"2016-04-02T15:57:06Z","closed_at":"2016-04-02T15:57:06Z","author_association":"OWNER","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3916","html_url":"https://github.com/libgdx/libgdx/pull/3916","diff_url":"https://github.com/libgdx/libgdx/pull/3916.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3916.patch"},"body":"- Adds attribute location caching\n- Removes unnecessary gl calls\n\nPerformance test shows this change results in a ~95% decrease in total time taken to render a mesh with the VBOWithVAO VertexDataType.\n\nRelated issues: https://github.com/libgdx/libgdx/issues/3593\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3916/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3915","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3915/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3915/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3915/events","html_url":"https://github.com/libgdx/libgdx/pull/3915","id":139886639,"number":3915,"title":"fixing #3914","user":{"login":"JFixby","id":1580663,"avatar_url":"https://avatars0.githubusercontent.com/u/1580663?v=4","gravatar_id":"","url":"https://api.github.com/users/JFixby","html_url":"https://github.com/JFixby","followers_url":"https://api.github.com/users/JFixby/followers","following_url":"https://api.github.com/users/JFixby/following{/other_user}","gists_url":"https://api.github.com/users/JFixby/gists{/gist_id}","starred_url":"https://api.github.com/users/JFixby/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JFixby/subscriptions","organizations_url":"https://api.github.com/users/JFixby/orgs","repos_url":"https://api.github.com/users/JFixby/repos","events_url":"https://api.github.com/users/JFixby/events{/privacy}","received_events_url":"https://api.github.com/users/JFixby/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-03-10T13:33:23Z","updated_at":"2016-03-10T19:41:53Z","closed_at":"2016-03-10T19:41:52Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3915","html_url":"https://github.com/libgdx/libgdx/pull/3915","diff_url":"https://github.com/libgdx/libgdx/pull/3915.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3915.patch"},"body":"Fixing ETC1.encodeImagePKM crash due to the null Gdx.app https://github.com/libgdx/libgdx/issues/3914\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3915/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3914","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3914/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3914/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3914/events","html_url":"https://github.com/libgdx/libgdx/issues/3914","id":139886401,"number":3914,"title":"ETC1.encodeImagePKM crashes due to the null Gdx.app","user":{"login":"JFixby","id":1580663,"avatar_url":"https://avatars0.githubusercontent.com/u/1580663?v=4","gravatar_id":"","url":"https://api.github.com/users/JFixby","html_url":"https://github.com/JFixby","followers_url":"https://api.github.com/users/JFixby/followers","following_url":"https://api.github.com/users/JFixby/following{/other_user}","gists_url":"https://api.github.com/users/JFixby/gists{/gist_id}","starred_url":"https://api.github.com/users/JFixby/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JFixby/subscriptions","organizations_url":"https://api.github.com/users/JFixby/orgs","repos_url":"https://api.github.com/users/JFixby/repos","events_url":"https://api.github.com/users/JFixby/events{/privacy}","received_events_url":"https://api.github.com/users/JFixby/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2016-03-10T13:31:51Z","updated_at":"2016-03-10T20:00:14Z","closed_at":"2016-03-10T20:00:14Z","author_association":"CONTRIBUTOR","body":"#### Issue details\n\nHere is the actual line of code that should be replaced with `System.out.println()`:\nhttps://github.com/libgdx/libgdx/blob/master/gdx/src/com/badlogic/gdx/graphics/glutils/ETC1.java#L91\n\n```\nGdx.app.debug(\"ETC1Data\", \"warning: non-power-of-two ETC1 textures may crash the driver of PowerVR GPUs\");\n```\n#### Reproduction steps/code\n\n```\npublic static void main(String[] args) {\n\n    File inputFile = new File(\"some_image.png\");\n    File outputFile = new File(\"some_image.etc1\");\n\n    GdxNativesLoader.load();\n    System.out.println(\"Processing \" + inputFile);\n\n    Pixmap pixmap = new Pixmap(new FileHandle(inputFile));\n    if (pixmap.getFormat() != Format.RGB888 && pixmap.getFormat() != Format.RGB565) {\n        System.out.println(\"Converting from \" + pixmap.getFormat() + \" to RGB888!\");\n        Pixmap tmp = new Pixmap(pixmap.getWidth(), pixmap.getHeight(), Format.RGB888);\n        tmp.drawPixmap(pixmap, 0, 0, 0, 0, pixmap.getWidth(), pixmap.getHeight());\n        pixmap.dispose();\n        pixmap = tmp;\n    }\n    ETC1.encodeImagePKM(pixmap).write(new FileHandle(outputFile));\n    pixmap.dispose();\n\n    }\n```\n#### Version of LibGDX and/or relevant dependencies\n\nall\n#### Stacktrace\n\n```\nConverting from RGBA8888 to RGB888!\nException in thread \"main\" java.lang.NullPointerException\n    at com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data.checkNPOT(ETC1.java:91)\n    at com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data.<init>(ETC1.java:60)\n    at com.badlogic.gdx.graphics.glutils.ETC1.encodeImagePKM(ETC1.java:166)\n    at com.badlogic.gdx.tools.etc1.ETC1Compressor.compressFile(ETC1Compressor.java:48)\n    at com.jfixby.tool.texturepacker.test.ETC1CompressorTest.main(ETC1CompressorTest.java:22)\n```\n#### Please select the affected platforms\n- [x] gdx-tools\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3914/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3913","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3913/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3913/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3913/events","html_url":"https://github.com/libgdx/libgdx/pull/3913","id":139604299,"number":3913,"title":"FreeTypeFontGenerator-texture-bleeding-#3521-fix ","user":{"login":"JFixby","id":1580663,"avatar_url":"https://avatars0.githubusercontent.com/u/1580663?v=4","gravatar_id":"","url":"https://api.github.com/users/JFixby","html_url":"https://github.com/JFixby","followers_url":"https://api.github.com/users/JFixby/followers","following_url":"https://api.github.com/users/JFixby/following{/other_user}","gists_url":"https://api.github.com/users/JFixby/gists{/gist_id}","starred_url":"https://api.github.com/users/JFixby/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JFixby/subscriptions","organizations_url":"https://api.github.com/users/JFixby/orgs","repos_url":"https://api.github.com/users/JFixby/repos","events_url":"https://api.github.com/users/JFixby/events{/privacy}","received_events_url":"https://api.github.com/users/JFixby/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2016-03-09T15:14:55Z","updated_at":"2016-03-13T15:06:53Z","closed_at":"2016-03-13T15:06:53Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3913","html_url":"https://github.com/libgdx/libgdx/pull/3913","diff_url":"https://github.com/libgdx/libgdx/pull/3913.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3913.patch"},"body":"Fixing https://github.com/libgdx/libgdx/issues/3521\n- `PixmapPacker` has a new parameter `Color currentTransparentColor;` used by `Page` constructor to fill transparent pixels.\n- `FreeTypeFontGenerator` sets packer to use color of the font but with zero alpha for transparent pixels to avoid leaks.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3913/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3912","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3912/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3912/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3912/events","html_url":"https://github.com/libgdx/libgdx/issues/3912","id":139433875,"number":3912,"title":"Sudden CPU spike when VertexArray reaches a certain size (1040)","user":{"login":"adcgx","id":17733587,"avatar_url":"https://avatars1.githubusercontent.com/u/17733587?v=4","gravatar_id":"","url":"https://api.github.com/users/adcgx","html_url":"https://github.com/adcgx","followers_url":"https://api.github.com/users/adcgx/followers","following_url":"https://api.github.com/users/adcgx/following{/other_user}","gists_url":"https://api.github.com/users/adcgx/gists{/gist_id}","starred_url":"https://api.github.com/users/adcgx/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/adcgx/subscriptions","organizations_url":"https://api.github.com/users/adcgx/orgs","repos_url":"https://api.github.com/users/adcgx/repos","events_url":"https://api.github.com/users/adcgx/events{/privacy}","received_events_url":"https://api.github.com/users/adcgx/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2016-03-09T00:18:34Z","updated_at":"2017-01-16T14:58:21Z","closed_at":"2016-04-07T07:49:24Z","author_association":"NONE","body":"#### Issue details\n\nDisplaying a certain number of chars in a TextArea / TextField / Label (I'm suspecting pretty much everything than renders BitmapFonts?) on a stage, causes sudden increase in CPU usage. The exact number of chars differs depending on unknown circumstances (which font used perhaps?). In the test below, going from 33 to 34 chars in the TextArea (and again from 42 -> 43) causes huge increase in CPU usage. Only tested on desktop/windows. If you get this bug, but the number of chars needed to reproduce is different, please post how many.\n#### Reproduction steps/code\n\n```\nimport com.badlogic.gdx.*;\nimport com.badlogic.gdx.backends.lwjgl.LwjglApplication;\nimport com.badlogic.gdx.backends.lwjgl.LwjglApplicationConfiguration;\nimport com.badlogic.gdx.graphics.GL20;\nimport com.badlogic.gdx.scenes.scene2d.Stage;\nimport com.badlogic.gdx.scenes.scene2d.ui.*;\n\n// Notice how CPU usage will spike at 34 chars, and then spike even further at 43\n\npublic class DesktopLauncher extends ApplicationAdapter {\n    Stage stage;\n    TextArea textArea;\n\n    public void create () {\n        stage = new Stage();\n        Gdx.input.setInputProcessor(stage);\n        Skin skin = new Skin(Gdx.files.internal(\"data/uiskin.json\"));\n        textArea = new TextArea(\"TextArea test\", skin);\n        textArea.setWidth(400);\n        textArea.setHeight(400);\n        textArea.setPosition(40, 70);\n        stage.addActor(textArea);\n\n    }\n\n    public void render () {\n        Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);\n        stage.act();\n        stage.draw();\n    }\n\n    public void resize (int width, int height) {\n        stage.getViewport().update(width, height, true);\n    }\n\n    public static void main (String[] args) throws Exception {\n        LwjglApplicationConfiguration config = new LwjglApplicationConfiguration();\n        config.foregroundFPS = 0;\n        config.vSyncEnabled = true;\n        new LwjglApplication(new DesktopLauncher(), config);\n    }\n}\n```\n#### Version of LibGDX and/or relevant dependencies\n\nTested: 1.7.1 + 1.9.2\n#### Please select the affected platforms\n- [ ] Android\n- [ ] iOS\n- [ ] HTML/GWT\n- [x] Windows\n- [ ] Linux\n- [ ] MacOS\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3912/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3911","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3911/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3911/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3911/events","html_url":"https://github.com/libgdx/libgdx/issues/3911","id":139366938,"number":3911,"title":"ETC1.encodeImagePKM() produces broken image","user":{"login":"JFixby","id":1580663,"avatar_url":"https://avatars0.githubusercontent.com/u/1580663?v=4","gravatar_id":"","url":"https://api.github.com/users/JFixby","html_url":"https://github.com/JFixby","followers_url":"https://api.github.com/users/JFixby/followers","following_url":"https://api.github.com/users/JFixby/following{/other_user}","gists_url":"https://api.github.com/users/JFixby/gists{/gist_id}","starred_url":"https://api.github.com/users/JFixby/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JFixby/subscriptions","organizations_url":"https://api.github.com/users/JFixby/orgs","repos_url":"https://api.github.com/users/JFixby/repos","events_url":"https://api.github.com/users/JFixby/events{/privacy}","received_events_url":"https://api.github.com/users/JFixby/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-03-08T19:14:22Z","updated_at":"2016-03-08T19:47:11Z","closed_at":"2016-03-08T19:47:11Z","author_association":"CONTRIBUTOR","body":"I suppose the following section:\n\n```\nPixmap pixmap = new Pixmap(Gdx.files.absolute(\"image.png\"));\nETC1.encodeImagePKM(pixmap).write(Gdx.files.absolute(\"image.etc1\"));\n```\n\nin the doc https://github.com/libgdx/libgdx/wiki/Texture-Compression\n\nshould be replaced with the working\n`ETC1Compressor.process(input_folder, output_folder, false, true);`\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3911/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3910","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3910/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3910/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3910/events","html_url":"https://github.com/libgdx/libgdx/issues/3910","id":139339295,"number":3910,"title":"Crash on 64bit device","user":{"login":"AlessandroGiusa","id":2799371,"avatar_url":"https://avatars2.githubusercontent.com/u/2799371?v=4","gravatar_id":"","url":"https://api.github.com/users/AlessandroGiusa","html_url":"https://github.com/AlessandroGiusa","followers_url":"https://api.github.com/users/AlessandroGiusa/followers","following_url":"https://api.github.com/users/AlessandroGiusa/following{/other_user}","gists_url":"https://api.github.com/users/AlessandroGiusa/gists{/gist_id}","starred_url":"https://api.github.com/users/AlessandroGiusa/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AlessandroGiusa/subscriptions","organizations_url":"https://api.github.com/users/AlessandroGiusa/orgs","repos_url":"https://api.github.com/users/AlessandroGiusa/repos","events_url":"https://api.github.com/users/AlessandroGiusa/events{/privacy}","received_events_url":"https://api.github.com/users/AlessandroGiusa/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2016-03-08T17:21:59Z","updated_at":"2016-03-08T18:36:58Z","closed_at":"2016-03-08T17:30:00Z","author_association":"NONE","body":"Hello @ all,\n\nI'm using libgdx version 1.9.2 and I get following crash on a device running my app.\nThe device is an HTC one M9, Native platform is armeabi-v7a, CPU is Qualcomm.\n\n```\n*** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***\nBuild fingerprint: 'htc/himauhl_vodafone_uk/htc_himauhl:6.0/MRA58K/671447.12:user/release-keys'\nRevision: '0'\nABI: 'arm64'\npid: 31365, tid: 31393, name: GLThread 2836 \nsignal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 0xac\n    x0   0000000000000001  x1   0000000000000000  x2   0000000000000000  x3   0000000000000000\n    x4   00000000000024e0  x5   00000000000009c4  x6   00000000000024e0  x7   00000000000009c4\n    x8   00000000000024e0  x9   0000000000006ea0  x10  00000000000009c7  x11  0000000000000020\n    x12  00000000000009c0  x13  0000007f97d671a8  x14  000000000438764d  x15  00000000000009c4\n    x16  00000000043798ef  x17  00000000b2a22000  x18  000000000b460000  x19  00000000000024e0\n    x20  00000000000009c4  x21  0000005586f97620  x22  0000005586f97620  x23  000000000000000f\n    x24  0000000000000000  x25  00000000000024e0  x26  0000000000000000  x27  0000000000000005\n    x28  00000000000009c4  x29  0000007f97d66f10  x30  0000007fa34dd508\n    sp   0000007f97d66f10  pc   0000007fa34dbdcc  pstate 0000000020000000\nbacktrace:\n    #00 pc 00000000002bcdcc  /system/vendor/lib64/egl/libGLESv2_adreno.so (A4xBltDevice::A4xBltMacroTileGeneral(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, BltExecSwCopy*)+76)\n    #01 pc 00000000002be504  /system/vendor/lib64/egl/libGLESv2_adreno.so (A4xBltDevice::ExecFastSwCopyLinearInputMacroTiledOutput(BltExecSwCopy*)+2692)\n    #02 pc 000000000028dc38  /system/vendor/lib64/egl/libGLESv2_adreno.so (BltDevice::ExecSwCopyInternal(BltExecSwCopy*)+5592)\n    #03 pc 000000000028e3f0  /system/vendor/lib64/egl/libGLESv2_adreno.so (BltDevice::MtSWCopyWorkerThreadFunc(void*)+112)\n    #04 pc 00000000000687d4  /system/lib64/libc.so (__pthread_start(void*)+52)\n    #05 pc 000000000001c7c4  /system/lib64/libc.so (__start_thread+16)\n```\n\nI think this is the same issue which was in libgdx 1.9.1. After I read it was solved I switched to 1.9.2 but the bug is still there.\n\nIs it the same issue?\n\nCan anyone help me out with that?\n\nThank you in advance!!!\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3910/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3909","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3909/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3909/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3909/events","html_url":"https://github.com/libgdx/libgdx/pull/3909","id":139323756,"number":3909,"title":"+ETC1 Atlas Compressor","user":{"login":"JFixby","id":1580663,"avatar_url":"https://avatars0.githubusercontent.com/u/1580663?v=4","gravatar_id":"","url":"https://api.github.com/users/JFixby","html_url":"https://github.com/JFixby","followers_url":"https://api.github.com/users/JFixby/followers","following_url":"https://api.github.com/users/JFixby/following{/other_user}","gists_url":"https://api.github.com/users/JFixby/gists{/gist_id}","starred_url":"https://api.github.com/users/JFixby/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JFixby/subscriptions","organizations_url":"https://api.github.com/users/JFixby/orgs","repos_url":"https://api.github.com/users/JFixby/repos","events_url":"https://api.github.com/users/JFixby/events{/privacy}","received_events_url":"https://api.github.com/users/JFixby/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":12,"created_at":"2016-03-08T16:28:41Z","updated_at":"2016-03-11T18:30:59Z","closed_at":"2016-03-10T21:27:56Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3909","html_url":"https://github.com/libgdx/libgdx/pull/3909","diff_url":"https://github.com/libgdx/libgdx/pull/3909.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3909.patch"},"body":"Back-story: https://twitter.com/badlogicgames/status/643082568334745600\n\n`ETC1AtlasCompressor` takes atlas produced by the `TexturePacker` and converts it to `ETC1` format by:\n- compressing textures from `PNG` to `ETC1`,\n- changing texture-file names accordingly in the atlas description file.\n\nTo test the `ETC1AtlasCompressor` please run the `ETC1AtlasCompressorTest`, the test will:\n- prepare example atlas using sprites in the sprites folder,\n- compress the atlas,\n- load and render compressed sprites on the screen using gdx desktop backend.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3909/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3908","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3908/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3908/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3908/events","html_url":"https://github.com/libgdx/libgdx/issues/3908","id":139106789,"number":3908,"title":"ObjectMap copy ctor broken as of libgdx 1.7.2","user":{"login":"JohanStolk","id":3437419,"avatar_url":"https://avatars3.githubusercontent.com/u/3437419?v=4","gravatar_id":"","url":"https://api.github.com/users/JohanStolk","html_url":"https://github.com/JohanStolk","followers_url":"https://api.github.com/users/JohanStolk/followers","following_url":"https://api.github.com/users/JohanStolk/following{/other_user}","gists_url":"https://api.github.com/users/JohanStolk/gists{/gist_id}","starred_url":"https://api.github.com/users/JohanStolk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JohanStolk/subscriptions","organizations_url":"https://api.github.com/users/JohanStolk/orgs","repos_url":"https://api.github.com/users/JohanStolk/repos","events_url":"https://api.github.com/users/JohanStolk/events{/privacy}","received_events_url":"https://api.github.com/users/JohanStolk/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2016-03-07T21:54:45Z","updated_at":"2017-08-27T18:52:25Z","closed_at":"2016-03-29T04:21:15Z","author_association":"NONE","body":"#### Issue details\n\nObjectMap copy constructor fails as of libgdx 1.7.2 :\n\n``` java\nObjectMap<String, Object> dataCopy = new ObjectMap<String, Object>(data); \n```\n\nSee example below.\n#### Reproduction steps/code\n\n``` java\nimport com.badlogic.gdx.utils.ObjectMap;\n\npublic class ObjectMapCopyCtorBug\n{\n    public static void main(String[] args) throws Exception\n    {\n        ObjectMap<String, Object> data = new ObjectMap<String, Object>();\n        for (int i = 0; i < 17; i++) // above a certain size copy fails \n            data.put(\"key\" + i, i + 0.5f);\n\n        ObjectMap<String, Object> dataCopy = new ObjectMap<String, Object>(data); // copy ctor fails as of libgdx 1.7.2\n        for (int i = 0; i < data.size; i++)\n        {\n            String key = \"key\" + i;\n            Object dataValue = data.get(key);\n            Object dataCopyValue = dataCopy.get(key);\n            System.out.println(dataValue + \" = \" + dataCopyValue);\n            if (!dataValue.equals(dataCopyValue))\n                System.out.println(\"wrong copy for key \" + key);\n        }\n    }\n}\n```\n\noutput:\n0.5 = 0.5\n1.5 = 1.5\n2.5 = 2.5\n3.5 = 3.5\n4.5 = 4.5\n5.5 = 5.5\n6.5 = 6.5\n7.5 = 7.5\n8.5 = 8.5\n9.5 = 9.5\n10.5 = 10.5\n11.5 = 11.5\n12.5 = null\nwrong copy for key key12\n13.5 = null\nwrong copy for key key13\n14.5 = null\nwrong copy for key key14\n15.5 = null\nwrong copy for key key15\n16.5 = null\nwrong copy for key key16\n#### Version of LibGDX and/or relevant dependencies\n\nversion 1.7.2 and higher\n#### Please select the affected platforms\n\nAll\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3908/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3907","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3907/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3907/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3907/events","html_url":"https://github.com/libgdx/libgdx/pull/3907","id":139089219,"number":3907,"title":"+ETC1 Atlas Compressor","user":{"login":"JFixby","id":1580663,"avatar_url":"https://avatars0.githubusercontent.com/u/1580663?v=4","gravatar_id":"","url":"https://api.github.com/users/JFixby","html_url":"https://github.com/JFixby","followers_url":"https://api.github.com/users/JFixby/followers","following_url":"https://api.github.com/users/JFixby/following{/other_user}","gists_url":"https://api.github.com/users/JFixby/gists{/gist_id}","starred_url":"https://api.github.com/users/JFixby/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JFixby/subscriptions","organizations_url":"https://api.github.com/users/JFixby/orgs","repos_url":"https://api.github.com/users/JFixby/repos","events_url":"https://api.github.com/users/JFixby/events{/privacy}","received_events_url":"https://api.github.com/users/JFixby/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":12,"created_at":"2016-03-07T20:44:35Z","updated_at":"2016-03-08T16:29:23Z","closed_at":"2016-03-08T16:29:23Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3907","html_url":"https://github.com/libgdx/libgdx/pull/3907","diff_url":"https://github.com/libgdx/libgdx/pull/3907.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3907.patch"},"body":"Back-story: https://twitter.com/badlogicgames/status/643082568334745600\n\n`AtlasETC1Compressor` takes atlas produced by the `TexturePacker` and converts it to `ETC1` format by:\n- compressing textures from `PNG` to `ETC1`,\n- changing texture-file names accordingly  in the atlas description file.\n\nTo test the `AtlasETC1Compressor` please run the `AtlasETC1CompressorTest`, the test will:\n- prepare example atlas using sprites in the sprites folder,\n- compress the atlas using `AtlasETC1Compressor`,\n- load and render compressed sprites on the screen using gdx desktop backend.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3907/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3906","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3906/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3906/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3906/events","html_url":"https://github.com/libgdx/libgdx/pull/3906","id":139047564,"number":3906,"title":"Fix #1775 ensure loading of sound on Android","user":{"login":"intrigus","id":10353467,"avatar_url":"https://avatars2.githubusercontent.com/u/10353467?v=4","gravatar_id":"","url":"https://api.github.com/users/intrigus","html_url":"https://github.com/intrigus","followers_url":"https://api.github.com/users/intrigus/followers","following_url":"https://api.github.com/users/intrigus/following{/other_user}","gists_url":"https://api.github.com/users/intrigus/gists{/gist_id}","starred_url":"https://api.github.com/users/intrigus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/intrigus/subscriptions","organizations_url":"https://api.github.com/users/intrigus/orgs","repos_url":"https://api.github.com/users/intrigus/repos","events_url":"https://api.github.com/users/intrigus/events{/privacy}","received_events_url":"https://api.github.com/users/intrigus/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2016-03-07T17:59:59Z","updated_at":"2016-05-11T08:58:55Z","closed_at":"2016-05-11T08:58:55Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3906","html_url":"https://github.com/libgdx/libgdx/pull/3906","diff_url":"https://github.com/libgdx/libgdx/pull/3906.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3906.patch"},"body":"@badlogic I hope that is what you had in your mind :)\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3906/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3905","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3905/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3905/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3905/events","html_url":"https://github.com/libgdx/libgdx/issues/3905","id":139036041,"number":3905,"title":"JARs import proposal","user":{"login":"JFixby","id":1580663,"avatar_url":"https://avatars0.githubusercontent.com/u/1580663?v=4","gravatar_id":"","url":"https://api.github.com/users/JFixby","html_url":"https://github.com/JFixby","followers_url":"https://api.github.com/users/JFixby/followers","following_url":"https://api.github.com/users/JFixby/following{/other_user}","gists_url":"https://api.github.com/users/JFixby/gists{/gist_id}","starred_url":"https://api.github.com/users/JFixby/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JFixby/subscriptions","organizations_url":"https://api.github.com/users/JFixby/orgs","repos_url":"https://api.github.com/users/JFixby/repos","events_url":"https://api.github.com/users/JFixby/events{/privacy}","received_events_url":"https://api.github.com/users/JFixby/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2016-03-07T17:14:09Z","updated_at":"2016-03-08T06:30:55Z","closed_at":"2016-03-07T18:29:09Z","author_association":"CONTRIBUTOR","body":"When I import freshly downloaded gdx projects from the repository, they all are \"red\" because of missing jars:\n![gdx](https://cloud.githubusercontent.com/assets/1580663/13576449/0af2bed0-e48e-11e5-85c3-fe353021b07d.jpg)\n\nI know the documentation says that I have to download the missing jars from the gdx-nightly server and manually re-import them (which btw is not very handy).\n\nI would like to propose (I believe) a better solution that I already successfully use for the JAR's import.\n\nThe idea is that:\n1) You create a new repository and call it **gdx-nightly**.\n2) There you upload an eclipse project that contains all the jars. Here is an example: https://github.com/JFixby/libgdx-nightly\n3) Then you import that project into eclipse workspace and link the jars.\n\nThat would be a solution for the Eclipse.\n\nNow when you import freshly downloaded gdx projects from the repository, they will all immediately resolve the missing jars right when you import the **gdx-nightly** into your workspace. \n\nPros:\n- no manual resolution, just import the **gdx-nightly**\n- you can deduce related paragraph in the doc to simple \"just import the **gdx-nightly**\"\n- bonus: you can use git to switch libraries between versions to test you code against older jars\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3905/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3904","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3904/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3904/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3904/events","html_url":"https://github.com/libgdx/libgdx/issues/3904","id":138957381,"number":3904,"title":"StringBuilder.toString() does not work in GWT with large strings using the LibGDX StringBuilder","user":{"login":"WillCalderwood","id":6973062,"avatar_url":"https://avatars1.githubusercontent.com/u/6973062?v=4","gravatar_id":"","url":"https://api.github.com/users/WillCalderwood","html_url":"https://github.com/WillCalderwood","followers_url":"https://api.github.com/users/WillCalderwood/followers","following_url":"https://api.github.com/users/WillCalderwood/following{/other_user}","gists_url":"https://api.github.com/users/WillCalderwood/gists{/gist_id}","starred_url":"https://api.github.com/users/WillCalderwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/WillCalderwood/subscriptions","organizations_url":"https://api.github.com/users/WillCalderwood/orgs","repos_url":"https://api.github.com/users/WillCalderwood/repos","events_url":"https://api.github.com/users/WillCalderwood/events{/privacy}","received_events_url":"https://api.github.com/users/WillCalderwood/received_events","type":"User","site_admin":false},"labels":[{"id":67383148,"url":"https://api.github.com/repos/libgdx/libgdx/labels/gwt","name":"gwt","color":"5319e7","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2016-03-07T11:33:13Z","updated_at":"2017-03-15T13:52:03Z","closed_at":"2017-03-15T13:52:03Z","author_association":"CONTRIBUTOR","body":"#### Issue details\n\n`StringBuilder.toString()` does not work in GWT with large strings when using the LibGDX `StringBuilder`. There is a known bug in the `String` constructor in GWT when working with large strings which I've worked around in the past in my own code. See [here](http://stackoverflow.com/questions/32844235/new-stringbytes-causing-maximum-call-stack-size-exceeded-in-gwt-client). I'm hitting this problem when creating JSON from a large object.\n#### Reproduction steps/code\n\nThe following code will reproduce the issue. This works fine with the Java String Builder\n\n```\n    StringBuilder sb = new StringBuilder();\n    for (int i = 1; i < 100000; i++) {\n        sb.append(\"Hello!\");\n    }\n    String s = sb.toString();\n```\n#### Version of LibGDX and/or relevant dependencies\n\nAll\n#### Stacktrace\n\n```\ncom.google.gwt.core.client.JavaScriptException: (RangeError) \n __gwt$exception: <skipped>: Maximum call stack size exceeded\nat Unknown.__valueOf(html-0.js@30:197503)\nat Unknown.valueOf_100(html-0.js@10:197712)\nat Unknown._String_3(html-0.js@10:197468)\nat Unknown.$toString_12(html-0.js@10:63725)\nat Unknown.$prettyPrint_2(html-0.js@10:58593)\nat Unknown.$prettyPrint_4(html-0.js@10:58679)\nat Unknown.$prettyPrint_1(html-0.js@10:46957)\nat Unknown.$prettyPrint_0(html-0.js@10:46953)\nat Unknown.$prettyPrint(html-0.js@10:46949)\nat Unknown.getString_4(html-0.js@25:203579)\nat Unknown.$saveUser(html-0.js@43:182979)\n```\n#### Please select the affected platforms\n- [x] HTML/GWT\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3904/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3903","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3903/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3903/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3903/events","html_url":"https://github.com/libgdx/libgdx/pull/3903","id":138810167,"number":3903,"title":"Lwjgl2 backend displayMode tweaks","user":{"login":"IonAgorria","id":1096830,"avatar_url":"https://avatars2.githubusercontent.com/u/1096830?v=4","gravatar_id":"","url":"https://api.github.com/users/IonAgorria","html_url":"https://github.com/IonAgorria","followers_url":"https://api.github.com/users/IonAgorria/followers","following_url":"https://api.github.com/users/IonAgorria/following{/other_user}","gists_url":"https://api.github.com/users/IonAgorria/gists{/gist_id}","starred_url":"https://api.github.com/users/IonAgorria/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/IonAgorria/subscriptions","organizations_url":"https://api.github.com/users/IonAgorria/orgs","repos_url":"https://api.github.com/users/IonAgorria/repos","events_url":"https://api.github.com/users/IonAgorria/events{/privacy}","received_events_url":"https://api.github.com/users/IonAgorria/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-03-06T16:55:06Z","updated_at":"2016-03-20T23:31:39Z","closed_at":"2016-03-20T23:31:34Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3903","html_url":"https://github.com/libgdx/libgdx/pull/3903","diff_url":"https://github.com/libgdx/libgdx/pull/3903.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3903.patch"},"body":"Seems that getDisplayModes(Monitor) only returns the getDisplayMode() result\nwhich in turn getDisplayMode() doesn't return the current mode but the initial one that was the window created with (using getDesktopDisplayMode())\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3903/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3902","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3902/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3902/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3902/events","html_url":"https://github.com/libgdx/libgdx/pull/3902","id":138730173,"number":3902,"title":"Fix #3838","user":{"login":"tuslatom","id":5530407,"avatar_url":"https://avatars3.githubusercontent.com/u/5530407?v=4","gravatar_id":"","url":"https://api.github.com/users/tuslatom","html_url":"https://github.com/tuslatom","followers_url":"https://api.github.com/users/tuslatom/followers","following_url":"https://api.github.com/users/tuslatom/following{/other_user}","gists_url":"https://api.github.com/users/tuslatom/gists{/gist_id}","starred_url":"https://api.github.com/users/tuslatom/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tuslatom/subscriptions","organizations_url":"https://api.github.com/users/tuslatom/orgs","repos_url":"https://api.github.com/users/tuslatom/repos","events_url":"https://api.github.com/users/tuslatom/events{/privacy}","received_events_url":"https://api.github.com/users/tuslatom/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2016-03-05T22:36:04Z","updated_at":"2016-03-29T03:33:59Z","closed_at":"2016-03-29T03:33:59Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3902","html_url":"https://github.com/libgdx/libgdx/pull/3902","diff_url":"https://github.com/libgdx/libgdx/pull/3902.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3902.patch"},"body":"Parser was checking only spaces, not other whitespace characters and if I understand it correctly Character.isWhiteSpace() is not supported by GWT, but isSpace() is.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3902/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3901","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3901/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3901/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3901/events","html_url":"https://github.com/libgdx/libgdx/pull/3901","id":138616185,"number":3901,"title":"Add a few small utility methods to improve the GridPoint classes","user":{"login":"xSke","id":16242158,"avatar_url":"https://avatars2.githubusercontent.com/u/16242158?v=4","gravatar_id":"","url":"https://api.github.com/users/xSke","html_url":"https://github.com/xSke","followers_url":"https://api.github.com/users/xSke/followers","following_url":"https://api.github.com/users/xSke/following{/other_user}","gists_url":"https://api.github.com/users/xSke/gists{/gist_id}","starred_url":"https://api.github.com/users/xSke/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xSke/subscriptions","organizations_url":"https://api.github.com/users/xSke/orgs","repos_url":"https://api.github.com/users/xSke/repos","events_url":"https://api.github.com/users/xSke/events{/privacy}","received_events_url":"https://api.github.com/users/xSke/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2016-03-04T23:29:14Z","updated_at":"2016-03-05T18:49:37Z","closed_at":"2016-03-05T18:49:32Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3901","html_url":"https://github.com/libgdx/libgdx/pull/3901","diff_url":"https://github.com/libgdx/libgdx/pull/3901.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3901.patch"},"body":"","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3901/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3900","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3900/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3900/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3900/events","html_url":"https://github.com/libgdx/libgdx/pull/3900","id":138580287,"number":3900,"title":"Fix #3899","user":{"login":"intrigus","id":10353467,"avatar_url":"https://avatars2.githubusercontent.com/u/10353467?v=4","gravatar_id":"","url":"https://api.github.com/users/intrigus","html_url":"https://github.com/intrigus","followers_url":"https://api.github.com/users/intrigus/followers","following_url":"https://api.github.com/users/intrigus/following{/other_user}","gists_url":"https://api.github.com/users/intrigus/gists{/gist_id}","starred_url":"https://api.github.com/users/intrigus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/intrigus/subscriptions","organizations_url":"https://api.github.com/users/intrigus/orgs","repos_url":"https://api.github.com/users/intrigus/repos","events_url":"https://api.github.com/users/intrigus/events{/privacy}","received_events_url":"https://api.github.com/users/intrigus/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-03-04T20:35:43Z","updated_at":"2016-03-16T20:36:06Z","closed_at":"2016-03-16T20:36:06Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3900","html_url":"https://github.com/libgdx/libgdx/pull/3900","diff_url":"https://github.com/libgdx/libgdx/pull/3900.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3900.patch"},"body":"Custom cursors aren't supported on mac when using lwjgl2 and awt, so we simply never change the cursor.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3900/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3899","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3899/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3899/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3899/events","html_url":"https://github.com/libgdx/libgdx/issues/3899","id":138515969,"number":3899,"title":"Can't set cursor on Mac, when using LWJGL2 and AWT","user":{"login":"intrigus","id":10353467,"avatar_url":"https://avatars2.githubusercontent.com/u/10353467?v=4","gravatar_id":"","url":"https://api.github.com/users/intrigus","html_url":"https://github.com/intrigus","followers_url":"https://api.github.com/users/intrigus/followers","following_url":"https://api.github.com/users/intrigus/following{/other_user}","gists_url":"https://api.github.com/users/intrigus/gists{/gist_id}","starred_url":"https://api.github.com/users/intrigus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/intrigus/subscriptions","organizations_url":"https://api.github.com/users/intrigus/orgs","repos_url":"https://api.github.com/users/intrigus/repos","events_url":"https://api.github.com/users/intrigus/events{/privacy}","received_events_url":"https://api.github.com/users/intrigus/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-03-04T16:22:48Z","updated_at":"2016-03-16T20:36:12Z","closed_at":"2016-03-16T20:36:12Z","author_association":"CONTRIBUTOR","body":"#### Issue details\n\nIt is currently not possible to set the system cursor or any cursor on a Mac, when embedding a lwjgl canvas in an awt application.\n#### Reproduction steps/code\n\n``` java\npackage com.badlogic.gdx.tests.lwjgl;\n\nimport java.awt.BorderLayout;\nimport java.awt.Container;\n\nimport javax.swing.JFrame;\nimport javax.swing.SwingUtilities;\n\nimport com.badlogic.gdx.backends.lwjgl.LwjglCanvas;\nimport com.badlogic.gdx.tests.CursorTest;\n\npublic class LwjglCanvasTest extends JFrame {\n    LwjglCanvas canvas;\n\n    public LwjglCanvasTest () {\n        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n\n        Container container = getContentPane();\n        canvas = new LwjglCanvas(new CursorTest());\n\n        container.add(canvas.getCanvas(), BorderLayout.CENTER);\n\n        pack();\n        setVisible(true);\n        setSize(800, 480);\n    }\n\n    public static void main (String[] args) {\n        SwingUtilities.invokeLater(new Runnable() {\n            @Override\n            public void run () {\n                new LwjglCanvasTest();\n            }\n        });\n    }\n}\n```\n#### Version of LibGDX and/or relevant dependencies\n\nLibGdx 1.9.2 Lwjgl-Backend\n#### Stacktrace\n\n``` java\ncom.badlogic.gdx.utils.GdxRuntimeException: Could not create cursor image.\n    at com.badlogic.gdx.backends.lwjgl.LwjglCursor.<init>(LwjglCursor.java:80)\n    at com.badlogic.gdx.backends.lwjgl.LwjglGraphics.newCursor(LwjglGraphics.java:619)\n    at com.badlogic.gdx.tests.CursorTest.create(CursorTest.java:44)\n    at com.badlogic.gdx.backends.lwjgl.LwjglCanvas.create(LwjglCanvas.java:192)\n    at com.badlogic.gdx.backends.lwjgl.LwjglCanvas$1$1.run(LwjglCanvas.java:86)\n    at java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:311)\n    at java.awt.EventQueue.dispatchEventImpl(EventQueue.java:756)\n    at java.awt.EventQueue.access$500(EventQueue.java:97)\n    at java.awt.EventQueue$3.run(EventQueue.java:709)\n    at java.awt.EventQueue$3.run(EventQueue.java:703)\n    at java.security.AccessController.doPrivileged(Native Method)\n    at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:76)\n    at java.awt.EventQueue.dispatchEvent(EventQueue.java:726)\n    at java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:201)\n    at java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:116)\n    at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:105)\n    at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)\n    at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:93)\n    at java.awt.EventDispatchThread.run(EventDispatchThread.java:82)\nCaused by: org.lwjgl.LWJGLException: Native cursors not supported\n    at org.lwjgl.input.Cursor.<init>(Cursor.java:88)\n    at com.badlogic.gdx.backends.lwjgl.LwjglCursor.<init>(LwjglCursor.java:78)\n    ... 18 more\n```\n#### Please select the affected platforms\n- [ ] Android\n- [ ] iOS\n- [ ] HTML/GWT\n- [ ] Windows\n- [ ] Linux\n- [x] MacOS\n#### Possible Fix:\n\nIt should be possible to directly set the cursor on the canvas using awt's tools.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3899/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3898","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3898/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3898/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3898/events","html_url":"https://github.com/libgdx/libgdx/issues/3898","id":138428032,"number":3898,"title":"json hashmap reader broken","user":{"login":"kizinfo","id":5999119,"avatar_url":"https://avatars3.githubusercontent.com/u/5999119?v=4","gravatar_id":"","url":"https://api.github.com/users/kizinfo","html_url":"https://github.com/kizinfo","followers_url":"https://api.github.com/users/kizinfo/followers","following_url":"https://api.github.com/users/kizinfo/following{/other_user}","gists_url":"https://api.github.com/users/kizinfo/gists{/gist_id}","starred_url":"https://api.github.com/users/kizinfo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kizinfo/subscriptions","organizations_url":"https://api.github.com/users/kizinfo/orgs","repos_url":"https://api.github.com/users/kizinfo/repos","events_url":"https://api.github.com/users/kizinfo/events{/privacy}","received_events_url":"https://api.github.com/users/kizinfo/received_events","type":"User","site_admin":false},"labels":[{"id":172870364,"url":"https://api.github.com/repos/libgdx/libgdx/labels/need%20more%20info","name":"need more info","color":"bfdadc","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2016-03-04T09:35:22Z","updated_at":"2016-04-29T20:41:27Z","closed_at":"2016-03-29T03:32:21Z","author_association":"NONE","body":"Please ensure you have given all the following requested information in your report.\n#### Issue details\n\nsame json file parses fine in 1.7.2 but won't read in 1.9.1\n#### Reproduction steps/code\n\nmake a json containing class:java.util.HashMap and try to read it using Json.fromJson\n#### Version of LibGDX and/or relevant dependencies\n\nworks in 1.7.2, fails 1.9.1\n#### Stacktrace\n\n``` java\n (com.badlogic.gdx.utils.SerializationException) com.badlogic.gdx.utils.SerializationException: Unable to convert value to required type: class: java.util.HashMap\n```\n#### Please select the affected platforms\n- [ ] Android\n- [ ] iOS\n- [ ] HTML/GWT\n- [x] Windows\n- [ ] Linux\n- [ ] MacOS\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3898/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3897","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3897/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3897/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3897/events","html_url":"https://github.com/libgdx/libgdx/issues/3897","id":138205151,"number":3897,"title":"Adding ControllerListener doesn't return","user":{"login":"MrJavaFrank","id":5160805,"avatar_url":"https://avatars2.githubusercontent.com/u/5160805?v=4","gravatar_id":"","url":"https://api.github.com/users/MrJavaFrank","html_url":"https://github.com/MrJavaFrank","followers_url":"https://api.github.com/users/MrJavaFrank/followers","following_url":"https://api.github.com/users/MrJavaFrank/following{/other_user}","gists_url":"https://api.github.com/users/MrJavaFrank/gists{/gist_id}","starred_url":"https://api.github.com/users/MrJavaFrank/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MrJavaFrank/subscriptions","organizations_url":"https://api.github.com/users/MrJavaFrank/orgs","repos_url":"https://api.github.com/users/MrJavaFrank/repos","events_url":"https://api.github.com/users/MrJavaFrank/events{/privacy}","received_events_url":"https://api.github.com/users/MrJavaFrank/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-03-03T15:09:42Z","updated_at":"2016-03-06T10:44:47Z","closed_at":"2016-03-06T10:44:47Z","author_association":"NONE","body":"#### Issue details\n\nWhen the method `Controllers.addListener` is called when a controller is connected then it doesn't return. It looks like the `initialize` method isn't returning because it doesn't print out that mangers are added to the application. Furthermore I think this issue comes with a new Windows 10 Build because it worked perfectly before Windows updated itself (Also 3 Microsoft Joysticks are registered even if there is no controller connected, wasn't like that before) \n#### Reproduction steps/code\n\n`public class ControllerTest extends ApplicationAdapter implements ControllerListener\n{\n    @Override\n    public void create()\n    {\n        Controllers.addListener(this);\n    }\n    ...\n}`\n#### Version of LibGDX and/or relevant dependencies\n\nlibGDX 1.9.2 and libGDX 1.9.3 SNAPSHOT\nTested with a Xbox One Controller wired/wireless\n#### Please select the affected platforms\n- [ ] Android\n- [ ] iOS\n- [ ] HTML/GWT\n- [X] Windows\n- [ ] Linux\n- [ ] MacOS\n#### Edit\n\nLooks like the new Windows 10 Build broke the Xbox One Controller Driver : http://www.infoworld.com/article/3040403/microsoft-windows/bad-windows-10-xbox-one-controller-forces-microsofts-hand.html\nFuthermore FIFA 16 also got problems with it ;)\nI don't know if should close this issue?!\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3897/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3896","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3896/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3896/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3896/events","html_url":"https://github.com/libgdx/libgdx/issues/3896","id":138035576,"number":3896,"title":"LibGDX's Android Keyboard input not working with the \"Samsung Keyboard\"","user":{"login":"Ash98","id":8880610,"avatar_url":"https://avatars1.githubusercontent.com/u/8880610?v=4","gravatar_id":"","url":"https://api.github.com/users/Ash98","html_url":"https://github.com/Ash98","followers_url":"https://api.github.com/users/Ash98/followers","following_url":"https://api.github.com/users/Ash98/following{/other_user}","gists_url":"https://api.github.com/users/Ash98/gists{/gist_id}","starred_url":"https://api.github.com/users/Ash98/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Ash98/subscriptions","organizations_url":"https://api.github.com/users/Ash98/orgs","repos_url":"https://api.github.com/users/Ash98/repos","events_url":"https://api.github.com/users/Ash98/events{/privacy}","received_events_url":"https://api.github.com/users/Ash98/received_events","type":"User","site_admin":false},"labels":[{"id":59604218,"url":"https://api.github.com/repos/libgdx/libgdx/labels/android","name":"android","color":"009800","default":false},{"id":11336980,"url":"https://api.github.com/repos/libgdx/libgdx/labels/bug","name":"bug","color":"fc2929","default":true}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":23,"created_at":"2016-03-03T00:29:46Z","updated_at":"2017-08-08T18:47:10Z","closed_at":null,"author_association":"NONE","body":"#### Issue details\n\nOn Samsung's keyboard, there is a glitch where it does not process the command InputType.NULL sent by the Android App and therefore shows predictive text above the keyboard, which breaks LibGDX's keyboard input. \n\nI think this may be temporarily fixed if we can modify the InputType of the on screen keyboard. This would allow us to set the keyboard's input type as a visible password, which would prevent predictive text appearing.\n\nI know this is not necessarily an issue with LibGDX, it is more Samsung's issue. It was reported to [Samsung a while ago ](http://developer.samsung.com/forum/board/thread/view.do?boardName=General&messageId=281092&frm=7&tagValue=keyboardbug&curPage=1)but I don't think they will be fixing it anytime soon.\n#### Reproduction steps/code\n\nCreate a game that uses an InputProcessor to receive keyboard input.\n\nLoad the game on a Samsung Galaxy S5, S6, S6 Edge or Note 5 that uses the Samsung Keyboard app. Make sure predictive text is enabled on the keyboard settings.\n\nTry to type something and no input will be registered.\n#### Version of LibGDX and/or relevant dependencies\n\n_Please provide the version(s) affected._\nI have only tested with 1.6 and 1.9.3\n#### Please select the affected platforms\n- [x] Android\n- [ ] iOS\n- [ ] HTML/GWT\n- [ ] Windows\n- [ ] Linux\n- [ ] MacOS\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3896/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3895","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3895/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3895/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3895/events","html_url":"https://github.com/libgdx/libgdx/pull/3895","id":138016187,"number":3895,"title":"Fix Music.isPlaying() on GWT backend","user":{"login":"ifcaro","id":398133,"avatar_url":"https://avatars0.githubusercontent.com/u/398133?v=4","gravatar_id":"","url":"https://api.github.com/users/ifcaro","html_url":"https://github.com/ifcaro","followers_url":"https://api.github.com/users/ifcaro/followers","following_url":"https://api.github.com/users/ifcaro/following{/other_user}","gists_url":"https://api.github.com/users/ifcaro/gists{/gist_id}","starred_url":"https://api.github.com/users/ifcaro/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ifcaro/subscriptions","organizations_url":"https://api.github.com/users/ifcaro/orgs","repos_url":"https://api.github.com/users/ifcaro/repos","events_url":"https://api.github.com/users/ifcaro/events{/privacy}","received_events_url":"https://api.github.com/users/ifcaro/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-03-02T22:44:00Z","updated_at":"2016-04-07T07:58:13Z","closed_at":"2016-04-07T07:58:13Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3895","html_url":"https://github.com/libgdx/libgdx/pull/3895","diff_url":"https://github.com/libgdx/libgdx/pull/3895.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3895.patch"},"body":"","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3895/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3894","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3894/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3894/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3894/events","html_url":"https://github.com/libgdx/libgdx/pull/3894","id":137970854,"number":3894,"title":"Fix selection of non latin characters","user":{"login":"intrigus","id":10353467,"avatar_url":"https://avatars2.githubusercontent.com/u/10353467?v=4","gravatar_id":"","url":"https://api.github.com/users/intrigus","html_url":"https://github.com/intrigus","followers_url":"https://api.github.com/users/intrigus/followers","following_url":"https://api.github.com/users/intrigus/following{/other_user}","gists_url":"https://api.github.com/users/intrigus/gists{/gist_id}","starred_url":"https://api.github.com/users/intrigus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/intrigus/subscriptions","organizations_url":"https://api.github.com/users/intrigus/orgs","repos_url":"https://api.github.com/users/intrigus/repos","events_url":"https://api.github.com/users/intrigus/events{/privacy}","received_events_url":"https://api.github.com/users/intrigus/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-03-02T19:39:15Z","updated_at":"2016-03-29T03:54:34Z","closed_at":"2016-03-29T03:54:34Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3894","html_url":"https://github.com/libgdx/libgdx/pull/3894","diff_url":"https://github.com/libgdx/libgdx/pull/3894.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3894.patch"},"body":"This change allows to select non latin letters.\nPreviously it was impossible to select \"éíúóöäü\" as a whole word.\nYou were only able to select one of those characters.\n@NathanSweet \n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3894/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3893","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3893/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3893/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3893/events","html_url":"https://github.com/libgdx/libgdx/issues/3893","id":137212354,"number":3893,"title":"Project 'html' not found in project ':html'.","user":{"login":"mipesom","id":3458571,"avatar_url":"https://avatars1.githubusercontent.com/u/3458571?v=4","gravatar_id":"","url":"https://api.github.com/users/mipesom","html_url":"https://github.com/mipesom","followers_url":"https://api.github.com/users/mipesom/followers","following_url":"https://api.github.com/users/mipesom/following{/other_user}","gists_url":"https://api.github.com/users/mipesom/gists{/gist_id}","starred_url":"https://api.github.com/users/mipesom/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mipesom/subscriptions","organizations_url":"https://api.github.com/users/mipesom/orgs","repos_url":"https://api.github.com/users/mipesom/repos","events_url":"https://api.github.com/users/mipesom/events{/privacy}","received_events_url":"https://api.github.com/users/mipesom/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2016-02-29T10:27:08Z","updated_at":"2016-03-01T09:29:32Z","closed_at":"2016-03-01T08:02:25Z","author_association":"NONE","body":"#### Issue details\n\nError on run: \"Project 'html' not found in project ':html'.\"\n#### Version of LibGDX and/or relevant dependencies\n\nStable (from yesterday) - Eclipse Mars 2 - followed the instructions here:\nhttps://github.com/libgdx/libgdx/wiki/Gradle-and-Eclipse\n#### Stacktrace\n\n``` java\norg.gradle.execution.taskpath.ProjectFinderByTaskPath$ProjectLookupException: Project 'html' not found in project ':html'.\n    at org.gradle.execution.taskpath.ProjectFinderByTaskPath.findProject(ProjectFinderByTaskPath.java:47)\n    at org.gradle.execution.taskpath.TaskPathResolver.resolvePath(TaskPathResolver.java:49)\n    at org.gradle.execution.TaskSelector.getSelection(TaskSelector.java:79)\n    at org.gradle.execution.TaskSelector.getSelection(TaskSelector.java:75)\n    at org.gradle.execution.commandline.CommandLineTaskParser.parseTasks(CommandLineTaskParser.java:42)\n    at org.gradle.execution.TaskNameResolvingBuildConfigurationAction.configure(TaskNameResolvingBuildConfigurationAction.java:44)\n    at org.gradle.execution.DefaultBuildConfigurationActionExecuter.configure(DefaultBuildConfigurationActionExecuter.java:48)\n    at org.gradle.execution.DefaultBuildConfigurationActionExecuter.access$000(DefaultBuildConfigurationActionExecuter.java:25)\n    at org.gradle.execution.DefaultBuildConfigurationActionExecuter$1.proceed(DefaultBuildConfigurationActionExecuter.java:54)\n    at org.gradle.execution.DefaultTasksBuildExecutionAction.configure(DefaultTasksBuildExecutionAction.java:44)\n    at org.gradle.execution.DefaultBuildConfigurationActionExecuter.configure(DefaultBuildConfigurationActionExecuter.java:48)\n    at org.gradle.execution.DefaultBuildConfigurationActionExecuter.access$000(DefaultBuildConfigurationActionExecuter.java:25)\n    at org.gradle.execution.DefaultBuildConfigurationActionExecuter$1.proceed(DefaultBuildConfigurationActionExecuter.java:54)\n    at org.gradle.execution.ExcludedTaskFilteringBuildConfigurationAction.configure(ExcludedTaskFilteringBuildConfigurationAction.java:47)\n    at org.gradle.execution.DefaultBuildConfigurationActionExecuter.configure(DefaultBuildConfigurationActionExecuter.java:48)\n    at org.gradle.execution.DefaultBuildConfigurationActionExecuter.select(DefaultBuildConfigurationActionExecuter.java:36)\n    at org.gradle.initialization.DefaultGradleLauncher$3.run(DefaultGradleLauncher.java:143)\n    at org.gradle.internal.Factories$1.create(Factories.java:22)\n    at org.gradle.internal.progress.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:90)\n    at org.gradle.internal.progress.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:52)\n    at org.gradle.initialization.DefaultGradleLauncher.doBuildStages(DefaultGradleLauncher.java:140)\n    at org.gradle.initialization.DefaultGradleLauncher.access$200(DefaultGradleLauncher.java:32)\n    at org.gradle.initialization.DefaultGradleLauncher$1.create(DefaultGradleLauncher.java:99)\n    at org.gradle.initialization.DefaultGradleLauncher$1.create(DefaultGradleLauncher.java:93)\n    at org.gradle.internal.progress.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:90)\n    at org.gradle.internal.progress.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:62)\n    at org.gradle.initialization.DefaultGradleLauncher.doBuild(DefaultGradleLauncher.java:93)\n    at org.gradle.initialization.DefaultGradleLauncher.run(DefaultGradleLauncher.java:82)\n    at org.gradle.launcher.exec.InProcessBuildActionExecuter$DefaultBuildController.run(InProcessBuildActionExecuter.java:94)\n    at org.gradle.tooling.internal.provider.ExecuteBuildActionRunner.run(ExecuteBuildActionRunner.java:28)\n    at org.gradle.launcher.exec.ChainingBuildActionRunner.run(ChainingBuildActionRunner.java:35)\n    at org.gradle.launcher.exec.InProcessBuildActionExecuter.execute(InProcessBuildActionExecuter.java:43)\n    at org.gradle.launcher.exec.InProcessBuildActionExecuter.execute(InProcessBuildActionExecuter.java:28)\n    at org.gradle.launcher.exec.ContinuousBuildActionExecuter.execute(ContinuousBuildActionExecuter.java:78)\n    at org.gradle.launcher.exec.ContinuousBuildActionExecuter.execute(ContinuousBuildActionExecuter.java:48)\n    at org.gradle.launcher.daemon.server.exec.ExecuteBuild.doBuild(ExecuteBuild.java:52)\n    at org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:36)\n    at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:120)\n    at org.gradle.launcher.daemon.server.exec.WatchForDisconnection.execute(WatchForDisconnection.java:37)\n    at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:120)\n    at org.gradle.launcher.daemon.server.exec.ResetDeprecationLogger.execute(ResetDeprecationLogger.java:26)\n    at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:120)\n    at org.gradle.launcher.daemon.server.exec.RequestStopIfSingleUsedDaemon.execute(RequestStopIfSingleUsedDaemon.java:34)\n    at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:120)\n    at org.gradle.launcher.daemon.server.exec.ForwardClientInput$2.call(ForwardClientInput.java:74)\n    at org.gradle.launcher.daemon.server.exec.ForwardClientInput$2.call(ForwardClientInput.java:72)\n    at org.gradle.util.Swapper.swap(Swapper.java:38)\n    at org.gradle.launcher.daemon.server.exec.ForwardClientInput.execute(ForwardClientInput.java:72)\n    at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:120)\n    at org.gradle.launcher.daemon.server.health.DaemonHealthTracker.execute(DaemonHealthTracker.java:47)\n    at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:120)\n    at org.gradle.launcher.daemon.server.exec.LogToClient.doBuild(LogToClient.java:66)\n    at org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:36)\n    at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:120)\n    at org.gradle.launcher.daemon.server.exec.EstablishBuildEnvironment.doBuild(EstablishBuildEnvironment.java:72)\n    at org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:36)\n    at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:120)\n    at org.gradle.launcher.daemon.server.health.HintGCAfterBuild.execute(HintGCAfterBuild.java:41)\n    at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:120)\n    at org.gradle.launcher.daemon.server.exec.StartBuildOrRespondWithBusy$1.run(StartBuildOrRespondWithBusy.java:50)\n    at org.gradle.launcher.daemon.server.DaemonStateCoordinator$1.run(DaemonStateCoordinator.java:246)\n    at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:54)\n    at org.gradle.internal.concurrent.StoppableExecutorImpl$1.run(StoppableExecutorImpl.java:40)\n\n\nBUILD FAILED\n\n```\n#### Please select the affected platforms\n-  HTML/GWT\n-  Linux\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3893/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3892","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3892/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3892/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3892/events","html_url":"https://github.com/libgdx/libgdx/issues/3892","id":137155622,"number":3892,"title":"[Feature Request] Add the ability to determine if the onscreen keyboard is currently visible. (Possible events?)","user":{"login":"me4502","id":546754,"avatar_url":"https://avatars1.githubusercontent.com/u/546754?v=4","gravatar_id":"","url":"https://api.github.com/users/me4502","html_url":"https://github.com/me4502","followers_url":"https://api.github.com/users/me4502/followers","following_url":"https://api.github.com/users/me4502/following{/other_user}","gists_url":"https://api.github.com/users/me4502/gists{/gist_id}","starred_url":"https://api.github.com/users/me4502/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/me4502/subscriptions","organizations_url":"https://api.github.com/users/me4502/orgs","repos_url":"https://api.github.com/users/me4502/repos","events_url":"https://api.github.com/users/me4502/events{/privacy}","received_events_url":"https://api.github.com/users/me4502/received_events","type":"User","site_admin":false},"labels":[{"id":11336982,"url":"https://api.github.com/repos/libgdx/libgdx/labels/enhancement","name":"enhancement","color":"84b6eb","default":true}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2016-02-29T05:27:13Z","updated_at":"2016-04-13T09:46:52Z","closed_at":null,"author_association":"NONE","body":"Currently if a fullscreen table is used, it's hard to offset the contents when an onscreen keyboard shows up, as there isn't a way of knowing whether it is there or not.\n\nIf a way to determine if it's there or not was added, or even possible onKeyboardShow, and onKeyboardHide, it'd allow this to be done.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3892/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3891","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3891/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3891/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3891/events","html_url":"https://github.com/libgdx/libgdx/issues/3891","id":137118681,"number":3891,"title":"Robovm Music class problem","user":{"login":"soylomass","id":2977658,"avatar_url":"https://avatars0.githubusercontent.com/u/2977658?v=4","gravatar_id":"","url":"https://api.github.com/users/soylomass","html_url":"https://github.com/soylomass","followers_url":"https://api.github.com/users/soylomass/followers","following_url":"https://api.github.com/users/soylomass/following{/other_user}","gists_url":"https://api.github.com/users/soylomass/gists{/gist_id}","starred_url":"https://api.github.com/users/soylomass/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/soylomass/subscriptions","organizations_url":"https://api.github.com/users/soylomass/orgs","repos_url":"https://api.github.com/users/soylomass/repos","events_url":"https://api.github.com/users/soylomass/events{/privacy}","received_events_url":"https://api.github.com/users/soylomass/received_events","type":"User","site_admin":false},"labels":[{"id":59604199,"url":"https://api.github.com/repos/libgdx/libgdx/labels/ios","name":"ios","color":"207de5","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":12,"created_at":"2016-02-29T00:49:39Z","updated_at":"2017-03-29T06:49:54Z","closed_at":"2016-03-01T14:47:47Z","author_association":"NONE","body":"#### Issue details\n\n(The following applies to both iOS simulator and actual device, both on iOS 9)\n\nI'm porting an Android project to iOS using RoboVM.\n\n(Almost) Everything works fine except of Music. I'm using .mp3 files. Whenever I try to create a Music object using Audio.newMusic, the following fatal error appears:\n\ncom.badlogic.gdx.utils.GdxRuntimeException: Error opening music file at ...\nat com.badlogic.gdx.backends.iosrobovm.IOSAudio.newMusic(IOSAudio.java)\n\nI even tried to load a mp3 file that works right when loaded with the Sound class, but it doesn't work either. So I guess there's a difference between Sound and Music classes on how they load the files.\n\nUPDATE: I've just tried with .wav, .ogg, .mp4 and .mp3 with different bitrates and all throw the same error.\n\n**IMPORTANT: I just discovered that actually the problem is the Internal storage, Sounds doesn't actually work when loaded from there, but they don't throw a Fatal Error, just the following error:\n\nIOSLauncher[1160:26466] OAL Error: -[OALSimpleAudio internalPreloadEffect:reduceToMono:]: Could not load effect /Users/fedejm/Library/Developer/CoreSimulator/Devices/C185A369-7580-4E5E-8698-2C99D9DAA53F/data/Containers/Bundle/Application/563DAF14-D4E1-4638-9D58-2695765531C4/IOSLauncher.app/data/sounds/togglepowerup.mp3\n\nBoth Music and Sound load and play correctly when loaded from Local storage. It seems I should find a workaround.**\n#### Reproduction steps/code\n\nThese are the two files I tried:\n[sounds.zip](https://github.com/libgdx/libgdx/files/150226/sounds.zip)\n\nThe following code gives error:\nGdx.audio.newMusic(Gdx.files.internal(\"data/themes/\"+theme+\"/food.mp3\"));\n\nThe following code works:\nGdx.audio.newSound(Gdx.files.internal(\"data/themes/\"+theme+\"/food.mp3\"));\n#### Version of LibGDX and/or relevant dependencies\n\nJust used Libgdx installer 2 days ago, so lastest stable version. 1.12 RoboVM that came with it.\n#### Stacktrace\n\n``` java\ncom.badlogic.gdx.utils.GdxRuntimeException: Error opening music file at /Users/fedejm/Library/Developer/CoreSimulator/Devices/C185A369-7580-4E5E-8698-2C99D9DAA53F/data/Containers/Bundle/Application/41812F6A-BBAD-43AF-B1E3-73CD7641FED2/IOSLauncher.app/data/themes/clownfish/bg.mp3\n    at com.badlogic.gdx.backends.iosrobovm.IOSAudio.newMusic(IOSAudio.java:67)\n    at com.me.eatthelinetwo.Screenplay.addBackground(Screenplay.java:2360)\n    at com.me.eatthelinetwo.Screenplay.resetGame(Screenplay.java:976)\n    at com.me.eatthelinetwo.Screenplay.show(Screenplay.java:927)\n    at com.badlogic.gdx.Game.setScreen(Game.java:61)\n    at com.me.eatthelinetwo.EatTheLine.create(EatTheLine.java:31)\n    at com.badlogic.gdx.backends.iosrobovm.IOSGraphics.draw(IOSGraphics.java:307)\n    at com.badlogic.gdx.backends.iosrobovm.IOSGraphics$1.draw(IOSGraphics.java:209)\n    at com.badlogic.gdx.backends.iosrobovm.IOSGraphics$1.$cb$drawRect$(IOSGraphics.java)\n    at org.robovm.apple.uikit.UIApplication.main(Native Method)\n    at org.robovm.apple.uikit.UIApplication.main(UIApplication.java:413)\n    at com.me.eatthelinetwo.IOSLauncher.main(IOSLauncher.java:30)\n```\n#### Please select the affected platforms\n- [x] iOS\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3891/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3890","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3890/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3890/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3890/events","html_url":"https://github.com/libgdx/libgdx/issues/3890","id":137087015,"number":3890,"title":"Alpha channel in KTX compressed textures rendered separately","user":{"login":"tyrondis","id":3440273,"avatar_url":"https://avatars1.githubusercontent.com/u/3440273?v=4","gravatar_id":"","url":"https://api.github.com/users/tyrondis","html_url":"https://github.com/tyrondis","followers_url":"https://api.github.com/users/tyrondis/followers","following_url":"https://api.github.com/users/tyrondis/following{/other_user}","gists_url":"https://api.github.com/users/tyrondis/gists{/gist_id}","starred_url":"https://api.github.com/users/tyrondis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tyrondis/subscriptions","organizations_url":"https://api.github.com/users/tyrondis/orgs","repos_url":"https://api.github.com/users/tyrondis/repos","events_url":"https://api.github.com/users/tyrondis/events{/privacy}","received_events_url":"https://api.github.com/users/tyrondis/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2016-02-28T19:36:24Z","updated_at":"2016-03-22T21:39:39Z","closed_at":"2016-03-22T21:39:39Z","author_association":"NONE","body":"#### Issue details\n\nLibGDX renders a KTX compressed texture containing an alpha channel (compressed with KTXProcessor) incorrectly. Rather than re-combining the RGB and Alpha channels, it renders them separately.\n#### Reproduction steps/code\n\nCheckout and run my sample project: https://github.com/tyrondis/ktx-alpha\n#### Version of LibGDX and/or relevant dependencies\n\n1.9.2\n#### Stacktrace\n\nn/a\n#### Please select the affected platforms\n- [x] Android\n- [x] iOS\n- [ ] HTML/GWT\n- [ ] Windows\n- [ ] Linux\n- [x] MacOS\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3890/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3889","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3889/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3889/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3889/events","html_url":"https://github.com/libgdx/libgdx/issues/3889","id":137026176,"number":3889,"title":"Controller disconnect crashes with LWJGL3","user":{"login":"saibotd","id":1080347,"avatar_url":"https://avatars0.githubusercontent.com/u/1080347?v=4","gravatar_id":"","url":"https://api.github.com/users/saibotd","html_url":"https://github.com/saibotd","followers_url":"https://api.github.com/users/saibotd/followers","following_url":"https://api.github.com/users/saibotd/following{/other_user}","gists_url":"https://api.github.com/users/saibotd/gists{/gist_id}","starred_url":"https://api.github.com/users/saibotd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/saibotd/subscriptions","organizations_url":"https://api.github.com/users/saibotd/orgs","repos_url":"https://api.github.com/users/saibotd/repos","events_url":"https://api.github.com/users/saibotd/events{/privacy}","received_events_url":"https://api.github.com/users/saibotd/received_events","type":"User","site_admin":false},"labels":[{"id":309796149,"url":"https://api.github.com/repos/libgdx/libgdx/labels/LWJGL3","name":"LWJGL3","color":"d4c5f9","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2016-02-28T08:34:02Z","updated_at":"2016-12-10T18:15:57Z","closed_at":"2016-12-10T18:15:57Z","author_association":"NONE","body":"#### Issue details\n\nWhen disconnecting a controller, while the game is running, crashing occurs.\n#### Reproduction steps/code\n- Enable LWJGL3\n- Connect at least one gamepad\n- Call Controllers.getControllers() within your Application to initialize\n- Disconnect the controller\n#### Version of LibGDX and/or relevant dependencies\n\nLibGDX 1.9.2 on Windows 10. Using a MS wireless receiver and Xbox 360 controller.\n#### Stack trace\n\nhttp://pastebin.com/1TmNmbLH\n#### Please select the affected platforms\n- [ ] Android\n- [ ] iOS\n- [ ] HTML/GWT\n- [x] Windows\n- [ ] Linux\n- [ ] MacOS\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3889/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}}],"meta":{"x-ratelimit-limit":"5000","x-ratelimit-remaining":"4966","x-ratelimit-reset":"1506844633","x-github-request-id":"C716:0285:102DA62:1FBA307:59D0940F","x-github-media-type":"github.squirrel-girl-preview","link":"<https://api.github.com/repositories/5373551/issues?state=all&page=35>; rel=\"next\", <https://api.github.com/repositories/5373551/issues?state=all&page=164>; rel=\"last\", <https://api.github.com/repositories/5373551/issues?state=all&page=1>; rel=\"first\", <https://api.github.com/repositories/5373551/issues?state=all&page=33>; rel=\"prev\"","etag":"\"baee538e1e43e2dc14ff1897e039cd7b\"","status":"200 OK"}}
