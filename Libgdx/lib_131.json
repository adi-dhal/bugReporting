{"data":[{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1005","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1005/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1005/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1005/events","html_url":"https://github.com/libgdx/libgdx/pull/1005","id":23330479,"number":1005,"title":"Fixed some issues with GWT reflection and JSon","user":{"login":"anserran","id":1515738,"avatar_url":"https://avatars1.githubusercontent.com/u/1515738?v=4","gravatar_id":"","url":"https://api.github.com/users/anserran","html_url":"https://github.com/anserran","followers_url":"https://api.github.com/users/anserran/followers","following_url":"https://api.github.com/users/anserran/following{/other_user}","gists_url":"https://api.github.com/users/anserran/gists{/gist_id}","starred_url":"https://api.github.com/users/anserran/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/anserran/subscriptions","organizations_url":"https://api.github.com/users/anserran/orgs","repos_url":"https://api.github.com/users/anserran/repos","events_url":"https://api.github.com/users/anserran/events{/privacy}","received_events_url":"https://api.github.com/users/anserran/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2013-11-26T17:20:53Z","updated_at":"2014-06-20T12:08:40Z","closed_at":"2013-11-26T20:36:28Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/1005","html_url":"https://github.com/libgdx/libgdx/pull/1005","diff_url":"https://github.com/libgdx/libgdx/pull/1005.diff","patch_url":"https://github.com/libgdx/libgdx/pull/1005.patch"},"body":"Commit:\n- Json was unable to create list for fields with type \"List\"\n- Added list to the default \"reflected\" classes in GWT backend\n- Fixed reflection generator to avoid that setters convert primitives types to java wrappers.\n\nThe bug:\nI'm doing heavy work combining reflection and Json with GWT and I found the next problem:\nSay I have a class like this:\n\n``` java\npublic class SceneElement {\n    public float x;\n    public float y;\n}\n```\n\nand I have a json file like:\n\n``` json\n{\n    x: 2,\n    y: 3\n}\n```\n\nThen:\n\n``` java\nSceneElement e = json.fromJson(fh, SceneElement.class);\ne.x += 2;\n// Result in Java e.x = 4.0f;\n// Result in GWT e.x = \"22\";\n```\n\nInstead of adding the numbers, it's concateneting them, because initially e.x type was a JavaScript class created by GWT to mimic java.lang.Float instead of a primitive. The problem comes from the json reader: it returns a java.lang.Float when it finds a number, and when the field is setted, it is not converted back to a primitive.\n\nIn Java, when you use reflection to assign a java.lang.Float to a float field, the java.lang.Float is automatically converted to a float, but not in GWT. This problem repeats for all primitive types.\n\nSo this pull request is to perform that conversion to primitive also in GWT. I modified the generation of the reflection cache, creating more specific setters.\n\nThis pull request also fixes a small bug with lists generation from json and adds java.util.List to the default reflection classes in GWT. \n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1005/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1004","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1004/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1004/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1004/events","html_url":"https://github.com/libgdx/libgdx/issues/1004","id":23312742,"number":1004,"title":"Add Gson-like annotation to class fields","user":{"login":"Gyld","id":6040428,"avatar_url":"https://avatars1.githubusercontent.com/u/6040428?v=4","gravatar_id":"","url":"https://api.github.com/users/Gyld","html_url":"https://github.com/Gyld","followers_url":"https://api.github.com/users/Gyld/followers","following_url":"https://api.github.com/users/Gyld/following{/other_user}","gists_url":"https://api.github.com/users/Gyld/gists{/gist_id}","starred_url":"https://api.github.com/users/Gyld/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Gyld/subscriptions","organizations_url":"https://api.github.com/users/Gyld/orgs","repos_url":"https://api.github.com/users/Gyld/repos","events_url":"https://api.github.com/users/Gyld/events{/privacy}","received_events_url":"https://api.github.com/users/Gyld/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2013-11-26T13:06:27Z","updated_at":"2013-11-27T13:09:32Z","closed_at":"2013-11-27T09:02:54Z","author_association":"NONE","body":"Can you add support for a gson equivalent of the @SerializedName annotation for json so you can call your class fields whatever you like and the object to json to object still works?\n\nEg.\n<code>\n@SerializedName(\"user_id\");\npublic int userId;\n</code>\nSo that user_id value from the json always go into userId and vice versa.\n\nThanks :)\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1004/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1003","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1003/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1003/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1003/events","html_url":"https://github.com/libgdx/libgdx/issues/1003","id":23269060,"number":1003,"title":"LwjglInput setCursorPosition and getY mouse origin inconsistent.","user":{"login":"teomat","id":429608,"avatar_url":"https://avatars3.githubusercontent.com/u/429608?v=4","gravatar_id":"","url":"https://api.github.com/users/teomat","html_url":"https://github.com/teomat","followers_url":"https://api.github.com/users/teomat/followers","following_url":"https://api.github.com/users/teomat/following{/other_user}","gists_url":"https://api.github.com/users/teomat/gists{/gist_id}","starred_url":"https://api.github.com/users/teomat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/teomat/subscriptions","organizations_url":"https://api.github.com/users/teomat/orgs","repos_url":"https://api.github.com/users/teomat/repos","events_url":"https://api.github.com/users/teomat/events{/privacy}","received_events_url":"https://api.github.com/users/teomat/received_events","type":"User","site_admin":false},"labels":[{"id":11336980,"url":"https://api.github.com/repos/libgdx/libgdx/labels/bug","name":"bug","color":"fc2929","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2013-11-25T20:12:49Z","updated_at":"2013-12-26T16:59:48Z","closed_at":"2013-12-26T16:59:48Z","author_association":"NONE","body":"In getY the mouse position is manipulated to make the top left corner of the window the origin, while setCursorPosition uses the lower left corner as the origin.\n\nBecause of this the following snippet will cause the cursor to jump up and down on the y axis:\n\n``` java\nGdx.input.setCursorPosition(Gdx.input.getX(), Gdx.input.getY());\n```\n\nRelevant methods from LwjglInput.java:\n\n``` java\npublic int getY () {\n    return Gdx.graphics.getHeight() - 1 - Mouse.getY();\n}\n\npublic void setCursorPosition (int x, int y) {\n    Mouse.setCursorPosition(x, y - 1);\n}\n```\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1003/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1002","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1002/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1002/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1002/events","html_url":"https://github.com/libgdx/libgdx/issues/1002","id":23211863,"number":1002,"title":"Sound/Music: clamp parameters to valid range","user":{"login":"madpew","id":527850,"avatar_url":"https://avatars0.githubusercontent.com/u/527850?v=4","gravatar_id":"","url":"https://api.github.com/users/madpew","html_url":"https://github.com/madpew","followers_url":"https://api.github.com/users/madpew/followers","following_url":"https://api.github.com/users/madpew/following{/other_user}","gists_url":"https://api.github.com/users/madpew/gists{/gist_id}","starred_url":"https://api.github.com/users/madpew/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/madpew/subscriptions","organizations_url":"https://api.github.com/users/madpew/orgs","repos_url":"https://api.github.com/users/madpew/repos","events_url":"https://api.github.com/users/madpew/events{/privacy}","received_events_url":"https://api.github.com/users/madpew/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2013-11-24T20:05:53Z","updated_at":"2013-12-21T23:11:19Z","closed_at":"2013-12-21T23:11:19Z","author_association":"CONTRIBUTOR","body":"Current state: properties like volume, panning and pitch are defined to be in a certain range (as stated in the comments). However, using values outside the range leads to different results on different backends.\n\nexample: pitch < 0.5 and > 2 works on desktop but fails on android.\n\nshould the backends clamp the values to the specified range to keep results consistent?\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1002/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1001","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1001/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1001/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1001/events","html_url":"https://github.com/libgdx/libgdx/pull/1001","id":23210731,"number":1001,"title":"fixed comments in ModelBatch (typos & copy-paste)","user":{"login":"madpew","id":527850,"avatar_url":"https://avatars0.githubusercontent.com/u/527850?v=4","gravatar_id":"","url":"https://api.github.com/users/madpew","html_url":"https://github.com/madpew","followers_url":"https://api.github.com/users/madpew/followers","following_url":"https://api.github.com/users/madpew/following{/other_user}","gists_url":"https://api.github.com/users/madpew/gists{/gist_id}","starred_url":"https://api.github.com/users/madpew/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/madpew/subscriptions","organizations_url":"https://api.github.com/users/madpew/orgs","repos_url":"https://api.github.com/users/madpew/repos","events_url":"https://api.github.com/users/madpew/events{/privacy}","received_events_url":"https://api.github.com/users/madpew/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2013-11-24T19:05:02Z","updated_at":"2014-07-19T18:43:05Z","closed_at":"2013-11-24T19:08:23Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/1001","html_url":"https://github.com/libgdx/libgdx/pull/1001","diff_url":"https://github.com/libgdx/libgdx/pull/1001.diff","patch_url":"https://github.com/libgdx/libgdx/pull/1001.patch"},"body":"fixed some typos in the comments (contact -> context) and removed notes about RenderContext on ctors without rendercontext.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1001/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1000","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1000/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1000/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1000/events","html_url":"https://github.com/libgdx/libgdx/pull/1000","id":23206709,"number":1000,"title":"Loader parameters unification","user":{"login":"aginiewicz","id":141273,"avatar_url":"https://avatars2.githubusercontent.com/u/141273?v=4","gravatar_id":"","url":"https://api.github.com/users/aginiewicz","html_url":"https://github.com/aginiewicz","followers_url":"https://api.github.com/users/aginiewicz/followers","following_url":"https://api.github.com/users/aginiewicz/following{/other_user}","gists_url":"https://api.github.com/users/aginiewicz/gists{/gist_id}","starred_url":"https://api.github.com/users/aginiewicz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aginiewicz/subscriptions","organizations_url":"https://api.github.com/users/aginiewicz/orgs","repos_url":"https://api.github.com/users/aginiewicz/repos","events_url":"https://api.github.com/users/aginiewicz/events{/privacy}","received_events_url":"https://api.github.com/users/aginiewicz/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2013-11-24T15:03:51Z","updated_at":"2013-11-24T15:46:21Z","closed_at":"2013-11-24T15:38:16Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/1000","html_url":"https://github.com/libgdx/libgdx/pull/1000","diff_url":"https://github.com/libgdx/libgdx/pull/1000.diff","patch_url":"https://github.com/libgdx/libgdx/pull/1000.patch"},"body":"I found two cases in asset loader parameters that stand out from the rest:\n- misleading parameter name (maxFilter instead of magFilter)\n- inability to create default parameters without specifying null as parameter (in SkinParameter)\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1000/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/999","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/999/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/999/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/999/events","html_url":"https://github.com/libgdx/libgdx/pull/999","id":23205701,"number":999,"title":"Update ChainShape.java","user":{"login":"bacca87","id":6023494,"avatar_url":"https://avatars2.githubusercontent.com/u/6023494?v=4","gravatar_id":"","url":"https://api.github.com/users/bacca87","html_url":"https://github.com/bacca87","followers_url":"https://api.github.com/users/bacca87/followers","following_url":"https://api.github.com/users/bacca87/following{/other_user}","gists_url":"https://api.github.com/users/bacca87/gists{/gist_id}","starred_url":"https://api.github.com/users/bacca87/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bacca87/subscriptions","organizations_url":"https://api.github.com/users/bacca87/orgs","repos_url":"https://api.github.com/users/bacca87/repos","events_url":"https://api.github.com/users/bacca87/events{/privacy}","received_events_url":"https://api.github.com/users/bacca87/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2013-11-24T14:04:37Z","updated_at":"2014-06-29T19:13:47Z","closed_at":"2013-11-27T14:00:27Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/999","html_url":"https://github.com/libgdx/libgdx/pull/999","diff_url":"https://github.com/libgdx/libgdx/pull/999.diff","patch_url":"https://github.com/libgdx/libgdx/pull/999.patch"},"body":"Overloaded the createLoop() method to create a loop directly from an array of floats.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/999/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/998","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/998/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/998/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/998/events","html_url":"https://github.com/libgdx/libgdx/issues/998","id":23189774,"number":998,"title":"[RoboVM] Timer usually doesn't start","user":{"login":"steve-taylor","id":1135589,"avatar_url":"https://avatars3.githubusercontent.com/u/1135589?v=4","gravatar_id":"","url":"https://api.github.com/users/steve-taylor","html_url":"https://github.com/steve-taylor","followers_url":"https://api.github.com/users/steve-taylor/followers","following_url":"https://api.github.com/users/steve-taylor/following{/other_user}","gists_url":"https://api.github.com/users/steve-taylor/gists{/gist_id}","starred_url":"https://api.github.com/users/steve-taylor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/steve-taylor/subscriptions","organizations_url":"https://api.github.com/users/steve-taylor/orgs","repos_url":"https://api.github.com/users/steve-taylor/repos","events_url":"https://api.github.com/users/steve-taylor/events{/privacy}","received_events_url":"https://api.github.com/users/steve-taylor/received_events","type":"User","site_admin":false},"labels":[{"id":11336980,"url":"https://api.github.com/repos/libgdx/libgdx/labels/bug","name":"bug","color":"fc2929","default":true},{"id":59604199,"url":"https://api.github.com/repos/libgdx/libgdx/labels/ios","name":"ios","color":"207de5","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2013-11-23T16:40:09Z","updated_at":"2014-04-09T21:33:53Z","closed_at":"2014-04-09T21:33:53Z","author_association":"NONE","body":"When running a LibGDX app under iOS using the RoboVM backend, the timer doesn't work. Here's a complete `ApplicationListener` to demonstrate the issue:\n\n```\npackage com.example;\n\nimport com.badlogic.gdx.ApplicationListener;\nimport com.badlogic.gdx.Gdx;\nimport com.badlogic.gdx.graphics.GL10;\nimport com.badlogic.gdx.utils.Timer;\n\npublic class MyApplicationListener implements ApplicationListener {\n    @Override\n    public void create() {\n        Timer.schedule(new Timer.Task() {\n            @Override\n            public void run() {\n                System.exit(1);\n            }\n        }, 0, 1/30.0f);\n    }\n\n    @Override\n    public void resize(int width, int height) {}\n\n    @Override\n    public void render() {\n        Gdx.gl.glClearColor(((float)((++c)&0xFF))/((float)0xFF), 0, 0, 0);\n        Gdx.gl.glClear(GL10.GL_COLOR_BUFFER_BIT);\n    }\n\n    @Override\n    public void pause() {}\n\n    @Override\n    public void resume() {}\n\n    @Override\n    public void dispose() { }\n\n    int c = 0;\n}\n```\n\nUnder iOS, this often continues to run, indicating the timer was never started. As a Java desktop app, this always exits immediately as expected. Sometimes it works in iOS, but most times it doesn't. After many clean-build-deploy-undeploy cycles, I have not yet observed a pattern. It is intermittent both in the simulator and on a device.\n\nUsing LibGDX 0.9.9 and RoboVM 0.0.6. Building with Maven.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/998/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/997","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/997/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/997/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/997/events","html_url":"https://github.com/libgdx/libgdx/issues/997","id":23188149,"number":997,"title":"Exception stating Graphics Card does not support OpenGL when it does (Radeon HD4850)","user":{"login":"jasonf20","id":1601106,"avatar_url":"https://avatars2.githubusercontent.com/u/1601106?v=4","gravatar_id":"","url":"https://api.github.com/users/jasonf20","html_url":"https://github.com/jasonf20","followers_url":"https://api.github.com/users/jasonf20/followers","following_url":"https://api.github.com/users/jasonf20/following{/other_user}","gists_url":"https://api.github.com/users/jasonf20/gists{/gist_id}","starred_url":"https://api.github.com/users/jasonf20/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasonf20/subscriptions","organizations_url":"https://api.github.com/users/jasonf20/orgs","repos_url":"https://api.github.com/users/jasonf20/repos","events_url":"https://api.github.com/users/jasonf20/events{/privacy}","received_events_url":"https://api.github.com/users/jasonf20/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":10,"created_at":"2013-11-23T14:55:11Z","updated_at":"2015-03-06T14:33:56Z","closed_at":"2013-11-25T12:47:30Z","author_association":"NONE","body":"When trying to run the Desktop project created by the UI, I encounter the following error:\n\n```\nException in thread \"LWJGL Application\" com.badlogic.gdx.utils.GdxRuntimeException: OpenGL is not supported by the video driver.\n    at com.badlogic.gdx.backends.lwjgl.LwjglGraphics.createDisplayPixelFormat(LwjglGraphics.java:213)\n    at com.badlogic.gdx.backends.lwjgl.LwjglGraphics.setupDisplay(LwjglGraphics.java:175)\n    at com.badlogic.gdx.backends.lwjgl.LwjglApplication.mainLoop(LwjglApplication.java:131)\n    at com.badlogic.gdx.backends.lwjgl.LwjglApplication$1.run(LwjglApplication.java:114)\nCaused by: org.lwjgl.LWJGLException: Pixel format not accelerated\n    at org.lwjgl.opengl.WindowsPeerInfo.nChoosePixelFormat(Native Method)\n    at org.lwjgl.opengl.WindowsPeerInfo.choosePixelFormat(WindowsPeerInfo.java:52)\n    at org.lwjgl.opengl.WindowsDisplay.createWindow(WindowsDisplay.java:244)\n    at org.lwjgl.opengl.Display.createWindow(Display.java:306)\n    at org.lwjgl.opengl.Display.create(Display.java:848)\n    at org.lwjgl.opengl.Display.create(Display.java:757)\n    at com.badlogic.gdx.backends.lwjgl.LwjglGraphics.createDisplayPixelFormat(LwjglGraphics.java:210)\n    ... 3 more\n```\n\nI am using a Graphics card fully capable of OpenGL es 1.5 and above (AMD HD 4850). It's a bit old but should be fully compatible. \n\nI have the latest drivers installed from AMD's website.\n\nPerhaps there is an issue with the graphics capability detection?\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/997/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/996","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/996/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/996/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/996/events","html_url":"https://github.com/libgdx/libgdx/issues/996","id":23188073,"number":996,"title":"GWT Devtools are no longer supported in chrome","user":{"login":"jasonf20","id":1601106,"avatar_url":"https://avatars2.githubusercontent.com/u/1601106?v=4","gravatar_id":"","url":"https://api.github.com/users/jasonf20","html_url":"https://github.com/jasonf20","followers_url":"https://api.github.com/users/jasonf20/followers","following_url":"https://api.github.com/users/jasonf20/following{/other_user}","gists_url":"https://api.github.com/users/jasonf20/gists{/gist_id}","starred_url":"https://api.github.com/users/jasonf20/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasonf20/subscriptions","organizations_url":"https://api.github.com/users/jasonf20/orgs","repos_url":"https://api.github.com/users/jasonf20/repos","events_url":"https://api.github.com/users/jasonf20/events{/privacy}","received_events_url":"https://api.github.com/users/jasonf20/received_events","type":"User","site_admin":false},"labels":[{"id":11336982,"url":"https://api.github.com/repos/libgdx/libgdx/labels/enhancement","name":"enhancement","color":"84b6eb","default":true},{"id":67383148,"url":"https://api.github.com/repos/libgdx/libgdx/labels/gwt","name":"gwt","color":"5319e7","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2013-11-23T14:48:17Z","updated_at":"2013-12-26T17:11:22Z","closed_at":"2013-12-26T17:11:22Z","author_association":"NONE","body":"GWT Developer plugin can no longer be installed in chrome due to them dropping support for NPAPI plugins.\n\nThis means a new solution needs to be found (The Firefox plugin is quite unstable).\n\nAt the very least the documentation need's to be updated.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/996/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/995","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/995/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/995/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/995/events","html_url":"https://github.com/libgdx/libgdx/pull/995","id":23185039,"number":995,"title":"Removed duplicate code from FileHandle","user":{"login":"hneuer","id":1545118,"avatar_url":"https://avatars3.githubusercontent.com/u/1545118?v=4","gravatar_id":"","url":"https://api.github.com/users/hneuer","html_url":"https://github.com/hneuer","followers_url":"https://api.github.com/users/hneuer/followers","following_url":"https://api.github.com/users/hneuer/following{/other_user}","gists_url":"https://api.github.com/users/hneuer/gists{/gist_id}","starred_url":"https://api.github.com/users/hneuer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hneuer/subscriptions","organizations_url":"https://api.github.com/users/hneuer/orgs","repos_url":"https://api.github.com/users/hneuer/repos","events_url":"https://api.github.com/users/hneuer/events{/privacy}","received_events_url":"https://api.github.com/users/hneuer/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2013-11-23T10:13:16Z","updated_at":"2014-06-20T12:08:52Z","closed_at":"2013-11-23T10:44:05Z","author_association":"OWNER","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/995","html_url":"https://github.com/libgdx/libgdx/pull/995","diff_url":"https://github.com/libgdx/libgdx/pull/995.diff","patch_url":"https://github.com/libgdx/libgdx/pull/995.patch"},"body":"","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/995/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/994","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/994/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/994/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/994/events","html_url":"https://github.com/libgdx/libgdx/pull/994","id":23183953,"number":994,"title":"Implemented close() in DataInputStream emu","user":{"login":"hneuer","id":1545118,"avatar_url":"https://avatars3.githubusercontent.com/u/1545118?v=4","gravatar_id":"","url":"https://api.github.com/users/hneuer","html_url":"https://github.com/hneuer","followers_url":"https://api.github.com/users/hneuer/followers","following_url":"https://api.github.com/users/hneuer/following{/other_user}","gists_url":"https://api.github.com/users/hneuer/gists{/gist_id}","starred_url":"https://api.github.com/users/hneuer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hneuer/subscriptions","organizations_url":"https://api.github.com/users/hneuer/orgs","repos_url":"https://api.github.com/users/hneuer/repos","events_url":"https://api.github.com/users/hneuer/events{/privacy}","received_events_url":"https://api.github.com/users/hneuer/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2013-11-23T08:24:37Z","updated_at":"2014-06-20T12:08:53Z","closed_at":"2013-11-23T10:44:39Z","author_association":"OWNER","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/994","html_url":"https://github.com/libgdx/libgdx/pull/994","diff_url":"https://github.com/libgdx/libgdx/pull/994.diff","patch_url":"https://github.com/libgdx/libgdx/pull/994.patch"},"body":"","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/994/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/993","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/993/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/993/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/993/events","html_url":"https://github.com/libgdx/libgdx/pull/993","id":23168588,"number":993,"title":"BufferUtils: add transform()","user":{"login":"xoppa","id":2349087,"avatar_url":"https://avatars3.githubusercontent.com/u/2349087?v=4","gravatar_id":"","url":"https://api.github.com/users/xoppa","html_url":"https://github.com/xoppa","followers_url":"https://api.github.com/users/xoppa/followers","following_url":"https://api.github.com/users/xoppa/following{/other_user}","gists_url":"https://api.github.com/users/xoppa/gists{/gist_id}","starred_url":"https://api.github.com/users/xoppa/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xoppa/subscriptions","organizations_url":"https://api.github.com/users/xoppa/orgs","repos_url":"https://api.github.com/users/xoppa/repos","events_url":"https://api.github.com/users/xoppa/events{/privacy}","received_events_url":"https://api.github.com/users/xoppa/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2013-11-22T21:30:17Z","updated_at":"2013-11-28T21:07:37Z","closed_at":"2013-11-24T19:51:22Z","author_association":"OWNER","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/993","html_url":"https://github.com/libgdx/libgdx/pull/993","diff_url":"https://github.com/libgdx/libgdx/pull/993.diff","patch_url":"https://github.com/libgdx/libgdx/pull/993.patch"},"body":"Will updates Mesh accordingly later. Want to first double check if contributing to core jni code causes problems I cant foresee. Can only build/test core jni on win64. GWT is a method stub and probably doesn't work.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/993/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/992","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/992/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/992/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/992/events","html_url":"https://github.com/libgdx/libgdx/pull/992","id":23162085,"number":992,"title":" Mesh: add updateVertices and calculateRadius","user":{"login":"xoppa","id":2349087,"avatar_url":"https://avatars3.githubusercontent.com/u/2349087?v=4","gravatar_id":"","url":"https://api.github.com/users/xoppa","html_url":"https://github.com/xoppa","followers_url":"https://api.github.com/users/xoppa/followers","following_url":"https://api.github.com/users/xoppa/following{/other_user}","gists_url":"https://api.github.com/users/xoppa/gists{/gist_id}","starred_url":"https://api.github.com/users/xoppa/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xoppa/subscriptions","organizations_url":"https://api.github.com/users/xoppa/orgs","repos_url":"https://api.github.com/users/xoppa/repos","events_url":"https://api.github.com/users/xoppa/events{/privacy}","received_events_url":"https://api.github.com/users/xoppa/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2013-11-22T19:31:11Z","updated_at":"2014-07-20T01:36:29Z","closed_at":"2013-11-26T19:39:50Z","author_association":"OWNER","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/992","html_url":"https://github.com/libgdx/libgdx/pull/992","diff_url":"https://github.com/libgdx/libgdx/pull/992.diff","patch_url":"https://github.com/libgdx/libgdx/pull/992.patch"},"body":"Closes #989\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/992/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/991","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/991/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/991/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/991/events","html_url":"https://github.com/libgdx/libgdx/pull/991","id":23149644,"number":991,"title":"Fixed UTF decoding in DataInputStream emu","user":{"login":"hneuer","id":1545118,"avatar_url":"https://avatars3.githubusercontent.com/u/1545118?v=4","gravatar_id":"","url":"https://api.github.com/users/hneuer","html_url":"https://github.com/hneuer","followers_url":"https://api.github.com/users/hneuer/followers","following_url":"https://api.github.com/users/hneuer/following{/other_user}","gists_url":"https://api.github.com/users/hneuer/gists{/gist_id}","starred_url":"https://api.github.com/users/hneuer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hneuer/subscriptions","organizations_url":"https://api.github.com/users/hneuer/orgs","repos_url":"https://api.github.com/users/hneuer/repos","events_url":"https://api.github.com/users/hneuer/events{/privacy}","received_events_url":"https://api.github.com/users/hneuer/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2013-11-22T16:30:09Z","updated_at":"2014-06-20T12:08:53Z","closed_at":"2013-11-22T18:25:30Z","author_association":"OWNER","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/991","html_url":"https://github.com/libgdx/libgdx/pull/991","diff_url":"https://github.com/libgdx/libgdx/pull/991.diff","patch_url":"https://github.com/libgdx/libgdx/pull/991.patch"},"body":"The second code point was not matched correctly.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/991/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/990","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/990/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/990/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/990/events","html_url":"https://github.com/libgdx/libgdx/issues/990","id":23142655,"number":990,"title":"Backspace and del key doesn't work in the HTML5 text input box on Mac OS X","user":{"login":"Andrej1A","id":4599304,"avatar_url":"https://avatars0.githubusercontent.com/u/4599304?v=4","gravatar_id":"","url":"https://api.github.com/users/Andrej1A","html_url":"https://github.com/Andrej1A","followers_url":"https://api.github.com/users/Andrej1A/followers","following_url":"https://api.github.com/users/Andrej1A/following{/other_user}","gists_url":"https://api.github.com/users/Andrej1A/gists{/gist_id}","starred_url":"https://api.github.com/users/Andrej1A/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Andrej1A/subscriptions","organizations_url":"https://api.github.com/users/Andrej1A/orgs","repos_url":"https://api.github.com/users/Andrej1A/repos","events_url":"https://api.github.com/users/Andrej1A/events{/privacy}","received_events_url":"https://api.github.com/users/Andrej1A/received_events","type":"User","site_admin":false},"labels":[{"id":11336980,"url":"https://api.github.com/repos/libgdx/libgdx/labels/bug","name":"bug","color":"fc2929","default":true},{"id":67383148,"url":"https://api.github.com/repos/libgdx/libgdx/labels/gwt","name":"gwt","color":"5319e7","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":34,"created_at":"2013-11-22T14:57:56Z","updated_at":"2016-11-20T11:33:02Z","closed_at":"2014-05-22T17:15:21Z","author_association":"NONE","body":"Hi,\nthe backspace and del key doesn't work in the HTML5/GWT text input box on Mac OS X. You can't delete a character that you typed in the text input box. In iOS and the desktop project works it well. I tested the nightly build from today and the 0.9.9 version. Works it at someone?\n\n```\nGdx.input.getTextInput(new TextInputListener(){\n                @Override\n                public void input(String text) {\n\n                }\n\n                @Override\n                public void canceled() {\n\n                }\n\n            }, \"What is your name?\", \"\");\n```\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/990/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/989","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/989/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/989/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/989/events","html_url":"https://github.com/libgdx/libgdx/issues/989","id":23141726,"number":989,"title":"setVertices to update part of vertices","user":{"login":"puffie","id":3702017,"avatar_url":"https://avatars3.githubusercontent.com/u/3702017?v=4","gravatar_id":"","url":"https://api.github.com/users/puffie","html_url":"https://github.com/puffie","followers_url":"https://api.github.com/users/puffie/followers","following_url":"https://api.github.com/users/puffie/following{/other_user}","gists_url":"https://api.github.com/users/puffie/gists{/gist_id}","starred_url":"https://api.github.com/users/puffie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/puffie/subscriptions","organizations_url":"https://api.github.com/users/puffie/orgs","repos_url":"https://api.github.com/users/puffie/repos","events_url":"https://api.github.com/users/puffie/events{/privacy}","received_events_url":"https://api.github.com/users/puffie/received_events","type":"User","site_admin":false},"labels":[{"id":11336982,"url":"https://api.github.com/repos/libgdx/libgdx/labels/enhancement","name":"enhancement","color":"84b6eb","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2013-11-22T14:41:50Z","updated_at":"2013-11-26T19:40:47Z","closed_at":"2013-11-26T19:39:50Z","author_association":"NONE","body":"It seems there's no function to dynamically update vertices. I can certainly call setVertices but I feel it's waste when all I need to update is part of vertices.\n\nI guess we can use below API from BufferUtils.java and implement the new setVertices that updates the part of vertices.\n\nprivate native static void copyJni (float[] src, int srcOffset, Buffer dst, int dstOffset, int numBytes); \n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/989/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/988","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/988/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/988/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/988/events","html_url":"https://github.com/libgdx/libgdx/issues/988","id":23136702,"number":988,"title":"Minimize allocations for touch events (RoboVM backend)","user":{"login":"ofey85","id":6010095,"avatar_url":"https://avatars3.githubusercontent.com/u/6010095?v=4","gravatar_id":"","url":"https://api.github.com/users/ofey85","html_url":"https://github.com/ofey85","followers_url":"https://api.github.com/users/ofey85/followers","following_url":"https://api.github.com/users/ofey85/following{/other_user}","gists_url":"https://api.github.com/users/ofey85/gists{/gist_id}","starred_url":"https://api.github.com/users/ofey85/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ofey85/subscriptions","organizations_url":"https://api.github.com/users/ofey85/orgs","repos_url":"https://api.github.com/users/ofey85/repos","events_url":"https://api.github.com/users/ofey85/events{/privacy}","received_events_url":"https://api.github.com/users/ofey85/received_events","type":"User","site_admin":false},"labels":[{"id":11336980,"url":"https://api.github.com/repos/libgdx/libgdx/labels/bug","name":"bug","color":"fc2929","default":true},{"id":59604199,"url":"https://api.github.com/repos/libgdx/libgdx/labels/ios","name":"ios","color":"207de5","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2013-11-22T13:08:16Z","updated_at":"2014-05-06T21:14:56Z","closed_at":"2014-05-06T21:14:56Z","author_association":"NONE","body":"Hi,\n\nThere seems to be a lot of object creation for touch events on robovm. This will then lead to gc hiccups. \n\n![screen shot 2013-11-21 at 11 20 27](https://f.cloud.github.com/assets/6010095/1600686/f992443a-5376-11e3-8430-47cd1ae6c382.png)\n\nsee https://groups.google.com/forum/#!topic/robovm/KFiP2iCxM2E\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/988/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/987","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/987/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/987/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/987/events","html_url":"https://github.com/libgdx/libgdx/issues/987","id":23125459,"number":987,"title":"input.Keys","user":{"login":"marekhalmo","id":6008696,"avatar_url":"https://avatars3.githubusercontent.com/u/6008696?v=4","gravatar_id":"","url":"https://api.github.com/users/marekhalmo","html_url":"https://github.com/marekhalmo","followers_url":"https://api.github.com/users/marekhalmo/followers","following_url":"https://api.github.com/users/marekhalmo/following{/other_user}","gists_url":"https://api.github.com/users/marekhalmo/gists{/gist_id}","starred_url":"https://api.github.com/users/marekhalmo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/marekhalmo/subscriptions","organizations_url":"https://api.github.com/users/marekhalmo/orgs","repos_url":"https://api.github.com/users/marekhalmo/repos","events_url":"https://api.github.com/users/marekhalmo/events{/privacy}","received_events_url":"https://api.github.com/users/marekhalmo/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2013-11-22T09:16:12Z","updated_at":"2014-01-21T14:29:39Z","closed_at":"2013-11-22T14:36:47Z","author_association":"NONE","body":"Hi,\ni was trying to find a way to map keyCode in keyDown to a reasonable text to display the bound key to the user.\n\nIn keyDown event you get an int mapped from input.Keys. When you take a look at the code the keys are static final int-s. This is an anti-pattern and just plain wrong.\n\nReasons:\n1. it's not type safe! (if you get some crazy int value no one can check if the value is valid)\n2. You can't iterate thru all key codes\n3. You can't translate to any reasonable human readable name or do anything but to compare with the code.\n4. You can't even figure out how to map it to given specific keystroke (because of 2)\n\nWhy do this when java has a really amazing enums!\n\nCheck out my article here to see what i mean.\nhttp://marekhalmo.blogspot.sk/2012/09/cool-java-enums.html\n\nI know that it would brake a lot of code but please just fix this, or please at least consider avoiding this anti-patern in the future.\n\np.s. I'm willing to assist if you need help.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/987/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/986","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/986/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/986/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/986/events","html_url":"https://github.com/libgdx/libgdx/issues/986","id":23119662,"number":986,"title":"MeshBuilder.end() is creating mesh with more memory allocated than is really needed","user":{"login":"federicodangelo","id":1854523,"avatar_url":"https://avatars2.githubusercontent.com/u/1854523?v=4","gravatar_id":"","url":"https://api.github.com/users/federicodangelo","html_url":"https://github.com/federicodangelo","followers_url":"https://api.github.com/users/federicodangelo/followers","following_url":"https://api.github.com/users/federicodangelo/following{/other_user}","gists_url":"https://api.github.com/users/federicodangelo/gists{/gist_id}","starred_url":"https://api.github.com/users/federicodangelo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/federicodangelo/subscriptions","organizations_url":"https://api.github.com/users/federicodangelo/orgs","repos_url":"https://api.github.com/users/federicodangelo/repos","events_url":"https://api.github.com/users/federicodangelo/events{/privacy}","received_events_url":"https://api.github.com/users/federicodangelo/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2013-11-22T06:06:00Z","updated_at":"2013-11-22T19:03:20Z","closed_at":"2013-11-22T16:00:54Z","author_association":"NONE","body":"The method MeshBuilder.end() is using \"vertices.size\" as the amount of vertices to allocate instead of \"vertices.size / vertex.length\", which is making it allocate a LOT more memory than it really needs. \nUsing only position / color / UV, this function is creating a mesh with 9 times more vertices than it really needs (and 9 times more memory usage).\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/986/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/985","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/985/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/985/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/985/events","html_url":"https://github.com/libgdx/libgdx/pull/985","id":23113590,"number":985,"title":"Multi-color text support via color-change characters","user":{"login":"batesj","id":4131456,"avatar_url":"https://avatars0.githubusercontent.com/u/4131456?v=4","gravatar_id":"","url":"https://api.github.com/users/batesj","html_url":"https://github.com/batesj","followers_url":"https://api.github.com/users/batesj/followers","following_url":"https://api.github.com/users/batesj/following{/other_user}","gists_url":"https://api.github.com/users/batesj/gists{/gist_id}","starred_url":"https://api.github.com/users/batesj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/batesj/subscriptions","organizations_url":"https://api.github.com/users/batesj/orgs","repos_url":"https://api.github.com/users/batesj/repos","events_url":"https://api.github.com/users/batesj/events{/privacy}","received_events_url":"https://api.github.com/users/batesj/received_events","type":"User","site_admin":false},"labels":[{"id":11336982,"url":"https://api.github.com/repos/libgdx/libgdx/labels/enhancement","name":"enhancement","color":"84b6eb","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2013-11-22T02:16:41Z","updated_at":"2014-06-18T16:20:37Z","closed_at":"2014-05-08T15:38:57Z","author_association":"NONE","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/985","html_url":"https://github.com/libgdx/libgdx/pull/985","diff_url":"https://github.com/libgdx/libgdx/pull/985.diff","patch_url":"https://github.com/libgdx/libgdx/pull/985.patch"},"body":"https://github.com/libgdx/libgdx/issues/908\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/985/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/984","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/984/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/984/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/984/events","html_url":"https://github.com/libgdx/libgdx/pull/984","id":23112093,"number":984,"title":"Make Label.cache protected to allow derived classes to customize drawing","user":{"login":"batesj","id":4131456,"avatar_url":"https://avatars0.githubusercontent.com/u/4131456?v=4","gravatar_id":"","url":"https://api.github.com/users/batesj","html_url":"https://github.com/batesj","followers_url":"https://api.github.com/users/batesj/followers","following_url":"https://api.github.com/users/batesj/following{/other_user}","gists_url":"https://api.github.com/users/batesj/gists{/gist_id}","starred_url":"https://api.github.com/users/batesj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/batesj/subscriptions","organizations_url":"https://api.github.com/users/batesj/orgs","repos_url":"https://api.github.com/users/batesj/repos","events_url":"https://api.github.com/users/batesj/events{/privacy}","received_events_url":"https://api.github.com/users/batesj/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2013-11-22T01:32:43Z","updated_at":"2014-02-11T20:15:21Z","closed_at":"2014-02-11T20:15:21Z","author_association":"NONE","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/984","html_url":"https://github.com/libgdx/libgdx/pull/984","diff_url":"https://github.com/libgdx/libgdx/pull/984.diff","patch_url":"https://github.com/libgdx/libgdx/pull/984.patch"},"body":"","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/984/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/983","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/983/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/983/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/983/events","html_url":"https://github.com/libgdx/libgdx/issues/983","id":23101113,"number":983,"title":"gapless queueing of audio/music","user":{"login":"vrcsix","id":1703924,"avatar_url":"https://avatars1.githubusercontent.com/u/1703924?v=4","gravatar_id":"","url":"https://api.github.com/users/vrcsix","html_url":"https://github.com/vrcsix","followers_url":"https://api.github.com/users/vrcsix/followers","following_url":"https://api.github.com/users/vrcsix/following{/other_user}","gists_url":"https://api.github.com/users/vrcsix/gists{/gist_id}","starred_url":"https://api.github.com/users/vrcsix/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vrcsix/subscriptions","organizations_url":"https://api.github.com/users/vrcsix/orgs","repos_url":"https://api.github.com/users/vrcsix/repos","events_url":"https://api.github.com/users/vrcsix/events{/privacy}","received_events_url":"https://api.github.com/users/vrcsix/received_events","type":"User","site_admin":false},"labels":[{"id":11336982,"url":"https://api.github.com/repos/libgdx/libgdx/labels/enhancement","name":"enhancement","color":"84b6eb","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2013-11-21T22:03:28Z","updated_at":"2014-05-10T17:09:33Z","closed_at":"2014-05-10T17:09:33Z","author_association":"NONE","body":"More often than not I find myself needing music that consists of an intro, a looping part and (less often) an outro. To achieve this, I split my tracks and play the parts back-to-back, looping one of them. To guarantee gapless transitions, the parts need to be queued ahead of time. It seems this should be more or less doable in every backend, but it's not something libGDX currently exposes.\n- Android has [setNextMediaPlayer](http://developer.android.com/reference/android/media/MediaPlayer.html#setNextMediaPlayer%28android.media.MediaPlayer%29), which allows chaining of MediaPlayer instances.\n- With OpenAL one could `alSourceQueueBuffers` the next part ahead of time and, when a looping part starts playing, quickly `alSourceUnqueueBuffers` any previous part and toggle `AL_LOOPING`.\n- I don't think the current HTML5 backend will allow for truly gapless playback, unless it's somehow possible to gain access to the browser's sound buffers. Once the Web Audio API can be relied upon, we'll have that capability.\n\nI'd like to start working on this. But before I do, I'd like some feedback from the core devs (and reach a consensus on how the API should look).\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/983/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/982","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/982/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/982/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/982/events","html_url":"https://github.com/libgdx/libgdx/pull/982","id":23087528,"number":982,"title":"Label: avoid double-modulation of color alpha","user":{"login":"batesj","id":4131456,"avatar_url":"https://avatars0.githubusercontent.com/u/4131456?v=4","gravatar_id":"","url":"https://api.github.com/users/batesj","html_url":"https://github.com/batesj","followers_url":"https://api.github.com/users/batesj/followers","following_url":"https://api.github.com/users/batesj/following{/other_user}","gists_url":"https://api.github.com/users/batesj/gists{/gist_id}","starred_url":"https://api.github.com/users/batesj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/batesj/subscriptions","organizations_url":"https://api.github.com/users/batesj/orgs","repos_url":"https://api.github.com/users/batesj/repos","events_url":"https://api.github.com/users/batesj/events{/privacy}","received_events_url":"https://api.github.com/users/batesj/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2013-11-21T18:39:12Z","updated_at":"2014-07-03T02:47:09Z","closed_at":"2013-11-21T18:53:33Z","author_association":"NONE","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/982","html_url":"https://github.com/libgdx/libgdx/pull/982","diff_url":"https://github.com/libgdx/libgdx/pull/982.diff","patch_url":"https://github.com/libgdx/libgdx/pull/982.patch"},"body":"BitmapFontCache.draw(Batch, float) already multiplies in the color.a.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/982/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/981","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/981/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/981/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/981/events","html_url":"https://github.com/libgdx/libgdx/issues/981","id":23061529,"number":981,"title":"SelectBox component should have caption option","user":{"login":"ekocaman","id":4416970,"avatar_url":"https://avatars0.githubusercontent.com/u/4416970?v=4","gravatar_id":"","url":"https://api.github.com/users/ekocaman","html_url":"https://github.com/ekocaman","followers_url":"https://api.github.com/users/ekocaman/followers","following_url":"https://api.github.com/users/ekocaman/following{/other_user}","gists_url":"https://api.github.com/users/ekocaman/gists{/gist_id}","starred_url":"https://api.github.com/users/ekocaman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ekocaman/subscriptions","organizations_url":"https://api.github.com/users/ekocaman/orgs","repos_url":"https://api.github.com/users/ekocaman/repos","events_url":"https://api.github.com/users/ekocaman/events{/privacy}","received_events_url":"https://api.github.com/users/ekocaman/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2013-11-21T11:58:14Z","updated_at":"2013-11-21T12:03:32Z","closed_at":"2013-11-21T12:03:32Z","author_association":"NONE","body":"SelectBox Component should show caption when firstly no selection done and this caption is not shown in list which appears when clicked on SelectBox. If any selection is done, the caption should be wiped out.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/981/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/980","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/980/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/980/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/980/events","html_url":"https://github.com/libgdx/libgdx/pull/980","id":23036711,"number":980,"title":"MeshBuilder: Add ability to transform positions and normals of new vertices","user":{"login":"ghost","id":10137,"avatar_url":"https://avatars3.githubusercontent.com/u/10137?v=4","gravatar_id":"","url":"https://api.github.com/users/ghost","html_url":"https://github.com/ghost","followers_url":"https://api.github.com/users/ghost/followers","following_url":"https://api.github.com/users/ghost/following{/other_user}","gists_url":"https://api.github.com/users/ghost/gists{/gist_id}","starred_url":"https://api.github.com/users/ghost/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ghost/subscriptions","organizations_url":"https://api.github.com/users/ghost/orgs","repos_url":"https://api.github.com/users/ghost/repos","events_url":"https://api.github.com/users/ghost/events{/privacy}","received_events_url":"https://api.github.com/users/ghost/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2013-11-21T00:43:10Z","updated_at":"2014-06-24T07:44:42Z","closed_at":"2013-11-26T19:35:19Z","author_association":"NONE","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/980","html_url":"https://github.com/libgdx/libgdx/pull/980","diff_url":"https://github.com/libgdx/libgdx/pull/980.diff","patch_url":"https://github.com/libgdx/libgdx/pull/980.patch"},"body":"This addresses issue #977.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/980/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/979","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/979/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/979/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/979/events","html_url":"https://github.com/libgdx/libgdx/issues/979","id":22994503,"number":979,"title":"RenderContext not always in sync with openGL states","user":{"login":"MikaelHermansson","id":578684,"avatar_url":"https://avatars0.githubusercontent.com/u/578684?v=4","gravatar_id":"","url":"https://api.github.com/users/MikaelHermansson","html_url":"https://github.com/MikaelHermansson","followers_url":"https://api.github.com/users/MikaelHermansson/followers","following_url":"https://api.github.com/users/MikaelHermansson/following{/other_user}","gists_url":"https://api.github.com/users/MikaelHermansson/gists{/gist_id}","starred_url":"https://api.github.com/users/MikaelHermansson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MikaelHermansson/subscriptions","organizations_url":"https://api.github.com/users/MikaelHermansson/orgs","repos_url":"https://api.github.com/users/MikaelHermansson/repos","events_url":"https://api.github.com/users/MikaelHermansson/events{/privacy}","received_events_url":"https://api.github.com/users/MikaelHermansson/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2013-11-20T14:32:19Z","updated_at":"2013-11-20T17:05:23Z","closed_at":"2013-11-20T17:05:23Z","author_association":"NONE","body":"when you are creating a new RenderContext the depthMask is not initialized, so by java default rules it is set to: false;\nbut glDepthMask is enabled as default.  In rare cases this is a problem: \n\nWhen all your materials have the depthMask set to false,  the renderContext will never change the openGL state. All your materials, and the renderContext will have the depthMask=false; the openGl state will be true; so you are writing to the depth-buffer, the opposit of your intent.\nProposal: Initialize the depthMask to true, in the default constructor.\nor: in the RenderContext.begin()  insert the line: Gdx.gl.glDepthMask(false);\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/979/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/978","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/978/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/978/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/978/events","html_url":"https://github.com/libgdx/libgdx/pull/978","id":22978017,"number":978,"title":"update Json.java link to wiki","user":{"login":"jrenner","id":1393288,"avatar_url":"https://avatars1.githubusercontent.com/u/1393288?v=4","gravatar_id":"","url":"https://api.github.com/users/jrenner","html_url":"https://github.com/jrenner","followers_url":"https://api.github.com/users/jrenner/followers","following_url":"https://api.github.com/users/jrenner/following{/other_user}","gists_url":"https://api.github.com/users/jrenner/gists{/gist_id}","starred_url":"https://api.github.com/users/jrenner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jrenner/subscriptions","organizations_url":"https://api.github.com/users/jrenner/orgs","repos_url":"https://api.github.com/users/jrenner/repos","events_url":"https://api.github.com/users/jrenner/events{/privacy}","received_events_url":"https://api.github.com/users/jrenner/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2013-11-20T08:42:24Z","updated_at":"2013-12-01T05:09:21Z","closed_at":"2013-11-20T12:16:39Z","author_association":"OWNER","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/978","html_url":"https://github.com/libgdx/libgdx/pull/978","diff_url":"https://github.com/libgdx/libgdx/pull/978.diff","patch_url":"https://github.com/libgdx/libgdx/pull/978.patch"},"body":"","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/978/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/977","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/977/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/977/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/977/events","html_url":"https://github.com/libgdx/libgdx/issues/977","id":22977293,"number":977,"title":"Add user-defined transformation to MeshPartBuilder","user":{"login":"ghost","id":10137,"avatar_url":"https://avatars3.githubusercontent.com/u/10137?v=4","gravatar_id":"","url":"https://api.github.com/users/ghost","html_url":"https://github.com/ghost","followers_url":"https://api.github.com/users/ghost/followers","following_url":"https://api.github.com/users/ghost/following{/other_user}","gists_url":"https://api.github.com/users/ghost/gists{/gist_id}","starred_url":"https://api.github.com/users/ghost/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ghost/subscriptions","organizations_url":"https://api.github.com/users/ghost/orgs","repos_url":"https://api.github.com/users/ghost/repos","events_url":"https://api.github.com/users/ghost/events{/privacy}","received_events_url":"https://api.github.com/users/ghost/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2013-11-20T08:22:27Z","updated_at":"2013-11-21T12:55:11Z","closed_at":"2013-11-21T12:55:11Z","author_association":"NONE","body":"This is a request for enhancement.\n\nIt would be very useful if MeshPartBuilder had the ability to apply a user-defined transformation to every position as it is saved into the vertex array. When using this feature, all input position coordinates would become relative to the basis defined by the transform matrix. This would be similar to AWT's Graphics2D class, which allows you to set a scaling, rotation, etc. for all graphics operations afterwards.\n\nI use this concept extensively in my engine, allowing me to build multiple instances of a model into the same Mesh in different positions without the model-building code worrying about transformations.\n\nIf someone is not using this feature, there may be a very slight overhead from multiplying by an identity matrix. If this is a problem, another implementation of MeshPartBuilder could be created.\n\nExample pseudo-code:\n\nmeshBuilder.box(0, 0, 0, 2, 2, 2); //builds a cube at (0, 0, 0), like you would expect\nmeshBuilder.setTransform(new Matrix4().translate(2, 3, 0));\nmeshBuilder.box(0, 0, 0, 2, 2, 2); //builds a cube at (2, 3, 0)\nmeshBuilder.setTransform(new Matrix4().scale(2, 2, 2).translate(5, 0, 0));\nmeshBuilder.box(0, 0, 0, 2, 2, 2); //builds a double-sized cube at (5, 0, 0)\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/977/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/976","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/976/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/976/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/976/events","html_url":"https://github.com/libgdx/libgdx/issues/976","id":22894932,"number":976,"title":"Calling native NewDirectByteBuffer with size 0 causes crash when using ART runtime","user":{"login":"terryhau","id":1168817,"avatar_url":"https://avatars0.githubusercontent.com/u/1168817?v=4","gravatar_id":"","url":"https://api.github.com/users/terryhau","html_url":"https://github.com/terryhau","followers_url":"https://api.github.com/users/terryhau/followers","following_url":"https://api.github.com/users/terryhau/following{/other_user}","gists_url":"https://api.github.com/users/terryhau/gists{/gist_id}","starred_url":"https://api.github.com/users/terryhau/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/terryhau/subscriptions","organizations_url":"https://api.github.com/users/terryhau/orgs","repos_url":"https://api.github.com/users/terryhau/repos","events_url":"https://api.github.com/users/terryhau/events{/privacy}","received_events_url":"https://api.github.com/users/terryhau/received_events","type":"User","site_admin":false},"labels":[{"id":59604218,"url":"https://api.github.com/repos/libgdx/libgdx/labels/android","name":"android","color":"009800","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":20,"created_at":"2013-11-19T08:24:55Z","updated_at":"2016-12-17T20:39:52Z","closed_at":"2013-12-21T22:53:09Z","author_association":"NONE","body":"When creating a Mesh, I'm passing in 0 for maxIndices. This eventually leads to a native call NewDirectByteBuffer(ptr, numBytes) with numBytes = 0. This causes a crash when using Android 4.4's ART runtime with the following error:\n\nJNI DETECTED ERROR IN APPLICATION: capacity must be greater than 0: 0\nin call to NewDirectByteBuffer\nfrom java.nio.ByteBuffer com.badlogic.gdx.utils.BufferUtils.newDisposableByteBuffer(int)\n...\n\nReplacing all the maxIndicies with 1 instead of 0 allows my game to run perfectly on on ART.\n\nNote:\nSome classes in libGDX (such as ImmediateModeRenderer20) create meshes with maxIndices = 0, so they can't be used in ART without modification due to the above.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/976/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}}],"meta":{"x-ratelimit-limit":"5000","x-ratelimit-remaining":"4867","x-ratelimit-reset":"1506844633","x-github-request-id":"91F8:1108:85740A:12CCBE5:59D09778","x-github-media-type":"github.squirrel-girl-preview","link":"<https://api.github.com/repositories/5373551/issues?state=all&page=132>; rel=\"next\", <https://api.github.com/repositories/5373551/issues?state=all&page=164>; rel=\"last\", <https://api.github.com/repositories/5373551/issues?state=all&page=1>; rel=\"first\", <https://api.github.com/repositories/5373551/issues?state=all&page=130>; rel=\"prev\"","etag":"\"cc1024b9a65328bfd2ac3cad5cfe6f75\"","status":"200 OK"}}
