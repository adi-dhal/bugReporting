{"data":[{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4008","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4008/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4008/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4008/events","html_url":"https://github.com/libgdx/libgdx/pull/4008","id":147396054,"number":4008,"title":"ShapeRenderer draw rotated Ellipses","user":{"login":"jhnn","id":15197304,"avatar_url":"https://avatars0.githubusercontent.com/u/15197304?v=4","gravatar_id":"","url":"https://api.github.com/users/jhnn","html_url":"https://github.com/jhnn","followers_url":"https://api.github.com/users/jhnn/followers","following_url":"https://api.github.com/users/jhnn/following{/other_user}","gists_url":"https://api.github.com/users/jhnn/gists{/gist_id}","starred_url":"https://api.github.com/users/jhnn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jhnn/subscriptions","organizations_url":"https://api.github.com/users/jhnn/orgs","repos_url":"https://api.github.com/users/jhnn/repos","events_url":"https://api.github.com/users/jhnn/events{/privacy}","received_events_url":"https://api.github.com/users/jhnn/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-04-11T11:18:19Z","updated_at":"2016-05-11T08:42:42Z","closed_at":"2016-05-11T08:42:42Z","author_association":"NONE","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4008","html_url":"https://github.com/libgdx/libgdx/pull/4008","diff_url":"https://github.com/libgdx/libgdx/pull/4008.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4008.patch"},"body":"New methods for the ShapeRenderer to draw ellipses rotated around their center.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4008/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4007","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4007/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4007/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4007/events","html_url":"https://github.com/libgdx/libgdx/issues/4007","id":147287749,"number":4007,"title":"Use of Google Guava with GDX causes GWT compilation to fail.","user":{"login":"juckele","id":1322799,"avatar_url":"https://avatars0.githubusercontent.com/u/1322799?v=4","gravatar_id":"","url":"https://api.github.com/users/juckele","html_url":"https://github.com/juckele","followers_url":"https://api.github.com/users/juckele/followers","following_url":"https://api.github.com/users/juckele/following{/other_user}","gists_url":"https://api.github.com/users/juckele/gists{/gist_id}","starred_url":"https://api.github.com/users/juckele/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juckele/subscriptions","organizations_url":"https://api.github.com/users/juckele/orgs","repos_url":"https://api.github.com/users/juckele/repos","events_url":"https://api.github.com/users/juckele/events{/privacy}","received_events_url":"https://api.github.com/users/juckele/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2016-04-11T01:21:21Z","updated_at":"2016-04-15T12:34:27Z","closed_at":"2016-04-11T15:49:24Z","author_association":"NONE","body":"#### Issue details\n\nImporting com.google.common.io.BaseEncoding into the core project of a gdx project causes the gwt compilation to fail. This is specifically an interaction with gdx, as removing the gdx code will allow the gwt code to compile.\n#### Reproduction steps/code\n\nI've created a repo that reproduces this in the minimum amount of code here: https://github.com/juckele/gdx-gwt-guava-bug\n\nClone the repo and run `gradle war` with and without commenting out the libgdx inherit line in the html project's main gwt.xml file.\n#### Version of LibGDX and/or relevant dependencies\n\nI was able to reproduce this is 1.9.2 and 1.9.1\n#### Stacktrace\n\n```\n   Validating units:\n      [ERROR] Errors in 'com/google/common/io/super/com/google/common/io/BaseEncoding.java'\n         [ERROR] Line 142: The constructor IOException(Throwable) is undefined\n   [ERROR] Aborting compile due to errors in some input files\n```\n#### Please select the affected platforms\n- [ ] Android\n- [ ] iOS\n- [X] HTML/GWT\n- [ ] Windows\n- [ ] Linux\n- [ ] MacOS\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4007/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4006","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4006/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4006/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4006/events","html_url":"https://github.com/libgdx/libgdx/issues/4006","id":147212167,"number":4006,"title":"ios constant memory increases in empty render loop","user":{"login":"sicoderealm","id":7548210,"avatar_url":"https://avatars1.githubusercontent.com/u/7548210?v=4","gravatar_id":"","url":"https://api.github.com/users/sicoderealm","html_url":"https://github.com/sicoderealm","followers_url":"https://api.github.com/users/sicoderealm/followers","following_url":"https://api.github.com/users/sicoderealm/following{/other_user}","gists_url":"https://api.github.com/users/sicoderealm/gists{/gist_id}","starred_url":"https://api.github.com/users/sicoderealm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sicoderealm/subscriptions","organizations_url":"https://api.github.com/users/sicoderealm/orgs","repos_url":"https://api.github.com/users/sicoderealm/repos","events_url":"https://api.github.com/users/sicoderealm/events{/privacy}","received_events_url":"https://api.github.com/users/sicoderealm/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":17,"created_at":"2016-04-10T10:27:25Z","updated_at":"2016-04-10T19:12:30Z","closed_at":"2016-04-10T19:12:10Z","author_association":"NONE","body":"#### Issue details\n\nRunning a simple libgdx app on IOS will result in a constant increase in memory, ~1/3 of a MB per ten seconds. This is using a sample that does nothing in the render loop.\n\nThis is a problem as eventually it's going to generate garbage collection, let alone when you add your game code on top.\n\nPerhaps I am doing something wrong?\n#### Reproduction steps/code\n\nSimply run the libgdx setup sample code (libgdx project generator, gdx-setup.jar) on ios simulator or real device, attach \"instruments\" app and observe the rapid memory increases.\nI've also created a quick sample to show this in log statements: http://pastebin.com/QEiYLRLA\n#### Version of LibGDX and/or relevant dependencies\n\ngdxVersion = '1.9.2'\nroboVMVersion = '1.12.0'\neclipse mars\nrobovm plugin 1.14 \n#### Please select the affected platforms\n- [x] iOS\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4006/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4005","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4005/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4005/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4005/events","html_url":"https://github.com/libgdx/libgdx/issues/4005","id":147189939,"number":4005,"title":"TransformDrawable's draw method not implemented in TiledDrawable","user":{"login":"gknedo","id":830662,"avatar_url":"https://avatars1.githubusercontent.com/u/830662?v=4","gravatar_id":"","url":"https://api.github.com/users/gknedo","html_url":"https://github.com/gknedo","followers_url":"https://api.github.com/users/gknedo/followers","following_url":"https://api.github.com/users/gknedo/following{/other_user}","gists_url":"https://api.github.com/users/gknedo/gists{/gist_id}","starred_url":"https://api.github.com/users/gknedo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gknedo/subscriptions","organizations_url":"https://api.github.com/users/gknedo/orgs","repos_url":"https://api.github.com/users/gknedo/repos","events_url":"https://api.github.com/users/gknedo/events{/privacy}","received_events_url":"https://api.github.com/users/gknedo/received_events","type":"User","site_admin":false},"labels":[{"id":11336982,"url":"https://api.github.com/repos/libgdx/libgdx/labels/enhancement","name":"enhancement","color":"84b6eb","default":true}],"state":"closed","locked":false,"assignee":{"login":"NathanSweet","id":434010,"avatar_url":"https://avatars3.githubusercontent.com/u/434010?v=4","gravatar_id":"","url":"https://api.github.com/users/NathanSweet","html_url":"https://github.com/NathanSweet","followers_url":"https://api.github.com/users/NathanSweet/followers","following_url":"https://api.github.com/users/NathanSweet/following{/other_user}","gists_url":"https://api.github.com/users/NathanSweet/gists{/gist_id}","starred_url":"https://api.github.com/users/NathanSweet/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NathanSweet/subscriptions","organizations_url":"https://api.github.com/users/NathanSweet/orgs","repos_url":"https://api.github.com/users/NathanSweet/repos","events_url":"https://api.github.com/users/NathanSweet/events{/privacy}","received_events_url":"https://api.github.com/users/NathanSweet/received_events","type":"User","site_admin":false},"assignees":[{"login":"NathanSweet","id":434010,"avatar_url":"https://avatars3.githubusercontent.com/u/434010?v=4","gravatar_id":"","url":"https://api.github.com/users/NathanSweet","html_url":"https://github.com/NathanSweet","followers_url":"https://api.github.com/users/NathanSweet/followers","following_url":"https://api.github.com/users/NathanSweet/following{/other_user}","gists_url":"https://api.github.com/users/NathanSweet/gists{/gist_id}","starred_url":"https://api.github.com/users/NathanSweet/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NathanSweet/subscriptions","organizations_url":"https://api.github.com/users/NathanSweet/orgs","repos_url":"https://api.github.com/users/NathanSweet/repos","events_url":"https://api.github.com/users/NathanSweet/events{/privacy}","received_events_url":"https://api.github.com/users/NathanSweet/received_events","type":"User","site_admin":false}],"milestone":null,"comments":3,"created_at":"2016-04-10T03:44:56Z","updated_at":"2016-12-04T15:48:29Z","closed_at":"2016-12-04T15:48:29Z","author_association":"NONE","body":"*Sorry for my horrible english.\n#### Issue details\n\nBasically, if u draw a TiledDrawable after a cast to a TransformDrawable and use the method draw of TransformDrawable interface the TextureRegion wont draw tiles, it extend like standard TextureRegion.\n#### Reproduction steps/code\n\nThis is where i create a TiledDrawable and return as a TrasformDrawable.\n\n```\nprivate static TransformDrawable createDrawable(float x, float y, float width, float height) {\n        TiledDrawable drawable = new TiledDrawable(getAtlas().findRegion(\"tile_wood\"));\n        return drawable;\n    }\n```\n\nand here is where i draw, if i do this, the texture will be expanded and not tiled:\n\n`transformDrawable.draw(batch, x, y, originX, originY, width, height, scaleX, scaleY, rotation);`\n\nand it tiles normally if i do this:\n\n`transformDrawable.draw(batch, x, y, width, height);`\n#### Version of LibGDX and/or relevant dependencies\n\nTested on libgdx 1.9.2, compiling for Windows.\n#### Please select the affected platforms\n- [x] Android\n- [x] iOS\n- [x] HTML/GWT\n- [X] Windows\n- [x] Linux\n- [x] MacOS\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4005/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4004","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4004/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4004/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4004/events","html_url":"https://github.com/libgdx/libgdx/pull/4004","id":147180909,"number":4004,"title":"fix OrderedMap copy constructor and OrderedMap iterator remove","user":{"login":"FredGithub","id":1611174,"avatar_url":"https://avatars1.githubusercontent.com/u/1611174?v=4","gravatar_id":"","url":"https://api.github.com/users/FredGithub","html_url":"https://github.com/FredGithub","followers_url":"https://api.github.com/users/FredGithub/followers","following_url":"https://api.github.com/users/FredGithub/following{/other_user}","gists_url":"https://api.github.com/users/FredGithub/gists{/gist_id}","starred_url":"https://api.github.com/users/FredGithub/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/FredGithub/subscriptions","organizations_url":"https://api.github.com/users/FredGithub/orgs","repos_url":"https://api.github.com/users/FredGithub/repos","events_url":"https://api.github.com/users/FredGithub/events{/privacy}","received_events_url":"https://api.github.com/users/FredGithub/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2016-04-10T00:57:23Z","updated_at":"2017-07-28T06:33:28Z","closed_at":"2016-08-07T02:23:02Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4004","html_url":"https://github.com/libgdx/libgdx/pull/4004","diff_url":"https://github.com/libgdx/libgdx/pull/4004.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4004.patch"},"body":"### Issue details\n\nDespite the recent fixes to the maps copy constructors, the `OrderedMap` copy constructor was still broken. This is due to the fact that all it did was call the super copy constructor from `ObjectMap` and initialized the `keys` array to an empty array instead of filling it with actual values.\n### Reproduction code\n\n```\npublic class MapTest {\n\n    public static void main(String[] args) {\n        OrderedMap<String, Integer> map = new OrderedMap<String, Integer>();\n        map.put(\"a\", 1);\n        map.put(\"b\", 2);\n        map.put(\"c\", 3);\n        System.out.println(\"map: \" + map);\n\n        OrderedMap<String, Integer> copy = new OrderedMap<String, Integer>(map);\n        System.out.println(\"copy: \" + copy);\n    }\n}\n```\n\n**Ouput:**\n\n```\nmap: {a=1, b=2, c=3}\ncopy: {}\n```\n### Solutions\n\nI saw 3 solutions to solve this:\n1. Change the copy constructor from `OrderedMap(ObjectMap)` to `OrderedMap(OrderedMap)`. This allows to copy the `keys` array as well. The downside is that this is an API change, but based on the fact that this bug only came up now, I'm not sure many people are actually creating `OrderedMaps` from `ObjectMaps`.\n2. Do a call to `putAll` from the copy constructor. This will fill the `keys` array properly. It doesn't break the API but it's not very efficient.\n3. Have both constructors.\n\nI went for the first solution, but let me know if it's not a good idea. I also added an iteration test to the CollectionTest to properly catch this issue.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4004/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4003","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4003/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4003/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4003/events","html_url":"https://github.com/libgdx/libgdx/pull/4003","id":147169897,"number":4003,"title":"Refactor Clipboard for Android, resolves #3974","user":{"login":"Tom-Ski","id":4346114,"avatar_url":"https://avatars0.githubusercontent.com/u/4346114?v=4","gravatar_id":"","url":"https://api.github.com/users/Tom-Ski","html_url":"https://github.com/Tom-Ski","followers_url":"https://api.github.com/users/Tom-Ski/followers","following_url":"https://api.github.com/users/Tom-Ski/following{/other_user}","gists_url":"https://api.github.com/users/Tom-Ski/gists{/gist_id}","starred_url":"https://api.github.com/users/Tom-Ski/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Tom-Ski/subscriptions","organizations_url":"https://api.github.com/users/Tom-Ski/orgs","repos_url":"https://api.github.com/users/Tom-Ski/repos","events_url":"https://api.github.com/users/Tom-Ski/events{/privacy}","received_events_url":"https://api.github.com/users/Tom-Ski/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-04-09T22:35:53Z","updated_at":"2016-04-09T22:38:37Z","closed_at":"2016-04-09T22:38:37Z","author_association":"OWNER","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4003","html_url":"https://github.com/libgdx/libgdx/pull/4003","diff_url":"https://github.com/libgdx/libgdx/pull/4003.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4003.patch"},"body":"","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4003/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4002","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4002/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4002/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4002/events","html_url":"https://github.com/libgdx/libgdx/pull/4002","id":147164629,"number":4002,"title":"Revert \"Lwjgl2 backend displayMode tweaks\"","user":{"login":"xoppa","id":2349087,"avatar_url":"https://avatars3.githubusercontent.com/u/2349087?v=4","gravatar_id":"","url":"https://api.github.com/users/xoppa","html_url":"https://github.com/xoppa","followers_url":"https://api.github.com/users/xoppa/followers","following_url":"https://api.github.com/users/xoppa/following{/other_user}","gists_url":"https://api.github.com/users/xoppa/gists{/gist_id}","starred_url":"https://api.github.com/users/xoppa/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xoppa/subscriptions","organizations_url":"https://api.github.com/users/xoppa/orgs","repos_url":"https://api.github.com/users/xoppa/repos","events_url":"https://api.github.com/users/xoppa/events{/privacy}","received_events_url":"https://api.github.com/users/xoppa/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-04-09T21:23:26Z","updated_at":"2016-04-09T21:23:30Z","closed_at":"2016-04-09T21:23:30Z","author_association":"OWNER","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4002","html_url":"https://github.com/libgdx/libgdx/pull/4002","diff_url":"https://github.com/libgdx/libgdx/pull/4002.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4002.patch"},"body":"Reverts libgdx/libgdx#3903 see #3997\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4002/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4001","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4001/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4001/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4001/events","html_url":"https://github.com/libgdx/libgdx/issues/4001","id":147164334,"number":4001,"title":"GWT's ClassReflection.isArray returns false instead of expected true","user":{"login":"intrigus","id":10353467,"avatar_url":"https://avatars2.githubusercontent.com/u/10353467?v=4","gravatar_id":"","url":"https://api.github.com/users/intrigus","html_url":"https://github.com/intrigus","followers_url":"https://api.github.com/users/intrigus/followers","following_url":"https://api.github.com/users/intrigus/following{/other_user}","gists_url":"https://api.github.com/users/intrigus/gists{/gist_id}","starred_url":"https://api.github.com/users/intrigus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/intrigus/subscriptions","organizations_url":"https://api.github.com/users/intrigus/orgs","repos_url":"https://api.github.com/users/intrigus/repos","events_url":"https://api.github.com/users/intrigus/events{/privacy}","received_events_url":"https://api.github.com/users/intrigus/received_events","type":"User","site_admin":false},"labels":[{"id":67383148,"url":"https://api.github.com/repos/libgdx/libgdx/labels/gwt","name":"gwt","color":"5319e7","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-04-09T21:17:40Z","updated_at":"2016-12-04T14:06:14Z","closed_at":"2016-12-04T14:06:14Z","author_association":"CONTRIBUTOR","body":"#### Issue details\n\n`ClassReflection.isArray` returns false instead of expected true.\nIt could be possible that `isEnum` also returns wrong values, but I didn't test that.\n#### Reproduction steps/code\n\n``` java\n\npackage com.badlogic.gdx.tests;\n\nimport com.badlogic.gdx.Gdx;\nimport com.badlogic.gdx.tests.utils.GdxTest;\nimport com.badlogic.gdx.utils.reflect.ClassReflection;\nimport com.badlogic.gdx.utils.reflect.ReflectionException;\n\npublic class IsArrayIssueTest extends GdxTest {\n\n    public void create () {\n        testIsArray();\n    }\n\n    public void testIsArray () {\n        Class c = null;\n        try {\n            c = ClassReflection.forName(\"com.badlogic.gdx.math.Vector2[]\");\n        } catch (ReflectionException e) {\n            // TODO Auto-generated catch block\n            e.printStackTrace();\n        }\n        boolean isArray= c.isArray();\n        Gdx.app.log(\"ClassReflectionTest\", \"native is array: \" + isArray);\n\n        boolean gdxIsArray= ClassReflection.isArray(c);\n        Gdx.app.log(\"ClassReflectionTest\", \"gdx is array: \" + gdxIsArray);\n    }\n}\n```\n##### Expected results are\n\n`native is array: true`\n`gdx is array: true`\n##### Actual results are\n\n`native is array: true`\n`gdx is array: false`\n#### Version of LibGDX and/or relevant dependencies\n\nLibGdx 1.9.2 & Gwt 2.7.0\n#### Suggested fix\n\nJust use the `isArray` method of `Class`.\n#### Where's the problem\n\nThe problem is that `c` is always `null`, when it's used to generate the reflection information for a `foo[]` class, so https://github.com/libgdx/libgdx/blob/master/backends/gdx-backends-gwt/src/com/badlogic/gwtref/gen/ReflectionCacheSourceCreator.java#L537 will never be entered and [`isArray`](https://github.com/libgdx/libgdx/blob/master/backends/gdx-backends-gwt/src/com/badlogic/gwtref/gen/ReflectionCacheSourceCreator.java#L539) will never be set to `true`.\nInstead, of using `c` we should probably use [`t`](https://github.com/libgdx/libgdx/blob/master/backends/gdx-backends-gwt/src/com/badlogic/gwtref/gen/ReflectionCacheSourceCreator.java#L483) which is of the type `JArrayType` and `t.isArray` is `!= null`, for `foo[]`.\n#### Please select the affected platforms\n- [ ] Android\n- [ ] iOS\n- [x] HTML/GWT\n- [ ] Windows\n- [ ] Linux\n- [ ] MacOS\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4001/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4000","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4000/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4000/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4000/events","html_url":"https://github.com/libgdx/libgdx/pull/4000","id":147135472,"number":4000,"title":"Add test for copy constructors","user":{"login":"FredGithub","id":1611174,"avatar_url":"https://avatars1.githubusercontent.com/u/1611174?v=4","gravatar_id":"","url":"https://api.github.com/users/FredGithub","html_url":"https://github.com/FredGithub","followers_url":"https://api.github.com/users/FredGithub/followers","following_url":"https://api.github.com/users/FredGithub/following{/other_user}","gists_url":"https://api.github.com/users/FredGithub/gists{/gist_id}","starred_url":"https://api.github.com/users/FredGithub/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/FredGithub/subscriptions","organizations_url":"https://api.github.com/users/FredGithub/orgs","repos_url":"https://api.github.com/users/FredGithub/repos","events_url":"https://api.github.com/users/FredGithub/events{/privacy}","received_events_url":"https://api.github.com/users/FredGithub/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-04-09T14:59:51Z","updated_at":"2016-04-09T22:43:04Z","closed_at":"2016-04-09T22:43:04Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4000","html_url":"https://github.com/libgdx/libgdx/pull/4000","diff_url":"https://github.com/libgdx/libgdx/pull/4000.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4000.patch"},"body":"","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4000/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3999","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3999/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3999/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3999/events","html_url":"https://github.com/libgdx/libgdx/pull/3999","id":147117666,"number":3999,"title":"GWT Method reflection fix.","user":{"login":"czyzby","id":11707612,"avatar_url":"https://avatars0.githubusercontent.com/u/11707612?v=4","gravatar_id":"","url":"https://api.github.com/users/czyzby","html_url":"https://github.com/czyzby","followers_url":"https://api.github.com/users/czyzby/followers","following_url":"https://api.github.com/users/czyzby/following{/other_user}","gists_url":"https://api.github.com/users/czyzby/gists{/gist_id}","starred_url":"https://api.github.com/users/czyzby/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/czyzby/subscriptions","organizations_url":"https://api.github.com/users/czyzby/orgs","repos_url":"https://api.github.com/users/czyzby/repos","events_url":"https://api.github.com/users/czyzby/events{/privacy}","received_events_url":"https://api.github.com/users/czyzby/received_events","type":"User","site_admin":false},"labels":[{"id":67383148,"url":"https://api.github.com/repos/libgdx/libgdx/labels/gwt","name":"gwt","color":"5319e7","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2016-04-09T10:39:52Z","updated_at":"2016-04-18T18:48:47Z","closed_at":"2016-04-18T18:48:47Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3999","html_url":"https://github.com/libgdx/libgdx/pull/3999","diff_url":"https://github.com/libgdx/libgdx/pull/3999.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3999.patch"},"body":"GWT `Method#getEnclosingType()` and `getReturnType()` methods are broken and always return `com.badlogic.gwtref.client.CachedTypeLookup` instead of actual types. This pull request fixes this issue.\n\nI think that originally `getClass()` method was mistaken for `clazz` getter rather than the default Java method that returns the class of the actual object (in this case - `CachedTypeLookup`). Since `clazz` field was already package-private, I didn't add any getters and just accessed the field directly.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3999/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3998","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3998/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3998/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3998/events","html_url":"https://github.com/libgdx/libgdx/pull/3998","id":146892614,"number":3998,"title":"RedAndroid","user":{"login":"JFixby","id":1580663,"avatar_url":"https://avatars0.githubusercontent.com/u/1580663?v=4","gravatar_id":"","url":"https://api.github.com/users/JFixby","html_url":"https://github.com/JFixby","followers_url":"https://api.github.com/users/JFixby/followers","following_url":"https://api.github.com/users/JFixby/following{/other_user}","gists_url":"https://api.github.com/users/JFixby/gists{/gist_id}","starred_url":"https://api.github.com/users/JFixby/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JFixby/subscriptions","organizations_url":"https://api.github.com/users/JFixby/orgs","repos_url":"https://api.github.com/users/JFixby/repos","events_url":"https://api.github.com/users/JFixby/events{/privacy}","received_events_url":"https://api.github.com/users/JFixby/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-04-08T10:54:40Z","updated_at":"2016-04-08T14:17:06Z","closed_at":"2016-04-08T10:55:04Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3998","html_url":"https://github.com/libgdx/libgdx/pull/3998","diff_url":"https://github.com/libgdx/libgdx/pull/3998.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3998.patch"},"body":"sorry wrong repo\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3998/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3997","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3997/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3997/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3997/events","html_url":"https://github.com/libgdx/libgdx/issues/3997","id":146814333,"number":3997,"title":"Gdx.graphics.getDisplayMode Returns Incorrect Results on LWJGL 2 Backend","user":{"login":"3xp0n3nt","id":1281275,"avatar_url":"https://avatars1.githubusercontent.com/u/1281275?v=4","gravatar_id":"","url":"https://api.github.com/users/3xp0n3nt","html_url":"https://github.com/3xp0n3nt","followers_url":"https://api.github.com/users/3xp0n3nt/followers","following_url":"https://api.github.com/users/3xp0n3nt/following{/other_user}","gists_url":"https://api.github.com/users/3xp0n3nt/gists{/gist_id}","starred_url":"https://api.github.com/users/3xp0n3nt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/3xp0n3nt/subscriptions","organizations_url":"https://api.github.com/users/3xp0n3nt/orgs","repos_url":"https://api.github.com/users/3xp0n3nt/repos","events_url":"https://api.github.com/users/3xp0n3nt/events{/privacy}","received_events_url":"https://api.github.com/users/3xp0n3nt/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2016-04-08T05:00:16Z","updated_at":"2017-01-16T14:56:08Z","closed_at":"2016-04-09T23:04:10Z","author_association":"CONTRIBUTOR","body":"#### Issue details\n\n`Gdx.graphics.getDisplayMode` returns incorrect results in **1.9.3-SNAPSHOT** with **LWJGL 2** backend. Works in **1.9.2**. Untested on other backends.\n\nReturns correct results in main thread, but in render thread, window size is reported, not screen size. Also, bpp & hz are 0 (unset).\n#### Reproduction steps/code\n\n```\nimport com.badlogic.gdx.*;\nimport com.badlogic.gdx.backends.lwjgl.LwjglApplication;\nimport com.badlogic.gdx.graphics.GL20;\n\npublic class Barebones extends ApplicationAdapter {\n    public void create () {\n        System.out.println(\"Incorrect: \" + Gdx.graphics.getDisplayMode());\n    }\n\n    public void render () {\n        Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);\n    }\n\n    public static void main (String[] args) throws Exception {\n        new LwjglApplication(new Barebones());\n        System.out.println(\"Correct: \" + Gdx.graphics.getDisplayMode());\n    }\n}\n```\n#### Version of LibGDX and/or relevant dependencies\n\nLibGDX 1.9.3-SNAPSHOT\nLWJGL 2 backend\n#### Stacktrace\n\nN/A\n#### Please select the affected platforms\n- [ ] Android - **UNTESTED**\n- [ ] iOS - **UNTESTED**\n- [ ] HTML/GWT - **UNTESTED**\n- [X] Windows\n- [ ] Linux - **UNTESTED**\n- [X] MacOS\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3997/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3996","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3996/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3996/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3996/events","html_url":"https://github.com/libgdx/libgdx/pull/3996","id":146724974,"number":3996,"title":"Move shape build logic out of MeshBuilder","user":{"login":"xoppa","id":2349087,"avatar_url":"https://avatars3.githubusercontent.com/u/2349087?v=4","gravatar_id":"","url":"https://api.github.com/users/xoppa","html_url":"https://github.com/xoppa","followers_url":"https://api.github.com/users/xoppa/followers","following_url":"https://api.github.com/users/xoppa/following{/other_user}","gists_url":"https://api.github.com/users/xoppa/gists{/gist_id}","starred_url":"https://api.github.com/users/xoppa/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xoppa/subscriptions","organizations_url":"https://api.github.com/users/xoppa/orgs","repos_url":"https://api.github.com/users/xoppa/repos","events_url":"https://api.github.com/users/xoppa/events{/privacy}","received_events_url":"https://api.github.com/users/xoppa/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-04-07T19:48:21Z","updated_at":"2016-04-07T19:57:37Z","closed_at":"2016-04-07T19:57:36Z","author_association":"OWNER","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3996","html_url":"https://github.com/libgdx/libgdx/pull/3996","diff_url":"https://github.com/libgdx/libgdx/pull/3996.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3996.patch"},"body":"The `MeshBuilder` class was originally intended to be used for basic debugging and such. Over time more and more methods were added to add more shapes and functionality like merging and transforming meshes. This made the class far more useful than just basic debugging, but also introduced the problem of the class becoming unreadable and unmaintainable. To fix that I've moved the logic of building shapes out of the class. Have a look at #3856 for info about that.\n\nIn the future, `MeshBuilder` will only contain the bare minimum required for building meshes. This includes adding vertices, indices and primitives like lines, triangles and quads as well as entire parts of a mesh. `MeshBuilder` will abstract away the logic of actually creating a mesh of those, based on the primitive type, vertex attributes, vertex transform, UV region, vertex color, etc. Perhaps we can move some of that logic to jni at some point to gain some performance.\n\nThe higher level logic of creating shapes like boxes, spheres, cones and such are moved to separate builder classes. These classes have one or more static `build` methods which can be used to build the shape using a `MeshBuilder`. So e.g. instead of calling `meshBuilder.box(...)` you should now call `BoxShapeBuilder.build(meshBuilder, ...)`.\n\nCurrently the `MeshBuilder` class and `MeshPartBuilder` interface still include the old methods, marked as deprecated. Be aware though: they will be removed in the very near future. Make sure to update your code as required.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3996/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3995","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3995/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3995/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3995/events","html_url":"https://github.com/libgdx/libgdx/issues/3995","id":146723886,"number":3995,"title":"Implement GPU-based font rendering","user":{"login":"xSke","id":16242158,"avatar_url":"https://avatars2.githubusercontent.com/u/16242158?v=4","gravatar_id":"","url":"https://api.github.com/users/xSke","html_url":"https://github.com/xSke","followers_url":"https://api.github.com/users/xSke/followers","following_url":"https://api.github.com/users/xSke/following{/other_user}","gists_url":"https://api.github.com/users/xSke/gists{/gist_id}","starred_url":"https://api.github.com/users/xSke/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xSke/subscriptions","organizations_url":"https://api.github.com/users/xSke/orgs","repos_url":"https://api.github.com/users/xSke/repos","events_url":"https://api.github.com/users/xSke/events{/privacy}","received_events_url":"https://api.github.com/users/xSke/received_events","type":"User","site_admin":false},"labels":[{"id":11336982,"url":"https://api.github.com/repos/libgdx/libgdx/labels/enhancement","name":"enhancement","color":"84b6eb","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-04-07T19:44:01Z","updated_at":"2016-04-08T15:58:05Z","closed_at":"2016-04-08T15:58:05Z","author_association":"CONTRIBUTOR","body":"I saw [this post](https://medium.com/@evanwallace/easy-scalable-text-rendering-on-the-gpu-c3f4d782c5ac) on reddit, and I feel like it would be great to have built-in to libGDX. It would probably work similar to the DistanceFieldFont, API-wise.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3995/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3994","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3994/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3994/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3994/events","html_url":"https://github.com/libgdx/libgdx/issues/3994","id":146512807,"number":3994,"title":"xoffset set to minus padding value for all letters","user":{"login":"wrobelp","id":5971863,"avatar_url":"https://avatars2.githubusercontent.com/u/5971863?v=4","gravatar_id":"","url":"https://api.github.com/users/wrobelp","html_url":"https://github.com/wrobelp","followers_url":"https://api.github.com/users/wrobelp/followers","following_url":"https://api.github.com/users/wrobelp/following{/other_user}","gists_url":"https://api.github.com/users/wrobelp/gists{/gist_id}","starred_url":"https://api.github.com/users/wrobelp/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wrobelp/subscriptions","organizations_url":"https://api.github.com/users/wrobelp/orgs","repos_url":"https://api.github.com/users/wrobelp/repos","events_url":"https://api.github.com/users/wrobelp/events{/privacy}","received_events_url":"https://api.github.com/users/wrobelp/received_events","type":"User","site_admin":false},"labels":[{"id":361360710,"url":"https://api.github.com/repos/libgdx/libgdx/labels/tools","name":"tools","color":"bfd4f2","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2016-04-07T05:24:15Z","updated_at":"2016-12-04T15:47:05Z","closed_at":"2016-12-04T15:47:05Z","author_association":"NONE","body":"I'm using Hiero to create Distant Field fonts for Java.\nWhen I create the font all the values of xoffset are -8 when I set padding 8.\n#### Issue details\n\nI loading from File. The problem is for all files I've tried.\nThe problem occurs on Java version. For FreeType version it's working well.\n\nI creating Distant Fields, but I think problem occurs for any Java version settings. I can test it.\n\nI tried to debug it. The Glyphs are created ok when switching to FreeType, but they're NOT reloaded/creted when switching to Java and change somewhere along the way. Cause later when saving to file values in Glyphs are all the same.\n\nI also tried using latest nightly but same problem occurs.\n#### Reproduction steps/code\n\nLoad font from .ttf file. Choose Java, add Distant Fileds, delete Color. Set up padding. Saving to BMP.\n#### Version of LibGDX and/or relevant dependencies\n\nI use newest runnable-hiero.jar v5\n\nFor now I'm using two .fnt files to load one font - one for xoffsets and one for all other data.\n#### Please select the affected platforms\n- [ ] Android\n- [ ] iOS\n- [ ] HTML/GWT\n- [ ] Windows\n- [x] Linux\n- [ ] MacOS\n\nThank You for Your Tools :)\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3994/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3993","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3993/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3993/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3993/events","html_url":"https://github.com/libgdx/libgdx/issues/3993","id":146441391,"number":3993,"title":"Preferred IPA build method: Gradle vs RoboVM plugin?  Size difference","user":{"login":"rungkutta","id":3440368,"avatar_url":"https://avatars1.githubusercontent.com/u/3440368?v=4","gravatar_id":"","url":"https://api.github.com/users/rungkutta","html_url":"https://github.com/rungkutta","followers_url":"https://api.github.com/users/rungkutta/followers","following_url":"https://api.github.com/users/rungkutta/following{/other_user}","gists_url":"https://api.github.com/users/rungkutta/gists{/gist_id}","starred_url":"https://api.github.com/users/rungkutta/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rungkutta/subscriptions","organizations_url":"https://api.github.com/users/rungkutta/orgs","repos_url":"https://api.github.com/users/rungkutta/repos","events_url":"https://api.github.com/users/rungkutta/events{/privacy}","received_events_url":"https://api.github.com/users/rungkutta/received_events","type":"User","site_admin":false},"labels":[{"id":59604199,"url":"https://api.github.com/repos/libgdx/libgdx/labels/ios","name":"ios","color":"207de5","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2016-04-06T21:30:59Z","updated_at":"2016-04-07T07:08:43Z","closed_at":"2016-04-07T07:08:43Z","author_association":"NONE","body":"#### Issue details\n\nAs far as I can tell, there are at least two ways to generate an IPA for iOS testing or deployment.  I have previously used Gradle at the command line: `gradle ios:createIPA`\n\nWith the RoboVM plugin in Intellij IDEA, you can also select `Create IPA` from the `Build` menu.\n\nI've been unable to determine the technical differences between these two, but I have noticed that the IDEA method creates a much larger IPA.  On one example app, Gradle makes a 34 MB IPA, while IDEA makes a 42 MB one, ~~and both seem to work equivalently~~.  Correction: the IDEA version won't run at all on a development device - I think this might be a signing issue?\n\nOpening up the two IPAs, everything is identical except the executable (`Payload\\appname.app\\appname`), which is way bigger on the IDEA version.\n\nAny ideas what's going on, or what to check for?  Is this due to some setting I'm not understanding?  Is one of these methods preferred?\n#### Reproduction steps/code\n- Create an IPA at the command line: `gradle ios:createIPA`\n- Create an IPA in Intellij IDEA: `Build > Create IPA`\n- Compare!\n#### Version of LibGDX and/or relevant dependencies\n\nlibGDX 1.9.1\nRoboVM 1.12.0\n#### Please select the affected platforms\n- [ ] Android\n- [x] iOS\n- [ ] HTML/GWT\n- [ ] Windows\n- [ ] Linux\n- [ ] MacOS\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3993/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3992","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3992/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3992/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3992/events","html_url":"https://github.com/libgdx/libgdx/issues/3992","id":146396623,"number":3992,"title":"TextArea ColorMarkup ArrayIndexOutOfBoundsException","user":{"login":"keeyzar","id":11984331,"avatar_url":"https://avatars0.githubusercontent.com/u/11984331?v=4","gravatar_id":"","url":"https://api.github.com/users/keeyzar","html_url":"https://github.com/keeyzar","followers_url":"https://api.github.com/users/keeyzar/followers","following_url":"https://api.github.com/users/keeyzar/following{/other_user}","gists_url":"https://api.github.com/users/keeyzar/gists{/gist_id}","starred_url":"https://api.github.com/users/keeyzar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keeyzar/subscriptions","organizations_url":"https://api.github.com/users/keeyzar/orgs","repos_url":"https://api.github.com/users/keeyzar/repos","events_url":"https://api.github.com/users/keeyzar/events{/privacy}","received_events_url":"https://api.github.com/users/keeyzar/received_events","type":"User","site_admin":false},"labels":[{"id":89047068,"url":"https://api.github.com/repos/libgdx/libgdx/labels/scene2d","name":"scene2d","color":"ff00ff","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2016-04-06T18:27:37Z","updated_at":"2017-01-16T14:59:00Z","closed_at":"2016-12-04T14:08:52Z","author_association":"NONE","body":"#### Issue details\n\nAt some sizes the Textarea with enabled Color Markup throws an ArrayOutOfBoundsException\n#### Reproduction steps/code\n\n```\npublic class test extends Game {\n    Stage stage;\n\n    @Override\n    public void render() {\n        stage.act();\n        stage.draw();\n    }\n\n    @Override\n    public void create() {\n\n        Skin skin = assetManager.get(AssetVariables.UI_SKIN_JSON, Skin.class); //I guess any Skin will do\n        stage = new Stage();\n        TextArea textArea = new TextArea(\"\", skin);\n        textArea.getStyle().font.getData().markupEnabled = true;\n        textArea.setText(\"[RED] nice text [] i like\");\n        textArea.setFillParent(true);\n        textArea.setPosition(0, 100);\n        textArea.setSize(200, 100);\n        stage.addActor(textArea);\n\n    }\n}\n```\n#### Version of LibGDX and/or relevant dependencies\n\n1.9.2 (the latest)\n#### Stacktrace\n\n``` java\nException in thread \"LWJGL Application\" java.lang.ArrayIndexOutOfBoundsException: 16\n    at com.badlogic.gdx.scenes.scene2d.ui.TextField.calculateOffsets(TextField.java:244)\n    at com.badlogic.gdx.scenes.scene2d.ui.TextArea.calculateOffsets(TextArea.java:263)\n    at com.badlogic.gdx.scenes.scene2d.ui.TextField.draw(TextField.java:294)\n    at com.badlogic.gdx.scenes.scene2d.Group.drawChildren(Group.java:110)\n    at com.badlogic.gdx.scenes.scene2d.Group.draw(Group.java:57)\n    at com.badlogic.gdx.scenes.scene2d.Stage.draw(Stage.java:128)\n    at de.keeyzar.earthragequit.testingPurpose.test.render(test.java:21)\n    at com.badlogic.gdx.backends.lwjgl.LwjglApplication.mainLoop(LwjglApplication.java:223)\n    at com.badlogic.gdx.backends.lwjgl.LwjglApplication$1.run(LwjglApplication.java:124)\n```\n#### Please select the affected platforms\n- [ ] Android\n- [ ] iOS\n- [x] HTML/GWT\n- [ ] Windows\n- [ ] Linux\n- [ ] MacOS\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3992/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3991","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3991/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3991/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3991/events","html_url":"https://github.com/libgdx/libgdx/pull/3991","id":146094525,"number":3991,"title":"Update DefaultShader","user":{"login":"realitix","id":6367936,"avatar_url":"https://avatars1.githubusercontent.com/u/6367936?v=4","gravatar_id":"","url":"https://api.github.com/users/realitix","html_url":"https://github.com/realitix","followers_url":"https://api.github.com/users/realitix/followers","following_url":"https://api.github.com/users/realitix/following{/other_user}","gists_url":"https://api.github.com/users/realitix/gists{/gist_id}","starred_url":"https://api.github.com/users/realitix/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/realitix/subscriptions","organizations_url":"https://api.github.com/users/realitix/orgs","repos_url":"https://api.github.com/users/realitix/repos","events_url":"https://api.github.com/users/realitix/events{/privacy}","received_events_url":"https://api.github.com/users/realitix/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2016-04-05T19:59:02Z","updated_at":"2016-04-16T12:47:54Z","closed_at":"2016-04-16T12:47:47Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3991","html_url":"https://github.com/libgdx/libgdx/pull/3991","diff_url":"https://github.com/libgdx/libgdx/pull/3991.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3991.patch"},"body":"Add camera near and far support in default shader.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3991/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3990","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3990/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3990/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3990/events","html_url":"https://github.com/libgdx/libgdx/pull/3990","id":145610173,"number":3990,"title":"Fix MeshBuilder","user":{"login":"realitix","id":6367936,"avatar_url":"https://avatars1.githubusercontent.com/u/6367936?v=4","gravatar_id":"","url":"https://api.github.com/users/realitix","html_url":"https://github.com/realitix","followers_url":"https://api.github.com/users/realitix/followers","following_url":"https://api.github.com/users/realitix/following{/other_user}","gists_url":"https://api.github.com/users/realitix/gists{/gist_id}","starred_url":"https://api.github.com/users/realitix/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/realitix/subscriptions","organizations_url":"https://api.github.com/users/realitix/orgs","repos_url":"https://api.github.com/users/realitix/repos","events_url":"https://api.github.com/users/realitix/events{/privacy}","received_events_url":"https://api.github.com/users/realitix/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2016-04-04T07:46:46Z","updated_at":"2016-04-07T08:57:21Z","closed_at":"2016-04-07T08:02:09Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3990","html_url":"https://github.com/libgdx/libgdx/pull/3990","diff_url":"https://github.com/libgdx/libgdx/pull/3990.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3990.patch"},"body":"If a transform matrix is passed to `sphere()` method of MeshBuilder, normal vectors are wrong.\n\nBefore this fix : \n![sphere_normal_ko](https://cloud.githubusercontent.com/assets/6367936/14241092/fe314604-fa49-11e5-9669-91bf781d26ac.PNG)\n\nAfter this fix :\n![sphere_normal_ok](https://cloud.githubusercontent.com/assets/6367936/14241105/0ef8dd6c-fa4a-11e5-9d83-5861ed60fcf3.PNG)\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3990/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3989","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3989/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3989/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3989/events","html_url":"https://github.com/libgdx/libgdx/issues/3989","id":145597833,"number":3989,"title":"New 'Data' FileHandle location type","user":{"login":"me4502","id":546754,"avatar_url":"https://avatars1.githubusercontent.com/u/546754?v=4","gravatar_id":"","url":"https://api.github.com/users/me4502","html_url":"https://github.com/me4502","followers_url":"https://api.github.com/users/me4502/followers","following_url":"https://api.github.com/users/me4502/following{/other_user}","gists_url":"https://api.github.com/users/me4502/gists{/gist_id}","starred_url":"https://api.github.com/users/me4502/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/me4502/subscriptions","organizations_url":"https://api.github.com/users/me4502/orgs","repos_url":"https://api.github.com/users/me4502/repos","events_url":"https://api.github.com/users/me4502/events{/privacy}","received_events_url":"https://api.github.com/users/me4502/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":16,"created_at":"2016-04-04T06:36:43Z","updated_at":"2016-05-11T00:18:35Z","closed_at":"2016-05-05T15:39:23Z","author_association":"NONE","body":"Currently there isn't a FileHandle type that properly fits the generic application data store on different systems.\n\nA data type would preferably store files in the Application Support folder on a Mac, AppData on Windows, the Data section of the app on iOS, and the Data section of the app on Android.\n\nFor the desktop OSs, it'd also make sense to have it inside it's own folder, so instead of just the raw AppData, it could be in AppData/ProgramName\n\nThe current closest is external, which saves to the SD card on android and the users home directory. The iOS behaviour is undefined by the javadocs. This behaviour however, this is not preferable for storing data.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3989/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3988","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3988/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3988/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3988/events","html_url":"https://github.com/libgdx/libgdx/pull/3988","id":145525049,"number":3988,"title":"Add RenderableShapeBuilder","user":{"login":"realitix","id":6367936,"avatar_url":"https://avatars1.githubusercontent.com/u/6367936?v=4","gravatar_id":"","url":"https://api.github.com/users/realitix","html_url":"https://github.com/realitix","followers_url":"https://api.github.com/users/realitix/followers","following_url":"https://api.github.com/users/realitix/following{/other_user}","gists_url":"https://api.github.com/users/realitix/gists{/gist_id}","starred_url":"https://api.github.com/users/realitix/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/realitix/subscriptions","organizations_url":"https://api.github.com/users/realitix/orgs","repos_url":"https://api.github.com/users/realitix/repos","events_url":"https://api.github.com/users/realitix/events{/privacy}","received_events_url":"https://api.github.com/users/realitix/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2016-04-03T18:13:01Z","updated_at":"2016-04-07T09:23:01Z","closed_at":"2016-04-07T08:07:53Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3988","html_url":"https://github.com/libgdx/libgdx/pull/3988","diff_url":"https://github.com/libgdx/libgdx/pull/3988.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3988.patch"},"body":"RenderableShapeBuilder allows to visualize several renderable's properties.\nCurrently, it can build normal, tangent and binormal.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3988/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3987","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3987/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3987/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3987/events","html_url":"https://github.com/libgdx/libgdx/pull/3987","id":145483757,"number":3987,"title":"Robustify DefaultShader","user":{"login":"realitix","id":6367936,"avatar_url":"https://avatars1.githubusercontent.com/u/6367936?v=4","gravatar_id":"","url":"https://api.github.com/users/realitix","html_url":"https://github.com/realitix","followers_url":"https://api.github.com/users/realitix/followers","following_url":"https://api.github.com/users/realitix/following{/other_user}","gists_url":"https://api.github.com/users/realitix/gists{/gist_id}","starred_url":"https://api.github.com/users/realitix/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/realitix/subscriptions","organizations_url":"https://api.github.com/users/realitix/orgs","repos_url":"https://api.github.com/users/realitix/repos","events_url":"https://api.github.com/users/realitix/events{/privacy}","received_events_url":"https://api.github.com/users/realitix/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-04-03T11:30:42Z","updated_at":"2016-04-03T15:04:53Z","closed_at":"2016-04-03T15:04:52Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3987","html_url":"https://github.com/libgdx/libgdx/pull/3987","diff_url":"https://github.com/libgdx/libgdx/pull/3987.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3987.patch"},"body":"Remove camera property of DefaultShader because it already exists in BaseShader.\nHere : https://github.com/libgdx/libgdx/blob/1.9.2/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/BaseShader.java#L112\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3987/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3986","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3986/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3986/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3986/events","html_url":"https://github.com/libgdx/libgdx/issues/3986","id":145472645,"number":3986,"title":"Add basic VR support using the LWJGL3 OpenVR bindings","user":{"login":"me4502","id":546754,"avatar_url":"https://avatars1.githubusercontent.com/u/546754?v=4","gravatar_id":"","url":"https://api.github.com/users/me4502","html_url":"https://github.com/me4502","followers_url":"https://api.github.com/users/me4502/followers","following_url":"https://api.github.com/users/me4502/following{/other_user}","gists_url":"https://api.github.com/users/me4502/gists{/gist_id}","starred_url":"https://api.github.com/users/me4502/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/me4502/subscriptions","organizations_url":"https://api.github.com/users/me4502/orgs","repos_url":"https://api.github.com/users/me4502/repos","events_url":"https://api.github.com/users/me4502/events{/privacy}","received_events_url":"https://api.github.com/users/me4502/received_events","type":"User","site_admin":false},"labels":[{"id":11336982,"url":"https://api.github.com/repos/libgdx/libgdx/labels/enhancement","name":"enhancement","color":"84b6eb","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":14,"created_at":"2016-04-03T09:02:34Z","updated_at":"2016-12-04T14:11:09Z","closed_at":"2016-12-04T14:10:13Z","author_association":"NONE","body":"---------------------------------------------------------\r\nedit by badlogic:\r\n\r\nCheck out the GitHub repository for a [Third Party Solution](https://github.com/Brummi/VRCamera).\r\n---------------------------------------------------------\r\n\r\nWith VR technologies such as the HTC Vive, and the Oculus Rift becoming mainstream, the ability to hook a LibGDX camera to a VR HMD, or track a controller, would allow for LibGDX to be used to create VR games.\r\n\r\nUsage of the OpenVR (SteamVR) bindings is most sensible, as it works on multiple HMDs, rather than Oculus' LibOVR, which is limited to Oculus HMDs at this stage. Also, OpenVR supports room-scale and touch controls, unlike LibOVR.\r\n\r\nThe following are stages that I feel would make sense\r\n- [ ] A VR Camera. LibGDX 3D camera that is tracked to a HMD, and renders to the VR Compositor. (Possibly even a VR Camera Wrapper to wrap other cameras)\r\n- [ ] VR Touch Controller Input Types\r\n- [ ] Access to room-scale boundaries\r\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3986/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3985","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3985/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3985/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3985/events","html_url":"https://github.com/libgdx/libgdx/pull/3985","id":145415865,"number":3985,"title":"Replace all thread-safe StringBuffers with regular StringBuilders","user":{"login":"JFixby","id":1580663,"avatar_url":"https://avatars0.githubusercontent.com/u/1580663?v=4","gravatar_id":"","url":"https://api.github.com/users/JFixby","html_url":"https://github.com/JFixby","followers_url":"https://api.github.com/users/JFixby/followers","following_url":"https://api.github.com/users/JFixby/following{/other_user}","gists_url":"https://api.github.com/users/JFixby/gists{/gist_id}","starred_url":"https://api.github.com/users/JFixby/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JFixby/subscriptions","organizations_url":"https://api.github.com/users/JFixby/orgs","repos_url":"https://api.github.com/users/JFixby/repos","events_url":"https://api.github.com/users/JFixby/events{/privacy}","received_events_url":"https://api.github.com/users/JFixby/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2016-04-02T20:36:23Z","updated_at":"2016-05-11T08:44:46Z","closed_at":"2016-05-11T08:44:46Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3985","html_url":"https://github.com/libgdx/libgdx/pull/3985","diff_url":"https://github.com/libgdx/libgdx/pull/3985.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3985.patch"},"body":"> As of release JDK 5, StringBuffers-class has been supplemented with an equivalent class designed for use by a single thread, StringBuilder. The StringBuilder class should generally be used in preference to this one, as it supports all of the same operations but it is faster, as it performs no synchronization. \n> https://docs.oracle.com/javase/7/docs/api/java/lang/StringBuffer.html\n\nI called `ReplaceAll...` in Eclipse and looks like the changed code is never used publicly so no API affected.\n\nDiscussion: https://github.com/libgdx/libgdx/issues/3977\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3985/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3984","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3984/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3984/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3984/events","html_url":"https://github.com/libgdx/libgdx/pull/3984","id":145256855,"number":3984,"title":"Update BSpline.java","user":{"login":"Tekkerue","id":10715911,"avatar_url":"https://avatars3.githubusercontent.com/u/10715911?v=4","gravatar_id":"","url":"https://api.github.com/users/Tekkerue","html_url":"https://github.com/Tekkerue","followers_url":"https://api.github.com/users/Tekkerue/followers","following_url":"https://api.github.com/users/Tekkerue/following{/other_user}","gists_url":"https://api.github.com/users/Tekkerue/gists{/gist_id}","starred_url":"https://api.github.com/users/Tekkerue/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Tekkerue/subscriptions","organizations_url":"https://api.github.com/users/Tekkerue/orgs","repos_url":"https://api.github.com/users/Tekkerue/repos","events_url":"https://api.github.com/users/Tekkerue/events{/privacy}","received_events_url":"https://api.github.com/users/Tekkerue/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-04-01T18:51:23Z","updated_at":"2016-04-02T15:49:34Z","closed_at":"2016-04-02T15:49:30Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3984","html_url":"https://github.com/libgdx/libgdx/pull/3984","diff_url":"https://github.com/libgdx/libgdx/pull/3984.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3984.patch"},"body":"Fixed issue #3971. Cubic derivative returning wrong value.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3984/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3983","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3983/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3983/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3983/events","html_url":"https://github.com/libgdx/libgdx/pull/3983","id":145247797,"number":3983,"title":"Update BSpline.java","user":{"login":"Tekkerue","id":10715911,"avatar_url":"https://avatars3.githubusercontent.com/u/10715911?v=4","gravatar_id":"","url":"https://api.github.com/users/Tekkerue","html_url":"https://github.com/Tekkerue","followers_url":"https://api.github.com/users/Tekkerue/followers","following_url":"https://api.github.com/users/Tekkerue/following{/other_user}","gists_url":"https://api.github.com/users/Tekkerue/gists{/gist_id}","starred_url":"https://api.github.com/users/Tekkerue/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Tekkerue/subscriptions","organizations_url":"https://api.github.com/users/Tekkerue/orgs","repos_url":"https://api.github.com/users/Tekkerue/repos","events_url":"https://api.github.com/users/Tekkerue/events{/privacy}","received_events_url":"https://api.github.com/users/Tekkerue/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-04-01T18:16:52Z","updated_at":"2016-04-02T15:49:48Z","closed_at":"2016-04-02T15:49:48Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3983","html_url":"https://github.com/libgdx/libgdx/pull/3983","diff_url":"https://github.com/libgdx/libgdx/pull/3983.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3983.patch"},"body":"Fixed cubic derivative returning wrong value. Issue #3971\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3983/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3982","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3982/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3982/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3982/events","html_url":"https://github.com/libgdx/libgdx/issues/3982","id":145178580,"number":3982,"title":"ShapeRenderer not displayed on Android Flyme 4.5.4.2l","user":{"login":"RotaruDan","id":5658058,"avatar_url":"https://avatars2.githubusercontent.com/u/5658058?v=4","gravatar_id":"","url":"https://api.github.com/users/RotaruDan","html_url":"https://github.com/RotaruDan","followers_url":"https://api.github.com/users/RotaruDan/followers","following_url":"https://api.github.com/users/RotaruDan/following{/other_user}","gists_url":"https://api.github.com/users/RotaruDan/gists{/gist_id}","starred_url":"https://api.github.com/users/RotaruDan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/RotaruDan/subscriptions","organizations_url":"https://api.github.com/users/RotaruDan/orgs","repos_url":"https://api.github.com/users/RotaruDan/repos","events_url":"https://api.github.com/users/RotaruDan/events{/privacy}","received_events_url":"https://api.github.com/users/RotaruDan/received_events","type":"User","site_admin":false},"labels":[{"id":172870364,"url":"https://api.github.com/repos/libgdx/libgdx/labels/need%20more%20info","name":"need more info","color":"bfdadc","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2016-04-01T13:17:31Z","updated_at":"2016-04-02T16:05:44Z","closed_at":"2016-04-02T16:05:44Z","author_association":"CONTRIBUTOR","body":"#### Issue details\n\nI've quickly implemented an actor that draws a polygon using ShapeRenderer: https://github.com/RotaruDan/cytopathology/blob/prototype1/core/src/es/eucm/cytochallenge/view/widgets/challenge/result/PolygonActor.java#L14\n\nThis works completely fine on Desktop, HTML and most of Android devices I've tried, as you can see a correct result of the PolygonActor:\n\n![image](https://cloud.githubusercontent.com/assets/5658058/14207891/fe39bf48-f81c-11e5-9941-94ca84b867bb.png)\n\nbut on the Meizu Note 2 Android phone (using Flyme 4.5.4.2l, Android 5.1 OS): http://www.gsmarena.com/meizu_m2_note-7266.php\nthe polygon isn't displayed at all. There is no crash, so the application keeps running correctly with the difference that no pollygon is drawn.\n#### Version of LibGDX and/or relevant dependencies\n\ngdxVersion = '1.9.1'\n#### Affected platforms\n- Android\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3982/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3981","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3981/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3981/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3981/events","html_url":"https://github.com/libgdx/libgdx/pull/3981","id":145064248,"number":3981,"title":"Start RelativeTemporalAction at 100% when reversed","user":{"login":"thebnich","id":1093266,"avatar_url":"https://avatars3.githubusercontent.com/u/1093266?v=4","gravatar_id":"","url":"https://api.github.com/users/thebnich","html_url":"https://github.com/thebnich","followers_url":"https://api.github.com/users/thebnich/followers","following_url":"https://api.github.com/users/thebnich/following{/other_user}","gists_url":"https://api.github.com/users/thebnich/gists{/gist_id}","starred_url":"https://api.github.com/users/thebnich/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thebnich/subscriptions","organizations_url":"https://api.github.com/users/thebnich/orgs","repos_url":"https://api.github.com/users/thebnich/repos","events_url":"https://api.github.com/users/thebnich/events{/privacy}","received_events_url":"https://api.github.com/users/thebnich/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2016-04-01T01:56:48Z","updated_at":"2016-05-05T15:27:27Z","closed_at":"2016-05-05T15:27:26Z","author_association":"NONE","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3981","html_url":"https://github.com/libgdx/libgdx/pull/3981","diff_url":"https://github.com/libgdx/libgdx/pull/3981.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3981.patch"},"body":"`TemporalAction` [subtracts the percent from 1](https://github.com/libgdx/libgdx/blob/714d82c829973b4d6cfd205e6a38706c6df897f3/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/TemporalAction.java#L60) on `update` if `reverse` is `true`. In `RelativeTemporalAction`, `update` [subtracts the current percent from the last percent](https://github.com/libgdx/libgdx/blob/714d82c829973b4d6cfd205e6a38706c6df897f3/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/RelativeTemporalAction.java#L29). That means the first update will be ~1, and since `lastPercent` is 0, that value will be passed on to `updateRelative`.\n\nSince we're moving backwards when reversed, I think it makes sense to start 1 here.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3981/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3980","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3980/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3980/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3980/events","html_url":"https://github.com/libgdx/libgdx/pull/3980","id":144805743,"number":3980,"title":"TextureLoader - Support WebP","user":{"login":"lifangjie","id":5134204,"avatar_url":"https://avatars1.githubusercontent.com/u/5134204?v=4","gravatar_id":"","url":"https://api.github.com/users/lifangjie","html_url":"https://github.com/lifangjie","followers_url":"https://api.github.com/users/lifangjie/followers","following_url":"https://api.github.com/users/lifangjie/following{/other_user}","gists_url":"https://api.github.com/users/lifangjie/gists{/gist_id}","starred_url":"https://api.github.com/users/lifangjie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lifangjie/subscriptions","organizations_url":"https://api.github.com/users/lifangjie/orgs","repos_url":"https://api.github.com/users/lifangjie/repos","events_url":"https://api.github.com/users/lifangjie/events{/privacy}","received_events_url":"https://api.github.com/users/lifangjie/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2016-03-31T06:40:27Z","updated_at":"2016-05-11T08:45:56Z","closed_at":"2016-05-11T08:45:56Z","author_association":"NONE","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3980","html_url":"https://github.com/libgdx/libgdx/pull/3980","diff_url":"https://github.com/libgdx/libgdx/pull/3980.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3980.patch"},"body":"Add submodule libwebp, and add WebPDecodeRGBA, and fix Android.mk\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3980/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3979","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3979/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3979/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3979/events","html_url":"https://github.com/libgdx/libgdx/pull/3979","id":144799898,"number":3979,"title":"TextureLoader - Support Webp","user":{"login":"lifangjie","id":5134204,"avatar_url":"https://avatars1.githubusercontent.com/u/5134204?v=4","gravatar_id":"","url":"https://api.github.com/users/lifangjie","html_url":"https://github.com/lifangjie","followers_url":"https://api.github.com/users/lifangjie/followers","following_url":"https://api.github.com/users/lifangjie/following{/other_user}","gists_url":"https://api.github.com/users/lifangjie/gists{/gist_id}","starred_url":"https://api.github.com/users/lifangjie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lifangjie/subscriptions","organizations_url":"https://api.github.com/users/lifangjie/orgs","repos_url":"https://api.github.com/users/lifangjie/repos","events_url":"https://api.github.com/users/lifangjie/events{/privacy}","received_events_url":"https://api.github.com/users/lifangjie/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-03-31T06:10:25Z","updated_at":"2016-03-31T06:34:13Z","closed_at":"2016-03-31T06:34:13Z","author_association":"NONE","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3979","html_url":"https://github.com/libgdx/libgdx/pull/3979","diff_url":"https://github.com/libgdx/libgdx/pull/3979.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3979.patch"},"body":"let Texture support .webp image format\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3979/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}}],"meta":{"x-ratelimit-limit":"5000","x-ratelimit-remaining":"4969","x-ratelimit-reset":"1506844633","x-github-request-id":"C22C:028A:1AAA732:2EBC4E2:59D093E5","x-github-media-type":"github.squirrel-girl-preview","link":"<https://api.github.com/repositories/5373551/issues?state=all&page=32>; rel=\"next\", <https://api.github.com/repositories/5373551/issues?state=all&page=164>; rel=\"last\", <https://api.github.com/repositories/5373551/issues?state=all&page=1>; rel=\"first\", <https://api.github.com/repositories/5373551/issues?state=all&page=30>; rel=\"prev\"","etag":"\"0c9c958362241b10134c779bdab97435\"","status":"200 OK"}}
