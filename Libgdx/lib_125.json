{"data":[{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1185","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1185/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1185/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1185/events","html_url":"https://github.com/libgdx/libgdx/issues/1185","id":25462465,"number":1185,"title":"com.badlogic.gdx.utils.GdxRuntimeException: Asset not loaded","user":{"login":"mateuszluczak","id":2010759,"avatar_url":"https://avatars1.githubusercontent.com/u/2010759?v=4","gravatar_id":"","url":"https://api.github.com/users/mateuszluczak","html_url":"https://github.com/mateuszluczak","followers_url":"https://api.github.com/users/mateuszluczak/followers","following_url":"https://api.github.com/users/mateuszluczak/following{/other_user}","gists_url":"https://api.github.com/users/mateuszluczak/gists{/gist_id}","starred_url":"https://api.github.com/users/mateuszluczak/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mateuszluczak/subscriptions","organizations_url":"https://api.github.com/users/mateuszluczak/orgs","repos_url":"https://api.github.com/users/mateuszluczak/repos","events_url":"https://api.github.com/users/mateuszluczak/events{/privacy}","received_events_url":"https://api.github.com/users/mateuszluczak/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2014-01-12T13:33:42Z","updated_at":"2014-02-05T16:15:54Z","closed_at":"2014-02-05T16:12:23Z","author_association":"NONE","body":"Hi,\n\nWe are loading .g3db model in our application depending on many .png textures. During application run the model displays correctly, but on exit libgdx throws exception both on desktop and Android.\n\n`Exception in thread \"LWJGL Application\" com.badlogic.gdx.utils.GdxRuntimeException: Asset not loaded: models/clavichord/stojak_tyl.png\n    at com.badlogic.gdx.assets.AssetManager.unload(AssetManager.java:163)\n    at com.badlogic.gdx.assets.AssetManager.unload(AssetManager.java:186)\n    at com.badlogic.gdx.assets.AssetManager.clear(AssetManager.java:599)\n    at com.badlogic.gdx.assets.AssetManager.dispose(AssetManager.java:567)\n    at pl.put.smartclav.core.modes.games.AbstractGame.dispose(AbstractGame.java:175)\n    at com.badlogic.gdx.backends.lwjgl.LwjglApplication.mainLoop(LwjglApplication.java:225)\n    at com.badlogic.gdx.backends.lwjgl.LwjglApplication$1.run(LwjglApplication.java:114)`\n\n`stojak_tyl.png` is one of our texture files.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1185/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1184","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1184/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1184/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1184/events","html_url":"https://github.com/libgdx/libgdx/pull/1184","id":25462190,"number":1184,"title":"Liquidfun support (Box2D particles)","user":{"login":"finnstr","id":6330218,"avatar_url":"https://avatars3.githubusercontent.com/u/6330218?v=4","gravatar_id":"","url":"https://api.github.com/users/finnstr","html_url":"https://github.com/finnstr","followers_url":"https://api.github.com/users/finnstr/followers","following_url":"https://api.github.com/users/finnstr/following{/other_user}","gists_url":"https://api.github.com/users/finnstr/gists{/gist_id}","starred_url":"https://api.github.com/users/finnstr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/finnstr/subscriptions","organizations_url":"https://api.github.com/users/finnstr/orgs","repos_url":"https://api.github.com/users/finnstr/repos","events_url":"https://api.github.com/users/finnstr/events{/privacy}","received_events_url":"https://api.github.com/users/finnstr/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2014-01-12T13:17:19Z","updated_at":"2014-07-19T16:59:35Z","closed_at":"2014-01-13T23:32:01Z","author_association":"NONE","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/1184","html_url":"https://github.com/libgdx/libgdx/pull/1184","diff_url":"https://github.com/libgdx/libgdx/pull/1184.diff","patch_url":"https://github.com/libgdx/libgdx/pull/1184.patch"},"body":"Hey,\nI added support for the open source liquidfun library made by Google. If you don't know about it here you can get some information: \nhttp://google.github.io/liquidfun/\n\nI added the C++ code (If you wonder why all Box2D files are edited: I was a bit lazy so I just threw all liquidfun files, which are the original Box2D files + particles, into libgdx and added the lines written by libgdx developers) and some java classes so you can access the particlesystem. I also wrote a debug renderer and one fluid renderer, but I excludet the last one because I don't liked it too much (I'm pretty new to GLSL so I wasn't able to archive the result that I aimed for)\n\nNevertheless here are some pictures:\nhttp://www.directupload.net/file/d/3500/4b9yidra_png.htm (This one is taken from the LiquidFunTest class)\nhttp://www.directupload.net/file/d/3500/b2xdsxlb_png.htm\nhttp://www.directupload.net/file/d/3500/4gfk97dc_png.htm\n\nThe performance is very good already, I can simulate more than 15000 particles with constant 60 fps. But there are still some performance improvements possible. Probably I will work on them later...\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1184/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1183","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1183/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1183/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1183/events","html_url":"https://github.com/libgdx/libgdx/pull/1183","id":25461524,"number":1183,"title":"Additional rotation/angele methods taking/returning radians","user":{"login":"ghost","id":10137,"avatar_url":"https://avatars3.githubusercontent.com/u/10137?v=4","gravatar_id":"","url":"https://api.github.com/users/ghost","html_url":"https://github.com/ghost","followers_url":"https://api.github.com/users/ghost/followers","following_url":"https://api.github.com/users/ghost/following{/other_user}","gists_url":"https://api.github.com/users/ghost/gists{/gist_id}","starred_url":"https://api.github.com/users/ghost/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ghost/subscriptions","organizations_url":"https://api.github.com/users/ghost/orgs","repos_url":"https://api.github.com/users/ghost/repos","events_url":"https://api.github.com/users/ghost/events{/privacy}","received_events_url":"https://api.github.com/users/ghost/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":11,"created_at":"2014-01-12T12:33:25Z","updated_at":"2014-07-08T12:12:28Z","closed_at":"2014-01-28T23:41:22Z","author_association":"NONE","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/1183","html_url":"https://github.com/libgdx/libgdx/pull/1183","diff_url":"https://github.com/libgdx/libgdx/pull/1183.diff","patch_url":"https://github.com/libgdx/libgdx/pull/1183.patch"},"body":"LibGDX needs radian based methods. I kept ending with tons of unnecessary radian<->degrees conversions too many times.\n\nI'm rather new to GIT, so I hope it doesn't break anything.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1183/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1182","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1182/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1182/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1182/events","html_url":"https://github.com/libgdx/libgdx/pull/1182","id":25460620,"number":1182,"title":"GWT: Implement Pattern/Matcher emulation using RegExp","user":{"login":"hneuer","id":1545118,"avatar_url":"https://avatars3.githubusercontent.com/u/1545118?v=4","gravatar_id":"","url":"https://api.github.com/users/hneuer","html_url":"https://github.com/hneuer","followers_url":"https://api.github.com/users/hneuer/followers","following_url":"https://api.github.com/users/hneuer/following{/other_user}","gists_url":"https://api.github.com/users/hneuer/gists{/gist_id}","starred_url":"https://api.github.com/users/hneuer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hneuer/subscriptions","organizations_url":"https://api.github.com/users/hneuer/orgs","repos_url":"https://api.github.com/users/hneuer/repos","events_url":"https://api.github.com/users/hneuer/events{/privacy}","received_events_url":"https://api.github.com/users/hneuer/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2014-01-12T11:18:53Z","updated_at":"2014-06-20T12:08:41Z","closed_at":"2014-01-13T23:33:28Z","author_association":"OWNER","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/1182","html_url":"https://github.com/libgdx/libgdx/pull/1182","diff_url":"https://github.com/libgdx/libgdx/pull/1182.diff","patch_url":"https://github.com/libgdx/libgdx/pull/1182.patch"},"body":"The RegExp implementation is more complete than the Avian. Also JsonWriter does not need an emulation anymore.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1182/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1181","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1181/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1181/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1181/events","html_url":"https://github.com/libgdx/libgdx/pull/1181","id":25459197,"number":1181,"title":"ParticleEffect: Use Writer instead of File in save method","user":{"login":"hneuer","id":1545118,"avatar_url":"https://avatars3.githubusercontent.com/u/1545118?v=4","gravatar_id":"","url":"https://api.github.com/users/hneuer","html_url":"https://github.com/hneuer","followers_url":"https://api.github.com/users/hneuer/followers","following_url":"https://api.github.com/users/hneuer/following{/other_user}","gists_url":"https://api.github.com/users/hneuer/gists{/gist_id}","starred_url":"https://api.github.com/users/hneuer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hneuer/subscriptions","organizations_url":"https://api.github.com/users/hneuer/orgs","repos_url":"https://api.github.com/users/hneuer/repos","events_url":"https://api.github.com/users/hneuer/events{/privacy}","received_events_url":"https://api.github.com/users/hneuer/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2014-01-12T09:03:26Z","updated_at":"2014-06-20T12:08:42Z","closed_at":"2014-01-18T16:30:45Z","author_association":"OWNER","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/1181","html_url":"https://github.com/libgdx/libgdx/pull/1181","diff_url":"https://github.com/libgdx/libgdx/pull/1181.diff","patch_url":"https://github.com/libgdx/libgdx/pull/1181.patch"},"body":"This way the GWT emu for ParticleEffect is no longer needed.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1181/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1180","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1180/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1180/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1180/events","html_url":"https://github.com/libgdx/libgdx/pull/1180","id":25451923,"number":1180,"title":"Android: Cleanup of touch input clearing and wakelocks","user":{"login":"johnnyapol","id":5902494,"avatar_url":"https://avatars1.githubusercontent.com/u/5902494?v=4","gravatar_id":"","url":"https://api.github.com/users/johnnyapol","html_url":"https://github.com/johnnyapol","followers_url":"https://api.github.com/users/johnnyapol/followers","following_url":"https://api.github.com/users/johnnyapol/following{/other_user}","gists_url":"https://api.github.com/users/johnnyapol/gists{/gist_id}","starred_url":"https://api.github.com/users/johnnyapol/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/johnnyapol/subscriptions","organizations_url":"https://api.github.com/users/johnnyapol/orgs","repos_url":"https://api.github.com/users/johnnyapol/repos","events_url":"https://api.github.com/users/johnnyapol/events{/privacy}","received_events_url":"https://api.github.com/users/johnnyapol/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2014-01-11T22:05:48Z","updated_at":"2014-01-13T23:21:38Z","closed_at":"2014-01-13T23:21:38Z","author_association":"OWNER","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/1180","html_url":"https://github.com/libgdx/libgdx/pull/1180","diff_url":"https://github.com/libgdx/libgdx/pull/1180.diff","patch_url":"https://github.com/libgdx/libgdx/pull/1180.patch"},"body":"- Removed unneeded variables\n- Made touch state and pointer id much nicer.\n- Very minor formatting\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1180/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1179","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1179/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1179/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1179/events","html_url":"https://github.com/libgdx/libgdx/pull/1179","id":25449793,"number":1179,"title":"ReflectionPool: Use ClassReflection","user":{"login":"hneuer","id":1545118,"avatar_url":"https://avatars3.githubusercontent.com/u/1545118?v=4","gravatar_id":"","url":"https://api.github.com/users/hneuer","html_url":"https://github.com/hneuer","followers_url":"https://api.github.com/users/hneuer/followers","following_url":"https://api.github.com/users/hneuer/following{/other_user}","gists_url":"https://api.github.com/users/hneuer/gists{/gist_id}","starred_url":"https://api.github.com/users/hneuer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hneuer/subscriptions","organizations_url":"https://api.github.com/users/hneuer/orgs","repos_url":"https://api.github.com/users/hneuer/repos","events_url":"https://api.github.com/users/hneuer/events{/privacy}","received_events_url":"https://api.github.com/users/hneuer/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-01-11T19:57:18Z","updated_at":"2014-06-20T12:08:43Z","closed_at":"2014-01-13T23:36:07Z","author_association":"OWNER","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/1179","html_url":"https://github.com/libgdx/libgdx/pull/1179","diff_url":"https://github.com/libgdx/libgdx/pull/1179.diff","patch_url":"https://github.com/libgdx/libgdx/pull/1179.patch"},"body":"so the ReflectionPool GWT emulation is no longer necessary.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1179/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1178","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1178/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1178/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1178/events","html_url":"https://github.com/libgdx/libgdx/pull/1178","id":25446825,"number":1178,"title":"Fix .gitignore and add gwt/war to setup extension so gdx-setup.jar no longer fails.","user":{"login":"coverslide","id":416432,"avatar_url":"https://avatars0.githubusercontent.com/u/416432?v=4","gravatar_id":"","url":"https://api.github.com/users/coverslide","html_url":"https://github.com/coverslide","followers_url":"https://api.github.com/users/coverslide/followers","following_url":"https://api.github.com/users/coverslide/following{/other_user}","gists_url":"https://api.github.com/users/coverslide/gists{/gist_id}","starred_url":"https://api.github.com/users/coverslide/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coverslide/subscriptions","organizations_url":"https://api.github.com/users/coverslide/orgs","repos_url":"https://api.github.com/users/coverslide/repos","events_url":"https://api.github.com/users/coverslide/events{/privacy}","received_events_url":"https://api.github.com/users/coverslide/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2014-01-11T17:08:18Z","updated_at":"2014-06-23T23:58:30Z","closed_at":"2014-01-14T00:15:44Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/1178","html_url":"https://github.com/libgdx/libgdx/pull/1178","diff_url":"https://github.com/libgdx/libgdx/pull/1178.diff","patch_url":"https://github.com/libgdx/libgdx/pull/1178.patch"},"body":"Right now in the nightlies, `gdx-setup.jar` is broken because of missing `war/*` files, which are ignored by `.gitignore` so they are never committed. Not sure what it was supposed to be, but this fixes that issue, plus it will build correctly and `gradle gwt:gwtDev` seems to work correctly as well.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1178/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1177","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1177/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1177/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1177/events","html_url":"https://github.com/libgdx/libgdx/pull/1177","id":25443228,"number":1177,"title":"GWT emu for BufferedInputStream does not implement 'available'","user":{"login":"hneuer","id":1545118,"avatar_url":"https://avatars3.githubusercontent.com/u/1545118?v=4","gravatar_id":"","url":"https://api.github.com/users/hneuer","html_url":"https://github.com/hneuer","followers_url":"https://api.github.com/users/hneuer/followers","following_url":"https://api.github.com/users/hneuer/following{/other_user}","gists_url":"https://api.github.com/users/hneuer/gists{/gist_id}","starred_url":"https://api.github.com/users/hneuer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hneuer/subscriptions","organizations_url":"https://api.github.com/users/hneuer/orgs","repos_url":"https://api.github.com/users/hneuer/repos","events_url":"https://api.github.com/users/hneuer/events{/privacy}","received_events_url":"https://api.github.com/users/hneuer/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2014-01-11T13:16:37Z","updated_at":"2014-06-20T12:08:44Z","closed_at":"2014-01-11T20:31:14Z","author_association":"OWNER","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/1177","html_url":"https://github.com/libgdx/libgdx/pull/1177","diff_url":"https://github.com/libgdx/libgdx/pull/1177.diff","patch_url":"https://github.com/libgdx/libgdx/pull/1177.patch"},"body":"Made BufferedInputStream a FilterInputStream for the emulation (as buffering makes no sense in the emulation) and changed FilterInputStream.available to call the underlying stream.\nThis could fix the Issue #1175\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1177/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1176","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1176/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1176/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1176/events","html_url":"https://github.com/libgdx/libgdx/issues/1176","id":25443085,"number":1176,"title":"Bug in BaseShader class - overflow","user":{"login":"ghost","id":10137,"avatar_url":"https://avatars3.githubusercontent.com/u/10137?v=4","gravatar_id":"","url":"https://api.github.com/users/ghost","html_url":"https://github.com/ghost","followers_url":"https://api.github.com/users/ghost/followers","following_url":"https://api.github.com/users/ghost/following{/other_user}","gists_url":"https://api.github.com/users/ghost/gists{/gist_id}","starred_url":"https://api.github.com/users/ghost/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ghost/subscriptions","organizations_url":"https://api.github.com/users/ghost/orgs","repos_url":"https://api.github.com/users/ghost/repos","events_url":"https://api.github.com/users/ghost/events{/privacy}","received_events_url":"https://api.github.com/users/ghost/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2014-01-11T13:06:55Z","updated_at":"2014-01-11T21:39:28Z","closed_at":"2014-01-11T21:39:28Z","author_association":"NONE","body":"BaseShader.java line 194 and line 221\n\nfor (final int i: globalUniforms.items)\nfor (final int i: localUniforms.items)\n\n\"items\" is raw int[] array backing the IntArray class - should never be iterated over with quick for loop syntax\n\nResulting loop iterates over array entries above IntArray.size which are zeros/uninitialised\n\nthis should be\n\nfor(int i=0; i<globalUniforms.size; i++) {\n    final int val = globalUniforms.get(i);\n    if (setters.get(val) != null)\n        setters.get(val).set(this, val, null, null);\n}\n\nnote to change instances of \"i\" to \"val\"\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1176/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1175","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1175/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1175/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1175/events","html_url":"https://github.com/libgdx/libgdx/issues/1175","id":25442703,"number":1175,"title":"G3db model loading doesn't work in GWT version of app","user":{"login":"vchamp","id":1887515,"avatar_url":"https://avatars0.githubusercontent.com/u/1887515?v=4","gravatar_id":"","url":"https://api.github.com/users/vchamp","html_url":"https://github.com/vchamp","followers_url":"https://api.github.com/users/vchamp/followers","following_url":"https://api.github.com/users/vchamp/following{/other_user}","gists_url":"https://api.github.com/users/vchamp/gists{/gist_id}","starred_url":"https://api.github.com/users/vchamp/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vchamp/subscriptions","organizations_url":"https://api.github.com/users/vchamp/orgs","repos_url":"https://api.github.com/users/vchamp/repos","events_url":"https://api.github.com/users/vchamp/events{/privacy}","received_events_url":"https://api.github.com/users/vchamp/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2014-01-11T12:34:04Z","updated_at":"2014-01-17T13:23:05Z","closed_at":"2014-01-17T13:23:05Z","author_association":"NONE","body":"The method UBJsonReader.parse(FileHandle) returns empty json.\n\nIt seems that this issue was introduced after this change\nhttps://github.com/libgdx/libgdx/commit/9150591f62576e18790027eef16396b646007fe2\n\nIf I revert to\njson = parse(file.read());\nthen g3db models load normally on the web page.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1175/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1174","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1174/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1174/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1174/events","html_url":"https://github.com/libgdx/libgdx/pull/1174","id":25440242,"number":1174,"title":"choose starting x,y, of lwjgl window","user":{"login":"jrenner","id":1393288,"avatar_url":"https://avatars1.githubusercontent.com/u/1393288?v=4","gravatar_id":"","url":"https://api.github.com/users/jrenner","html_url":"https://github.com/jrenner","followers_url":"https://api.github.com/users/jrenner/followers","following_url":"https://api.github.com/users/jrenner/following{/other_user}","gists_url":"https://api.github.com/users/jrenner/gists{/gist_id}","starred_url":"https://api.github.com/users/jrenner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jrenner/subscriptions","organizations_url":"https://api.github.com/users/jrenner/orgs","repos_url":"https://api.github.com/users/jrenner/repos","events_url":"https://api.github.com/users/jrenner/events{/privacy}","received_events_url":"https://api.github.com/users/jrenner/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-01-11T09:04:57Z","updated_at":"2014-01-12T03:56:46Z","closed_at":"2014-01-11T09:05:35Z","author_association":"OWNER","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/1174","html_url":"https://github.com/libgdx/libgdx/pull/1174","diff_url":"https://github.com/libgdx/libgdx/pull/1174.diff","patch_url":"https://github.com/libgdx/libgdx/pull/1174.patch"},"body":"Not terribly useful for end users, but when I do server/client testing I like to have their two windows side by side, and setting their start position in the cfg saves me lots of trouble.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1174/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1173","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1173/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1173/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1173/events","html_url":"https://github.com/libgdx/libgdx/issues/1173","id":25430680,"number":1173,"title":"Missing joint methods","user":{"login":"Phibedy","id":1841954,"avatar_url":"https://avatars1.githubusercontent.com/u/1841954?v=4","gravatar_id":"","url":"https://api.github.com/users/Phibedy","html_url":"https://github.com/Phibedy","followers_url":"https://api.github.com/users/Phibedy/followers","following_url":"https://api.github.com/users/Phibedy/following{/other_user}","gists_url":"https://api.github.com/users/Phibedy/gists{/gist_id}","starred_url":"https://api.github.com/users/Phibedy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Phibedy/subscriptions","organizations_url":"https://api.github.com/users/Phibedy/orgs","repos_url":"https://api.github.com/users/Phibedy/repos","events_url":"https://api.github.com/users/Phibedy/events{/privacy}","received_events_url":"https://api.github.com/users/Phibedy/received_events","type":"User","site_admin":false},"labels":[{"id":11336982,"url":"https://api.github.com/repos/libgdx/libgdx/labels/enhancement","name":"enhancement","color":"84b6eb","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2014-01-10T23:33:46Z","updated_at":"2014-03-20T23:30:41Z","closed_at":"2014-03-20T23:30:41Z","author_association":"CONTRIBUTOR","body":"I don't have time atm to get used to git and building libgdx hasn't worked that well (Of course I could do I pullrequest for every class, but that's quite messy and the changes would be untested). I already edited the classes (not the backend).\nAfter 22.02 I could try again, but if someone wants to do it, here are the missing methods :)\n\n```\n        gearJoint.getJoint1(); //missing\n        gearJoint.getJoint2(); //missing\n        prismaticJointDef.maxMotorForce = prismaticJoint.getMaxMotorForce(); //missing\n        prismaticJointDef.referenceAngle = prismaticJoint.getReferenceAngle(); //missing\n        pulleyJointDef.lengthA = pulleyJoint.getLength1();\n        pulleyJointDef.lengthB = pulleyJoint.getLength2(); //why 1 and 2?\n\n        ropeJointDef.localAnchorA.set(ropeJoint.getLocalAnchorA());//missing\n        ropeJointDef.localAnchorB.set(ropeJoint.getLocalAnchorB());//missing\n\n        weldJointDef.localAnchorA.set(weldJoint.getLocalAnchorA());//missing\n        weldJointDef.localAnchorB.set(weldJoint.getLocalAnchorB());//missing\n\n        wheelJointDef.enableMotor = wheelJoint.isMotorEnabled(); //missing\n        wheelJointDef.localAnchorA.set(wheelJoint.getLocalAnchorA());//missing\n        wheelJointDef.localAnchorB.set(wheelJoint.getLocalAnchorB());//missing\n        wheelJointDef.localAxisA.set(wheelJoint.getLocalAxisA());//missing\n        jointDef.collideConnected = joint.getCollideConnected(); //missing\n```\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1173/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1172","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1172/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1172/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1172/events","html_url":"https://github.com/libgdx/libgdx/pull/1172","id":25410276,"number":1172,"title":"Streamhandling in NetJavaImpl plus tests for POST","user":{"login":"hneuer","id":1545118,"avatar_url":"https://avatars3.githubusercontent.com/u/1545118?v=4","gravatar_id":"","url":"https://api.github.com/users/hneuer","html_url":"https://github.com/hneuer","followers_url":"https://api.github.com/users/hneuer/followers","following_url":"https://api.github.com/users/hneuer/following{/other_user}","gists_url":"https://api.github.com/users/hneuer/gists{/gist_id}","starred_url":"https://api.github.com/users/hneuer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hneuer/subscriptions","organizations_url":"https://api.github.com/users/hneuer/orgs","repos_url":"https://api.github.com/users/hneuer/repos","events_url":"https://api.github.com/users/hneuer/events{/privacy}","received_events_url":"https://api.github.com/users/hneuer/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2014-01-10T17:42:44Z","updated_at":"2014-06-20T12:08:44Z","closed_at":"2014-01-11T20:43:55Z","author_association":"OWNER","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/1172","html_url":"https://github.com/libgdx/libgdx/pull/1172","diff_url":"https://github.com/libgdx/libgdx/pull/1172.diff","patch_url":"https://github.com/libgdx/libgdx/pull/1172.patch"},"body":"This fixes some possibly unclosed streams (especially if an  error is returned in the http response) and adds tests for the error case and a POST request in NetAPITest.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1172/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1171","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1171/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1171/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1171/events","html_url":"https://github.com/libgdx/libgdx/issues/1171","id":25395136,"number":1171,"title":"Bug in nightly build of Bullet (ios)?","user":{"login":"leondenis85","id":6369142,"avatar_url":"https://avatars0.githubusercontent.com/u/6369142?v=4","gravatar_id":"","url":"https://api.github.com/users/leondenis85","html_url":"https://github.com/leondenis85","followers_url":"https://api.github.com/users/leondenis85/followers","following_url":"https://api.github.com/users/leondenis85/following{/other_user}","gists_url":"https://api.github.com/users/leondenis85/gists{/gist_id}","starred_url":"https://api.github.com/users/leondenis85/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leondenis85/subscriptions","organizations_url":"https://api.github.com/users/leondenis85/orgs","repos_url":"https://api.github.com/users/leondenis85/repos","events_url":"https://api.github.com/users/leondenis85/events{/privacy}","received_events_url":"https://api.github.com/users/leondenis85/received_events","type":"User","site_admin":false},"labels":[{"id":11336980,"url":"https://api.github.com/repos/libgdx/libgdx/labels/bug","name":"bug","color":"fc2929","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":19,"created_at":"2014-01-10T13:38:43Z","updated_at":"2014-03-30T18:56:27Z","closed_at":"2014-03-30T18:56:27Z","author_association":"NONE","body":"I'm currently using the latest nightlies of libgdx and the Bullet extension and have stumbled upon a relatively big issue when deploying my app on ios. For the most part, the Bullet extension seems to work fine. However, in my code my app crashes every time a Bullet-method is invoked that uses the Matrix4 class. For instance, when I call the method \"btRigidBody.getWorldTransform()\" the app crashes at exactly that point in the code (tested with System.out.println). Similarly, the methods\n- new btDefaultMotionState( some Matrix4 object ),\n- btPairCachingGhostObject.setWorldTransform( some Matrix4 object ),\n- btPairCachingGhostObject.getWorldTransform(),\n- btRigidBody.getWorldTransform(),\n- btPairCachingGhostObject.getWorldTransform( some Matrix4 object ),\n- btRigidBody.getWorldTransform( some Matrix4 object ),\n- ...,\n\nall seem to crash. HOWEVER, it appears that the crashes only happen on a REAL ios device. The methods run fine on desktop (mac/windows), android (tested on galaxy s2) and even on the ios device simulators. Unfortunately, they seem to crash on my ios test device, which is the old ipad mini (without retina screen, ios version 7.0.4). \n\nIn order to make sure that the crashes indeed appear to originate from the bullet extension, I have compiled and run KinematicTest.java. Again, it runs fine on the desktop, android devices and the ios device simulators, but crashes on my ipad mini. Can somebody please verify if KinematicTest.java is able to run successfully on a real ios device when using the latest nightlies? I would appreciate it a lot! \n\nOh yes, I'm using also using the latest Robovm plugin (v0.0.7)\n\nI've also posted this issue on the libgdx forum. http://www.badlogicgames.com/forum/viewtopic.php?f=11&t=12276\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1171/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1170","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1170/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1170/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1170/events","html_url":"https://github.com/libgdx/libgdx/issues/1170","id":25376763,"number":1170,"title":"Turn off logging in defaultShader?","user":{"login":"jrenner","id":1393288,"avatar_url":"https://avatars1.githubusercontent.com/u/1393288?v=4","gravatar_id":"","url":"https://api.github.com/users/jrenner","html_url":"https://github.com/jrenner","followers_url":"https://api.github.com/users/jrenner/followers","following_url":"https://api.github.com/users/jrenner/following{/other_user}","gists_url":"https://api.github.com/users/jrenner/gists{/gist_id}","starred_url":"https://api.github.com/users/jrenner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jrenner/subscriptions","organizations_url":"https://api.github.com/users/jrenner/orgs","repos_url":"https://api.github.com/users/jrenner/repos","events_url":"https://api.github.com/users/jrenner/events{/privacy}","received_events_url":"https://api.github.com/users/jrenner/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-01-10T06:00:51Z","updated_at":"2014-01-13T18:26:42Z","closed_at":"2014-01-13T18:26:42Z","author_association":"OWNER","body":"defaultShader currently logs using Gdx.app.log\n\nI find this somewhat annoying, can it be remove or made configurable?\n\nexample of output:\n\n```\nPrefix: \n#define positionFlag\n#define normalFlag\n#define lightingFlag\n#define ambientCubemapFlag\n#define numDirectionalLights 2\n#define numPointLights 5\n#define diffuseColorFlag\n#define specularColorFlag\n#define shininessFlag\n```\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1170/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1169","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1169/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1169/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1169/events","html_url":"https://github.com/libgdx/libgdx/pull/1169","id":25359104,"number":1169,"title":"Discourage the use of obj models","user":{"login":"xoppa","id":2349087,"avatar_url":"https://avatars3.githubusercontent.com/u/2349087?v=4","gravatar_id":"","url":"https://api.github.com/users/xoppa","html_url":"https://github.com/xoppa","followers_url":"https://api.github.com/users/xoppa/followers","following_url":"https://api.github.com/users/xoppa/following{/other_user}","gists_url":"https://api.github.com/users/xoppa/gists{/gist_id}","starred_url":"https://api.github.com/users/xoppa/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xoppa/subscriptions","organizations_url":"https://api.github.com/users/xoppa/orgs","repos_url":"https://api.github.com/users/xoppa/repos","events_url":"https://api.github.com/users/xoppa/events{/privacy}","received_events_url":"https://api.github.com/users/xoppa/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2014-01-09T21:56:30Z","updated_at":"2014-06-24T16:01:15Z","closed_at":"2014-01-09T22:03:15Z","author_association":"OWNER","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/1169","html_url":"https://github.com/libgdx/libgdx/pull/1169","diff_url":"https://github.com/libgdx/libgdx/pull/1169.diff","patch_url":"https://github.com/libgdx/libgdx/pull/1169.patch"},"body":"A long long time ago we [discussed](http://echelog.com/logs/browse/libgdx/1363993200) (around 19:28 for me) the meaning of ObjLoader. My opinion was that obj might be useful for beginners. And, for example, I do use it in the tutorials so it doesn't overwhelm by diving straight into fbx-conv. Moreover, obj is supported by virtually every modeling application and it is currently the only path not requiring a conversion.\n\nThat being said, it should be noted that ObjLoader is currently not fully implemented (specifically materials). The specification itself is really basic and doesn't implement all features the 3d api supports. Not all modeling applications implement the obj specification the same. And the dependency of an additional mtl file can be a bit cumbersome for some.\n\nUnfortunately it appears that quite a few are using obj files and (naturally) experiencing problems. So I thought it might be a good idea to do something about that. I see three options (all of which with (I think) obvious pros and cons):\n- Fully implement the OBJ specification\n- Completely remove OBJ support (out of the core)\n- Discourage the use of OBJ files\n\nThis PR tries to do the last option by logging an (optional) error every time a model is loaded. But other options/opinions are welcome.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1169/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1168","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1168/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1168/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1168/events","html_url":"https://github.com/libgdx/libgdx/issues/1168","id":25353374,"number":1168,"title":"datagramsocket support","user":{"login":"NimbusBP1729","id":2457956,"avatar_url":"https://avatars2.githubusercontent.com/u/2457956?v=4","gravatar_id":"","url":"https://api.github.com/users/NimbusBP1729","html_url":"https://github.com/NimbusBP1729","followers_url":"https://api.github.com/users/NimbusBP1729/followers","following_url":"https://api.github.com/users/NimbusBP1729/following{/other_user}","gists_url":"https://api.github.com/users/NimbusBP1729/gists{/gist_id}","starred_url":"https://api.github.com/users/NimbusBP1729/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NimbusBP1729/subscriptions","organizations_url":"https://api.github.com/users/NimbusBP1729/orgs","repos_url":"https://api.github.com/users/NimbusBP1729/repos","events_url":"https://api.github.com/users/NimbusBP1729/events{/privacy}","received_events_url":"https://api.github.com/users/NimbusBP1729/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-01-09T20:43:21Z","updated_at":"2014-01-10T13:58:40Z","closed_at":"2014-01-10T13:58:40Z","author_association":"CONTRIBUTOR","body":"this may be more of a question than an issue, but is there a viable alternative for datagram sockets in html that would still allow for relatively low-latency.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1168/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1167","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1167/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1167/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1167/events","html_url":"https://github.com/libgdx/libgdx/pull/1167","id":25325149,"number":1167,"title":"Add gwt support for the gradle cli setup","user":{"login":"Tom-Ski","id":4346114,"avatar_url":"https://avatars0.githubusercontent.com/u/4346114?v=4","gravatar_id":"","url":"https://api.github.com/users/Tom-Ski","html_url":"https://github.com/Tom-Ski","followers_url":"https://api.github.com/users/Tom-Ski/followers","following_url":"https://api.github.com/users/Tom-Ski/following{/other_user}","gists_url":"https://api.github.com/users/Tom-Ski/gists{/gist_id}","starred_url":"https://api.github.com/users/Tom-Ski/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Tom-Ski/subscriptions","organizations_url":"https://api.github.com/users/Tom-Ski/orgs","repos_url":"https://api.github.com/users/Tom-Ski/repos","events_url":"https://api.github.com/users/Tom-Ski/events{/privacy}","received_events_url":"https://api.github.com/users/Tom-Ski/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2014-01-09T15:04:30Z","updated_at":"2014-06-24T16:32:18Z","closed_at":"2014-01-09T23:48:03Z","author_association":"OWNER","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/1167","html_url":"https://github.com/libgdx/libgdx/pull/1167","diff_url":"https://github.com/libgdx/libgdx/pull/1167.diff","patch_url":"https://github.com/libgdx/libgdx/pull/1167.patch"},"body":"Out of the box gwt module.  \nSuper dev is configurable, using the gwt plugin. \n\n(Might be nice to have this as an option when choosing what extensions you want in the final system.)\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1167/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1166","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1166/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1166/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1166/events","html_url":"https://github.com/libgdx/libgdx/pull/1166","id":25315391,"number":1166,"title":"Headless (new backend, mocked)","user":{"login":"jrenner","id":1393288,"avatar_url":"https://avatars1.githubusercontent.com/u/1393288?v=4","gravatar_id":"","url":"https://api.github.com/users/jrenner","html_url":"https://github.com/jrenner","followers_url":"https://api.github.com/users/jrenner/followers","following_url":"https://api.github.com/users/jrenner/following{/other_user}","gists_url":"https://api.github.com/users/jrenner/gists{/gist_id}","starred_url":"https://api.github.com/users/jrenner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jrenner/subscriptions","organizations_url":"https://api.github.com/users/jrenner/orgs","repos_url":"https://api.github.com/users/jrenner/repos","events_url":"https://api.github.com/users/jrenner/events{/privacy}","received_events_url":"https://api.github.com/users/jrenner/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":11,"created_at":"2014-01-09T12:27:19Z","updated_at":"2014-06-25T06:52:45Z","closed_at":"2014-01-24T15:37:59Z","author_association":"OWNER","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/1166","html_url":"https://github.com/libgdx/libgdx/pull/1166","diff_url":"https://github.com/libgdx/libgdx/pull/1166.diff","patch_url":"https://github.com/libgdx/libgdx/pull/1166.patch"},"body":"This is the headless desktop app configured as it's own backend, independent from Lwjgl.  Some of the code, like for files and net, is copied also exactly from Lwjgl.  This violates DRY but this code is not likely to be changed often, so I think it is OK.  Elements such as graphics, audio and input are mocked as much as possible so that libgdx apps designed without headless in Mind will work as headless apps with minimal reconfiguration.\n\nAlthough this PR is in response to Issue #1164, it also has the benefit of cutting down the backend filesize. gdx-backend-headless.jar is only 26KB compared to lwjgl's 1.3MB.\n\nI don't consider this ready to merge just yet, I think since it is a new backend it should have some good solid code review.  My only concern when creating this PR was what to return on some methods that return objects.  I tried to avoid returning null where possible, but in some cases it seemed like the best thing to do.\n\nTODO:\n1. remove HeadlessTest from lwjgl tests\n2. maybe create headless test branch? I can think of at least one test in lwjgl tests that would be better as a headless test as well (Select test).  I don't know much about how tests are architectured.  I don't work with Eclipse much so if this needs to be done I might need help with it.\n3. remove LwjglHeadlessApplication\n4. update CHANGES\n\nP.S. This backend is Nate-proof, there is no audio to disable in the first place.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1166/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1165","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1165/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1165/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1165/events","html_url":"https://github.com/libgdx/libgdx/issues/1165","id":25300779,"number":1165,"title":"Applet Native Loader Regression Bug","user":{"login":"ahii","id":6356943,"avatar_url":"https://avatars2.githubusercontent.com/u/6356943?v=4","gravatar_id":"","url":"https://api.github.com/users/ahii","html_url":"https://github.com/ahii","followers_url":"https://api.github.com/users/ahii/followers","following_url":"https://api.github.com/users/ahii/following{/other_user}","gists_url":"https://api.github.com/users/ahii/gists{/gist_id}","starred_url":"https://api.github.com/users/ahii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahii/subscriptions","organizations_url":"https://api.github.com/users/ahii/orgs","repos_url":"https://api.github.com/users/ahii/repos","events_url":"https://api.github.com/users/ahii/events{/privacy}","received_events_url":"https://api.github.com/users/ahii/received_events","type":"User","site_admin":false},"labels":[{"id":11336980,"url":"https://api.github.com/repos/libgdx/libgdx/labels/bug","name":"bug","color":"fc2929","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2014-01-09T07:33:18Z","updated_at":"2014-05-10T15:41:34Z","closed_at":"2014-05-10T15:41:34Z","author_association":"NONE","body":"Please see the bug on google code for the progression of this bug (which is a regression that happened two times already):\n\nhttps://code.google.com/p/libgdx/issues/detail?id=1341\n\nThis is an example copy/paste from the JAVA CONSOLE (recall, this is an applet, not a standalone application):\n\nCouldn't load shared library 'gdx.dll' for target: Windows 7, 32-bit\ncom.badlogic.gdx.utils.GdxRuntimeException: Couldn't load shared library 'gdx.dll' for target: Windows 7, 32-bit\n    at com.badlogic.gdx.utils.SharedLibraryLoader.load(SharedLibraryLoader.java:110)\n    at com.badlogic.gdx.utils.GdxNativesLoader.load(GdxNativesLoader.java:34)\n    at com.badlogic.gdx.backends.lwjgl.LwjglNativesLoader.load(LwjglNativesLoader.java:46)\n    at com.badlogic.gdx.backends.lwjgl.LwjglApplication.<init>(LwjglApplication.java:76)\n    at com.badlogic.gdx.backends.lwjgl.LwjglApplication.<init>(LwjglApplication.java:72)\n    at com.badlogic.gdx.backends.lwjgl.LwjglApplet$LwjglAppletApplication.<init>(LwjglApplet.java:38)\n    at com.badlogic.gdx.backends.lwjgl.LwjglApplet$1.addNotify(LwjglApplet.java:52)\n    at java.awt.Container.addNotify(Unknown Source)\n    at java.awt.Panel.addNotify(Unknown Source)\n    at java.awt.Container.addImpl(Unknown Source)\n    at java.awt.Container.add(Unknown Source)\n    at org.lwjgl.util.applet.AppletLoader.switchApplet(AppletLoader.java:1326)\n    at org.lwjgl.util.applet.AppletLoader$2.run(AppletLoader.java:909)\n    at java.awt.event.InvocationEvent.dispatch(Unknown Source)\n    at java.awt.EventQueue.dispatchEventImpl(Unknown Source)\n    at java.awt.EventQueue.access$200(Unknown Source)\n    at java.awt.EventQueue$3.run(Unknown Source)\n    at java.awt.EventQueue$3.run(Unknown Source)\n    at java.security.AccessController.doPrivileged(Native Method)\n    at java.security.ProtectionDomain$1.doIntersectionPrivilege(Unknown Source)\n    at java.awt.EventQueue.dispatchEvent(Unknown Source)\n    at java.awt.EventDispatchThread.pumpOneEventForFilters(Unknown Source)\n    at java.awt.EventDispatchThread.pumpEventsForFilter(Unknown Source)\n    at java.awt.EventDispatchThread.pumpEventsForHierarchy(Unknown Source)\n    at java.awt.EventDispatchThread.pumpEvents(Unknown Source)\n    at java.awt.EventDispatchThread.pumpEvents(Unknown Source)\n    at java.awt.EventDispatchThread.run(Unknown Source)\nCaused by: com.badlogic.gdx.utils.GdxRuntimeException: Unable to read file for extraction: gdx.dll\n    at com.badlogic.gdx.utils.SharedLibraryLoader.readFile(SharedLibraryLoader.java:119)\n    at com.badlogic.gdx.utils.SharedLibraryLoader.loadFile(SharedLibraryLoader.java:231)\n    at com.badlogic.gdx.utils.SharedLibraryLoader.load(SharedLibraryLoader.java:108)\n    ... 26 more\n\nI verified that it's not an OS issue. I get similar stack traces for Mac OS X 10.8 (Java 1.6 - long story), and Ubuntu 12.04 (Java 1.7, and Java 1.6).\n\nThe bug is _not present_ in the nightly from 20130703. I just verified this by syncing to the git repository as available on that day, and rebuilding GDX.\n\nThe current RELEASE has this issue, and so does the code currently checked in the repository (verified today).\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1165/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1164","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1164/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1164/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1164/events","html_url":"https://github.com/libgdx/libgdx/issues/1164","id":25237863,"number":1164,"title":"mocked HeadlessApplication","user":{"login":"NimbusBP1729","id":2457956,"avatar_url":"https://avatars2.githubusercontent.com/u/2457956?v=4","gravatar_id":"","url":"https://api.github.com/users/NimbusBP1729","html_url":"https://github.com/NimbusBP1729","followers_url":"https://api.github.com/users/NimbusBP1729/followers","following_url":"https://api.github.com/users/NimbusBP1729/following{/other_user}","gists_url":"https://api.github.com/users/NimbusBP1729/gists{/gist_id}","starred_url":"https://api.github.com/users/NimbusBP1729/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NimbusBP1729/subscriptions","organizations_url":"https://api.github.com/users/NimbusBP1729/orgs","repos_url":"https://api.github.com/users/NimbusBP1729/repos","events_url":"https://api.github.com/users/NimbusBP1729/events{/privacy}","received_events_url":"https://api.github.com/users/NimbusBP1729/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2014-01-08T13:04:47Z","updated_at":"2014-02-04T18:11:29Z","closed_at":"2014-01-30T15:08:14Z","author_association":"CONTRIBUTOR","body":"I was talking with @MobiDevelop earlier and he almost convinced me that the Gdx statics like audio and graphics don't need to be mocked, but nulled in a headless application.\n\nThis has the downside of making it more difficult to easily port an existing project to a headless one. I also noticed that it make it impractical to use the TmxMapLoader server-side (which I will need to do).\n\nSubclassing the existing HeadlessApplication isn't useful because the statics have to be set before the constructor is called.\n\nThis is only one additional dependency and I'd be cool with making the interface and helping out with the mavenization, but I know this is something that had recently been worked on, so I'd be thankful for feedback.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1164/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1163","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1163/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1163/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1163/events","html_url":"https://github.com/libgdx/libgdx/pull/1163","id":25227012,"number":1163,"title":"Add static float value of e to 7dp","user":{"login":"Tom-Ski","id":4346114,"avatar_url":"https://avatars0.githubusercontent.com/u/4346114?v=4","gravatar_id":"","url":"https://api.github.com/users/Tom-Ski","html_url":"https://github.com/Tom-Ski","followers_url":"https://api.github.com/users/Tom-Ski/followers","following_url":"https://api.github.com/users/Tom-Ski/following{/other_user}","gists_url":"https://api.github.com/users/Tom-Ski/gists{/gist_id}","starred_url":"https://api.github.com/users/Tom-Ski/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Tom-Ski/subscriptions","organizations_url":"https://api.github.com/users/Tom-Ski/orgs","repos_url":"https://api.github.com/users/Tom-Ski/repos","events_url":"https://api.github.com/users/Tom-Ski/events{/privacy}","received_events_url":"https://api.github.com/users/Tom-Ski/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2014-01-08T09:17:02Z","updated_at":"2014-06-20T12:01:55Z","closed_at":"2014-01-08T10:53:01Z","author_association":"OWNER","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/1163","html_url":"https://github.com/libgdx/libgdx/pull/1163","diff_url":"https://github.com/libgdx/libgdx/pull/1163.diff","patch_url":"https://github.com/libgdx/libgdx/pull/1163.patch"},"body":"","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1163/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1162","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1162/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1162/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1162/events","html_url":"https://github.com/libgdx/libgdx/pull/1162","id":25202915,"number":1162,"title":"Added CONTRIBUTING.md","user":{"login":"Vazkii","id":1794735,"avatar_url":"https://avatars3.githubusercontent.com/u/1794735?v=4","gravatar_id":"","url":"https://api.github.com/users/Vazkii","html_url":"https://github.com/Vazkii","followers_url":"https://api.github.com/users/Vazkii/followers","following_url":"https://api.github.com/users/Vazkii/following{/other_user}","gists_url":"https://api.github.com/users/Vazkii/gists{/gist_id}","starred_url":"https://api.github.com/users/Vazkii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Vazkii/subscriptions","organizations_url":"https://api.github.com/users/Vazkii/orgs","repos_url":"https://api.github.com/users/Vazkii/repos","events_url":"https://api.github.com/users/Vazkii/events{/privacy}","received_events_url":"https://api.github.com/users/Vazkii/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2014-01-07T22:39:58Z","updated_at":"2014-07-03T20:06:18Z","closed_at":"2014-01-07T22:41:21Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/1162","html_url":"https://github.com/libgdx/libgdx/pull/1162","diff_url":"https://github.com/libgdx/libgdx/pull/1162.diff","patch_url":"https://github.com/libgdx/libgdx/pull/1162.patch"},"body":"Added a CONTRIBUTING.md file to the root of the repository. It's contents are a copy of the Contributing page on the Wiki.  \n\nWhen someone is in the process of opening an issue they'd see the following:\n![](http://puu.sh/6daDy.png)\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1162/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1161","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1161/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1161/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1161/events","html_url":"https://github.com/libgdx/libgdx/pull/1161","id":25200722,"number":1161,"title":"Fixes in IOSGraphics, + formatting","user":{"login":"johnnyapol","id":5902494,"avatar_url":"https://avatars1.githubusercontent.com/u/5902494?v=4","gravatar_id":"","url":"https://api.github.com/users/johnnyapol","html_url":"https://github.com/johnnyapol","followers_url":"https://api.github.com/users/johnnyapol/followers","following_url":"https://api.github.com/users/johnnyapol/following{/other_user}","gists_url":"https://api.github.com/users/johnnyapol/gists{/gist_id}","starred_url":"https://api.github.com/users/johnnyapol/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/johnnyapol/subscriptions","organizations_url":"https://api.github.com/users/johnnyapol/orgs","repos_url":"https://api.github.com/users/johnnyapol/repos","events_url":"https://api.github.com/users/johnnyapol/events{/privacy}","received_events_url":"https://api.github.com/users/johnnyapol/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2014-01-07T22:02:39Z","updated_at":"2014-08-03T15:18:06Z","closed_at":"2014-01-08T15:55:30Z","author_association":"OWNER","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/1161","html_url":"https://github.com/libgdx/libgdx/pull/1161","diff_url":"https://github.com/libgdx/libgdx/pull/1161.diff","patch_url":"https://github.com/libgdx/libgdx/pull/1161.patch"},"body":"Most of the changes are formatting.\n\nChanges:\n- Removed wasPaused, added sanity checks using the paused variable instead.\n- Fix for double resume call \n- Fix for the resume before create call #1159\n\nPlease test this as I cannot test this atm. I just made sure it wouldn't cause errors, but there shouldn't be breakages. \n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1161/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1160","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1160/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1160/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1160/events","html_url":"https://github.com/libgdx/libgdx/issues/1160","id":25198873,"number":1160,"title":"Add AtlasRegionDrawable to libgdx","user":{"login":"desertkun","id":1666014,"avatar_url":"https://avatars0.githubusercontent.com/u/1666014?v=4","gravatar_id":"","url":"https://api.github.com/users/desertkun","html_url":"https://github.com/desertkun","followers_url":"https://api.github.com/users/desertkun/followers","following_url":"https://api.github.com/users/desertkun/following{/other_user}","gists_url":"https://api.github.com/users/desertkun/gists{/gist_id}","starred_url":"https://api.github.com/users/desertkun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/desertkun/subscriptions","organizations_url":"https://api.github.com/users/desertkun/orgs","repos_url":"https://api.github.com/users/desertkun/repos","events_url":"https://api.github.com/users/desertkun/events{/privacy}","received_events_url":"https://api.github.com/users/desertkun/received_events","type":"User","site_admin":false},"labels":[{"id":11336982,"url":"https://api.github.com/repos/libgdx/libgdx/labels/enhancement","name":"enhancement","color":"84b6eb","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2014-01-07T21:35:14Z","updated_at":"2014-02-11T23:04:44Z","closed_at":"2014-02-11T23:00:11Z","author_association":"NONE","body":"Hello,\n\nI use `TexturePacker2` to pack textures into one atlas. \n\nIt supports `stripWhitespaceX` and `stripWhitespaceY` options to strip whitespace at borders of every image. But i've noticed that if I render `TextureRegion`'s with these options — the regions size is corrupted. \n\nThere is an example what I am talking about: \n![atlasregiondrawable](https://f.cloud.github.com/assets/1666014/1863407/2b270e56-77e2-11e3-854e-96aaa870f05c.png)\nOriginal image (a), packed (b) and currupted render (c)\n\nSo, i decided to [dig deeper](https://github.com/libgdx/libgdx/wiki/Texture-packer#settings), and I've noticed that there are no support for drawing `Atlas$AtlasRegion`'s additinal data for that (`OffsetX`, `OffsetY`, `OriginalWidth` etc) correctly (if I am right).\n\nSo, I wrote it by myself, and glad to contribute it to Community, if it is possible.\n\n``` java\npackage com.badlogic.gdx.scenes.scene2d.utils;\n\n\nimport com.badlogic.gdx.graphics.g2d.SpriteBatch;\nimport com.badlogic.gdx.graphics.g2d.TextureAtlas;\nimport com.badlogic.gdx.graphics.g2d.TextureRegion;\nimport com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable;\n\npublic class AtlasRegionDrawable extends BaseDrawable\n{\n    private TextureAtlas.AtlasRegion region;\n    private float coefWidth;\n    private float coefHeight;\n    private float coefX;\n    private float coefY;\n\n    public AtlasRegionDrawable () {\n    }\n\n    public AtlasRegionDrawable (TextureAtlas.AtlasRegion region) {\n        setRegion(region);\n    }\n\n    public AtlasRegionDrawable (AtlasRegionDrawable drawable) {\n        super(drawable);\n        setRegion(drawable.region);\n    }\n\n    @Override\n    public void draw (SpriteBatch batch, float x, float y, float width, float height) {\n        batch.draw(region,\n                x + coefX * (width - width * coefWidth),\n                y + coefY * (height - height * coefHeight),\n                width * coefWidth,\n                height * coefHeight);\n    }\n\n    public void draw (SpriteBatch batch, float x, float y,\n        float originX, float originY, float width, float height,\n        float scaleX, float scaleY, float rotation) {\n\n        batch.draw(region,\n                x + coefX * (width - width * coefWidth),\n                y + coefY * (height - height * coefHeight),\n\n                originX - coefX * (width - width * coefWidth),\n                originY - coefY * (height - height * coefHeight),\n\n                width * coefWidth,\n                height * coefHeight,\n                scaleX, scaleY, rotation);\n    }\n\n    public void setRegion (TextureAtlas.AtlasRegion region) {\n\n        this.region = region;\n\n        if (region.originalWidth == region.packedWidth && region.originalHeight == region.packedHeight)\n        {\n            this.coefX = 0;\n            this.coefY = 0;\n            this.coefWidth = 1;\n            this.coefHeight = 1;\n        }\n        else\n        {\n            this.coefWidth = (float)region.packedWidth / (float)region.originalWidth;\n            this.coefHeight = (float)region.packedHeight / (float)region.originalHeight;\n            this.coefX = region.offsetX / (float)(region.originalWidth - region.packedWidth);\n            this.coefY = region.offsetY / (float)(region.originalHeight - region.packedHeight);\n        }\n\n        setMinWidth(region.originalWidth);\n        setMinHeight(region.originalHeight);\n    }\n\n    public TextureRegion getRegion () {\n        return region;\n    }\n}\n```\n\nI've used it in `Image` for the first time, and i've noticed that `Image` dont supports `Atlas$AtlasRegion` too. There is modification for it (i've created inherited class `AtlasImage`, but this code could be easly inserted into original `Image`) that renders `AtlasRegionDrawable` correctly:\n\n``` java\n    @Override\n    public void draw(SpriteBatch batch, float parentAlpha)\n    {\n        validate();\n\n        Color color = getColor();\n        batch.setColor(color.r, color.g, color.b, color.a * parentAlpha);\n\n        Drawable drawable = getDrawable();\n        if (drawable != null) {\n            if (drawable instanceof AtlasRegionDrawable) {\n                AtlasRegionDrawable region = (AtlasRegionDrawable)drawable;\n\n                float rotation = getRotation();\n                if (getScaleX() == 1 && getScaleY() == 1 && rotation == 0)\n                {\n                    region.draw(batch,\n                            getX() + getImageX(), getY() + getImageY(),\n                            getImageWidth(), getImageHeight());\n\n                    return;\n                }\n                else\n                {\n                    region.draw(batch,\n                            getX() + getImageX(), getY() + getImageY(),\n                            getOriginX() - getImageX(), getOriginY() - getImageY(),\n                            getImageWidth(), getImageHeight(),\n                            getScaleX(), getScaleY(), rotation);\n\n                    return;\n                }\n            }\n        }\n\n        super.draw(batch, parentAlpha);\n    }\n```\n\n(`draw` method only)\n\nThank you for attention.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1160/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1159","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1159/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1159/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1159/events","html_url":"https://github.com/libgdx/libgdx/issues/1159","id":25192221,"number":1159,"title":"ApplicationListener#resume() called before ApplicationListener#create()","user":{"login":"troger","id":116786,"avatar_url":"https://avatars2.githubusercontent.com/u/116786?v=4","gravatar_id":"","url":"https://api.github.com/users/troger","html_url":"https://github.com/troger","followers_url":"https://api.github.com/users/troger/followers","following_url":"https://api.github.com/users/troger/following{/other_user}","gists_url":"https://api.github.com/users/troger/gists{/gist_id}","starred_url":"https://api.github.com/users/troger/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/troger/subscriptions","organizations_url":"https://api.github.com/users/troger/orgs","repos_url":"https://api.github.com/users/troger/repos","events_url":"https://api.github.com/users/troger/events{/privacy}","received_events_url":"https://api.github.com/users/troger/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2014-01-07T19:52:50Z","updated_at":"2014-01-09T10:40:19Z","closed_at":"2014-01-09T10:40:19Z","author_association":"NONE","body":"Since #1143, the `ApplicationListener#resume()` method is called before `ApplicationListener#create()` on the robovm backend when starting a game.\n\nSome logs showing the issue:\n\n```\n[debug] IOSApplication: View: LandscapeRight 568x320\n[debug] IOSGraphics: 568.0x320.0, 2.0\n[debug] IOSGraphics: Calculating density, UIScreen.mainScreen.scale: 2.0\n[debug] IOSGraphics: Display: ppi=326, density=2.0\n[debug] IOSApplication: created\n[debug] IOSApplication: resumed\n[info] : Calling resume()\n[info] : Calling create()\n```\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1159/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1158","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1158/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1158/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1158/events","html_url":"https://github.com/libgdx/libgdx/issues/1158","id":25173177,"number":1158,"title":"Gdx.input.setCursorCatched doesn't keep cursor in window","user":{"login":"jrenner","id":1393288,"avatar_url":"https://avatars1.githubusercontent.com/u/1393288?v=4","gravatar_id":"","url":"https://api.github.com/users/jrenner","html_url":"https://github.com/jrenner","followers_url":"https://api.github.com/users/jrenner/followers","following_url":"https://api.github.com/users/jrenner/following{/other_user}","gists_url":"https://api.github.com/users/jrenner/gists{/gist_id}","starred_url":"https://api.github.com/users/jrenner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jrenner/subscriptions","organizations_url":"https://api.github.com/users/jrenner/orgs","repos_url":"https://api.github.com/users/jrenner/repos","events_url":"https://api.github.com/users/jrenner/events{/privacy}","received_events_url":"https://api.github.com/users/jrenner/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2014-01-07T15:14:00Z","updated_at":"2014-01-08T06:50:34Z","closed_at":"2014-01-08T06:50:34Z","author_association":"OWNER","body":"Can someone else verify this is not working?\nI am on Linux/openbox and have a feeling it could be specific to this config\n\nThe cursor is hidden but can still move out of window stopping mouse input for the game\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1158/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1157","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1157/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1157/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1157/events","html_url":"https://github.com/libgdx/libgdx/pull/1157","id":25107268,"number":1157,"title":"Making colors public","user":{"login":"dario111cro","id":1379734,"avatar_url":"https://avatars2.githubusercontent.com/u/1379734?v=4","gravatar_id":"","url":"https://api.github.com/users/dario111cro","html_url":"https://github.com/dario111cro","followers_url":"https://api.github.com/users/dario111cro/followers","following_url":"https://api.github.com/users/dario111cro/following{/other_user}","gists_url":"https://api.github.com/users/dario111cro/gists{/gist_id}","starred_url":"https://api.github.com/users/dario111cro/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dario111cro/subscriptions","organizations_url":"https://api.github.com/users/dario111cro/orgs","repos_url":"https://api.github.com/users/dario111cro/repos","events_url":"https://api.github.com/users/dario111cro/events{/privacy}","received_events_url":"https://api.github.com/users/dario111cro/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-01-06T15:19:05Z","updated_at":"2014-01-06T15:20:04Z","closed_at":"2014-01-06T15:20:04Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/1157","html_url":"https://github.com/libgdx/libgdx/pull/1157","diff_url":"https://github.com/libgdx/libgdx/pull/1157.diff","patch_url":"https://github.com/libgdx/libgdx/pull/1157.patch"},"body":"Making debugging more beautiful.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1157/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1156","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1156/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1156/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1156/events","html_url":"https://github.com/libgdx/libgdx/issues/1156","id":25098016,"number":1156,"title":"JavaDoc: ModelBuilder does not support multiple parts at the same time","user":{"login":"Kernle32DLL","id":1338408,"avatar_url":"https://avatars2.githubusercontent.com/u/1338408?v=4","gravatar_id":"","url":"https://api.github.com/users/Kernle32DLL","html_url":"https://github.com/Kernle32DLL","followers_url":"https://api.github.com/users/Kernle32DLL/followers","following_url":"https://api.github.com/users/Kernle32DLL/following{/other_user}","gists_url":"https://api.github.com/users/Kernle32DLL/gists{/gist_id}","starred_url":"https://api.github.com/users/Kernle32DLL/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Kernle32DLL/subscriptions","organizations_url":"https://api.github.com/users/Kernle32DLL/orgs","repos_url":"https://api.github.com/users/Kernle32DLL/repos","events_url":"https://api.github.com/users/Kernle32DLL/events{/privacy}","received_events_url":"https://api.github.com/users/Kernle32DLL/received_events","type":"User","site_admin":false},"labels":[{"id":11336982,"url":"https://api.github.com/repos/libgdx/libgdx/labels/enhancement","name":"enhancement","color":"84b6eb","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-01-06T11:57:00Z","updated_at":"2014-02-11T22:00:25Z","closed_at":"2014-02-11T22:00:25Z","author_association":"NONE","body":"It should be documented, that a ModelBuilder can not work with multiple MeshPartBuilder at the same time. e.g. modelBuilder.part() does not return a new object, but tries to reuse objects in the background.\n\nThis should be properly documented, for example with sentences like \"Using multiple instances at the same time is not possible\". Something like that...\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1156/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}}],"meta":{"x-ratelimit-limit":"5000","x-ratelimit-remaining":"4873","x-ratelimit-reset":"1506844633","x-github-request-id":"87D0:110B:10E6DB6:3D41550:59D09747","x-github-media-type":"github.squirrel-girl-preview","link":"<https://api.github.com/repositories/5373551/issues?state=all&page=126>; rel=\"next\", <https://api.github.com/repositories/5373551/issues?state=all&page=164>; rel=\"last\", <https://api.github.com/repositories/5373551/issues?state=all&page=1>; rel=\"first\", <https://api.github.com/repositories/5373551/issues?state=all&page=124>; rel=\"prev\"","etag":"\"4ae38c9ebddc5aa4235354bada2c4967\"","status":"200 OK"}}
