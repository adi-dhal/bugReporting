{"data":[{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2895","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2895/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2895/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2895/events","html_url":"https://github.com/libgdx/libgdx/pull/2895","id":59583285,"number":2895,"title":"Fix TimSort runLength","user":{"login":"cdomville","id":1194767,"avatar_url":"https://avatars3.githubusercontent.com/u/1194767?v=4","gravatar_id":"","url":"https://api.github.com/users/cdomville","html_url":"https://github.com/cdomville","followers_url":"https://api.github.com/users/cdomville/followers","following_url":"https://api.github.com/users/cdomville/following{/other_user}","gists_url":"https://api.github.com/users/cdomville/gists{/gist_id}","starred_url":"https://api.github.com/users/cdomville/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cdomville/subscriptions","organizations_url":"https://api.github.com/users/cdomville/orgs","repos_url":"https://api.github.com/users/cdomville/repos","events_url":"https://api.github.com/users/cdomville/events{/privacy}","received_events_url":"https://api.github.com/users/cdomville/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2015-03-03T01:52:20Z","updated_at":"2015-03-03T11:40:04Z","closed_at":"2015-03-03T02:32:14Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2895","html_url":"https://github.com/libgdx/libgdx/pull/2895","diff_url":"https://github.com/libgdx/libgdx/pull/2895.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2895.patch"},"body":"This pull request adds an additional check to search the invariant for the last 4 runs in the\nrunLength array to shore up an invariant that was not true for sufficiently large array sizes.\n\nRefer to #2877 to get the gist of the reasoning behind the change. The source used to derive the implementation uses an Apache 2 licence for the test suite (see https://github.com/abstools/java-timsort-bug/blob/master/LICENSE), so, from what I can see, the proposed fix is also licensed in the same manner by the same party (due to the different places this invariant would need to be fixed to be universal, such as AOSP).\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2895/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2894","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2894/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2894/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2894/events","html_url":"https://github.com/libgdx/libgdx/issues/2894","id":59575102,"number":2894,"title":"[Feature request] Add Android Wear projects to gdx-setup.jar","user":{"login":"ammobyte","id":7770718,"avatar_url":"https://avatars2.githubusercontent.com/u/7770718?v=4","gravatar_id":"","url":"https://api.github.com/users/ammobyte","html_url":"https://github.com/ammobyte","followers_url":"https://api.github.com/users/ammobyte/followers","following_url":"https://api.github.com/users/ammobyte/following{/other_user}","gists_url":"https://api.github.com/users/ammobyte/gists{/gist_id}","starred_url":"https://api.github.com/users/ammobyte/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ammobyte/subscriptions","organizations_url":"https://api.github.com/users/ammobyte/orgs","repos_url":"https://api.github.com/users/ammobyte/repos","events_url":"https://api.github.com/users/ammobyte/events{/privacy}","received_events_url":"https://api.github.com/users/ammobyte/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2015-03-03T00:14:45Z","updated_at":"2015-03-04T11:53:16Z","closed_at":"2015-03-04T11:53:16Z","author_association":"NONE","body":"Generating project from gdx-setup.jar would provide build for wear alongside \"android\", \"desktop\", \"ios\", \"html\", etc.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2894/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2893","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2893/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2893/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2893/events","html_url":"https://github.com/libgdx/libgdx/issues/2893","id":59457651,"number":2893,"title":"ParticleEffect.scaleEffect(float scaleFactor) causes pooled FX to not reset() correctly","user":{"login":"just4phil","id":2955658,"avatar_url":"https://avatars3.githubusercontent.com/u/2955658?v=4","gravatar_id":"","url":"https://api.github.com/users/just4phil","html_url":"https://github.com/just4phil","followers_url":"https://api.github.com/users/just4phil/followers","following_url":"https://api.github.com/users/just4phil/following{/other_user}","gists_url":"https://api.github.com/users/just4phil/gists{/gist_id}","starred_url":"https://api.github.com/users/just4phil/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/just4phil/subscriptions","organizations_url":"https://api.github.com/users/just4phil/orgs","repos_url":"https://api.github.com/users/just4phil/repos","events_url":"https://api.github.com/users/just4phil/events{/privacy}","received_events_url":"https://api.github.com/users/just4phil/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2015-03-02T09:36:19Z","updated_at":"2017-06-25T13:52:13Z","closed_at":"2017-06-25T13:52:13Z","author_association":"NONE","body":"Hi.\ni have constant issues with pooled particleEffects / emitters.\n\nafter some investigation i found out that ParticleEffect.scaleEffect(float scaleFactor) causes pooled FX to not reset() correctly.\n\nhere is a libgdx-barebone-desktop-app to test it:\nhttp://pastebin.com/wmMBiiTv\n\nhere are the .png and .p files. put them in assets into a subdirectory \"particleFX\" \nhttps://www.dropbox.com/sh/o014eeg53y6cymn/AACJFE-wwFhQ_hgiowqNsrtea?dl=0\n(not sure if this works)\n\nalternative:\nthis is the .p file. (name it \"test_explosion.p\" and put it into assets/particleFX/\nhttp://pastebin.com/826YZQnm\n\nput the standard particleImage \"particleExhaust.png\" there, too.\n\napp:\npress SPACE\nand activate / deactivate the line with setScale...\n\nbye\nphil\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2893/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2892","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2892/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2892/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2892/events","html_url":"https://github.com/libgdx/libgdx/pull/2892","id":59457159,"number":2892,"title":"Remove of static temporaries in math classes","user":{"login":"code-disaster","id":4644167,"avatar_url":"https://avatars1.githubusercontent.com/u/4644167?v=4","gravatar_id":"","url":"https://api.github.com/users/code-disaster","html_url":"https://github.com/code-disaster","followers_url":"https://api.github.com/users/code-disaster/followers","following_url":"https://api.github.com/users/code-disaster/following{/other_user}","gists_url":"https://api.github.com/users/code-disaster/gists{/gist_id}","starred_url":"https://api.github.com/users/code-disaster/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/code-disaster/subscriptions","organizations_url":"https://api.github.com/users/code-disaster/orgs","repos_url":"https://api.github.com/users/code-disaster/repos","events_url":"https://api.github.com/users/code-disaster/events{/privacy}","received_events_url":"https://api.github.com/users/code-disaster/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2015-03-02T09:32:45Z","updated_at":"2016-01-15T16:33:02Z","closed_at":"2016-01-15T16:33:02Z","author_association":"MEMBER","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2892","html_url":"https://github.com/libgdx/libgdx/pull/2892","diff_url":"https://github.com/libgdx/libgdx/pull/2892.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2892.patch"},"body":"With this PR I want to revive an issue previously discussed in e.g. #846. It's one step towards thread safety in the math classes.\n\nThere are still some static temporaries left: Vector3.tmpMat and Matrix4.quat/quat2. The long-lived deprecated Matrix4.tmp could now be removed.\n\nI've run a couple of tests to verify my changes, but as far as I've seen not all modified functions are covered by them. Also, I've only run the tests on desktop systems. That said, a code review and **some tests on Android/iOS** would be wise. ;) Also, feel free to try the changes with your project if you are heavily using Matrix4/Quaternion.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2892/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2891","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2891/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2891/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2891/events","html_url":"https://github.com/libgdx/libgdx/issues/2891","id":59421257,"number":2891,"title":"Splitpane prefHeight/prefWidth","user":{"login":"xpenatan","id":6472084,"avatar_url":"https://avatars3.githubusercontent.com/u/6472084?v=4","gravatar_id":"","url":"https://api.github.com/users/xpenatan","html_url":"https://github.com/xpenatan","followers_url":"https://api.github.com/users/xpenatan/followers","following_url":"https://api.github.com/users/xpenatan/following{/other_user}","gists_url":"https://api.github.com/users/xpenatan/gists{/gist_id}","starred_url":"https://api.github.com/users/xpenatan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xpenatan/subscriptions","organizations_url":"https://api.github.com/users/xpenatan/orgs","repos_url":"https://api.github.com/users/xpenatan/repos","events_url":"https://api.github.com/users/xpenatan/events{/privacy}","received_events_url":"https://api.github.com/users/xpenatan/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2015-03-01T22:33:42Z","updated_at":"2015-03-06T05:16:31Z","closed_at":"2015-03-06T05:16:31Z","author_association":"CONTRIBUTOR","body":"Is there a reason why SplitPane#prefHeight and SplitPane#prefWidth is adding the width/height value when checking the second widget ?  Wasn't it supposed to compare which one is higher and then set it?\n\nFor example, I have 2 widgets left and right (vertical = false)  and both is a label (equal height).  if each one have a prefHeight of 20 (for example)  the spliter prefHeight will be 40 and the table will grow even more.\n\nThe left image is whats happening and the right is when I remove the add sign.\n\n![splitprefheight](https://cloud.githubusercontent.com/assets/6472084/6433263/0c7f1a24-c049-11e4-9c4e-8cc3fd88aae1.png)\n\n```\nif (secondWidget != null)\n{\n    float tmpHeight = secondWidget instanceof Layout ? ((Layout)secondWidget).getPrefHeight() : secondWidget.getHeight();\n\n    if(vertical)\n        height += tmpHeight;\n    else if(tmpHeight > height)\n        height = tmpHeight;\n}\n```\n\nI used the code above for tmp fix (its same for width) \n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2891/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2890","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2890/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2890/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2890/events","html_url":"https://github.com/libgdx/libgdx/issues/2890","id":59416395,"number":2890,"title":"How to zoom camera to a tile map","user":{"login":"60noy","id":11259340,"avatar_url":"https://avatars1.githubusercontent.com/u/11259340?v=4","gravatar_id":"","url":"https://api.github.com/users/60noy","html_url":"https://github.com/60noy","followers_url":"https://api.github.com/users/60noy/followers","following_url":"https://api.github.com/users/60noy/following{/other_user}","gists_url":"https://api.github.com/users/60noy/gists{/gist_id}","starred_url":"https://api.github.com/users/60noy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/60noy/subscriptions","organizations_url":"https://api.github.com/users/60noy/orgs","repos_url":"https://api.github.com/users/60noy/repos","events_url":"https://api.github.com/users/60noy/events{/privacy}","received_events_url":"https://api.github.com/users/60noy/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2015-03-01T20:42:08Z","updated_at":"2015-03-01T21:14:43Z","closed_at":"2015-03-01T21:14:43Z","author_association":"NONE","body":"I have a tile map which I drew but I see that like as if a view from top. I want to zoom the map and give the impression like you are walking on the tile map - like on the games Gunz,  Counter Strike, BattleField and all the rest that there is a man walking on the map. So how can I zoom to this range?\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2890/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2889","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2889/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2889/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2889/events","html_url":"https://github.com/libgdx/libgdx/pull/2889","id":59401799,"number":2889,"title":"GLDebugger","user":{"login":"Darkyenus","id":5280068,"avatar_url":"https://avatars0.githubusercontent.com/u/5280068?v=4","gravatar_id":"","url":"https://api.github.com/users/Darkyenus","html_url":"https://github.com/Darkyenus","followers_url":"https://api.github.com/users/Darkyenus/followers","following_url":"https://api.github.com/users/Darkyenus/following{/other_user}","gists_url":"https://api.github.com/users/Darkyenus/gists{/gist_id}","starred_url":"https://api.github.com/users/Darkyenus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Darkyenus/subscriptions","organizations_url":"https://api.github.com/users/Darkyenus/orgs","repos_url":"https://api.github.com/users/Darkyenus/repos","events_url":"https://api.github.com/users/Darkyenus/events{/privacy}","received_events_url":"https://api.github.com/users/Darkyenus/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":15,"created_at":"2015-03-01T15:57:56Z","updated_at":"2015-08-20T08:35:45Z","closed_at":"2015-08-18T18:15:08Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2889","html_url":"https://github.com/libgdx/libgdx/pull/2889","diff_url":"https://github.com/libgdx/libgdx/pull/2889.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2889.patch"},"body":"Adds GLDebugger, that works similarly to GLProfiler - on enable it wraps active Gdx.gl instances and checks for GL errors after each GL call. When error occurs, it will notify customisable listener that will, by default, log the error and where it happened. Inspired by #2585. Did test on desktop, should work everywhere, however I am not sure about gwt. Since it is opt-in, it won't break any existing code.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2889/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2888","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2888/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2888/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2888/events","html_url":"https://github.com/libgdx/libgdx/pull/2888","id":59380219,"number":2888,"title":"Add option to skip ParticleEmitter's blendfunc clean-up to reduce Batch flushes","user":{"login":"cypherdare","id":1843131,"avatar_url":"https://avatars2.githubusercontent.com/u/1843131?v=4","gravatar_id":"","url":"https://api.github.com/users/cypherdare","html_url":"https://github.com/cypherdare","followers_url":"https://api.github.com/users/cypherdare/followers","following_url":"https://api.github.com/users/cypherdare/following{/other_user}","gists_url":"https://api.github.com/users/cypherdare/gists{/gist_id}","starred_url":"https://api.github.com/users/cypherdare/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cypherdare/subscriptions","organizations_url":"https://api.github.com/users/cypherdare/orgs","repos_url":"https://api.github.com/users/cypherdare/repos","events_url":"https://api.github.com/users/cypherdare/events{/privacy}","received_events_url":"https://api.github.com/users/cypherdare/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2015-03-01T04:51:21Z","updated_at":"2015-03-06T05:21:22Z","closed_at":"2015-03-06T05:21:22Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2888","html_url":"https://github.com/libgdx/libgdx/pull/2888","diff_url":"https://github.com/libgdx/libgdx/pull/2888.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2888.patch"},"body":"In my game I have a layer with many small ParticleEffects, all using the same Texture from a TextureAtlas, and all using pre-multiplied alpha. When this layer is drawn, it results in many unnecessary flushes of the SpriteBatch. Even if a single ParticleEffect is drawn, it results in a draw call for every ParticleEmitter it contains.\n\nThis pull request adds an option to ParticleEmitter that allows it to skip the step of returning the SpriteBatch's blend function to the default, which causes a flush whenever a ParticleEmitter is additive or has pre-multiplied alpha. The option defaults to the current behavior, so it will not affect current projects. The Javadoc clearly warns that the programmer must manually set the blend function back to the default if necessary.\n\nI also added a convenience method to ParticleEffect, for applying this setting to all its owned emitters, since this is the typical use case.\n\nI also noticed that ParticleEffect (when not using a TextureAtlas) was loading multiple copies of a Texture, even if all its emitters share the same image name. Aside from wasting memory, this prevents the above optimization from working. So I modified `ParticleEffect.loadEmitterImages(...)` to avoid this problem.\n\nI assure you that `ParticleEffect.scaleEffect(...)` has not changed. That is only the effect of the libgdx formatter.\n\nNote the render calls numbers in the following two pictures. It is 2 (rather than 1) in the second image only because of the SpriteBatch's capacity. \n![capture](https://cloud.githubusercontent.com/assets/1843131/6429493/7f6fcf70-bfa3-11e4-925b-0b8f3d7a5599.PNG) ![capture2](https://cloud.githubusercontent.com/assets/1843131/6429494/8780cde0-bfa3-11e4-9545-d82212c5eee9.PNG)\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2888/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2887","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2887/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2887/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2887/events","html_url":"https://github.com/libgdx/libgdx/issues/2887","id":59378810,"number":2887,"title":"Model created from mesh does not correctly use texcoords from the mesh it contains","user":{"login":"crehop","id":2079533,"avatar_url":"https://avatars1.githubusercontent.com/u/2079533?v=4","gravatar_id":"","url":"https://api.github.com/users/crehop","html_url":"https://github.com/crehop","followers_url":"https://api.github.com/users/crehop/followers","following_url":"https://api.github.com/users/crehop/following{/other_user}","gists_url":"https://api.github.com/users/crehop/gists{/gist_id}","starred_url":"https://api.github.com/users/crehop/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/crehop/subscriptions","organizations_url":"https://api.github.com/users/crehop/orgs","repos_url":"https://api.github.com/users/crehop/repos","events_url":"https://api.github.com/users/crehop/events{/privacy}","received_events_url":"https://api.github.com/users/crehop/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":15,"created_at":"2015-03-01T04:31:27Z","updated_at":"2015-03-01T22:24:24Z","closed_at":"2015-03-01T22:24:24Z","author_association":"NONE","body":"Why would a mesh render something different then a model..here is the code used to Call the render of each object. One calling the model, the other the mesh.\n\n[code]  \nmodelBatch.render(terrain.getTerrainChunk(x, y).getModelInstance(),env);\nterrain.getTerrainChunk(x, y).getModelInstance().model.meshes.get(0).render(Lighting.getShader(), GL20.GL_TRIANGLES);\n[/code]\n\nExpected output = The same thing since they are the same mesh\nActual output =\n[img]\nhttp://static.dyp.im/0bp089Ycx1/36c64a7a11e5622609098b97318970c8.png\n[/img]\n\nAs we can see, the same mesh does not produce the same texture. the models are exactly the same except the top is 9 stacked on top of eachother and the bottom is 9 spread out. (didnt want to waste time positioning them, just testing the shader)\n\nHere is an image of the texture used.\nhttp://static.dyp.im/5kbpk8OY5n/5c8ae6ca7283da3e953b5a0252646b23.png\n\nOddly the erroneous model is using the 1,1 texcoord leading me to believe there is maybe a math error when creating the texcoords, resulting in a coord over 1 or 1?\n\nAlmost forgot the mesh creation code\n\nMesh mesh = new Mesh(true, chunk.vertices.length / 9, chunk.indices.length,\n                            new VertexAttribute(VertexAttributes.Usage.Position, 3, ShaderProgram.POSITION_ATTRIBUTE), \n                            new VertexAttribute(VertexAttributes.Usage.Normal, 3, ShaderProgram.NORMAL_ATTRIBUTE),\n                            new VertexAttribute(VertexAttributes.Usage.ColorPacked, 4, ShaderProgram.COLOR_ATTRIBUTE), \n                            new VertexAttribute(VertexAttributes.Usage.TextureCoordinates, 2,  ShaderProgram.TEXCOORD_ATTRIBUTE));\n                    mesh.setVertices(chunk.vertices);\n                    mesh.setIndices(chunk.indices);\n                    Model result = ModelBuilder.createFromMesh(mesh, GL20.GL_TRIANGLES, material);\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2887/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2886","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2886/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2886/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2886/events","html_url":"https://github.com/libgdx/libgdx/issues/2886","id":59369787,"number":2886,"title":"BitmapFont markup crashes if String is just \"[\"","user":{"login":"AzmiTerato","id":3805042,"avatar_url":"https://avatars0.githubusercontent.com/u/3805042?v=4","gravatar_id":"","url":"https://api.github.com/users/AzmiTerato","html_url":"https://github.com/AzmiTerato","followers_url":"https://api.github.com/users/AzmiTerato/followers","following_url":"https://api.github.com/users/AzmiTerato/following{/other_user}","gists_url":"https://api.github.com/users/AzmiTerato/gists{/gist_id}","starred_url":"https://api.github.com/users/AzmiTerato/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AzmiTerato/subscriptions","organizations_url":"https://api.github.com/users/AzmiTerato/orgs","repos_url":"https://api.github.com/users/AzmiTerato/repos","events_url":"https://api.github.com/users/AzmiTerato/events{/privacy}","received_events_url":"https://api.github.com/users/AzmiTerato/received_events","type":"User","site_admin":false},"labels":[{"id":11336980,"url":"https://api.github.com/repos/libgdx/libgdx/labels/bug","name":"bug","color":"fc2929","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2015-03-01T00:57:21Z","updated_at":"2015-03-24T16:44:27Z","closed_at":"2015-03-24T16:23:13Z","author_association":"NONE","body":"Im using latest nightlies,\n\nBitmapFont.drawWrappedText crashes if I just pass \"[\" as the string to draw.\n\nException in thread \"LWJGL Application\" java.lang.StringIndexOutOfBoundsException: String index out of range: 2\n    at java.lang.String.charAt(Unknown Source)\n    at com.badlogic.gdx.graphics.g2d.TextMarkup.parseColorTag(TextMarkup.java:75)\n    at com.badlogic.gdx.graphics.g2d.BitmapFontCache.addToCache(BitmapFontCache.java:421)\n    at com.badlogic.gdx.graphics.g2d.BitmapFontCache.addWrappedText(BitmapFontCache.java:737)\n    at com.badlogic.gdx.graphics.g2d.BitmapFont.drawWrapped(BitmapFont.java:307)\n.....\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2886/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2885","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2885/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2885/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2885/events","html_url":"https://github.com/libgdx/libgdx/pull/2885","id":59351181,"number":2885,"title":"Added contains to Shape2D.","user":{"login":"nooone","id":5896510,"avatar_url":"https://avatars3.githubusercontent.com/u/5896510?v=4","gravatar_id":"","url":"https://api.github.com/users/nooone","html_url":"https://github.com/nooone","followers_url":"https://api.github.com/users/nooone/followers","following_url":"https://api.github.com/users/nooone/following{/other_user}","gists_url":"https://api.github.com/users/nooone/gists{/gist_id}","starred_url":"https://api.github.com/users/nooone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nooone/subscriptions","organizations_url":"https://api.github.com/users/nooone/orgs","repos_url":"https://api.github.com/users/nooone/repos","events_url":"https://api.github.com/users/nooone/events{/privacy}","received_events_url":"https://api.github.com/users/nooone/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2015-02-28T18:04:18Z","updated_at":"2015-10-03T23:05:20Z","closed_at":"2015-10-03T23:05:20Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2885","html_url":"https://github.com/libgdx/libgdx/pull/2885","diff_url":"https://github.com/libgdx/libgdx/pull/2885.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2885.patch"},"body":"This is the PR for https://github.com/libgdx/libgdx/issues/2880.\n\nPolyline is no Shape2D anymore and `Shape2D` now has two methods `contains(float x, float y)` and `contains(Vector2 point)`.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2885/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2884","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2884/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2884/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2884/events","html_url":"https://github.com/libgdx/libgdx/issues/2884","id":59330822,"number":2884,"title":"Game restarts and timer dies","user":{"login":"YRGames","id":11241747,"avatar_url":"https://avatars0.githubusercontent.com/u/11241747?v=4","gravatar_id":"","url":"https://api.github.com/users/YRGames","html_url":"https://github.com/YRGames","followers_url":"https://api.github.com/users/YRGames/followers","following_url":"https://api.github.com/users/YRGames/following{/other_user}","gists_url":"https://api.github.com/users/YRGames/gists{/gist_id}","starred_url":"https://api.github.com/users/YRGames/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/YRGames/subscriptions","organizations_url":"https://api.github.com/users/YRGames/orgs","repos_url":"https://api.github.com/users/YRGames/repos","events_url":"https://api.github.com/users/YRGames/events{/privacy}","received_events_url":"https://api.github.com/users/YRGames/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":12,"created_at":"2015-02-28T07:32:11Z","updated_at":"2015-11-16T05:21:06Z","closed_at":"2015-03-22T18:59:44Z","author_association":"NONE","body":"Sorry for short description, but please, refer to the:\nhttp://www.badlogicgames.com/forum/viewtopic.php?f=11&t=18519\n\nYRG\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2884/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2883","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2883/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2883/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2883/events","html_url":"https://github.com/libgdx/libgdx/issues/2883","id":59322055,"number":2883,"title":"TexturePacker.isModified() always returns true when called by TexturePacker.processIfModified()","user":{"login":"voidburn","id":1438321,"avatar_url":"https://avatars3.githubusercontent.com/u/1438321?v=4","gravatar_id":"","url":"https://api.github.com/users/voidburn","html_url":"https://github.com/voidburn","followers_url":"https://api.github.com/users/voidburn/followers","following_url":"https://api.github.com/users/voidburn/following{/other_user}","gists_url":"https://api.github.com/users/voidburn/gists{/gist_id}","starred_url":"https://api.github.com/users/voidburn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/voidburn/subscriptions","organizations_url":"https://api.github.com/users/voidburn/orgs","repos_url":"https://api.github.com/users/voidburn/repos","events_url":"https://api.github.com/users/voidburn/events{/privacy}","received_events_url":"https://api.github.com/users/voidburn/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2015-02-28T03:01:52Z","updated_at":"2015-03-06T15:36:39Z","closed_at":"2015-03-06T15:36:39Z","author_association":"CONTRIBUTOR","body":"At https://github.com/libgdx/libgdx/blob/90ce4b6f19c4e1960786544b81f779541eb5d4da/extensions/gdx-tools/src/com/badlogic/gdx/tools/texturepacker/TexturePacker.java#L628 the method checks whether the file exists, and then tries to establish if it's actually outdated. It never accomplishes its task since it tries to look in the filesystem for:\n\n`packFullFileName += packFileName;`\n\nProblem is, the packFileName passed to the method `processIfModified` is not meant to contain either the `.atlas` or `.png` extension but the name with which the various files will be generated (for example, a string \"tiles\" will produce two files: tiles.atlas and tiles.png with default settings).\n\nSince a packaged resource will always generate a `.atlas` file (settings might dictate a different image format maybe?) I would suggest to append such extension to the `packFileName` string before concatenating it with the full path, unless this is used somewhere else, in which case I'd say we need a specialized method to satisfy `TexturePacker.processIfModified()`\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2883/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2882","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2882/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2882/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2882/events","html_url":"https://github.com/libgdx/libgdx/issues/2882","id":59212652,"number":2882,"title":"FreeTypeFontGenerator padding support?","user":{"login":"manabreak","id":3799319,"avatar_url":"https://avatars2.githubusercontent.com/u/3799319?v=4","gravatar_id":"","url":"https://api.github.com/users/manabreak","html_url":"https://github.com/manabreak","followers_url":"https://api.github.com/users/manabreak/followers","following_url":"https://api.github.com/users/manabreak/following{/other_user}","gists_url":"https://api.github.com/users/manabreak/gists{/gist_id}","starred_url":"https://api.github.com/users/manabreak/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/manabreak/subscriptions","organizations_url":"https://api.github.com/users/manabreak/orgs","repos_url":"https://api.github.com/users/manabreak/repos","events_url":"https://api.github.com/users/manabreak/events{/privacy}","received_events_url":"https://api.github.com/users/manabreak/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2015-02-27T09:47:32Z","updated_at":"2015-03-28T01:01:38Z","closed_at":"2015-03-28T01:01:38Z","author_association":"NONE","body":"Correct me if I'm wrong, but I couldn't find any padding parameters for FreeTypeFontGenerator. As it currently is, the textures bleed from glyph to glyph, causing artifacts in light-colored text.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2882/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2881","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2881/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2881/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2881/events","html_url":"https://github.com/libgdx/libgdx/issues/2881","id":59184668,"number":2881,"title":"Uncaught native exception from Controllers on OS X","user":{"login":"matteblair","id":3371850,"avatar_url":"https://avatars2.githubusercontent.com/u/3371850?v=4","gravatar_id":"","url":"https://api.github.com/users/matteblair","html_url":"https://github.com/matteblair","followers_url":"https://api.github.com/users/matteblair/followers","following_url":"https://api.github.com/users/matteblair/following{/other_user}","gists_url":"https://api.github.com/users/matteblair/gists{/gist_id}","starred_url":"https://api.github.com/users/matteblair/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/matteblair/subscriptions","organizations_url":"https://api.github.com/users/matteblair/orgs","repos_url":"https://api.github.com/users/matteblair/repos","events_url":"https://api.github.com/users/matteblair/events{/privacy}","received_events_url":"https://api.github.com/users/matteblair/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2015-02-27T03:30:13Z","updated_at":"2016-02-11T08:28:18Z","closed_at":null,"author_association":"NONE","body":"If the LWJGL Application is not the active window when Controllers.initialize() is called, the application aborts from an uncaught exception in native code. \n\nThe specific exception that occurs is here: https://github.com/libgdx/libgdx/blob/master/extensions/gdx-controllers/gdx-controllers-desktop/jni/ois-v1-4svn/src/mac/CocoaInputManager.mm#L88\n\nStack trace is here: http://pastebin.com/gNbiKiYv\n\ngdx version 1.5.4\nmac os 10.9.5\njava 1.7.0_45\n\nI can make a minimal reproducible test for this when I have some time, just wanted to save this before I forget about it!\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2881/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2880","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2880/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2880/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2880/events","html_url":"https://github.com/libgdx/libgdx/issues/2880","id":59159366,"number":2880,"title":"Interface Shape2D does not provide contains() method","user":{"login":"haimat","id":6633976,"avatar_url":"https://avatars2.githubusercontent.com/u/6633976?v=4","gravatar_id":"","url":"https://api.github.com/users/haimat","html_url":"https://github.com/haimat","followers_url":"https://api.github.com/users/haimat/followers","following_url":"https://api.github.com/users/haimat/following{/other_user}","gists_url":"https://api.github.com/users/haimat/gists{/gist_id}","starred_url":"https://api.github.com/users/haimat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/haimat/subscriptions","organizations_url":"https://api.github.com/users/haimat/orgs","repos_url":"https://api.github.com/users/haimat/repos","events_url":"https://api.github.com/users/haimat/events{/privacy}","received_events_url":"https://api.github.com/users/haimat/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":19,"created_at":"2015-02-26T23:02:09Z","updated_at":"2015-08-18T19:25:54Z","closed_at":"2015-08-18T19:25:54Z","author_association":"NONE","body":"All classes implementing the `Shape2D` interace (like `Circle` or `Rectangle`) provide a method `contains()`, but the interface itself does not. However that would be really useful.\n\nWould it be possible to add this method to the interface as well?\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2880/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2879","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2879/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2879/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2879/events","html_url":"https://github.com/libgdx/libgdx/issues/2879","id":59108288,"number":2879,"title":"size accessor for PooledLinkedList","user":{"login":"metaphore","id":6159734,"avatar_url":"https://avatars2.githubusercontent.com/u/6159734?v=4","gravatar_id":"","url":"https://api.github.com/users/metaphore","html_url":"https://github.com/metaphore","followers_url":"https://api.github.com/users/metaphore/followers","following_url":"https://api.github.com/users/metaphore/following{/other_user}","gists_url":"https://api.github.com/users/metaphore/gists{/gist_id}","starred_url":"https://api.github.com/users/metaphore/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/metaphore/subscriptions","organizations_url":"https://api.github.com/users/metaphore/orgs","repos_url":"https://api.github.com/users/metaphore/repos","events_url":"https://api.github.com/users/metaphore/events{/privacy}","received_events_url":"https://api.github.com/users/metaphore/received_events","type":"User","site_admin":false},"labels":[{"id":11336982,"url":"https://api.github.com/repos/libgdx/libgdx/labels/enhancement","name":"enhancement","color":"84b6eb","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2015-02-26T17:33:44Z","updated_at":"2015-08-19T10:49:05Z","closed_at":"2015-08-19T10:49:05Z","author_association":"CONTRIBUTOR","body":"Seems there is no way to know PooledLinkedList size or check existence of next element.\nSo why not to add such methods?\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2879/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2878","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2878/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2878/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2878/events","html_url":"https://github.com/libgdx/libgdx/issues/2878","id":58765784,"number":2878,"title":"No glUniform*iv in ShaderProgram","user":{"login":"mujjingun","id":6328181,"avatar_url":"https://avatars1.githubusercontent.com/u/6328181?v=4","gravatar_id":"","url":"https://api.github.com/users/mujjingun","html_url":"https://github.com/mujjingun","followers_url":"https://api.github.com/users/mujjingun/followers","following_url":"https://api.github.com/users/mujjingun/following{/other_user}","gists_url":"https://api.github.com/users/mujjingun/gists{/gist_id}","starred_url":"https://api.github.com/users/mujjingun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mujjingun/subscriptions","organizations_url":"https://api.github.com/users/mujjingun/orgs","repos_url":"https://api.github.com/users/mujjingun/repos","events_url":"https://api.github.com/users/mujjingun/events{/privacy}","received_events_url":"https://api.github.com/users/mujjingun/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2015-02-24T16:44:54Z","updated_at":"2015-03-11T19:03:59Z","closed_at":"2015-03-11T19:03:59Z","author_association":"NONE","body":"Cannot set data of int arrays in shader.\nAlso, why is the shader handle private? If I can't use glUniform*iv in ShaderProgram, I have to make direct calls. Making the shader handle private doesn't help that.\n\nIf this sounded rude, I'm sorry. I'm not good at making English sound polite, since I'm not a native speaker.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2878/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2877","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2877/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2877/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2877/events","html_url":"https://github.com/libgdx/libgdx/issues/2877","id":58739493,"number":2877,"title":"TimSort verification from run length","user":{"login":"cdomville","id":1194767,"avatar_url":"https://avatars3.githubusercontent.com/u/1194767?v=4","gravatar_id":"","url":"https://api.github.com/users/cdomville","html_url":"https://github.com/cdomville","followers_url":"https://api.github.com/users/cdomville/followers","following_url":"https://api.github.com/users/cdomville/following{/other_user}","gists_url":"https://api.github.com/users/cdomville/gists{/gist_id}","starred_url":"https://api.github.com/users/cdomville/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cdomville/subscriptions","organizations_url":"https://api.github.com/users/cdomville/orgs","repos_url":"https://api.github.com/users/cdomville/repos","events_url":"https://api.github.com/users/cdomville/events{/privacy}","received_events_url":"https://api.github.com/users/cdomville/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2015-02-24T13:42:07Z","updated_at":"2015-03-03T02:32:37Z","closed_at":"2015-03-03T02:32:37Z","author_association":"CONTRIBUTOR","body":"See https://bugs.openjdk.java.net/browse/JDK-8072909 and http://envisage-project.eu/proving-android-java-and-python-sorting-algorithm-is-broken-and-how-to-fix-it/ for more details, but the OpenJDK implementation has changed TimSort, as noted at http://hg.openjdk.java.net/jdk9/jdk9/jdk/rev/e276aa5b8a4b to fix an ArrayIndexOutOfBoundsException with worst case long arrays that relates to the number of invariants. I know this is minor, but so we're consistent with the JVM, this should probably be updated for consistency reasons as well.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2877/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2876","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2876/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2876/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2876/events","html_url":"https://github.com/libgdx/libgdx/issues/2876","id":58597720,"number":2876,"title":"JsonReader does not process strings with simple quotes and forward slashes","user":{"login":"anserran","id":1515738,"avatar_url":"https://avatars1.githubusercontent.com/u/1515738?v=4","gravatar_id":"","url":"https://api.github.com/users/anserran","html_url":"https://github.com/anserran","followers_url":"https://api.github.com/users/anserran/followers","following_url":"https://api.github.com/users/anserran/following{/other_user}","gists_url":"https://api.github.com/users/anserran/gists{/gist_id}","starred_url":"https://api.github.com/users/anserran/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/anserran/subscriptions","organizations_url":"https://api.github.com/users/anserran/orgs","repos_url":"https://api.github.com/users/anserran/repos","events_url":"https://api.github.com/users/anserran/events{/privacy}","received_events_url":"https://api.github.com/users/anserran/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2015-02-23T15:05:23Z","updated_at":"2015-02-23T20:25:47Z","closed_at":"2015-02-23T16:24:14Z","author_association":"CONTRIBUTOR","body":"Found a little bug in JsonReader. Code reproducing the issue (tested in master branch):\n\n``` java\n    public static void main(String args[]){\n        JsonReader json = new JsonReader();\n        json.parse(\"{a: 'hello'}\"); // OK\n        json.parse(\"{a: 'http://www.google.es'}\"); // Exception\n    }\n```\n\nException launched:\n\n``` java\nException in thread \"main\" com.badlogic.gdx.utils.SerializationException: Error parsing JSON, unmatched brace.\n```\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2876/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2875","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2875/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2875/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2875/events","html_url":"https://github.com/libgdx/libgdx/pull/2875","id":58518661,"number":2875,"title":"Include dependencies count when reporting asset manager progress.","user":{"login":"lnr0626","id":704837,"avatar_url":"https://avatars1.githubusercontent.com/u/704837?v=4","gravatar_id":"","url":"https://api.github.com/users/lnr0626","html_url":"https://github.com/lnr0626","followers_url":"https://api.github.com/users/lnr0626/followers","following_url":"https://api.github.com/users/lnr0626/following{/other_user}","gists_url":"https://api.github.com/users/lnr0626/gists{/gist_id}","starred_url":"https://api.github.com/users/lnr0626/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lnr0626/subscriptions","organizations_url":"https://api.github.com/users/lnr0626/orgs","repos_url":"https://api.github.com/users/lnr0626/repos","events_url":"https://api.github.com/users/lnr0626/events{/privacy}","received_events_url":"https://api.github.com/users/lnr0626/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2015-02-22T21:09:11Z","updated_at":"2016-01-05T16:48:15Z","closed_at":"2016-01-05T16:48:15Z","author_association":"NONE","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2875","html_url":"https://github.com/libgdx/libgdx/pull/2875","diff_url":"https://github.com/libgdx/libgdx/pull/2875.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2875.patch"},"body":"This makes it so that when an asset has dependencies, the getProgress() call reflects the actual process for loading the assets. \n\nI'm not sure if it was created this way intentionally, but in my mind this gives a more accurate indication of the load progress than how it currently is. This can however make the percent completion go backwards at times (which I guess could be why it is the way that it currently is...). If this is an issue for including this change, I'll look into fixing it.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2875/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2874","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2874/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2874/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2874/events","html_url":"https://github.com/libgdx/libgdx/issues/2874","id":58517086,"number":2874,"title":"Modify networking API to return promise","user":{"login":"avianey","id":1625652,"avatar_url":"https://avatars3.githubusercontent.com/u/1625652?v=4","gravatar_id":"","url":"https://api.github.com/users/avianey","html_url":"https://github.com/avianey","followers_url":"https://api.github.com/users/avianey/followers","following_url":"https://api.github.com/users/avianey/following{/other_user}","gists_url":"https://api.github.com/users/avianey/gists{/gist_id}","starred_url":"https://api.github.com/users/avianey/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/avianey/subscriptions","organizations_url":"https://api.github.com/users/avianey/orgs","repos_url":"https://api.github.com/users/avianey/repos","events_url":"https://api.github.com/users/avianey/events{/privacy}","received_events_url":"https://api.github.com/users/avianey/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2015-02-22T20:28:39Z","updated_at":"2016-12-10T18:56:05Z","closed_at":"2016-12-10T18:56:05Z","author_association":"CONTRIBUTOR","body":"Would it be possible to change networking API to return something like promise (like Future<T> in java) so we can better control requests lifecycle.\n\n```\nPromise<HttpResponse> Gdx.net.sendHttpRequest(httpRequest, httpResponseListener)\n```\n\ninstead of void ???\nWhat do you think ?\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2874/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2873","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2873/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2873/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2873/events","html_url":"https://github.com/libgdx/libgdx/issues/2873","id":58501130,"number":2873,"title":"Match Object Ids between Tiled and libgd","user":{"login":"Kuhmaus","id":8014302,"avatar_url":"https://avatars2.githubusercontent.com/u/8014302?v=4","gravatar_id":"","url":"https://api.github.com/users/Kuhmaus","html_url":"https://github.com/Kuhmaus","followers_url":"https://api.github.com/users/Kuhmaus/followers","following_url":"https://api.github.com/users/Kuhmaus/following{/other_user}","gists_url":"https://api.github.com/users/Kuhmaus/gists{/gist_id}","starred_url":"https://api.github.com/users/Kuhmaus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Kuhmaus/subscriptions","organizations_url":"https://api.github.com/users/Kuhmaus/orgs","repos_url":"https://api.github.com/users/Kuhmaus/repos","events_url":"https://api.github.com/users/Kuhmaus/events{/privacy}","received_events_url":"https://api.github.com/users/Kuhmaus/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2015-02-22T12:29:35Z","updated_at":"2015-03-07T12:52:06Z","closed_at":"2015-03-07T12:52:06Z","author_association":"NONE","body":"In the latest Tiled Version(11.0) unique Ids got added to objects.\nThese Ids however are not the ones you get when you use\n\"map.getObjects().get(id)\"\nFor example\nmap.getObjects().get(1)\nreturns the object with the unique tiled Id of 35 in my case.\n\nIt would be nice if these ids would be consitent between libgdx and tiled\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2873/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2872","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2872/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2872/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2872/events","html_url":"https://github.com/libgdx/libgdx/issues/2872","id":58492300,"number":2872,"title":"Gradle Wrapper Error While Generating Files","user":{"login":"syedalinaqi","id":3082612,"avatar_url":"https://avatars0.githubusercontent.com/u/3082612?v=4","gravatar_id":"","url":"https://api.github.com/users/syedalinaqi","html_url":"https://github.com/syedalinaqi","followers_url":"https://api.github.com/users/syedalinaqi/followers","following_url":"https://api.github.com/users/syedalinaqi/following{/other_user}","gists_url":"https://api.github.com/users/syedalinaqi/gists{/gist_id}","starred_url":"https://api.github.com/users/syedalinaqi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/syedalinaqi/subscriptions","organizations_url":"https://api.github.com/users/syedalinaqi/orgs","repos_url":"https://api.github.com/users/syedalinaqi/repos","events_url":"https://api.github.com/users/syedalinaqi/events{/privacy}","received_events_url":"https://api.github.com/users/syedalinaqi/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2015-02-22T06:18:15Z","updated_at":"2015-02-22T15:44:29Z","closed_at":"2015-02-22T15:44:29Z","author_association":"NONE","body":"```\nExecuting 'D:\\Android_Development\\Android_Projects\\libGDX\\CopterIT!/gradlew.bat clean --no-       daemon idea'\nException in thread \"main\" java.lang.RuntimeException: Could not determine wrapper version.\nat org.gradle.wrapper.GradleWrapperMain.wrapperVersion(GradleWrapperMain.java:111)\nat org.gradle.wrapper.GradleWrapperMain.main(GradleWrapperMain.java:61)\nCaused by: java.lang.RuntimeException: No build receipt resource found.\nat org.gradle.wrapper.GradleWrapperMain.wrapperVersion(GradleWrapperMain.java:97)\n... 1 more\n```\n\nPlease can anyone help!!\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2872/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2871","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2871/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2871/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2871/events","html_url":"https://github.com/libgdx/libgdx/issues/2871","id":58492256,"number":2871,"title":"Error While Generating IDEA Files","user":{"login":"syedalinaqi","id":3082612,"avatar_url":"https://avatars0.githubusercontent.com/u/3082612?v=4","gravatar_id":"","url":"https://api.github.com/users/syedalinaqi","html_url":"https://github.com/syedalinaqi","followers_url":"https://api.github.com/users/syedalinaqi/followers","following_url":"https://api.github.com/users/syedalinaqi/following{/other_user}","gists_url":"https://api.github.com/users/syedalinaqi/gists{/gist_id}","starred_url":"https://api.github.com/users/syedalinaqi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/syedalinaqi/subscriptions","organizations_url":"https://api.github.com/users/syedalinaqi/orgs","repos_url":"https://api.github.com/users/syedalinaqi/repos","events_url":"https://api.github.com/users/syedalinaqi/events{/privacy}","received_events_url":"https://api.github.com/users/syedalinaqi/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2015-02-22T06:15:51Z","updated_at":"2015-02-22T15:44:26Z","closed_at":"2015-02-22T15:44:26Z","author_association":"NONE","body":"Executing 'D:\\Android_Development\\Android_Projects\\libGDX\\CopterIT!/gradlew.bat clean --no-daemon idea'\nException in thread \"main\" java.lang.RuntimeException: Could not determine wrapper version.\n    at org.gradle.wrapper.GradleWrapperMain.wrapperVersion(GradleWrapperMain.java:111)\n    at org.gradle.wrapper.GradleWrapperMain.main(GradleWrapperMain.java:61)\nCaused by: java.lang.RuntimeException: No build receipt resource found.\n    at org.gradle.wrapper.GradleWrapperMain.wrapperVersion(GradleWrapperMain.java:97)\n    ... 1 more\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2871/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2870","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2870/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2870/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2870/events","html_url":"https://github.com/libgdx/libgdx/issues/2870","id":58463527,"number":2870,"title":"Button Listener","user":{"login":"mario109","id":11136454,"avatar_url":"https://avatars3.githubusercontent.com/u/11136454?v=4","gravatar_id":"","url":"https://api.github.com/users/mario109","html_url":"https://github.com/mario109","followers_url":"https://api.github.com/users/mario109/followers","following_url":"https://api.github.com/users/mario109/following{/other_user}","gists_url":"https://api.github.com/users/mario109/gists{/gist_id}","starred_url":"https://api.github.com/users/mario109/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mario109/subscriptions","organizations_url":"https://api.github.com/users/mario109/orgs","repos_url":"https://api.github.com/users/mario109/repos","events_url":"https://api.github.com/users/mario109/events{/privacy}","received_events_url":"https://api.github.com/users/mario109/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2015-02-21T15:48:41Z","updated_at":"2015-02-21T16:43:19Z","closed_at":"2015-02-21T16:25:09Z","author_association":"NONE","body":"When a Button's listener is set to ClickListener ,overrides clicked and button.setDisabled(true)\nthe event will still fire.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2870/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2869","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2869/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2869/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2869/events","html_url":"https://github.com/libgdx/libgdx/pull/2869","id":58463026,"number":2869,"title":"Making gdx-setup look more consistent","user":{"login":"kotcrab","id":4594081,"avatar_url":"https://avatars1.githubusercontent.com/u/4594081?v=4","gravatar_id":"","url":"https://api.github.com/users/kotcrab","html_url":"https://github.com/kotcrab","followers_url":"https://api.github.com/users/kotcrab/followers","following_url":"https://api.github.com/users/kotcrab/following{/other_user}","gists_url":"https://api.github.com/users/kotcrab/gists{/gist_id}","starred_url":"https://api.github.com/users/kotcrab/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kotcrab/subscriptions","organizations_url":"https://api.github.com/users/kotcrab/orgs","repos_url":"https://api.github.com/users/kotcrab/repos","events_url":"https://api.github.com/users/kotcrab/events{/privacy}","received_events_url":"https://api.github.com/users/kotcrab/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2015-02-21T15:33:00Z","updated_at":"2015-02-28T21:44:55Z","closed_at":"2015-02-21T21:51:49Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2869","html_url":"https://github.com/libgdx/libgdx/pull/2869","diff_url":"https://github.com/libgdx/libgdx/pull/2869.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2869.patch"},"body":"Made gdx-setup look more consistent.\n\nChanges:\n-New title buttons icons:\n![2015-02-21_1437](https://cloud.githubusercontent.com/assets/4594081/6314608/a48c0e4a-b9e5-11e4-8cb2-6878881e49f0.png)\n-Fixed title button over and pressed:\n![2015-02-21_1437_001](https://cloud.githubusercontent.com/assets/4594081/6314609/aaa34866-b9e5-11e4-8a1b-13544b352ac4.png)\n-Changed disabled color from black to gray\n![2015-02-21_1437_003](https://cloud.githubusercontent.com/assets/4594081/6314610/bec4f484-b9e5-11e4-80e7-e95ce5b61f06.png)\n-Checkbox style now matches rest of app\n![2015-02-21_1438](https://cloud.githubusercontent.com/assets/4594081/6314613/e8629cce-b9e5-11e4-83aa-89f36282f22b.png)\n-Used buttons and checkboxes in other dialogs (except external extensions table - couldn't get table to render custom checkbox)\n![2015-02-21_1624](https://cloud.githubusercontent.com/assets/4594081/6314616/26ef38da-b9e6-11e4-9f90-367d0be9c4a4.png)\n-Better buttons over and pressed color:\n![buttons](https://cloud.githubusercontent.com/assets/4594081/6314624/7cc2cec0-b9e6-11e4-919a-74d464a7abb2.gif)\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2869/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2868","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2868/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2868/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2868/events","html_url":"https://github.com/libgdx/libgdx/issues/2868","id":58462184,"number":2868,"title":"64bit support not being picked up by iTunes connect.","user":{"login":"voidstarfire","id":6940726,"avatar_url":"https://avatars3.githubusercontent.com/u/6940726?v=4","gravatar_id":"","url":"https://api.github.com/users/voidstarfire","html_url":"https://github.com/voidstarfire","followers_url":"https://api.github.com/users/voidstarfire/followers","following_url":"https://api.github.com/users/voidstarfire/following{/other_user}","gists_url":"https://api.github.com/users/voidstarfire/gists{/gist_id}","starred_url":"https://api.github.com/users/voidstarfire/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/voidstarfire/subscriptions","organizations_url":"https://api.github.com/users/voidstarfire/orgs","repos_url":"https://api.github.com/users/voidstarfire/repos","events_url":"https://api.github.com/users/voidstarfire/events{/privacy}","received_events_url":"https://api.github.com/users/voidstarfire/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2015-02-21T15:06:04Z","updated_at":"2015-08-27T11:34:32Z","closed_at":"2015-02-22T17:02:01Z","author_association":"NONE","body":"I have a new version of my app that's uploaded to iTunes connect store and was denied. All apps from the 1st of Feb must be 64BIT.\n\nI'm using the latest version of RoboVM (roboVMVersion = '1.0.0-beta-04') & the latest LibGDX gdxVersion = '1.5.4' which supports real dimensions on all iOS devices. (Huge plus)\n\nI'm using the compilation line of: (In Android Studio)\n./gradlew -Probovm.ipaArchs=thumbv7:arm64 build createIPA\n\nNow when using the application loader I get the following email from apple (about 1 minute later):\n\n---\n\nDear developer,\n\nWe have discovered one or more issues with your recent delivery for \"Shorb\". Your delivery was successful, but you may wish to correct the following issues in your next delivery:\n\nMissing 64-bit support - Beginning on February 1, 2015 new iOS apps submitted to the App Store must include 64-bit support and be built with the iOS 8 SDK. Beginning June 1, 2015 app updates will also need to follow the same requirements. To enable 64-bit in your project, we recommend using the default Xcode build setting of “Standard architectures” to build a single binary with both 32-bit and 64-bit code.\n\nAfter you’ve corrected the issues, you can use Xcode or Application Loader to upload a new binary to iTunes Connect.\n\nRegards,\n\nThe App Store team\n\n---\n\nPS Is there any way of checking that it's 64bit before uploading, otherwise i'm going to end up with gazillion iOS builds.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2868/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2867","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2867/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2867/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2867/events","html_url":"https://github.com/libgdx/libgdx/pull/2867","id":58414348,"number":2867,"title":"Fixed SplitPane handle drawing","user":{"login":"kotcrab","id":4594081,"avatar_url":"https://avatars1.githubusercontent.com/u/4594081?v=4","gravatar_id":"","url":"https://api.github.com/users/kotcrab","html_url":"https://github.com/kotcrab","followers_url":"https://api.github.com/users/kotcrab/followers","following_url":"https://api.github.com/users/kotcrab/following{/other_user}","gists_url":"https://api.github.com/users/kotcrab/gists{/gist_id}","starred_url":"https://api.github.com/users/kotcrab/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kotcrab/subscriptions","organizations_url":"https://api.github.com/users/kotcrab/orgs","repos_url":"https://api.github.com/users/kotcrab/repos","events_url":"https://api.github.com/users/kotcrab/events{/privacy}","received_events_url":"https://api.github.com/users/kotcrab/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2015-02-20T21:41:16Z","updated_at":"2015-02-28T21:44:46Z","closed_at":"2015-02-20T22:02:04Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2867","html_url":"https://github.com/libgdx/libgdx/pull/2867","diff_url":"https://github.com/libgdx/libgdx/pull/2867.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2867.patch"},"body":"SplitPane handle does not use parentAlpha while drawing.\n\nWhen used in window with fade out animation handle stays with alpha == 1, like here:\n![2015-02-20_2228](https://cloud.githubusercontent.com/assets/4594081/6309744/7b213cf0-b950-11e4-847d-92df9b0a5aef.png)\n\nThis PR fixes that.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2867/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2866","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2866/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2866/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2866/events","html_url":"https://github.com/libgdx/libgdx/issues/2866","id":58408259,"number":2866,"title":"Change Image's region size does not affect the Image's dimensions.","user":{"login":"Omegas7","id":4350848,"avatar_url":"https://avatars1.githubusercontent.com/u/4350848?v=4","gravatar_id":"","url":"https://api.github.com/users/Omegas7","html_url":"https://github.com/Omegas7","followers_url":"https://api.github.com/users/Omegas7/followers","following_url":"https://api.github.com/users/Omegas7/following{/other_user}","gists_url":"https://api.github.com/users/Omegas7/gists{/gist_id}","starred_url":"https://api.github.com/users/Omegas7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Omegas7/subscriptions","organizations_url":"https://api.github.com/users/Omegas7/orgs","repos_url":"https://api.github.com/users/Omegas7/repos","events_url":"https://api.github.com/users/Omegas7/events{/privacy}","received_events_url":"https://api.github.com/users/Omegas7/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2015-02-20T20:47:42Z","updated_at":"2015-02-20T23:28:30Z","closed_at":"2015-02-20T21:46:26Z","author_association":"NONE","body":"Have this image\n\n![square](https://cloud.githubusercontent.com/assets/4350848/6309075/43ca0c14-b90f-11e4-90c2-5d17726072e6.png)\n\nCreate an `Image` object using a `TextureRegion` that is `200x200`. This image is displayed properly.\n\nNow I only want to display the red square. In other words, I should change the `Image`'s `TextureRegion`'s width and height to 100.\n\n```\n((TextureRegionDrawable)image.getDrawable()).getRegion().setRegion(0, 0, 100, 100);\n```\n\nThis is what I get:\n\n![screen shot 2015-02-20 at 11 26 22 am](https://cloud.githubusercontent.com/assets/4350848/6309081/57257b72-b90f-11e4-9408-8587b3492a0e.png)\n\nClearly, the region **DID** change as expected. However, the `Image` still thinks it is 200x200, so it is scaling up the red square to fill the space.\n\nAccording to https://code.google.com/p/libgdx/issues/detail?id=789, you have to call `pack()` afterwards:\n\n```\nimage.pack();\n```\n\nBut nothing changes.\n\nThe image still thinks it is 200x200.\n\n---\n\nA solution is to create a brand **new** `TextureRegionDrawable` object and use `setDrawable()`. However, I'd rather not create a new drawable if I could simply modify its properties instead.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2866/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}}],"meta":{"x-ratelimit-limit":"5000","x-ratelimit-remaining":"4932","x-ratelimit-reset":"1506844633","x-github-request-id":"8BF6:028A:1AB495C:2ECD5DD:59D09527","x-github-media-type":"github.squirrel-girl-preview","link":"<https://api.github.com/repositories/5373551/issues?state=all&page=69>; rel=\"next\", <https://api.github.com/repositories/5373551/issues?state=all&page=164>; rel=\"last\", <https://api.github.com/repositories/5373551/issues?state=all&page=1>; rel=\"first\", <https://api.github.com/repositories/5373551/issues?state=all&page=67>; rel=\"prev\"","etag":"\"8fcd9b98eab882dd89a9804a39177d64\"","status":"200 OK"}}
