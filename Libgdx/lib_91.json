{"data":[{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2205","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2205/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2205/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2205/events","html_url":"https://github.com/libgdx/libgdx/pull/2205","id":39460193,"number":2205,"title":"Graphics2D API","user":{"login":"mirraj2","id":847857,"avatar_url":"https://avatars2.githubusercontent.com/u/847857?v=4","gravatar_id":"","url":"https://api.github.com/users/mirraj2","html_url":"https://github.com/mirraj2","followers_url":"https://api.github.com/users/mirraj2/followers","following_url":"https://api.github.com/users/mirraj2/following{/other_user}","gists_url":"https://api.github.com/users/mirraj2/gists{/gist_id}","starred_url":"https://api.github.com/users/mirraj2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mirraj2/subscriptions","organizations_url":"https://api.github.com/users/mirraj2/orgs","repos_url":"https://api.github.com/users/mirraj2/repos","events_url":"https://api.github.com/users/mirraj2/events{/privacy}","received_events_url":"https://api.github.com/users/mirraj2/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2014-08-04T20:55:42Z","updated_at":"2014-08-04T23:55:50Z","closed_at":"2014-08-04T23:55:50Z","author_association":"NONE","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2205","html_url":"https://github.com/libgdx/libgdx/pull/2205","diff_url":"https://github.com/libgdx/libgdx/pull/2205.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2205.patch"},"body":"This provides a 2D API similar to that of the JDK's built in Java2D (java.awt.Graphics)\n\nI'm know I'm going to be using this a lot in my game, so I figured I'd let you guys determine if other people might find it useful as well.\n\nI found it rather tedious to do simple things like draw primitive shapes and this helps to make it as easy as it is in Java2D (if not easier due to the chaining pattern)\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2205/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2204","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2204/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2204/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2204/events","html_url":"https://github.com/libgdx/libgdx/issues/2204","id":39443624,"number":2204,"title":"Eclipse projects made by Project Generator reference non-existent 'mygame-core' rather than 'core'","user":{"login":"xinaesthete","id":674834,"avatar_url":"https://avatars2.githubusercontent.com/u/674834?v=4","gravatar_id":"","url":"https://api.github.com/users/xinaesthete","html_url":"https://github.com/xinaesthete","followers_url":"https://api.github.com/users/xinaesthete/followers","following_url":"https://api.github.com/users/xinaesthete/following{/other_user}","gists_url":"https://api.github.com/users/xinaesthete/gists{/gist_id}","starred_url":"https://api.github.com/users/xinaesthete/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xinaesthete/subscriptions","organizations_url":"https://api.github.com/users/xinaesthete/orgs","repos_url":"https://api.github.com/users/xinaesthete/repos","events_url":"https://api.github.com/users/xinaesthete/events{/privacy}","received_events_url":"https://api.github.com/users/xinaesthete/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":19,"created_at":"2014-08-04T17:47:26Z","updated_at":"2014-08-05T18:24:20Z","closed_at":"2014-08-05T18:24:20Z","author_association":"NONE","body":"Simple bug and easy enough to reproduce. I'm sure it's been noticed before but maybe ignored as it's also easy to work around.\n\n1) Make a new project with the wizard, including Eclipse project files.\n\n2) Add the projects to a workspace\n\n3) All projects apart from 'core' have errors because they point to 'xxx-core'.\n\nRenaming the core project is enough to make it all work successfully.\n\nI have a feeling that at some point in the process of cloning and moving a project around I might have even needed to make the inverse change (renaming to just 'core') but not sure how to repro, nor am I confident of my memory of that.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2204/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2203","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2203/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2203/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2203/events","html_url":"https://github.com/libgdx/libgdx/pull/2203","id":39441829,"number":2203,"title":"Add Input.isKeyJustPressed() method.","user":{"login":"GreenLightning","id":1459067,"avatar_url":"https://avatars0.githubusercontent.com/u/1459067?v=4","gravatar_id":"","url":"https://api.github.com/users/GreenLightning","html_url":"https://github.com/GreenLightning","followers_url":"https://api.github.com/users/GreenLightning/followers","following_url":"https://api.github.com/users/GreenLightning/following{/other_user}","gists_url":"https://api.github.com/users/GreenLightning/gists{/gist_id}","starred_url":"https://api.github.com/users/GreenLightning/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/GreenLightning/subscriptions","organizations_url":"https://api.github.com/users/GreenLightning/orgs","repos_url":"https://api.github.com/users/GreenLightning/repos","events_url":"https://api.github.com/users/GreenLightning/events{/privacy}","received_events_url":"https://api.github.com/users/GreenLightning/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2014-08-04T17:26:07Z","updated_at":"2014-08-05T12:48:56Z","closed_at":"2014-08-05T12:23:01Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2203","html_url":"https://github.com/libgdx/libgdx/pull/2203","diff_url":"https://github.com/libgdx/libgdx/pull/2203.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2203.patch"},"body":"PR for issue #2200.\n\nThis adds the isKeyJustPressed(int) method similar to the justTouched() method to the Input class. It only returns true if the button has been pressed since the last call to render.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2203/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2202","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2202/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2202/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2202/events","html_url":"https://github.com/libgdx/libgdx/pull/2202","id":39420509,"number":2202,"title":"Added steering behaviors to gdx-ai extension.","user":{"login":"davebaol","id":2366334,"avatar_url":"https://avatars3.githubusercontent.com/u/2366334?v=4","gravatar_id":"","url":"https://api.github.com/users/davebaol","html_url":"https://github.com/davebaol","followers_url":"https://api.github.com/users/davebaol/followers","following_url":"https://api.github.com/users/davebaol/following{/other_user}","gists_url":"https://api.github.com/users/davebaol/gists{/gist_id}","starred_url":"https://api.github.com/users/davebaol/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davebaol/subscriptions","organizations_url":"https://api.github.com/users/davebaol/orgs","repos_url":"https://api.github.com/users/davebaol/repos","events_url":"https://api.github.com/users/davebaol/events{/privacy}","received_events_url":"https://api.github.com/users/davebaol/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":83,"created_at":"2014-08-04T13:31:51Z","updated_at":"2014-09-18T05:26:14Z","closed_at":"2014-09-17T14:04:08Z","author_association":"MEMBER","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2202","html_url":"https://github.com/libgdx/libgdx/pull/2202","diff_url":"https://github.com/libgdx/libgdx/pull/2202.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2202.patch"},"body":"EDIT:\n- [steering behaviors wiki page](https://github.com/libgdx/libgdx/wiki/Steering-Behaviors)\n- [TODO list](https://github.com/libgdx/libgdx/pull/2202#issuecomment-51319245).\n\nThis PR adds steering behaviors for 2D and 2.5D, suitable for most games.\nMost steering behaviors work for full 3D too, excluded those behaviors that explicitly have an angular component, such as ReachOrientation, Face, LookWhereYouAreGoing and Wander (this is because we would need to change the representation of orientation and angular velocity from float values to Vector3 and Quaternion).\nThe other behaviors only work linearly, so none of them requires any modification for full 3D because the equations work unaltered.\nNotice that the entire steering framework assumes that the direction a character is facing does not have to be its direction of motion, thus supporting independent facing that, among other things, allows you to smooth rotation over many frames when the direction abruptly changes.\n\nMainly the developer will have to implement the Steerable interface for the specific \"engine\" he's using: scene2d, box2d, bullet, his own engine or anything else.\nTest classes use scene2d for the sake of simplicity.\n\n@NathanSweet and @Xoppa\nIn the test classes I'm using `com.badlogic.gdx.tests.g3d.BaseG3dHudTest.CollapsableWindow`.\nLooks like I have to use a `ScrollPane` to make it work properly.\nWithout the scrollpane when you double-click the title bar to expand the collapsed window one of the sliders may riceive both click events depending on the specific layout.\nUsing `stage.setDebugAll(true)` you can clearly see that when the window is collapsed the title bar is vertically centered to the layout and the underlying non-visible components will receive click events.\nTo replicate the issue replace \n\n``` java\n        ScrollPane pane = new ScrollPane(table, container.skin);\n        pane.setFadeScrollBars(false);\n        window.add(pane);\n```\n\nwith\n\n``` java\n        window.add(table);\n```\n\ninside the `createDetailWindow` method of the class `com.badlogic.gdx.tests.ai.steer.SteeringTest`.\nThen run the Face behavior of the SteeringBehaviorTest. The \"Deceleration Radius\" slider will change when the Face window is collapsed and you click on the title bar.\nAny idea how to fix this?\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2202/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2201","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2201/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2201/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2201/events","html_url":"https://github.com/libgdx/libgdx/pull/2201","id":39369243,"number":2201,"title":"Animation PlayMode.LOOP_RANDOM fixed","user":{"login":"nooone","id":5896510,"avatar_url":"https://avatars3.githubusercontent.com/u/5896510?v=4","gravatar_id":"","url":"https://api.github.com/users/nooone","html_url":"https://github.com/nooone","followers_url":"https://api.github.com/users/nooone/followers","following_url":"https://api.github.com/users/nooone/following{/other_user}","gists_url":"https://api.github.com/users/nooone/gists{/gist_id}","starred_url":"https://api.github.com/users/nooone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nooone/subscriptions","organizations_url":"https://api.github.com/users/nooone/orgs","repos_url":"https://api.github.com/users/nooone/repos","events_url":"https://api.github.com/users/nooone/events{/privacy}","received_events_url":"https://api.github.com/users/nooone/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2014-08-03T12:20:17Z","updated_at":"2014-08-30T12:01:33Z","closed_at":"2014-08-04T13:09:35Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2201","html_url":"https://github.com/libgdx/libgdx/pull/2201","diff_url":"https://github.com/libgdx/libgdx/pull/2201.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2201.patch"},"body":"I noticed that in case `PlayMode.LOOP_RANDOM` is used in `Animation`, the `frameDuration` does not apply, but the texture region is changed in every frame.\n\nThis PR should fix that and keep the same texture region for as long as a frame duration. I used a small hack by using the last deltaTime to check which frameNumber there would have been in the past. I think that should be okay though.\n\nIt might happen though that because of the randomness the same texture region can be picked multiple times in a row which might not be what's expected. I'd expect it to choose a random region, but not the same one again. Because that would also contradict frameDuration somehow and makes the animation look... laggy.\n\nBut since I wasn't sure about that, I've kept it the way it was for now. Should that be changed as well?\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2201/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2200","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2200/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2200/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2200/events","html_url":"https://github.com/libgdx/libgdx/issues/2200","id":39367597,"number":2200,"title":"Input.isKeyJustPressed() method?","user":{"login":"GreenLightning","id":1459067,"avatar_url":"https://avatars0.githubusercontent.com/u/1459067?v=4","gravatar_id":"","url":"https://api.github.com/users/GreenLightning","html_url":"https://github.com/GreenLightning","followers_url":"https://api.github.com/users/GreenLightning/followers","following_url":"https://api.github.com/users/GreenLightning/following{/other_user}","gists_url":"https://api.github.com/users/GreenLightning/gists{/gist_id}","starred_url":"https://api.github.com/users/GreenLightning/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/GreenLightning/subscriptions","organizations_url":"https://api.github.com/users/GreenLightning/orgs","repos_url":"https://api.github.com/users/GreenLightning/repos","events_url":"https://api.github.com/users/GreenLightning/events{/privacy}","received_events_url":"https://api.github.com/users/GreenLightning/received_events","type":"User","site_admin":false},"labels":[{"id":11336982,"url":"https://api.github.com/repos/libgdx/libgdx/labels/enhancement","name":"enhancement","color":"84b6eb","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2014-08-03T10:14:39Z","updated_at":"2014-08-05T12:31:27Z","closed_at":"2014-08-05T12:31:27Z","author_association":"CONTRIBUTOR","body":"I would find a `isKeyJustPressed(int)` method similar to the `justTouched()` method very helpful.\n\nI know this kind of event can be captured using `InputProcessor`, but this method would come in handy if\n- you can't easily use `InputProcessor`, for example if you have several game objects that want to listen for input. In that case you need to write another class which manages an InputMultiplexer and make it available to all objects that want to listen to input.\n- you just want to check one button. Implementing InputProcessor or creating an annonymous subclass of InputAdapter seems like a lot of boiler plate code for one button.\n- you need things to happen at a specific point / in a specific order in your `render()` method. This  requires you to create flags for all your buttons and then check them in the desired order in the render method.\n\nI can make a PR if you want...\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2200/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2199","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2199/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2199/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2199/events","html_url":"https://github.com/libgdx/libgdx/pull/2199","id":39360723,"number":2199,"title":"ImageTextButton#setText(CharSequence) now, instead of taking String","user":{"login":"broken-e","id":2888439,"avatar_url":"https://avatars3.githubusercontent.com/u/2888439?v=4","gravatar_id":"","url":"https://api.github.com/users/broken-e","html_url":"https://github.com/broken-e","followers_url":"https://api.github.com/users/broken-e/followers","following_url":"https://api.github.com/users/broken-e/following{/other_user}","gists_url":"https://api.github.com/users/broken-e/gists{/gist_id}","starred_url":"https://api.github.com/users/broken-e/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/broken-e/subscriptions","organizations_url":"https://api.github.com/users/broken-e/orgs","repos_url":"https://api.github.com/users/broken-e/repos","events_url":"https://api.github.com/users/broken-e/events{/privacy}","received_events_url":"https://api.github.com/users/broken-e/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2014-08-03T00:50:16Z","updated_at":"2014-08-03T06:16:57Z","closed_at":"2014-08-03T06:16:57Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2199","html_url":"https://github.com/libgdx/libgdx/pull/2199","diff_url":"https://github.com/libgdx/libgdx/pull/2199.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2199.patch"},"body":"Changed setText of ImageTextButton to take a CharSequence instead of String.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2199/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2198","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2198/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2198/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2198/events","html_url":"https://github.com/libgdx/libgdx/issues/2198","id":39354089,"number":2198,"title":"GdxRuntimeException: Couldn't load shared library 'libgdx64.dylib' for target: Mac OS X, 64-bit","user":{"login":"fechy","id":1142092,"avatar_url":"https://avatars0.githubusercontent.com/u/1142092?v=4","gravatar_id":"","url":"https://api.github.com/users/fechy","html_url":"https://github.com/fechy","followers_url":"https://api.github.com/users/fechy/followers","following_url":"https://api.github.com/users/fechy/following{/other_user}","gists_url":"https://api.github.com/users/fechy/gists{/gist_id}","starred_url":"https://api.github.com/users/fechy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fechy/subscriptions","organizations_url":"https://api.github.com/users/fechy/orgs","repos_url":"https://api.github.com/users/fechy/repos","events_url":"https://api.github.com/users/fechy/events{/privacy}","received_events_url":"https://api.github.com/users/fechy/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2014-08-02T18:10:31Z","updated_at":"2015-12-23T21:58:17Z","closed_at":"2014-08-04T13:12:27Z","author_association":"NONE","body":"Hello,\n\nSince the latest build (`1.2.1-SNAPSHOT`) Im getting this exception on Desktop:\n\n``` java\nException in thread \"main\" com.badlogic.gdx.utils.GdxRuntimeException: Couldn't load shared library 'libgdx64.dylib' for target: Mac OS X, 64-bit\n    at com.badlogic.gdx.utils.SharedLibraryLoader.load(SharedLibraryLoader.java:117)\n    at com.badlogic.gdx.utils.GdxNativesLoader.load(GdxNativesLoader.java:34)\n    at com.badlogic.gdx.backends.lwjgl.LwjglNativesLoader.load(LwjglNativesLoader.java:47)\n    at com.badlogic.gdx.backends.lwjgl.LwjglApplication.<init>(LwjglApplication.java:76)\n    at com.badlogic.gdx.backends.lwjgl.LwjglApplication.<init>(LwjglApplication.java:64)\n    at com.kingmonkey.badfermin.Main.main(Main.java:60)\nCaused by: com.badlogic.gdx.utils.GdxRuntimeException: Unable to read file for extraction: libgdx64.dylib\n    at com.badlogic.gdx.utils.SharedLibraryLoader.readFile(SharedLibraryLoader.java:125)\n    at com.badlogic.gdx.utils.SharedLibraryLoader.loadFile(SharedLibraryLoader.java:255)\n    at com.badlogic.gdx.utils.SharedLibraryLoader.load(SharedLibraryLoader.java:114)\n```\n\nMy LwjglApplicationConfiguration looks like:\n\n``` java\nLwjglApplicationConfiguration cfg = new LwjglApplicationConfiguration();\ncfg.title = GameConfig.GAME_TITLE;\ncfg.vSyncEnabled = true;\ncfg.useGL30 = true;\ncfg.width = 480;\ncfg.height = 800;\n```\n\nSetting useGL30 to `false` doesn't solve it :( \n\nAny idea what might it be?\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2198/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2197","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2197/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2197/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2197/events","html_url":"https://github.com/libgdx/libgdx/issues/2197","id":39338846,"number":2197,"title":"1.2.1 Release timeline","user":{"login":"jrenner","id":1393288,"avatar_url":"https://avatars1.githubusercontent.com/u/1393288?v=4","gravatar_id":"","url":"https://api.github.com/users/jrenner","html_url":"https://github.com/jrenner","followers_url":"https://api.github.com/users/jrenner/followers","following_url":"https://api.github.com/users/jrenner/following{/other_user}","gists_url":"https://api.github.com/users/jrenner/gists{/gist_id}","starred_url":"https://api.github.com/users/jrenner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jrenner/subscriptions","organizations_url":"https://api.github.com/users/jrenner/orgs","repos_url":"https://api.github.com/users/jrenner/repos","events_url":"https://api.github.com/users/jrenner/events{/privacy}","received_events_url":"https://api.github.com/users/jrenner/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":15,"created_at":"2014-08-02T01:04:01Z","updated_at":"2014-08-09T18:10:58Z","closed_at":"2014-08-09T18:10:58Z","author_association":"OWNER","body":"I think we should start thinking about a 1.2.1 release. It contains some pretty important features, such as:\n- the new 3D particle system\n- bullet GC fixes\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2197/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2196","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2196/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2196/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2196/events","html_url":"https://github.com/libgdx/libgdx/issues/2196","id":39327595,"number":2196,"title":"Particle System fails to load without 'premultipliedAlpha' being set in the options","user":{"login":"molp","id":1836282,"avatar_url":"https://avatars1.githubusercontent.com/u/1836282?v=4","gravatar_id":"","url":"https://api.github.com/users/molp","html_url":"https://github.com/molp","followers_url":"https://api.github.com/users/molp/followers","following_url":"https://api.github.com/users/molp/following{/other_user}","gists_url":"https://api.github.com/users/molp/gists{/gist_id}","starred_url":"https://api.github.com/users/molp/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/molp/subscriptions","organizations_url":"https://api.github.com/users/molp/orgs","repos_url":"https://api.github.com/users/molp/repos","events_url":"https://api.github.com/users/molp/events{/privacy}","received_events_url":"https://api.github.com/users/molp/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":11,"created_at":"2014-08-01T21:07:14Z","updated_at":"2014-10-01T19:33:45Z","closed_at":"2014-08-02T04:44:24Z","author_association":"NONE","body":"I just upgraded to the latest nightlies and there was a change in the particle system and editor that made it necessary to add \n    `premultipliedAlpha`\nto the \n   `- Options -`\nblock or else the particle system wouldn't load in the game or in the editor. \n\nTo not break existing projects I think it would be good to make premultipliedAlpha \n1. disabled by default and \n2. not mandatory in the decription of a particle system.\n\nStacktrace I encountered:\n\n`````` java\nException in thread \"LWJGL Application\" java.lang.RuntimeException: Error parsing emitter: - Delay -\n    at com.badlogic.gdx.graphics.g2d.ParticleEmitter.load(ParticleEmitter.java:940)\n    at com.badlogic.gdx.graphics.g2d.ParticleEmitter.<init>(ParticleEmitter.java:94)\n    at com.badlogic.gdx.graphics.g2d.ParticleEffect.loadEmitters(ParticleEffect.java:158)\n    at com.badlogic.gdx.graphics.g2d.ParticleEffect.load(ParticleEffect.java:138)\n    at de.qx.blockadillo.level.EffectManager.init(EffectManager.java:159)\n    at de.qx.blockadillo.screen.level.LevelScreen.assetsLoaded(LevelScreen.java:223)\n    at de.qx.blockadillo.screen.GameScreen.render(GameScreen.java:71)\n    at com.badlogic.gdx.Game.render(Game.java:46)\n    at de.qx.blockadillo.BlockadilloWithNoSettings.render(BlockadilloWithNoSettings.java:205)\n    at com.badlogic.gdx.backends.lwjgl.LwjglApplication.mainLoop(LwjglApplication.java:206)\n    at com.badlogic.gdx.backends.lwjgl.LwjglApplication$1.run(LwjglApplication.java:114)\nCaused by: java.lang.NumberFormatException: For input string: \"- Count -\"\n    at sun.misc.FloatingDecimal.readJavaFormatString(FloatingDecimal.java:1241)\n    at java.lang.Float.parseFloat(Float.java:452)\n    at com.badlogic.gdx.graphics.g2d.ParticleEmitter.readFloat(ParticleEmitter.java:959)\n    at com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue.load(ParticleEmitter.java:1092)\n    at com.badlogic.gdx.graphics.g2d.ParticleEmitter.load(ParticleEmitter.java:895)\n    ... 10 more```\n``````\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2196/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2195","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2195/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2195/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2195/events","html_url":"https://github.com/libgdx/libgdx/issues/2195","id":39281752,"number":2195,"title":"Bullet Ray test not working in latest nightly update","user":{"login":"manishsinghrawat","id":7146699,"avatar_url":"https://avatars2.githubusercontent.com/u/7146699?v=4","gravatar_id":"","url":"https://api.github.com/users/manishsinghrawat","html_url":"https://github.com/manishsinghrawat","followers_url":"https://api.github.com/users/manishsinghrawat/followers","following_url":"https://api.github.com/users/manishsinghrawat/following{/other_user}","gists_url":"https://api.github.com/users/manishsinghrawat/gists{/gist_id}","starred_url":"https://api.github.com/users/manishsinghrawat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/manishsinghrawat/subscriptions","organizations_url":"https://api.github.com/users/manishsinghrawat/orgs","repos_url":"https://api.github.com/users/manishsinghrawat/repos","events_url":"https://api.github.com/users/manishsinghrawat/events{/privacy}","received_events_url":"https://api.github.com/users/manishsinghrawat/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-08-01T11:28:16Z","updated_at":"2014-08-01T15:07:23Z","closed_at":"2014-08-01T11:39:47Z","author_association":"NONE","body":"This is code i have been running with previous version\n\nrayFrom.set(xposition,10,yposition);\nrayTo.set(xposition,-10,yposition);\n\nmatFrom.setToTranslation(rayFrom);\nmatTo.setToTranslation(rayTo);\n\nRayCB.setCollisionObject(null);\nRayCB.setClosestHitFraction(1f);\nRayCB.getRayFromWorld().setValue(rayFrom.x, rayFrom.y, rayFrom.z);\nRayCB.getRayToWorld().setValue(rayTo.x, rayTo.y, rayTo.z);\n\nbtCollisionWorld.rayTestSingle(matFrom, matTo, scenebody, scenebody.getCollisionShape(),scenebody.getWorldTransform(),RayCB);\n\nbtVector3 normal=RayCB.getHitNormalWorld();\n\nEarlier this code ran flawlessly except some gc glitches\nModified code for latest update returns a Vector 3 with (0,0,0)\n\nfollowing lines wont work\nRayCB.getRayFromWorld().setValue(rayFrom.x, rayFrom.y, rayFrom.z);\nRayCB.getRayToWorld().setValue(rayTo.x, rayTo.y, rayTo.z);\n\nchanging them to \nRayCB.setRayFromWorld(rayFrom);\nRayCB.setRayToWorld(rayTo);\nisnt working either\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2195/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2194","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2194/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2194/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2194/events","html_url":"https://github.com/libgdx/libgdx/issues/2194","id":39280953,"number":2194,"title":"Request: y-up for TextureRegion","user":{"login":"Hronom","id":429993,"avatar_url":"https://avatars3.githubusercontent.com/u/429993?v=4","gravatar_id":"","url":"https://api.github.com/users/Hronom","html_url":"https://github.com/Hronom","followers_url":"https://api.github.com/users/Hronom/followers","following_url":"https://api.github.com/users/Hronom/following{/other_user}","gists_url":"https://api.github.com/users/Hronom/gists{/gist_id}","starred_url":"https://api.github.com/users/Hronom/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Hronom/subscriptions","organizations_url":"https://api.github.com/users/Hronom/orgs","repos_url":"https://api.github.com/users/Hronom/repos","events_url":"https://api.github.com/users/Hronom/events{/privacy}","received_events_url":"https://api.github.com/users/Hronom/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2014-08-01T11:12:42Z","updated_at":"2014-08-02T12:37:18Z","closed_at":"2014-08-01T11:25:07Z","author_association":"NONE","body":"Hello guys, i'm currently developing my animation editor, and here is my problem.\nLibGDX use y-up system everywhere, but in TextureRegion y is down. In my editor I create rectangle as frame(Region for TextureRegion), then I collect rectangles in y-up coordinates system, but then I start use collected frames for setting TextureRegion I need to convert to y-down coordinate system which generates many boilerplate code. Please could u use ONE coordinate system in entire library or at least in graphic part of lib. Different coordinates systems makes a lot problems. Thanks.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2194/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2193","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2193/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2193/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2193/events","html_url":"https://github.com/libgdx/libgdx/issues/2193","id":39279518,"number":2193,"title":"Java error when calling SpriteBatch.dispose()","user":{"login":"haimat","id":6633976,"avatar_url":"https://avatars2.githubusercontent.com/u/6633976?v=4","gravatar_id":"","url":"https://api.github.com/users/haimat","html_url":"https://github.com/haimat","followers_url":"https://api.github.com/users/haimat/followers","following_url":"https://api.github.com/users/haimat/following{/other_user}","gists_url":"https://api.github.com/users/haimat/gists{/gist_id}","starred_url":"https://api.github.com/users/haimat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/haimat/subscriptions","organizations_url":"https://api.github.com/users/haimat/orgs","repos_url":"https://api.github.com/users/haimat/repos","events_url":"https://api.github.com/users/haimat/events{/privacy}","received_events_url":"https://api.github.com/users/haimat/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2014-08-01T10:47:18Z","updated_at":"2014-08-01T11:47:38Z","closed_at":"2014-08-01T11:47:38Z","author_association":"NONE","body":"I am running latest libGDX nightlies with latest Java 8.0_11 (also tried with Java 7). When I call the dispose() method of my SpriteBatch I do get the following error on the shell:\n\n```\n*** Error in `/opt/oracle-java/jdk1.8.0_11/bin/java': corrupted double-linked list: 0x94d00010 ***\n```\n\nWhen I disable the call to SpriteBatch.dispose() then this error does not happen. But when I do make the call, then this error comes in 100% of all cases.\n\nI nailed the problem down to the following piece of code, which I use to draw a texture like a tile as background behind everything else:\n\n```\nspriteBatch.draw(background, startX + x * texWidth, startY + y * texHeight, texWidth, texHeight);\n```\n\nAs soon as I comment out this line above, then the error does not happen any more, even if I call dispose(). Interesting thing: I use the same SpriteBatch object to render various other sprites as well.\n\nAny ideas?\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2193/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2192","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2192/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2192/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2192/events","html_url":"https://github.com/libgdx/libgdx/issues/2192","id":39257460,"number":2192,"title":"Double stages & viewports bug","user":{"login":"hypertextcorp","id":7280384,"avatar_url":"https://avatars1.githubusercontent.com/u/7280384?v=4","gravatar_id":"","url":"https://api.github.com/users/hypertextcorp","html_url":"https://github.com/hypertextcorp","followers_url":"https://api.github.com/users/hypertextcorp/followers","following_url":"https://api.github.com/users/hypertextcorp/following{/other_user}","gists_url":"https://api.github.com/users/hypertextcorp/gists{/gist_id}","starred_url":"https://api.github.com/users/hypertextcorp/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hypertextcorp/subscriptions","organizations_url":"https://api.github.com/users/hypertextcorp/orgs","repos_url":"https://api.github.com/users/hypertextcorp/repos","events_url":"https://api.github.com/users/hypertextcorp/events{/privacy}","received_events_url":"https://api.github.com/users/hypertextcorp/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2014-08-01T02:50:02Z","updated_at":"2014-08-05T08:25:07Z","closed_at":"2014-08-01T09:02:40Z","author_association":"NONE","body":"I have declared two Stage objects in my Screen class with different Viewport.\n\nStage stageBackground = new Stage(new StretchViewport(Gdx.graphics.getWidth(), Gdx.graphics.getHeight()));\nstageBackground.addActor(bgImage);\n\nStage stageActor= new Stage(new ScalingViewport(Scaling.fit, 480f, 800f, new OrthographicCamera()));\nstageActor.addActor(mySquare);\n\nBut the last Viewport will be apply to the both stages.\nIs it a bug?\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2192/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2191","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2191/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2191/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2191/events","html_url":"https://github.com/libgdx/libgdx/pull/2191","id":39234882,"number":2191,"title":"Add outline and shadow rendering to gdx-freetype","user":{"login":"Doccrazy","id":5091018,"avatar_url":"https://avatars0.githubusercontent.com/u/5091018?v=4","gravatar_id":"","url":"https://api.github.com/users/Doccrazy","html_url":"https://github.com/Doccrazy","followers_url":"https://api.github.com/users/Doccrazy/followers","following_url":"https://api.github.com/users/Doccrazy/following{/other_user}","gists_url":"https://api.github.com/users/Doccrazy/gists{/gist_id}","starred_url":"https://api.github.com/users/Doccrazy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Doccrazy/subscriptions","organizations_url":"https://api.github.com/users/Doccrazy/orgs","repos_url":"https://api.github.com/users/Doccrazy/repos","events_url":"https://api.github.com/users/Doccrazy/events{/privacy}","received_events_url":"https://api.github.com/users/Doccrazy/received_events","type":"User","site_admin":false},"labels":[{"id":11336982,"url":"https://api.github.com/repos/libgdx/libgdx/labels/enhancement","name":"enhancement","color":"84b6eb","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":48,"created_at":"2014-07-31T20:36:07Z","updated_at":"2015-01-29T14:24:55Z","closed_at":"2015-01-29T04:07:56Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2191","html_url":"https://github.com/libgdx/libgdx/pull/2191","diff_url":"https://github.com/libgdx/libgdx/pull/2191.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2191.patch"},"body":"The current rendering styles of gdx-freetype are somewhat limited, requiring you to revert to external tools if you want any more fancy effects, such as outlines or shadows. Without shadow, text is really hard to read in any normal game.\n\nTo address this issue, this request adds a couple of new font parameters (documented in code):\n- color: Foreground color; required as multi-colored fonts cannot be colored on rendering by GL. Defaults to white like before\n- borderWidth / borderColor: Outline, defaults to off. Note: large border widths may lead to overlap, but this should be way beyond the \"looks good\" zone\n- borderStraight: Line ending style for outline (curved or straight)\n- shadowOffset / shadowColor: Shadow, defaults to off\n\nExample rendering:\n![gdx-freetype](https://cloud.githubusercontent.com/assets/5091018/3770809/022612fa-18ef-11e4-8f64-09bfb8e29044.png)\n\nWhile implementing, I found that the current freetype JNI interface was a little weird, so I did some refactoring (first commit).\n\nOnly tested on Win64.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2191/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2190","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2190/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2190/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2190/events","html_url":"https://github.com/libgdx/libgdx/pull/2190","id":39232437,"number":2190,"title":"Initial state should be entered","user":{"login":"nooone","id":5896510,"avatar_url":"https://avatars3.githubusercontent.com/u/5896510?v=4","gravatar_id":"","url":"https://api.github.com/users/nooone","html_url":"https://github.com/nooone","followers_url":"https://api.github.com/users/nooone/followers","following_url":"https://api.github.com/users/nooone/following{/other_user}","gists_url":"https://api.github.com/users/nooone/gists{/gist_id}","starred_url":"https://api.github.com/users/nooone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nooone/subscriptions","organizations_url":"https://api.github.com/users/nooone/orgs","repos_url":"https://api.github.com/users/nooone/repos","events_url":"https://api.github.com/users/nooone/events{/privacy}","received_events_url":"https://api.github.com/users/nooone/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2014-07-31T20:08:33Z","updated_at":"2014-08-30T12:01:23Z","closed_at":"2014-08-01T10:40:40Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2190","html_url":"https://github.com/libgdx/libgdx/pull/2190","diff_url":"https://github.com/libgdx/libgdx/pull/2190.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2190.patch"},"body":"When I was implementing some enemy AI with the `StateMachine`, I stumbled over a \"feature\" that I did not expect at first.\n\nI was assuming that whenever a `State` gets `update()`ed, it has been `enter()`ed before. However in case of the initial state this does not happen. I think it won't harm anyone to enter the initial state as well, and in my case it saved me from some NPEs :)\n\nMaybe we should also add a call to `exit()` in case the current state is not `null` when `setInitialState()` is called. Usually this should not be called several times, but it is public and the API does not deny it. If I'd use the method myself, I'd expect it to `exit()` my current state as well.\n\n@davebaol: What do you think?\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2190/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2189","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2189/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2189/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2189/events","html_url":"https://github.com/libgdx/libgdx/pull/2189","id":39220882,"number":2189,"title":"Fix test particle file","user":{"login":"Tom-Ski","id":4346114,"avatar_url":"https://avatars0.githubusercontent.com/u/4346114?v=4","gravatar_id":"","url":"https://api.github.com/users/Tom-Ski","html_url":"https://github.com/Tom-Ski","followers_url":"https://api.github.com/users/Tom-Ski/followers","following_url":"https://api.github.com/users/Tom-Ski/following{/other_user}","gists_url":"https://api.github.com/users/Tom-Ski/gists{/gist_id}","starred_url":"https://api.github.com/users/Tom-Ski/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Tom-Ski/subscriptions","organizations_url":"https://api.github.com/users/Tom-Ski/orgs","repos_url":"https://api.github.com/users/Tom-Ski/repos","events_url":"https://api.github.com/users/Tom-Ski/events{/privacy}","received_events_url":"https://api.github.com/users/Tom-Ski/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2014-07-31T18:04:58Z","updated_at":"2014-07-31T18:11:04Z","closed_at":"2014-07-31T18:11:04Z","author_association":"OWNER","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2189","html_url":"https://github.com/libgdx/libgdx/pull/2189","diff_url":"https://github.com/libgdx/libgdx/pull/2189.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2189.patch"},"body":"Particle loading cares about order\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2189/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2188","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2188/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2188/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2188/events","html_url":"https://github.com/libgdx/libgdx/issues/2188","id":39215600,"number":2188,"title":"ParticleEffect ImagePath does not get read","user":{"login":"daranus","id":8322297,"avatar_url":"https://avatars3.githubusercontent.com/u/8322297?v=4","gravatar_id":"","url":"https://api.github.com/users/daranus","html_url":"https://github.com/daranus","followers_url":"https://api.github.com/users/daranus/followers","following_url":"https://api.github.com/users/daranus/following{/other_user}","gists_url":"https://api.github.com/users/daranus/gists{/gist_id}","starred_url":"https://api.github.com/users/daranus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/daranus/subscriptions","organizations_url":"https://api.github.com/users/daranus/orgs","repos_url":"https://api.github.com/users/daranus/repos","events_url":"https://api.github.com/users/daranus/events{/privacy}","received_events_url":"https://api.github.com/users/daranus/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-07-31T17:05:48Z","updated_at":"2014-07-31T18:03:38Z","closed_at":"2014-07-31T18:03:38Z","author_association":"NONE","body":"Particle File:\nName:bomb\nContent:http://pastebin.com/qMN625Ww\n\nCode to Test:\nParticleEffect effect = new ParticleEffect();\neffect.load(Gdx.files.internal(\"bomb\"), new TextureAtlas());\nSystem.out.println(effect.getEmitters().get(0).getImagePath());\n\nImagepath should be C:\\Users\\Flo\\Documents\\workspaceLibGDX\\RunOrDie-android\\assets\\particles\\bomb.png\n\nImagepath is null.\n\nFix for me: Manual setting of the ImagePath: effect.getEmitters().get(0).setImagePath(\"bomb.png\");\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2188/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2187","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2187/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2187/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2187/events","html_url":"https://github.com/libgdx/libgdx/issues/2187","id":39200659,"number":2187,"title":"Gradle instructions for Freetype","user":{"login":"ashes999","id":18432,"avatar_url":"https://avatars1.githubusercontent.com/u/18432?v=4","gravatar_id":"","url":"https://api.github.com/users/ashes999","html_url":"https://github.com/ashes999","followers_url":"https://api.github.com/users/ashes999/followers","following_url":"https://api.github.com/users/ashes999/following{/other_user}","gists_url":"https://api.github.com/users/ashes999/gists{/gist_id}","starred_url":"https://api.github.com/users/ashes999/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ashes999/subscriptions","organizations_url":"https://api.github.com/users/ashes999/orgs","repos_url":"https://api.github.com/users/ashes999/repos","events_url":"https://api.github.com/users/ashes999/events{/privacy}","received_events_url":"https://api.github.com/users/ashes999/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2014-07-31T14:39:20Z","updated_at":"2014-07-31T14:59:35Z","closed_at":"2014-07-31T14:42:14Z","author_association":"NONE","body":"Hi,\n\nI had Freetype font generation integrated in a pre-gradle era libGDX project. I started a new project, and noticed that the instructions [on this wiki page](https://github.com/libgdx/libgdx/wiki/Gdx-freetype#how-to-put-gdx-freetype-in-your-project) still mention extracting JARs and dropping them into `libs`.\n\nI'm still new to Gradle and can't quite figure out how to do this. Could someone update the instructions, or provide alternate instructions below it, so that this can become a no-brainer?\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2187/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2186","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2186/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2186/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2186/events","html_url":"https://github.com/libgdx/libgdx/pull/2186","id":39188645,"number":2186,"title":"Reverted to using NSLog (again). Fixes #2113","user":{"login":"alexander-mironov","id":1929058,"avatar_url":"https://avatars2.githubusercontent.com/u/1929058?v=4","gravatar_id":"","url":"https://api.github.com/users/alexander-mironov","html_url":"https://github.com/alexander-mironov","followers_url":"https://api.github.com/users/alexander-mironov/followers","following_url":"https://api.github.com/users/alexander-mironov/following{/other_user}","gists_url":"https://api.github.com/users/alexander-mironov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexander-mironov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexander-mironov/subscriptions","organizations_url":"https://api.github.com/users/alexander-mironov/orgs","repos_url":"https://api.github.com/users/alexander-mironov/repos","events_url":"https://api.github.com/users/alexander-mironov/events{/privacy}","received_events_url":"https://api.github.com/users/alexander-mironov/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2014-07-31T12:18:09Z","updated_at":"2014-07-31T12:41:56Z","closed_at":"2014-07-31T12:41:56Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2186","html_url":"https://github.com/libgdx/libgdx/pull/2186","diff_url":"https://github.com/libgdx/libgdx/pull/2186.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2186.patch"},"body":"Since we are using RoboVM 0.0.14 now, we could safely use Foundation.NSLog for logging.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2186/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2185","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2185/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2185/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2185/events","html_url":"https://github.com/libgdx/libgdx/pull/2185","id":39144134,"number":2185,"title":"Add Mappings for Xbox 360 Controller on Windows and Mac","user":{"login":"GreenLightning","id":1459067,"avatar_url":"https://avatars0.githubusercontent.com/u/1459067?v=4","gravatar_id":"","url":"https://api.github.com/users/GreenLightning","html_url":"https://github.com/GreenLightning","followers_url":"https://api.github.com/users/GreenLightning/followers","following_url":"https://api.github.com/users/GreenLightning/following{/other_user}","gists_url":"https://api.github.com/users/GreenLightning/gists{/gist_id}","starred_url":"https://api.github.com/users/GreenLightning/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/GreenLightning/subscriptions","organizations_url":"https://api.github.com/users/GreenLightning/orgs","repos_url":"https://api.github.com/users/GreenLightning/repos","events_url":"https://api.github.com/users/GreenLightning/events{/privacy}","received_events_url":"https://api.github.com/users/GreenLightning/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2014-07-30T22:29:48Z","updated_at":"2014-09-07T16:43:32Z","closed_at":"2014-09-07T16:43:32Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2185","html_url":"https://github.com/libgdx/libgdx/pull/2185","diff_url":"https://github.com/libgdx/libgdx/pull/2185.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2185.patch"},"body":"This is a weird way of doing it, but this adds mappings for the Xbox 360 controller on windows and mac (using the tattiebogle.net driver).\n\nBecause some controls are mapped differently, some fields will stay undefined even if the operating system is supported. For example on Windows AXIS_LEFT_TRIGGER will stay undefined, but on Mac AXIS_BACK_TRIGGERS will stay undefined. This is because the back triggers are mapped to two different axes on Mac, but are combined into one single axis on Windows. For those fields, libgdx users will have to compare the field with the UNDEFINED constant.\n\nWhat do you think?\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2185/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2184","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2184/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2184/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2184/events","html_url":"https://github.com/libgdx/libgdx/pull/2184","id":39106413,"number":2184,"title":"Premultiplied alpha for 2d particle effects","user":{"login":"ollipekka","id":203520,"avatar_url":"https://avatars1.githubusercontent.com/u/203520?v=4","gravatar_id":"","url":"https://api.github.com/users/ollipekka","html_url":"https://github.com/ollipekka","followers_url":"https://api.github.com/users/ollipekka/followers","following_url":"https://api.github.com/users/ollipekka/following{/other_user}","gists_url":"https://api.github.com/users/ollipekka/gists{/gist_id}","starred_url":"https://api.github.com/users/ollipekka/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ollipekka/subscriptions","organizations_url":"https://api.github.com/users/ollipekka/orgs","repos_url":"https://api.github.com/users/ollipekka/repos","events_url":"https://api.github.com/users/ollipekka/events{/privacy}","received_events_url":"https://api.github.com/users/ollipekka/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2014-07-30T15:49:20Z","updated_at":"2014-07-30T17:29:05Z","closed_at":"2014-07-30T17:03:22Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2184","html_url":"https://github.com/libgdx/libgdx/pull/2184","diff_url":"https://github.com/libgdx/libgdx/pull/2184.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2184.patch"},"body":"Updated both the particle effect / emitter and the 2d editor to support premultiplied alpha for particle effects.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2184/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2183","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2183/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2183/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2183/events","html_url":"https://github.com/libgdx/libgdx/pull/2183","id":39103872,"number":2183,"title":"Scene2d: Add positionChanged() method to Actor.","user":{"login":"GreenLightning","id":1459067,"avatar_url":"https://avatars0.githubusercontent.com/u/1459067?v=4","gravatar_id":"","url":"https://api.github.com/users/GreenLightning","html_url":"https://github.com/GreenLightning","followers_url":"https://api.github.com/users/GreenLightning/followers","following_url":"https://api.github.com/users/GreenLightning/following{/other_user}","gists_url":"https://api.github.com/users/GreenLightning/gists{/gist_id}","starred_url":"https://api.github.com/users/GreenLightning/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/GreenLightning/subscriptions","organizations_url":"https://api.github.com/users/GreenLightning/orgs","repos_url":"https://api.github.com/users/GreenLightning/repos","events_url":"https://api.github.com/users/GreenLightning/events{/privacy}","received_events_url":"https://api.github.com/users/GreenLightning/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2014-07-30T15:25:44Z","updated_at":"2014-07-30T17:07:40Z","closed_at":"2014-07-30T17:07:40Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2183","html_url":"https://github.com/libgdx/libgdx/pull/2183","diff_url":"https://github.com/libgdx/libgdx/pull/2183.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2183.patch"},"body":"positionChanged() works like sizeChanged() and provides a way for subclasses to get notified if the position of the Actor changes.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2183/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2182","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2182/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2182/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2182/events","html_url":"https://github.com/libgdx/libgdx/issues/2182","id":39098720,"number":2182,"title":"Detect controller hotplugging","user":{"login":"Getterac7","id":3600185,"avatar_url":"https://avatars0.githubusercontent.com/u/3600185?v=4","gravatar_id":"","url":"https://api.github.com/users/Getterac7","html_url":"https://github.com/Getterac7","followers_url":"https://api.github.com/users/Getterac7/followers","following_url":"https://api.github.com/users/Getterac7/following{/other_user}","gists_url":"https://api.github.com/users/Getterac7/gists{/gist_id}","starred_url":"https://api.github.com/users/Getterac7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Getterac7/subscriptions","organizations_url":"https://api.github.com/users/Getterac7/orgs","repos_url":"https://api.github.com/users/Getterac7/repos","events_url":"https://api.github.com/users/Getterac7/events{/privacy}","received_events_url":"https://api.github.com/users/Getterac7/received_events","type":"User","site_admin":false},"labels":[{"id":119244972,"url":"https://api.github.com/repos/libgdx/libgdx/labels/desktop","name":"desktop","color":"eb6420","default":false},{"id":11336982,"url":"https://api.github.com/repos/libgdx/libgdx/labels/enhancement","name":"enhancement","color":"84b6eb","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":26,"created_at":"2014-07-30T14:39:44Z","updated_at":"2016-08-10T23:13:52Z","closed_at":"2016-01-05T17:11:37Z","author_association":"CONTRIBUTOR","body":"It would be nice to be able to listen for controller (joystick) connect and disconnect events so a user could add a controller and jump in during the middle of a game.\n\nIf that is not possible, maybe an API to scan for controller changes manually.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2182/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2181","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2181/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2181/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2181/events","html_url":"https://github.com/libgdx/libgdx/pull/2181","id":39079206,"number":2181,"title":"New StateMachine with a Stack","user":{"login":"nooone","id":5896510,"avatar_url":"https://avatars3.githubusercontent.com/u/5896510?v=4","gravatar_id":"","url":"https://api.github.com/users/nooone","html_url":"https://github.com/nooone","followers_url":"https://api.github.com/users/nooone/followers","following_url":"https://api.github.com/users/nooone/following{/other_user}","gists_url":"https://api.github.com/users/nooone/gists{/gist_id}","starred_url":"https://api.github.com/users/nooone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nooone/subscriptions","organizations_url":"https://api.github.com/users/nooone/orgs","repos_url":"https://api.github.com/users/nooone/repos","events_url":"https://api.github.com/users/nooone/events{/privacy}","received_events_url":"https://api.github.com/users/nooone/received_events","type":"User","site_admin":false},"labels":[{"id":11336982,"url":"https://api.github.com/repos/libgdx/libgdx/labels/enhancement","name":"enhancement","color":"84b6eb","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2014-07-30T10:27:16Z","updated_at":"2014-08-30T12:02:58Z","closed_at":"2014-07-31T23:48:58Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2181","html_url":"https://github.com/libgdx/libgdx/pull/2181","diff_url":"https://github.com/libgdx/libgdx/pull/2181.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2181.patch"},"body":"Since `StackMachine`s are also handy in case of hierarchical menu structures for example, I added another implemenation which does not only save the previous state, but all states until the current one.\n\nWhen displaying a games menu this could be very useful. One would only need a single `MenuScreen implements Screen` and could then have a state machine for the menus. Each menu would be one state. For example MainMenu, LevelSelectionMenu, LevelLoadingMenu, OptionsMenu, GraphicsSettingsMenu, InputSettingsMenu, ReallyQuitMenu etc...\n\nNow the initial state would be MainMenu, clicking the \"Options\" button might cause a Telegram which will cause a switch of the state to OptionsMenu. Then clicking on \"GraphicsSettingsMenu\" will again cause a transition. What players these days expect is that they can quickly return from there via the Escape key. That's where StackStateMachine is necessary and we can go back all the way from the GraphicsSettingsMenu to the MainMenu, just by using stateMachine.revertToPreviousState(). The default implementation would only allow us to go back a single step.\n\nImplementation details:\nI have added a `boolean` return value to the `revertToPreviousState()` method. In case there was no previous state yet (initial state), this returns false and does nothing. I have also applied this behaviour to the default implementation.\n\nI also made some fields of the DefaultStateMachine protected so I did not have to re-implement all the common functionality and was able to `extend DefaultStateMachine`.\n\n@davebaol What do you think?\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2181/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2180","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2180/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2180/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2180/events","html_url":"https://github.com/libgdx/libgdx/pull/2180","id":39033852,"number":2180,"title":"Avoid ByteBuffer.asFloatBuffer() call, causing heap allocation, on verte...","user":{"login":"code-disaster","id":4644167,"avatar_url":"https://avatars1.githubusercontent.com/u/4644167?v=4","gravatar_id":"","url":"https://api.github.com/users/code-disaster","html_url":"https://github.com/code-disaster","followers_url":"https://api.github.com/users/code-disaster/followers","following_url":"https://api.github.com/users/code-disaster/following{/other_user}","gists_url":"https://api.github.com/users/code-disaster/gists{/gist_id}","starred_url":"https://api.github.com/users/code-disaster/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/code-disaster/subscriptions","organizations_url":"https://api.github.com/users/code-disaster/orgs","repos_url":"https://api.github.com/users/code-disaster/repos","events_url":"https://api.github.com/users/code-disaster/events{/privacy}","received_events_url":"https://api.github.com/users/code-disaster/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2014-07-29T20:54:23Z","updated_at":"2014-08-15T11:57:49Z","closed_at":"2014-07-29T21:09:45Z","author_association":"MEMBER","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2180","html_url":"https://github.com/libgdx/libgdx/pull/2180","diff_url":"https://github.com/libgdx/libgdx/pull/2180.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2180.patch"},"body":"...x array bind.\n\nNew PR for #2179, \"rebased\" (redone, actually) on current master.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2180/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2179","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2179/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2179/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2179/events","html_url":"https://github.com/libgdx/libgdx/pull/2179","id":39027485,"number":2179,"title":"Avoid ByteBuffer.asFloatBuffer() call, causing heap allocation, on every...","user":{"login":"code-disaster","id":4644167,"avatar_url":"https://avatars1.githubusercontent.com/u/4644167?v=4","gravatar_id":"","url":"https://api.github.com/users/code-disaster","html_url":"https://github.com/code-disaster","followers_url":"https://api.github.com/users/code-disaster/followers","following_url":"https://api.github.com/users/code-disaster/following{/other_user}","gists_url":"https://api.github.com/users/code-disaster/gists{/gist_id}","starred_url":"https://api.github.com/users/code-disaster/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/code-disaster/subscriptions","organizations_url":"https://api.github.com/users/code-disaster/orgs","repos_url":"https://api.github.com/users/code-disaster/repos","events_url":"https://api.github.com/users/code-disaster/events{/privacy}","received_events_url":"https://api.github.com/users/code-disaster/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-07-29T19:46:28Z","updated_at":"2014-08-15T11:58:03Z","closed_at":"2014-07-29T20:53:12Z","author_association":"MEMBER","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2179","html_url":"https://github.com/libgdx/libgdx/pull/2179","diff_url":"https://github.com/libgdx/libgdx/pull/2179.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2179.patch"},"body":"... vertex buffer bind.\n\nI found this while trying to optimise Java heap operations in Halfway. Profiler listed Buffer.asFloatBuffer() in our top allocations. Seems like that's been a workaround for an older version of Lwjgl which didn't have a appropriate function implemented.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2179/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2178","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2178/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2178/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2178/events","html_url":"https://github.com/libgdx/libgdx/pull/2178","id":38996391,"number":2178,"title":"Shape interface","user":{"login":"mrgame64","id":5879873,"avatar_url":"https://avatars0.githubusercontent.com/u/5879873?v=4","gravatar_id":"","url":"https://api.github.com/users/mrgame64","html_url":"https://github.com/mrgame64","followers_url":"https://api.github.com/users/mrgame64/followers","following_url":"https://api.github.com/users/mrgame64/following{/other_user}","gists_url":"https://api.github.com/users/mrgame64/gists{/gist_id}","starred_url":"https://api.github.com/users/mrgame64/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mrgame64/subscriptions","organizations_url":"https://api.github.com/users/mrgame64/orgs","repos_url":"https://api.github.com/users/mrgame64/repos","events_url":"https://api.github.com/users/mrgame64/events{/privacy}","received_events_url":"https://api.github.com/users/mrgame64/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":27,"created_at":"2014-07-29T14:50:53Z","updated_at":"2014-11-08T10:45:13Z","closed_at":"2014-09-07T16:44:43Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2178","html_url":"https://github.com/libgdx/libgdx/pull/2178","diff_url":"https://github.com/libgdx/libgdx/pull/2178.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2178.patch"},"body":"Unification of gdx.math shape classes under the Shape interface\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2178/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2177","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2177/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2177/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2177/events","html_url":"https://github.com/libgdx/libgdx/pull/2177","id":38993232,"number":2177,"title":"Yet another A* implementation","user":{"login":"nooone","id":5896510,"avatar_url":"https://avatars3.githubusercontent.com/u/5896510?v=4","gravatar_id":"","url":"https://api.github.com/users/nooone","html_url":"https://github.com/nooone","followers_url":"https://api.github.com/users/nooone/followers","following_url":"https://api.github.com/users/nooone/following{/other_user}","gists_url":"https://api.github.com/users/nooone/gists{/gist_id}","starred_url":"https://api.github.com/users/nooone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nooone/subscriptions","organizations_url":"https://api.github.com/users/nooone/orgs","repos_url":"https://api.github.com/users/nooone/repos","events_url":"https://api.github.com/users/nooone/events{/privacy}","received_events_url":"https://api.github.com/users/nooone/received_events","type":"User","site_admin":false},"labels":[{"id":11336982,"url":"https://api.github.com/repos/libgdx/libgdx/labels/enhancement","name":"enhancement","color":"84b6eb","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2014-07-29T14:20:13Z","updated_at":"2014-09-08T13:43:14Z","closed_at":"2014-09-08T13:16:49Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2177","html_url":"https://github.com/libgdx/libgdx/pull/2177","diff_url":"https://github.com/libgdx/libgdx/pull/2177.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2177.patch"},"body":"I know that there are already two PRs for this topic.\n- https://github.com/libgdx/libgdx/pull/1972\n- https://github.com/libgdx/libgdx/pull/1977\n\nHowever they both seem to over-complicate it a bit. The idea was based on @badlogic 's comment. Each node can return its neighbours, which makes the implementation a lot more simple.\n\nWhat do you guys think?\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2177/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2176","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2176/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2176/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2176/events","html_url":"https://github.com/libgdx/libgdx/pull/2176","id":38965082,"number":2176,"title":"Bullet memory","user":{"login":"jrenner","id":1393288,"avatar_url":"https://avatars1.githubusercontent.com/u/1393288?v=4","gravatar_id":"","url":"https://api.github.com/users/jrenner","html_url":"https://github.com/jrenner","followers_url":"https://api.github.com/users/jrenner/followers","following_url":"https://api.github.com/users/jrenner/following{/other_user}","gists_url":"https://api.github.com/users/jrenner/gists{/gist_id}","starred_url":"https://api.github.com/users/jrenner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jrenner/subscriptions","organizations_url":"https://api.github.com/users/jrenner/orgs","repos_url":"https://api.github.com/users/jrenner/repos","events_url":"https://api.github.com/users/jrenner/events{/privacy}","received_events_url":"https://api.github.com/users/jrenner/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2014-07-29T07:39:14Z","updated_at":"2014-07-29T15:12:45Z","closed_at":"2014-07-29T15:04:44Z","author_association":"OWNER","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2176","html_url":"https://github.com/libgdx/libgdx/pull/2176","diff_url":"https://github.com/libgdx/libgdx/pull/2176.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2176.patch"},"body":"I've been doing lots of raycasting in bullet (see: http://www.java-gaming.org/topics/fps-engine/33931/view.html) and ran into problems where the bullet wrapper was creating a lot of garbage when getting raycast ray positions and hit normals due to btVector3 new object allocation.\n\nIt's currently not possible to get the hit normals without creating a new btVector3 java object. So I have implemented a static temporary object, and also made it publicly available with the appropriate java-doc warning that it is for low-level use.\n\nThen I went through some raycast callbacks and modified their get methods to return the temporary variable.\n\nIf we don't feel good about returning the temporary variable, I'd like to keep the static btVector3.getTemp(), and then change the get methods to something like this:\n\n``` java\npublic btVector3 getHitNormal(btVector3 out) {\n    ...set values and return\n}\n```\n\nthen it's easy enough to grab btVector3.getTemp() and pass it to the method.\n\nBoth solutions solve my garbage collection problem.\n\n@xoppa, let me know what you think.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2176/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}}],"meta":{"x-ratelimit-limit":"5000","x-ratelimit-remaining":"4908","x-ratelimit-reset":"1506844633","x-github-request-id":"B34E:110A:248C1F3:40D602B:59D09600","x-github-media-type":"github.squirrel-girl-preview","link":"<https://api.github.com/repositories/5373551/issues?state=all&page=92>; rel=\"next\", <https://api.github.com/repositories/5373551/issues?state=all&page=164>; rel=\"last\", <https://api.github.com/repositories/5373551/issues?state=all&page=1>; rel=\"first\", <https://api.github.com/repositories/5373551/issues?state=all&page=90>; rel=\"prev\"","etag":"\"a38ddfead9c3b35ca7bda16152db089c\"","status":"200 OK"}}
