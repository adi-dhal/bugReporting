{"data":[{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3858","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3858/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3858/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3858/events","html_url":"https://github.com/libgdx/libgdx/pull/3858","id":134432527,"number":3858,"title":"GWT support for sending float data to a texture.","user":{"login":"barkholt","id":16083107,"avatar_url":"https://avatars3.githubusercontent.com/u/16083107?v=4","gravatar_id":"","url":"https://api.github.com/users/barkholt","html_url":"https://github.com/barkholt","followers_url":"https://api.github.com/users/barkholt/followers","following_url":"https://api.github.com/users/barkholt/following{/other_user}","gists_url":"https://api.github.com/users/barkholt/gists{/gist_id}","starred_url":"https://api.github.com/users/barkholt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/barkholt/subscriptions","organizations_url":"https://api.github.com/users/barkholt/orgs","repos_url":"https://api.github.com/users/barkholt/repos","events_url":"https://api.github.com/users/barkholt/events{/privacy}","received_events_url":"https://api.github.com/users/barkholt/received_events","type":"User","site_admin":false},"labels":[{"id":67383148,"url":"https://api.github.com/repos/libgdx/libgdx/labels/gwt","name":"gwt","color":"5319e7","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-02-17T23:24:37Z","updated_at":"2016-05-11T09:57:47Z","closed_at":"2016-05-11T09:00:28Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3858","html_url":"https://github.com/libgdx/libgdx/pull/3858","diff_url":"https://github.com/libgdx/libgdx/pull/3858.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3858.patch"},"body":"Trying to use FloatTextureData on GWT failed due to the OpenGL wrapper around glTexImage2d unpacking the data into bytes.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3858/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3857","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3857/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3857/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3857/events","html_url":"https://github.com/libgdx/libgdx/pull/3857","id":134398568,"number":3857,"title":"Prepare for gwt-freetype and other emscripten compiled apis","user":{"login":"intrigus","id":10353467,"avatar_url":"https://avatars2.githubusercontent.com/u/10353467?v=4","gravatar_id":"","url":"https://api.github.com/users/intrigus","html_url":"https://github.com/intrigus","followers_url":"https://api.github.com/users/intrigus/followers","following_url":"https://api.github.com/users/intrigus/following{/other_user}","gists_url":"https://api.github.com/users/intrigus/gists{/gist_id}","starred_url":"https://api.github.com/users/intrigus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/intrigus/subscriptions","organizations_url":"https://api.github.com/users/intrigus/orgs","repos_url":"https://api.github.com/users/intrigus/repos","events_url":"https://api.github.com/users/intrigus/events{/privacy}","received_events_url":"https://api.github.com/users/intrigus/received_events","type":"User","site_admin":false},"labels":[{"id":67383148,"url":"https://api.github.com/repos/libgdx/libgdx/labels/gwt","name":"gwt","color":"5319e7","default":false}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2016-02-17T21:02:32Z","updated_at":"2017-01-08T19:20:28Z","closed_at":null,"author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3857","html_url":"https://github.com/libgdx/libgdx/pull/3857","diff_url":"https://github.com/libgdx/libgdx/pull/3857.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3857.patch"},"body":"**(The diff of GwtApplication is a little bit confusing so please look at the result and not at the direct diff or use github's split view)**\n\nFor gdx-freetype-gwt or gwt-bullet we have to inject ceratin .js files but we have to do it before the main loop is running.\n\n(Injection is async that's why we need this PR if it were sync. we would not have any problem :) )\n\nThe generator collects all `Injectable`s and injects them.\nWe wait 5s (50*100ms) for injection if the scripts aren't injected yet, we don't care, because the scripts are injected at the first possible time and if it isn't injected after 5 seconds it's unlikely that it will be injected.\n\nThe Timer code is a little bit ugly, I know, but I couldn't use libgdx Timer because it can only used if the mainloop is running.\n\nThe constructors of `DirectReadWriteByteBuffer`have been made public to easily transfer data from the emscripten heap to GWT/libgdx.\n\nThe example mentioned in the javadoc can be found [here](https://gist.github.com/intrigus/ee87be2c8427f62b754b).\n\nPlease add your suggestions @MobiDevelop @badlogic \n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3857/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3856","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3856/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3856/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3856/events","html_url":"https://github.com/libgdx/libgdx/pull/3856","id":134366327,"number":3856,"title":"Add debug3dRenderer","user":{"login":"realitix","id":6367936,"avatar_url":"https://avatars1.githubusercontent.com/u/6367936?v=4","gravatar_id":"","url":"https://api.github.com/users/realitix","html_url":"https://github.com/realitix","followers_url":"https://api.github.com/users/realitix/followers","following_url":"https://api.github.com/users/realitix/following{/other_user}","gists_url":"https://api.github.com/users/realitix/gists{/gist_id}","starred_url":"https://api.github.com/users/realitix/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/realitix/subscriptions","organizations_url":"https://api.github.com/users/realitix/orgs","repos_url":"https://api.github.com/users/realitix/repos","events_url":"https://api.github.com/users/realitix/events{/privacy}","received_events_url":"https://api.github.com/users/realitix/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2016-02-17T18:52:02Z","updated_at":"2016-03-05T14:35:11Z","closed_at":"2016-03-05T14:35:10Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3856","html_url":"https://github.com/libgdx/libgdx/pull/3856","diff_url":"https://github.com/libgdx/libgdx/pull/3856.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3856.patch"},"body":"Follow this pull request\nhttps://github.com/libgdx/libgdx/pull/3839\n\n@xoppa \n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3856/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3855","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3855/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3855/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3855/events","html_url":"https://github.com/libgdx/libgdx/issues/3855","id":134337981,"number":3855,"title":"Missing sort() method for all back-ends except desktop.","user":{"login":"JFixby","id":1580663,"avatar_url":"https://avatars0.githubusercontent.com/u/1580663?v=4","gravatar_id":"","url":"https://api.github.com/users/JFixby","html_url":"https://github.com/JFixby","followers_url":"https://api.github.com/users/JFixby/followers","following_url":"https://api.github.com/users/JFixby/following{/other_user}","gists_url":"https://api.github.com/users/JFixby/gists{/gist_id}","starred_url":"https://api.github.com/users/JFixby/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JFixby/subscriptions","organizations_url":"https://api.github.com/users/JFixby/orgs","repos_url":"https://api.github.com/users/JFixby/repos","events_url":"https://api.github.com/users/JFixby/events{/privacy}","received_events_url":"https://api.github.com/users/JFixby/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2016-02-17T16:59:11Z","updated_at":"2016-02-17T17:13:12Z","closed_at":"2016-02-17T17:02:20Z","author_association":"CONTRIBUTOR","body":"I don't understand why but here is no sorting:\n\n![what](https://cloud.githubusercontent.com/assets/1580663/13117357/db7e9e14-d59f-11e5-824b-4ded3b05e910.jpg)\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3855/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3854","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3854/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3854/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3854/events","html_url":"https://github.com/libgdx/libgdx/issues/3854","id":134289106,"number":3854,"title":"Json: Cannot parse from printPretty json.","user":{"login":"vedi0boy","id":4818003,"avatar_url":"https://avatars3.githubusercontent.com/u/4818003?v=4","gravatar_id":"","url":"https://api.github.com/users/vedi0boy","html_url":"https://github.com/vedi0boy","followers_url":"https://api.github.com/users/vedi0boy/followers","following_url":"https://api.github.com/users/vedi0boy/following{/other_user}","gists_url":"https://api.github.com/users/vedi0boy/gists{/gist_id}","starred_url":"https://api.github.com/users/vedi0boy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vedi0boy/subscriptions","organizations_url":"https://api.github.com/users/vedi0boy/orgs","repos_url":"https://api.github.com/users/vedi0boy/repos","events_url":"https://api.github.com/users/vedi0boy/events{/privacy}","received_events_url":"https://api.github.com/users/vedi0boy/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2016-02-17T14:06:34Z","updated_at":"2016-02-17T18:54:30Z","closed_at":"2016-02-17T17:11:26Z","author_association":"NONE","body":"This may have been done on purpose but I still feel that it should be changed. Right now, if you serialize an object with `json.printPretty(Object o)`, you are unable to parse it back into an object because of missing commas and other things.\n\nThe reason I think it would be better this way is so that, when saving to a file, you can easily change things from the file without needing to make an editor.\n\nMy idea is to make it so that printPretty makes a json string that works except the only difference is that it have spacing and line breaks to make it easier to read. To parse it back to an object, all that will be needed to do this is to strip the json string of all spaces and line breaks.\n\nEdit: To elaborate, right now printPretty doesn't serialize correctly with arrays and apparently (according to this: [https://github.com/libgdx/libgdx/issues/3838](https://github.com/libgdx/libgdx/issues/3838)) doesn't serialize the last number properly either.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3854/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3853","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3853/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3853/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3853/events","html_url":"https://github.com/libgdx/libgdx/issues/3853","id":134277167,"number":3853,"title":"Security alert from google play","user":{"login":"bachtrong43","id":6166994,"avatar_url":"https://avatars0.githubusercontent.com/u/6166994?v=4","gravatar_id":"","url":"https://api.github.com/users/bachtrong43","html_url":"https://github.com/bachtrong43","followers_url":"https://api.github.com/users/bachtrong43/followers","following_url":"https://api.github.com/users/bachtrong43/following{/other_user}","gists_url":"https://api.github.com/users/bachtrong43/gists{/gist_id}","starred_url":"https://api.github.com/users/bachtrong43/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bachtrong43/subscriptions","organizations_url":"https://api.github.com/users/bachtrong43/orgs","repos_url":"https://api.github.com/users/bachtrong43/repos","events_url":"https://api.github.com/users/bachtrong43/events{/privacy}","received_events_url":"https://api.github.com/users/bachtrong43/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-02-17T13:15:44Z","updated_at":"2016-02-19T03:56:25Z","closed_at":"2016-02-17T13:43:31Z","author_association":"NONE","body":"Recently most of my games developed using libgdx have security alert from google play:\n\n``` javascript\n\"Your app is using an unsafe implementation of the X509TrustManager interface with an Apache HTTP client, resulting in a security vulnerability. Please see this Google Help Center article for details, including the deadline for fixing the vulnerability.\"\n```\n\nMy games don't use any external library, only used libgdx API. I don't know how to address this issue. Anyone help me?, I used libgdx 1.7.0\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3853/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3852","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3852/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3852/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3852/events","html_url":"https://github.com/libgdx/libgdx/issues/3852","id":134265715,"number":3852,"title":"InputProcessor resets and freezes on more than 5 fingers on iOS","user":{"login":"Flitskikker","id":3516155,"avatar_url":"https://avatars1.githubusercontent.com/u/3516155?v=4","gravatar_id":"","url":"https://api.github.com/users/Flitskikker","html_url":"https://github.com/Flitskikker","followers_url":"https://api.github.com/users/Flitskikker/followers","following_url":"https://api.github.com/users/Flitskikker/following{/other_user}","gists_url":"https://api.github.com/users/Flitskikker/gists{/gist_id}","starred_url":"https://api.github.com/users/Flitskikker/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Flitskikker/subscriptions","organizations_url":"https://api.github.com/users/Flitskikker/orgs","repos_url":"https://api.github.com/users/Flitskikker/repos","events_url":"https://api.github.com/users/Flitskikker/events{/privacy}","received_events_url":"https://api.github.com/users/Flitskikker/received_events","type":"User","site_admin":false},"labels":[{"id":59604199,"url":"https://api.github.com/repos/libgdx/libgdx/labels/ios","name":"ios","color":"207de5","default":false}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-02-17T12:26:44Z","updated_at":"2016-02-17T12:54:24Z","closed_at":null,"author_association":"NONE","body":"Hi all,\n\nWe (a team of 3 developers) have been using LibGDX to develop a game for mobile devices. We took a two-year break because there were some issues, but we decided to pick up where we left off. Unfortunately, the main issue we were facing back then still occurs.\n\n**Problem statement**\nOur game is based heavily on multitouch. We're trying to get 10 fingers recognized by the InputProcessor. On Android this works perfectly. When running on an iPhone using RoboVM, it works up to 5 fingers. But as soon a sixth finger touches the screen, all the previous fingers are reset, because all their touchUp() events get called.\n\nFurthermore, the InputProcessor stops registering any new touches until at least one of the original fingers is removed from the screen.\n\nWe keep track of the amount of fingers that are touching the screen based on the touchDown (count++) and touchUp (count--) events. On iOS, we lose track of all fingers, despite them being still on the screen, and it's game over.\n\n**Configuration**\nWe're using:\n- LibGDX 1.9.0\n- RoboVM 1.13.0\n- iPhone 5s\n- iOS 9.2.1\n\n**Code sample**\nYou can use the following code to reproduce the issue.\n\n```\npublic class MyGdxGame extends ApplicationAdapter implements InputProcessor {\n    public void create() {\n        Gdx.input.setInputProcessor(this);\n    }\n\n    @Override\n    public boolean touchUp(int screenX, int screenY, int pointer, int button) {\n        Gdx.app.log(\"touchUp\", \"int screenX \" + screenX + \" int screenY \"  + screenY + \" int pointer \"  + pointer + \" int button \"  + button);\n        return true; // No difference with false\n    }\n\n    @Override\n    public boolean touchDown(int screenX, int screenY, int pointer, int button) {\n        Gdx.app.log(\"touchDown\", \"int screenX \" + screenX + \" int screenY \"  + screenY + \" int pointer \"  + pointer + \" int button \"  + button);\n        return true; // No difference with false\n    }\n}\n```\n\n**Steps to reproduce**\n1. Run the above code on iOS using RoboVM.\n2. Start placing fingers on the screen. You'll see the touches in the log.\n3. Place a 6th finger on the screen. You'll see 5 touchUps being fired.\n4. While holding 6 fingers on the screen, try placing additional fingers on the screen. You'll see no touchDowns being fired.\n\n**Output**\nThis is the output we are getting when placing 1, 2, 3 etc. fingers on the screen, until the 6th one resets everything.\n\n```\n2016-02-17 12:55:06.633 IOSLauncher[2173:825186] [info] touchDown: int screenX 528 int screenY 851 int pointer 0 int button 0\n2016-02-17 12:55:06.634 IOSLauncher[2173:825186] [info] fingersOnScreen: 1\n2016-02-17 12:55:07.017 IOSLauncher[2173:825186] [info] touchDown: int screenX 574 int screenY 668 int pointer 1 int button 0\n2016-02-17 12:55:07.018 IOSLauncher[2173:825186] [info] fingersOnScreen: 2\n2016-02-17 12:55:07.283 IOSLauncher[2173:825186] [info] touchDown: int screenX 513 int screenY 416 int pointer 2 int button 0\n2016-02-17 12:55:07.285 IOSLauncher[2173:825186] [info] fingersOnScreen: 3\n2016-02-17 12:55:07.617 IOSLauncher[2173:825186] [info] touchDown: int screenX 457 int screenY 179 int pointer 3 int button 0\n2016-02-17 12:55:07.618 IOSLauncher[2173:825186] [info] fingersOnScreen: 4\n2016-02-17 12:55:07.934 IOSLauncher[2173:825186] [info] touchDown: int screenX 314 int screenY 851 int pointer 4 int button 0\n2016-02-17 12:55:07.935 IOSLauncher[2173:825186] [info] fingersOnScreen: 5\n(Now placing the 6th finger on the screen:)\n2016-02-17 12:55:08.383 IOSLauncher[2173:825186] [info] touchUp: int screenX 507 int screenY 220 int pointer 3 int button 0\n2016-02-17 12:55:08.384 IOSLauncher[2173:825186] [info] touchUp: int screenX 535 int screenY 422 int pointer 2 int button 0\n2016-02-17 12:55:08.385 IOSLauncher[2173:825186] [info] touchUp: int screenX 327 int screenY 829 int pointer 4 int button 0\n2016-02-17 12:55:08.385 IOSLauncher[2173:825186] [info] touchUp: int screenX 522 int screenY 848 int pointer 0 int button 0\n2016-02-17 12:55:08.385 IOSLauncher[2173:825186] [info] touchUp: int screenX 567 int screenY 677 int pointer 1 int button 0\n```\n\n**Investigation**\nWe did some digging, and we found that the touchUps get called from the LibGDX/RoboVM backend; `processEvents()` in `com.badlogic.gdx.backends.iosrobovm.IOSInput`. We think LibGDX maybe gets fed with wrong information from RoboVM, causing all touches to end, firing all touchUps.\nWe don't know what causes the InputProcessor to stop listening for touches.\n## \n\nWe're wondering where the cause of this issue lies exactly. Is it indeed RoboVM, or LibGDX, or a iPhone hardware limitation? If it would solely call `touchDown()` and `touchUp()`, our game should work, because we keep track of the amount of fingers on the screen ourselves.\n\nWe'd appreciate it if you could look into this. Thanks in advance! :)\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3852/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3851","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3851/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3851/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3851/events","html_url":"https://github.com/libgdx/libgdx/pull/3851","id":134233575,"number":3851,"title":"Fixed memory leaks on android","user":{"login":"SaeedMasoumi","id":6934577,"avatar_url":"https://avatars2.githubusercontent.com/u/6934577?v=4","gravatar_id":"","url":"https://api.github.com/users/SaeedMasoumi","html_url":"https://github.com/SaeedMasoumi","followers_url":"https://api.github.com/users/SaeedMasoumi/followers","following_url":"https://api.github.com/users/SaeedMasoumi/following{/other_user}","gists_url":"https://api.github.com/users/SaeedMasoumi/gists{/gist_id}","starred_url":"https://api.github.com/users/SaeedMasoumi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SaeedMasoumi/subscriptions","organizations_url":"https://api.github.com/users/SaeedMasoumi/orgs","repos_url":"https://api.github.com/users/SaeedMasoumi/repos","events_url":"https://api.github.com/users/SaeedMasoumi/events{/privacy}","received_events_url":"https://api.github.com/users/SaeedMasoumi/received_events","type":"User","site_admin":false},"labels":[{"id":59604218,"url":"https://api.github.com/repos/libgdx/libgdx/labels/android","name":"android","color":"009800","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-02-17T09:55:19Z","updated_at":"2016-03-13T14:33:38Z","closed_at":"2016-03-13T14:33:17Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3851","html_url":"https://github.com/libgdx/libgdx/pull/3851","diff_url":"https://github.com/libgdx/libgdx/pull/3851.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3851.patch"},"body":"I created [this sample project ](https://github.com/SaeedMasoumi/libgdx-android-leak)to show that how libgdx creates memory leaks on android.\n\n In [LeakFragment](https://github.com/SaeedMasoumi/libgdx-android-leak/blob/master/android/src/io/saeid/libgdx/androidleak/fragment/LeakFragment.java) and [LeakActivity](https://github.com/SaeedMasoumi/libgdx-android-leak/blob/master/android/src/io/saeid/libgdx/androidleak/activity/LeakActivity.java) classes, i created a method called `whatShouldBeDoneOnSuperMethod` without this method, leak canary will show memory leak.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3851/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3850","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3850/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3850/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3850/events","html_url":"https://github.com/libgdx/libgdx/issues/3850","id":134197026,"number":3850,"title":"[iOS] life cycle: resize() is called before create()","user":{"login":"burakkurkcu","id":5931039,"avatar_url":"https://avatars3.githubusercontent.com/u/5931039?v=4","gravatar_id":"","url":"https://api.github.com/users/burakkurkcu","html_url":"https://github.com/burakkurkcu","followers_url":"https://api.github.com/users/burakkurkcu/followers","following_url":"https://api.github.com/users/burakkurkcu/following{/other_user}","gists_url":"https://api.github.com/users/burakkurkcu/gists{/gist_id}","starred_url":"https://api.github.com/users/burakkurkcu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/burakkurkcu/subscriptions","organizations_url":"https://api.github.com/users/burakkurkcu/orgs","repos_url":"https://api.github.com/users/burakkurkcu/repos","events_url":"https://api.github.com/users/burakkurkcu/events{/privacy}","received_events_url":"https://api.github.com/users/burakkurkcu/received_events","type":"User","site_admin":false},"labels":[{"id":59604199,"url":"https://api.github.com/repos/libgdx/libgdx/labels/ios","name":"ios","color":"207de5","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2016-02-17T06:55:15Z","updated_at":"2016-03-10T19:59:23Z","closed_at":"2016-03-10T19:59:23Z","author_association":"CONTRIBUTOR","body":"This could be relative to #3789 but after upgrading from 1.7.2 to 1.9.1 on iOS, after application start, resize() is called before create() which causes initialization errors due to Gdx.app is null.\n\nSo it seems now the life cycle is:\nApplication start -> resize() -> create() -> ...\n\nInstead of:\nApplication start -> create() -> resize() -> ...\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3850/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3849","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3849/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3849/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3849/events","html_url":"https://github.com/libgdx/libgdx/pull/3849","id":134117203,"number":3849,"title":"Add support for selecting modules through command line","user":{"login":"Fr0sk","id":5650342,"avatar_url":"https://avatars2.githubusercontent.com/u/5650342?v=4","gravatar_id":"","url":"https://api.github.com/users/Fr0sk","html_url":"https://github.com/Fr0sk","followers_url":"https://api.github.com/users/Fr0sk/followers","following_url":"https://api.github.com/users/Fr0sk/following{/other_user}","gists_url":"https://api.github.com/users/Fr0sk/gists{/gist_id}","starred_url":"https://api.github.com/users/Fr0sk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Fr0sk/subscriptions","organizations_url":"https://api.github.com/users/Fr0sk/orgs","repos_url":"https://api.github.com/users/Fr0sk/repos","events_url":"https://api.github.com/users/Fr0sk/events{/privacy}","received_events_url":"https://api.github.com/users/Fr0sk/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2016-02-16T22:42:32Z","updated_at":"2016-02-17T18:11:27Z","closed_at":"2016-02-17T18:11:21Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3849","html_url":"https://github.com/libgdx/libgdx/pull/3849","diff_url":"https://github.com/libgdx/libgdx/pull/3849.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3849.patch"},"body":"This would help integrate LibGDX with other tools or game engines that leverage from it.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3849/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3848","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3848/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3848/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3848/events","html_url":"https://github.com/libgdx/libgdx/pull/3848","id":134028896,"number":3848,"title":"Add AAC decoding support for LWJGL and LWJGL3 backends","user":{"login":"tyrondis","id":3440273,"avatar_url":"https://avatars1.githubusercontent.com/u/3440273?v=4","gravatar_id":"","url":"https://api.github.com/users/tyrondis","html_url":"https://github.com/tyrondis","followers_url":"https://api.github.com/users/tyrondis/followers","following_url":"https://api.github.com/users/tyrondis/following{/other_user}","gists_url":"https://api.github.com/users/tyrondis/gists{/gist_id}","starred_url":"https://api.github.com/users/tyrondis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tyrondis/subscriptions","organizations_url":"https://api.github.com/users/tyrondis/orgs","repos_url":"https://api.github.com/users/tyrondis/repos","events_url":"https://api.github.com/users/tyrondis/events{/privacy}","received_events_url":"https://api.github.com/users/tyrondis/received_events","type":"User","site_admin":false},"labels":[{"id":309796149,"url":"https://api.github.com/repos/libgdx/libgdx/labels/LWJGL3","name":"LWJGL3","color":"d4c5f9","default":false}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":15,"created_at":"2016-02-16T16:35:55Z","updated_at":"2017-01-16T14:58:13Z","closed_at":null,"author_association":"NONE","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3848","html_url":"https://github.com/libgdx/libgdx/pull/3848","diff_url":"https://github.com/libgdx/libgdx/pull/3848.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3848.patch"},"body":"LibGDX already supports playing AAC audio files on iOS and Android. However, so far there was no decoder for the desktop backends. I used the JAAD open source library (http://jaadec.sourceforge.net) to write a new AAC decoder for the LWJGL and LWJGL3 backends.\n\nPlease note that I am no expert in audio decoding. I was merely writing this code by following documentation and examples.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3848/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":1}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3847","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3847/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3847/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3847/events","html_url":"https://github.com/libgdx/libgdx/pull/3847","id":133912613,"number":3847,"title":"Add setUndeocrated/setResizable APIs to Graphics.","user":{"login":"bgroenks96","id":841306,"avatar_url":"https://avatars0.githubusercontent.com/u/841306?v=4","gravatar_id":"","url":"https://api.github.com/users/bgroenks96","html_url":"https://github.com/bgroenks96","followers_url":"https://api.github.com/users/bgroenks96/followers","following_url":"https://api.github.com/users/bgroenks96/following{/other_user}","gists_url":"https://api.github.com/users/bgroenks96/gists{/gist_id}","starred_url":"https://api.github.com/users/bgroenks96/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bgroenks96/subscriptions","organizations_url":"https://api.github.com/users/bgroenks96/orgs","repos_url":"https://api.github.com/users/bgroenks96/repos","events_url":"https://api.github.com/users/bgroenks96/events{/privacy}","received_events_url":"https://api.github.com/users/bgroenks96/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2016-02-16T08:12:57Z","updated_at":"2016-03-20T23:57:10Z","closed_at":"2016-03-20T23:57:05Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3847","html_url":"https://github.com/libgdx/libgdx/pull/3847","diff_url":"https://github.com/libgdx/libgdx/pull/3847.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3847.patch"},"body":"Add implemenations for all backends.\n\nNote: most desktop backend implementations require a call to 'setWindowedMode' in order for the changes to take effect.\n\nIt is worth noting that this is not necessary with the JogAmp backend. However, as of the time of writing, that backend is not included in LibGDX master.\n\nFixes #3773\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3847/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3846","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3846/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3846/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3846/events","html_url":"https://github.com/libgdx/libgdx/issues/3846","id":133699166,"number":3846,"title":"Setting audio volume has no effect on desktop","user":{"login":"Swift42","id":1180176,"avatar_url":"https://avatars1.githubusercontent.com/u/1180176?v=4","gravatar_id":"","url":"https://api.github.com/users/Swift42","html_url":"https://github.com/Swift42","followers_url":"https://api.github.com/users/Swift42/followers","following_url":"https://api.github.com/users/Swift42/following{/other_user}","gists_url":"https://api.github.com/users/Swift42/gists{/gist_id}","starred_url":"https://api.github.com/users/Swift42/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Swift42/subscriptions","organizations_url":"https://api.github.com/users/Swift42/orgs","repos_url":"https://api.github.com/users/Swift42/repos","events_url":"https://api.github.com/users/Swift42/events{/privacy}","received_events_url":"https://api.github.com/users/Swift42/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-02-15T12:20:15Z","updated_at":"2016-02-15T12:29:44Z","closed_at":"2016-02-15T12:29:44Z","author_association":"NONE","body":"When playing a sound on libgdx 1.9.1 via\nAssets.instance.sounds.get(\"abc\").play(0.1f);\nthe volume is ignored on my desktop.\nThe sound always plays at maximum volume.\n\nChanging the audio format (mp3, wav, ..) has no effect.\nOn Android the volume is set correctly!\n\nTo be sure, I tested an old libgdx project from 2013: all is working fine here (desktop AND android).\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3846/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3845","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3845/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3845/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3845/events","html_url":"https://github.com/libgdx/libgdx/issues/3845","id":133506205,"number":3845,"title":"ModelParameters specified to G3dModelLoader is totally ignored !","user":{"login":"aboudaladdin","id":15913543,"avatar_url":"https://avatars2.githubusercontent.com/u/15913543?v=4","gravatar_id":"","url":"https://api.github.com/users/aboudaladdin","html_url":"https://github.com/aboudaladdin","followers_url":"https://api.github.com/users/aboudaladdin/followers","following_url":"https://api.github.com/users/aboudaladdin/following{/other_user}","gists_url":"https://api.github.com/users/aboudaladdin/gists{/gist_id}","starred_url":"https://api.github.com/users/aboudaladdin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aboudaladdin/subscriptions","organizations_url":"https://api.github.com/users/aboudaladdin/orgs","repos_url":"https://api.github.com/users/aboudaladdin/repos","events_url":"https://api.github.com/users/aboudaladdin/events{/privacy}","received_events_url":"https://api.github.com/users/aboudaladdin/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2016-02-14T05:09:22Z","updated_at":"2016-02-24T15:14:20Z","closed_at":"2016-02-24T15:14:20Z","author_association":"NONE","body":"no mipmaping generation nor texture filtering setting can be set \n` G3dModelLoader g3dModelLoader = new G3dModelLoader(jsonReader);\n\n```\n    Gdx.gl.glEnable(GL20.GL_GENERATE_MIPMAP);\n\n    ModelLoader.ModelParameters modelParameters = new ModelLoader.ModelParameters();\n    modelParameters.textureParameter.genMipMaps = true;\n    modelParameters.textureParameter.minFilter = Texture.TextureFilter.MipMap;\n    modelParameters.textureParameter.magFilter = Texture.TextureFilter.Linear;\n```\n\n   SkyboxModel = g3dModelLoader.loadModel(Gdx.files.getFileHandle(\"skydomeg10x.g3db\", Files.FileType.Internal ),modelParameters);\n\nTextureAttribute myTex = (TextureAttribute)GroundInstance.materials.get(0).get(TextureAttribute.Diffuse);\n        Texture groundTexture = myTex.textureDescription.texture;\n        System.out.println(groundTexture.getTextureData().useMipMaps());\n        System.out.println(groundTexture.getMinFilter());\n        System.out.println(groundTexture.getMagFilter());\n\n`\nand the output is \nuseMipMaps = false \nminFilter = Linear\nmagFilter = Linear\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3845/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3844","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3844/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3844/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3844/events","html_url":"https://github.com/libgdx/libgdx/issues/3844","id":133486970,"number":3844,"title":"Controller is added twice on the Controllers Array in LWJGL3","user":{"login":"viniciuspjardim","id":1520962,"avatar_url":"https://avatars3.githubusercontent.com/u/1520962?v=4","gravatar_id":"","url":"https://api.github.com/users/viniciuspjardim","html_url":"https://github.com/viniciuspjardim","followers_url":"https://api.github.com/users/viniciuspjardim/followers","following_url":"https://api.github.com/users/viniciuspjardim/following{/other_user}","gists_url":"https://api.github.com/users/viniciuspjardim/gists{/gist_id}","starred_url":"https://api.github.com/users/viniciuspjardim/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/viniciuspjardim/subscriptions","organizations_url":"https://api.github.com/users/viniciuspjardim/orgs","repos_url":"https://api.github.com/users/viniciuspjardim/repos","events_url":"https://api.github.com/users/viniciuspjardim/events{/privacy}","received_events_url":"https://api.github.com/users/viniciuspjardim/received_events","type":"User","site_admin":false},"labels":[{"id":11336980,"url":"https://api.github.com/repos/libgdx/libgdx/labels/bug","name":"bug","color":"fc2929","default":true},{"id":309796149,"url":"https://api.github.com/repos/libgdx/libgdx/labels/LWJGL3","name":"LWJGL3","color":"d4c5f9","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2016-02-14T00:23:45Z","updated_at":"2016-02-14T19:58:36Z","closed_at":"2016-02-14T19:58:36Z","author_association":"NONE","body":"The same Controller instance is added twice on the Controllers Array after an ingame connection.\n\nLibGDX version = 1.9.2\nOS = Windows 10 x64\ngdx-backend-lwjgl3\n\nHow to reproduce:\n1. Run the app with the controller connected\n2. Disconnect the controller from the USB port\n3. Reconnect the controller to the USB port\n\nCode:\n\n``` java\npackage com.mygdx.game;\n\nimport com.badlogic.gdx.ApplicationAdapter;\nimport com.badlogic.gdx.Gdx;\nimport com.badlogic.gdx.controllers.Controller;\nimport com.badlogic.gdx.controllers.ControllerListener;\nimport com.badlogic.gdx.controllers.Controllers;\nimport com.badlogic.gdx.controllers.PovDirection;\nimport com.badlogic.gdx.graphics.GL20;\nimport com.badlogic.gdx.math.Vector3;\n\npublic class MyGdxGame extends ApplicationAdapter implements ControllerListener {\n\n    @Override\n    public void create () {\n\n        Controllers.addListener(this);\n\n        // Start the app with the controller connected\n        Gdx.app.log(\"Test\", \"Init - Number of controllers = \" + Controllers.getControllers().size);\n    }\n\n    @Override\n    public void render () {\n        Gdx.gl.glClearColor(0, 0, 0, 1);\n        Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);\n    }\n\n    @Override\n    public void connected(Controller controller) {\n\n        // Reconnect controller to the USB port\n        Gdx.app.log(\"Test\", \"Controller connected\");\n        Gdx.app.log(\"Test\", \"Number of controllers = \" + Controllers.getControllers().size);\n\n        for(int i = 0; i < Controllers.getControllers().size; i++) {\n            Controller c = Controllers.getControllers().get(i);\n            Gdx.app.log(\"Test\", \"Controller name = \" + c.getName());\n        }\n\n        if(Controllers.getControllers().get(0) == Controllers.getControllers().get(1)) {\n            Gdx.app.log(\"Test\", \"Same object\");\n        }\n        else {\n            Gdx.app.log(\"Test\", \"Different object\");\n        }\n    }\n\n    @Override\n    public void disconnected(Controller controller) {\n\n        // Disconnect controller from the USB port\n        Gdx.app.log(\"Test\", \"Controller disconnected\");\n        Gdx.app.log(\"Test\", \"Number of controllers = \" + Controllers.getControllers().size);\n    }\n\n    @Override\n    public boolean buttonDown(Controller controller, int buttonCode) {\n        return false;\n    }\n\n    @Override\n    public boolean buttonUp(Controller controller, int buttonCode) {\n        return false;\n    }\n\n    @Override\n    public boolean axisMoved(Controller controller, int axisCode, float value) {\n        return false;\n    }\n\n    @Override\n    public boolean povMoved(Controller controller, int povCode, PovDirection value) {\n        return false;\n    }\n\n    @Override\n    public boolean xSliderMoved(Controller controller, int sliderCode, boolean value) {\n        return false;\n    }\n\n    @Override\n    public boolean ySliderMoved(Controller controller, int sliderCode, boolean value) {\n        return false;\n    }\n\n    @Override\n    public boolean accelerometerMoved(Controller controller, int accelerometerCode, Vector3 value) {\n        return false;\n    }\n}\n```\n\nOutput:\n\n```\nTest: Init - Number of controllers = 1\nTest: Controller disconnected\nTest: Number of controllers = 0\nTest: Controller connected\nTest: Number of controllers = 2\nTest: Controller name = Microsoft PC-joystick driver\nTest: Controller name = Microsoft PC-joystick driver\nTest: Same object\n```\n\nBut I only connected one controller to the USB port.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3844/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3843","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3843/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3843/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3843/events","html_url":"https://github.com/libgdx/libgdx/issues/3843","id":133483969,"number":3843,"title":"Error in copy constructor for ObjectSet","user":{"login":"dotjpg3141","id":8530833,"avatar_url":"https://avatars2.githubusercontent.com/u/8530833?v=4","gravatar_id":"","url":"https://api.github.com/users/dotjpg3141","html_url":"https://github.com/dotjpg3141","followers_url":"https://api.github.com/users/dotjpg3141/followers","following_url":"https://api.github.com/users/dotjpg3141/following{/other_user}","gists_url":"https://api.github.com/users/dotjpg3141/gists{/gist_id}","starred_url":"https://api.github.com/users/dotjpg3141/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dotjpg3141/subscriptions","organizations_url":"https://api.github.com/users/dotjpg3141/orgs","repos_url":"https://api.github.com/users/dotjpg3141/repos","events_url":"https://api.github.com/users/dotjpg3141/events{/privacy}","received_events_url":"https://api.github.com/users/dotjpg3141/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-02-13T23:47:22Z","updated_at":"2016-03-29T04:22:18Z","closed_at":"2016-03-29T04:22:18Z","author_association":"NONE","body":"The item in the ObjectSet is not removed every time.\n\n``` java\npackage com.mygdx.game;\n\nimport com.badlogic.gdx.*;\nimport com.badlogic.gdx.utils.*;\n\npublic class Test extends ApplicationAdapter {\n\n    @Override\n    public void create() {\n\n        ObjectSet<Object> set = new ObjectSet<>();\n        Object o = new Object();\n        set.add(o);\n\n        ObjectSet<Object> set2 = new ObjectSet<>(set);\n        // ObjectSet<Object> set2 = new ObjectSet<>();\n        // set2.addAll(set);\n\n        System.out.println(set2);\n        set2.remove(o);\n        System.out.println(set2);\n\n    }\n\n}\n```\n\nExpected output:\n\n```\n{java.lang.Object@8bcab4}\n{}\n```\n\nBut somtimes I get this:\n\n```\n{java.lang.Object@1b9c41}\n{java.lang.Object@1b9c41}\n```\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3843/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3842","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3842/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3842/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3842/events","html_url":"https://github.com/libgdx/libgdx/issues/3842","id":133476069,"number":3842,"title":"GWT BufferUtils.copy() fails","user":{"login":"intrigus","id":10353467,"avatar_url":"https://avatars2.githubusercontent.com/u/10353467?v=4","gravatar_id":"","url":"https://api.github.com/users/intrigus","html_url":"https://github.com/intrigus","followers_url":"https://api.github.com/users/intrigus/followers","following_url":"https://api.github.com/users/intrigus/following{/other_user}","gists_url":"https://api.github.com/users/intrigus/gists{/gist_id}","starred_url":"https://api.github.com/users/intrigus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/intrigus/subscriptions","organizations_url":"https://api.github.com/users/intrigus/orgs","repos_url":"https://api.github.com/users/intrigus/repos","events_url":"https://api.github.com/users/intrigus/events{/privacy}","received_events_url":"https://api.github.com/users/intrigus/received_events","type":"User","site_admin":false},"labels":[{"id":67383148,"url":"https://api.github.com/repos/libgdx/libgdx/labels/gwt","name":"gwt","color":"5319e7","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-02-13T21:38:20Z","updated_at":"2017-01-12T21:34:55Z","closed_at":"2017-01-12T21:34:55Z","author_association":"CONTRIBUTOR","body":"`BufferUtils.copy (byte[] src, int srcOffset, Buffer dst, int numElements)`works fine on Desktop, but fails on GWT.\r\n\r\nHow to reproduce:\r\n1. Run this test on Desktop and on GWT\r\n\r\n``` java\r\n\r\npackage com.badlogic.gdx.tests.gwt;\r\n\r\nimport java.lang.reflect.InvocationTargetException;\r\nimport java.lang.reflect.Method;\r\nimport java.nio.Buffer;\r\nimport java.nio.ByteBuffer;\r\n\r\nimport com.badlogic.gdx.Application.ApplicationType;\r\nimport com.badlogic.gdx.Gdx;\r\nimport com.badlogic.gdx.tests.utils.GdxTest;\r\nimport com.badlogic.gdx.utils.BufferUtils;\r\nimport com.badlogic.gdx.utils.GdxRuntimeException;\r\nimport com.badlogic.gdx.utils.reflect.ClassReflection;\r\n\r\npublic class BufferUtilsIssueTest extends GdxTest {\r\n\r\n// Needed to make the test work on gwt _and_ desktop\r\n\tprivate ByteBuffer getTestBuffer (int size) {\r\n\t\tif (Gdx.app.getType().equals(ApplicationType.WebGL)) {\r\n\t\t\treturn BufferUtils.newByteBuffer(size);\r\n\t\t} else {\r\n\t\t\tcom.badlogic.gdx.utils.reflect.Method bufferMethod = null;\r\n\t\t\ttry {\r\n\t\t\t\tbufferMethod = ClassReflection.getMethod(BufferUtils.class, \"newUnsafeByteBuffer\", int.class);\r\n\t\t\t\treturn (ByteBuffer)bufferMethod.invoke(null, size);\r\n\t\t\t} catch (Exception e) { // Who cares!\r\n\t\t\t\te.printStackTrace();\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic void create () {\r\n\t\tfinal ByteBuffer newByteBuffer = getTestBuffer(10);\r\n\t\tfinal byte[] src = new byte[] {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};\r\n\t\tBufferUtils.copy(src, 0, newByteBuffer, 2);\r\n\t\tBufferUtils.copy(src, 2, newByteBuffer, 4);\r\n\t}\r\n}\r\n```\r\n\r\nI get the following stack trace on GWT:\r\n\r\n``` javascript\r\nThrowable.java:121 Uncaught Error: java.nio.BufferOverflowException\r\n    at P3k_g$.BQd_g$ [as createError_0_g$] (Throwable.java:121)\r\n    at P3k_g$.LQd_g$ [as initializeBackingError_0_g$] (Throwable.java:113)\r\n    at P3k_g$.sQd_g$ (Throwable.java:61)\r\n    at P3k_g$.YQd_g$ (Exception.java:25)\r\n    at P3k_g$.eRd_g$ (RuntimeException.java:25)\r\n    at P3k_g$ (BufferOverflowException.java:31)\r\n    at P8k_g$.d9k_g$ [as put_17_g$] (DirectReadWriteByteBuffer.java:132)\r\n    at ZNd_g$ (BufferUtils.java:75)\r\n    at qan_g$.ran_g$ [as create_0_g$] (BufferUtilsIssueTest.java:39)\r\n    at BHd_g$.CHd_g$ [as clicked_0_g$] (GwtTestWrapper.java:155)\r\n    at BHd_g$.UMc_g$ [as touchUp_3_g$] (ClickListener.java:89)\r\n    at BHd_g$.pBc_g$ [as handle_3_g$] (InputListener.java:58)\r\n    at ABc_g$.CCc_g$ [as touchUp_1_g$] (Stage.java:353)\r\n    at cc_g$.tc_g$ [as touchUp_1_g$] (InputMultiplexer.java:96)\r\n    at Fu_g$.ov_g$ [as handleEvent_0_g$] (GwtInput.java:564)\r\n    at HTMLDocument.<anonymous> (GwtInput.java:405)\r\n```","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3842/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3841","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3841/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3841/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3841/events","html_url":"https://github.com/libgdx/libgdx/issues/3841","id":133451332,"number":3841,"title":"LWJGL3: allow to handle main thread exceptions","user":{"login":"kotcrab","id":4594081,"avatar_url":"https://avatars1.githubusercontent.com/u/4594081?v=4","gravatar_id":"","url":"https://api.github.com/users/kotcrab","html_url":"https://github.com/kotcrab","followers_url":"https://api.github.com/users/kotcrab/followers","following_url":"https://api.github.com/users/kotcrab/following{/other_user}","gists_url":"https://api.github.com/users/kotcrab/gists{/gist_id}","starred_url":"https://api.github.com/users/kotcrab/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kotcrab/subscriptions","organizations_url":"https://api.github.com/users/kotcrab/orgs","repos_url":"https://api.github.com/users/kotcrab/repos","events_url":"https://api.github.com/users/kotcrab/events{/privacy}","received_events_url":"https://api.github.com/users/kotcrab/received_events","type":"User","site_admin":false},"labels":[{"id":309796149,"url":"https://api.github.com/repos/libgdx/libgdx/labels/LWJGL3","name":"LWJGL3","color":"d4c5f9","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-02-13T17:32:19Z","updated_at":"2016-02-16T18:46:22Z","closed_at":"2016-02-16T18:46:22Z","author_association":"CONTRIBUTOR","body":"I'm creating an editor and when it crashes I would like to show crash report dialog however in LWJGL3 backend there is no way to handle exception that occurred in main thread. Exception stack trace is printed to console then app exits, see [Lwjgl3Application](https://github.com/libgdx/libgdx/blob/master/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/Lwjgl3Application.java#L97).\n\nIn LWJGL2 when main thread exception occurs then new `GdxRuntimeException` is thrown (see [LwjglApplication](https://github.com/libgdx/libgdx/blob/master/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglApplication.java#L123-L132)) which can be handled for example by `Thread.setDefaultUncaughtExceptionHandler`.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3841/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3840","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3840/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3840/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3840/events","html_url":"https://github.com/libgdx/libgdx/pull/3840","id":133422315,"number":3840,"title":"Update VisUI extension version","user":{"login":"kotcrab","id":4594081,"avatar_url":"https://avatars1.githubusercontent.com/u/4594081?v=4","gravatar_id":"","url":"https://api.github.com/users/kotcrab","html_url":"https://github.com/kotcrab","followers_url":"https://api.github.com/users/kotcrab/followers","following_url":"https://api.github.com/users/kotcrab/following{/other_user}","gists_url":"https://api.github.com/users/kotcrab/gists{/gist_id}","starred_url":"https://api.github.com/users/kotcrab/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kotcrab/subscriptions","organizations_url":"https://api.github.com/users/kotcrab/orgs","repos_url":"https://api.github.com/users/kotcrab/repos","events_url":"https://api.github.com/users/kotcrab/events{/privacy}","received_events_url":"https://api.github.com/users/kotcrab/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-02-13T11:03:35Z","updated_at":"2016-02-14T16:16:14Z","closed_at":"2016-02-14T16:16:13Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3840","html_url":"https://github.com/libgdx/libgdx/pull/3840","diff_url":"https://github.com/libgdx/libgdx/pull/3840.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3840.patch"},"body":"First extension that reached 1.0 :)\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3840/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3839","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3839/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3839/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3839/events","html_url":"https://github.com/libgdx/libgdx/pull/3839","id":133295980,"number":3839,"title":"Add Debug3dRenderer","user":{"login":"realitix","id":6367936,"avatar_url":"https://avatars1.githubusercontent.com/u/6367936?v=4","gravatar_id":"","url":"https://api.github.com/users/realitix","html_url":"https://github.com/realitix","followers_url":"https://api.github.com/users/realitix/followers","following_url":"https://api.github.com/users/realitix/following{/other_user}","gists_url":"https://api.github.com/users/realitix/gists{/gist_id}","starred_url":"https://api.github.com/users/realitix/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/realitix/subscriptions","organizations_url":"https://api.github.com/users/realitix/orgs","repos_url":"https://api.github.com/users/realitix/repos","events_url":"https://api.github.com/users/realitix/events{/privacy}","received_events_url":"https://api.github.com/users/realitix/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":10,"created_at":"2016-02-12T17:17:10Z","updated_at":"2016-02-17T18:52:34Z","closed_at":"2016-02-17T18:52:34Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3839","html_url":"https://github.com/libgdx/libgdx/pull/3839","diff_url":"https://github.com/libgdx/libgdx/pull/3839.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3839.patch"},"body":"BoxHelper allows to visualize a boundingbox in 3d space.\n\nAll helpers will be used in shadow test (currently writing it). Shadow test will provide a good exemple of theses helpers (CameraHelper, BoxHelper...)\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3839/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3838","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3838/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3838/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3838/events","html_url":"https://github.com/libgdx/libgdx/issues/3838","id":133211726,"number":3838,"title":"Json integer parsing","user":{"login":"BrunoLopezGarcia","id":3679595,"avatar_url":"https://avatars0.githubusercontent.com/u/3679595?v=4","gravatar_id":"","url":"https://api.github.com/users/BrunoLopezGarcia","html_url":"https://github.com/BrunoLopezGarcia","followers_url":"https://api.github.com/users/BrunoLopezGarcia/followers","following_url":"https://api.github.com/users/BrunoLopezGarcia/following{/other_user}","gists_url":"https://api.github.com/users/BrunoLopezGarcia/gists{/gist_id}","starred_url":"https://api.github.com/users/BrunoLopezGarcia/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/BrunoLopezGarcia/subscriptions","organizations_url":"https://api.github.com/users/BrunoLopezGarcia/orgs","repos_url":"https://api.github.com/users/BrunoLopezGarcia/repos","events_url":"https://api.github.com/users/BrunoLopezGarcia/events{/privacy}","received_events_url":"https://api.github.com/users/BrunoLopezGarcia/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-02-12T11:05:38Z","updated_at":"2016-03-29T03:34:08Z","closed_at":"2016-03-29T03:34:08Z","author_association":"NONE","body":"In Json the last attribute of an object doesn't have a comma:\n\n```\n{\n    \"x\": 17,\n    \"y\": 0\n}\n```\n\nWhen the last attribute is an integer the JsonValue getInt method throws an exception, because it thinks the blank space is part of a String. \n\nThe exception is the following:\n\n```\njava.lang.NumberFormatException: For input string: \"0   \"\n    at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\n    at java.lang.Integer.parseInt(Integer.java:580)\n    at java.lang.Integer.parseInt(Integer.java:615)\n    at com.badlogic.gdx.utils.JsonValue.asInt(JsonValue.java:237)\n    at com.badlogic.gdx.utils.JsonValue.getInt(JsonValue.java:680)\n```\n\nI think this can be fixed using the trim() method, in order to delete blank spaces of the String.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3838/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3837","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3837/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3837/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3837/events","html_url":"https://github.com/libgdx/libgdx/issues/3837","id":133184063,"number":3837,"title":"Native artifacts: Rename from gdx-platform to gdx, and extension 'so' instead of 'jar'","user":{"login":"Nthalk","id":174297,"avatar_url":"https://avatars3.githubusercontent.com/u/174297?v=4","gravatar_id":"","url":"https://api.github.com/users/Nthalk","html_url":"https://github.com/Nthalk","followers_url":"https://api.github.com/users/Nthalk/followers","following_url":"https://api.github.com/users/Nthalk/following{/other_user}","gists_url":"https://api.github.com/users/Nthalk/gists{/gist_id}","starred_url":"https://api.github.com/users/Nthalk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Nthalk/subscriptions","organizations_url":"https://api.github.com/users/Nthalk/orgs","repos_url":"https://api.github.com/users/Nthalk/repos","events_url":"https://api.github.com/users/Nthalk/events{/privacy}","received_events_url":"https://api.github.com/users/Nthalk/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-02-12T08:32:45Z","updated_at":"2016-12-10T18:23:19Z","closed_at":"2016-12-10T18:23:19Z","author_association":"NONE","body":"The major android-maven-plugin uses a specific type and classifier to extract and supply native libraries to the android application:\nhttp://simpligility.github.io/android-maven-plugin/native-deps.html\n\nHowever, there are some rules about this, at first, I just extracted the .so files from the jars and published those, but the android plugin extracts them as the artifact name, so their artifact names should be changed to.\n\nGDX makes it difficult to NOT load the system library: \"gdx\", one can get around GdxNativesLoader.disableNativesLoading by implementing an android application, however, it is impossible to stop AndroidGL20's static initializer from loading \"gdx\"\n\nI propose that the android arch artifacts should be named: gdx-[arch-classifier].so and released like that, instead of embedded in jars.\n\nThis would allow a much simpler maven based build system for android.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3837/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3836","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3836/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3836/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3836/events","html_url":"https://github.com/libgdx/libgdx/pull/3836","id":133124474,"number":3836,"title":"Added getter for FloatTextureData.buffer","user":{"login":"barkholt","id":16083107,"avatar_url":"https://avatars3.githubusercontent.com/u/16083107?v=4","gravatar_id":"","url":"https://api.github.com/users/barkholt","html_url":"https://github.com/barkholt","followers_url":"https://api.github.com/users/barkholt/followers","following_url":"https://api.github.com/users/barkholt/following{/other_user}","gists_url":"https://api.github.com/users/barkholt/gists{/gist_id}","starred_url":"https://api.github.com/users/barkholt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/barkholt/subscriptions","organizations_url":"https://api.github.com/users/barkholt/orgs","repos_url":"https://api.github.com/users/barkholt/repos","events_url":"https://api.github.com/users/barkholt/events{/privacy}","received_events_url":"https://api.github.com/users/barkholt/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-02-12T00:16:49Z","updated_at":"2016-03-05T14:35:43Z","closed_at":"2016-03-05T14:35:42Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3836","html_url":"https://github.com/libgdx/libgdx/pull/3836","diff_url":"https://github.com/libgdx/libgdx/pull/3836.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3836.patch"},"body":"Makes it possible to access the FloatBuffer backing the FloatTextureData. Without this it is impossible to alter the contents of the buffer before sending it of to the GPU.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3836/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3835","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3835/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3835/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3835/events","html_url":"https://github.com/libgdx/libgdx/pull/3835","id":133122934,"number":3835,"title":"Fixed supported for extensions in GWT/WebGL backend","user":{"login":"barkholt","id":16083107,"avatar_url":"https://avatars3.githubusercontent.com/u/16083107?v=4","gravatar_id":"","url":"https://api.github.com/users/barkholt","html_url":"https://github.com/barkholt","followers_url":"https://api.github.com/users/barkholt/followers","following_url":"https://api.github.com/users/barkholt/following{/other_user}","gists_url":"https://api.github.com/users/barkholt/gists{/gist_id}","starred_url":"https://api.github.com/users/barkholt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/barkholt/subscriptions","organizations_url":"https://api.github.com/users/barkholt/orgs","repos_url":"https://api.github.com/users/barkholt/repos","events_url":"https://api.github.com/users/barkholt/events{/privacy}","received_events_url":"https://api.github.com/users/barkholt/received_events","type":"User","site_admin":false},"labels":[{"id":67383148,"url":"https://api.github.com/repos/libgdx/libgdx/labels/gwt","name":"gwt","color":"5319e7","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-02-12T00:04:57Z","updated_at":"2016-05-12T15:46:48Z","closed_at":"2016-05-12T15:46:48Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3835","html_url":"https://github.com/libgdx/libgdx/pull/3835","diff_url":"https://github.com/libgdx/libgdx/pull/3835.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3835.patch"},"body":"Using/checking for extensions in the GWT backend using Graphics.supportsExtension was not working. Code from Android/iOS was being used, even though the WebGL API differs in this regard.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3835/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3834","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3834/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3834/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3834/events","html_url":"https://github.com/libgdx/libgdx/issues/3834","id":132954989,"number":3834,"title":"PolygonSpriteBatch or PolygonSprite limited drawing.","user":{"login":"m8tto","id":8543124,"avatar_url":"https://avatars2.githubusercontent.com/u/8543124?v=4","gravatar_id":"","url":"https://api.github.com/users/m8tto","html_url":"https://github.com/m8tto","followers_url":"https://api.github.com/users/m8tto/followers","following_url":"https://api.github.com/users/m8tto/following{/other_user}","gists_url":"https://api.github.com/users/m8tto/gists{/gist_id}","starred_url":"https://api.github.com/users/m8tto/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/m8tto/subscriptions","organizations_url":"https://api.github.com/users/m8tto/orgs","repos_url":"https://api.github.com/users/m8tto/repos","events_url":"https://api.github.com/users/m8tto/events{/privacy}","received_events_url":"https://api.github.com/users/m8tto/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-02-11T12:05:03Z","updated_at":"2016-02-11T13:39:49Z","closed_at":"2016-02-11T13:39:49Z","author_association":"NONE","body":"Hi. I'm making runner game.\nI'm trying to render my bodies (bodies of platforms) with PolygonSprite.\nBut for some reason only some of them are drawn (only some at start, around 5-8 blocks avg.)\n\nWhat I do.\n1. I'm creating Brick object with body in it.\n2. In init() method I'm creating new PolygonSprite.\n3. I draw them with PolygonSpriteBatch with camera ProjectionMatrix\n\nAt some point they're just stop drawing. \nLog output says that everything is ok. And also sprite-create method is the same for all of the blocks.\n\nSo when camera is moved to 300 - 400 by x axis (world width is 100) they stop rendering.\nBox@dDebugRenderer draws everything fine.\nSee screenshot.\n\nWhat could that be?\n\nHere's sprite creating in brick class.\nObjects are pool able for now, thats why checking sprite for null. (That's not an issue cause when they were not pool able problem still were there).\n<img width=\"840\" alt=\"2016-02-11 14 58 32\" src=\"https://cloud.githubusercontent.com/assets/8543124/12975871/841d4f4a-d0d0-11e5-822b-601cd02e6f1a.png\">\n\n```\np = (PolygonShape)fxt.getShape();\nint vertexCount = p.getVertexCount();\nfloat[] vertices = new float[vertexCount * 2];\nVector2 mTmp = new Vector2();\nfor (int k = 0; k < vertexCount; k++) {\n    p.getVertex(k, mTmp);\n    mTmp.add(b.getPosition()); \n    vertices[k * 2] = mTmp.x;\n    vertices[k * 2 + 1] = mTmp.y;\n}\nshort triangles[] = gg.ECT.computeTriangles(vertices).toArray();\nif(sprite==null){\n    sprite =  new PolygonSprite(new PolygonRegion(gg.atl.findRegion(\"wood\"), vertices, triangles));\n} else {\n    sprite.setRegion(new PolygonRegion(gg.atl.findRegion(\"wood\"), vertices, triangles));\n}\n```\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3834/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3833","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3833/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3833/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3833/events","html_url":"https://github.com/libgdx/libgdx/issues/3833","id":132541753,"number":3833,"title":"Exception using Genymotion","user":{"login":"fechy","id":1142092,"avatar_url":"https://avatars0.githubusercontent.com/u/1142092?v=4","gravatar_id":"","url":"https://api.github.com/users/fechy","html_url":"https://github.com/fechy","followers_url":"https://api.github.com/users/fechy/followers","following_url":"https://api.github.com/users/fechy/following{/other_user}","gists_url":"https://api.github.com/users/fechy/gists{/gist_id}","starred_url":"https://api.github.com/users/fechy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fechy/subscriptions","organizations_url":"https://api.github.com/users/fechy/orgs","repos_url":"https://api.github.com/users/fechy/repos","events_url":"https://api.github.com/users/fechy/events{/privacy}","received_events_url":"https://api.github.com/users/fechy/received_events","type":"User","site_admin":false},"labels":[{"id":59604218,"url":"https://api.github.com/repos/libgdx/libgdx/labels/android","name":"android","color":"009800","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2016-02-09T21:34:36Z","updated_at":"2016-03-23T15:58:32Z","closed_at":"2016-03-23T15:58:32Z","author_association":"NONE","body":"Hi, \n\nI'm getting this exception ONLY when trying to debug using Genymotion.\n\n``` java\n02-09 16:09:54.682    4444-4489/? W/GL2JNIView﹕ creating OpenGL ES 2.0 context\n02-09 16:09:54.683    4444-4489/? E/AndroidRuntime﹕ FATAL EXCEPTION: GLThread 172\n    Process: com.kingmonkey.arkanoid.android, PID: 4444\n    java.lang.IllegalArgumentException\n            at com.google.android.gles_jni.EGLImpl._eglCreateContext(Native Method)\n            at com.google.android.gles_jni.EGLImpl.eglCreateContext(EGLImpl.java:54)\n            at com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ContextFactory.createContext(GLSurfaceView20.java:144)\n            at android.opengl.GLSurfaceView$EglHelper.start(GLSurfaceView.java:1029)\n            at android.opengl.GLSurfaceView$GLThread.guardedRun(GLSurfaceView.java:1400)\n            at android.opengl.GLSurfaceView$GLThread.run(GLSurfaceView.java:1239)\n```\n\nThis happened since version 1.9.0 and currently on version 1.9.2.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3833/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3832","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3832/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3832/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3832/events","html_url":"https://github.com/libgdx/libgdx/issues/3832","id":132449000,"number":3832,"title":"[GWT] Keeps loading old assets","user":{"login":"JFixby","id":1580663,"avatar_url":"https://avatars0.githubusercontent.com/u/1580663?v=4","gravatar_id":"","url":"https://api.github.com/users/JFixby","html_url":"https://github.com/JFixby","followers_url":"https://api.github.com/users/JFixby/followers","following_url":"https://api.github.com/users/JFixby/following{/other_user}","gists_url":"https://api.github.com/users/JFixby/gists{/gist_id}","starred_url":"https://api.github.com/users/JFixby/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JFixby/subscriptions","organizations_url":"https://api.github.com/users/JFixby/orgs","repos_url":"https://api.github.com/users/JFixby/repos","events_url":"https://api.github.com/users/JFixby/events{/privacy}","received_events_url":"https://api.github.com/users/JFixby/received_events","type":"User","site_admin":false},"labels":[{"id":67383148,"url":"https://api.github.com/repos/libgdx/libgdx/labels/gwt","name":"gwt","color":"5319e7","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-02-09T15:31:15Z","updated_at":"2016-03-23T16:25:45Z","closed_at":"2016-03-23T16:25:45Z","author_association":"CONTRIBUTOR","body":"When I make changes in assets folder I also put a file in there that stores current assets version. Later I print out the content of the file into console to be sure that I'm using the right assets.\n\nThis revealed the problem: GWT keeps using the old assets. Cleaning browser cache doesn't help.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3832/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3831","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3831/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3831/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3831/events","html_url":"https://github.com/libgdx/libgdx/issues/3831","id":132441599,"number":3831,"title":"NullPointerException while importing project","user":{"login":"jshultz","id":10048519,"avatar_url":"https://avatars1.githubusercontent.com/u/10048519?v=4","gravatar_id":"","url":"https://api.github.com/users/jshultz","html_url":"https://github.com/jshultz","followers_url":"https://api.github.com/users/jshultz/followers","following_url":"https://api.github.com/users/jshultz/following{/other_user}","gists_url":"https://api.github.com/users/jshultz/gists{/gist_id}","starred_url":"https://api.github.com/users/jshultz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jshultz/subscriptions","organizations_url":"https://api.github.com/users/jshultz/orgs","repos_url":"https://api.github.com/users/jshultz/repos","events_url":"https://api.github.com/users/jshultz/events{/privacy}","received_events_url":"https://api.github.com/users/jshultz/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2016-02-09T14:59:20Z","updated_at":"2016-02-09T15:35:45Z","closed_at":"2016-02-09T15:34:45Z","author_association":"NONE","body":"I get a NullPointerException error while importing my project into Eclipse. I checked and I have all the requirements (JDK 1.7+, Android SDK, ADT Plugin for Eclipse and Eclipse Integration Gradle. I am using JDK 1.8\n![importgradleproject](https://cloud.githubusercontent.com/assets/10048519/12919796/58f5c778-cf0b-11e5-9efc-9134968f4110.png)\n![nullpointerexceptionmessage](https://cloud.githubusercontent.com/assets/10048519/12919795/58eae1f0-cf0b-11e5-9de3-1315b8753ed0.png)\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3831/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3830","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3830/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3830/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3830/events","html_url":"https://github.com/libgdx/libgdx/issues/3830","id":132275761,"number":3830,"title":"NullPointerException inside engine during loading mp3 file","user":{"login":"desertkun","id":1666014,"avatar_url":"https://avatars0.githubusercontent.com/u/1666014?v=4","gravatar_id":"","url":"https://api.github.com/users/desertkun","html_url":"https://github.com/desertkun","followers_url":"https://api.github.com/users/desertkun/followers","following_url":"https://api.github.com/users/desertkun/following{/other_user}","gists_url":"https://api.github.com/users/desertkun/gists{/gist_id}","starred_url":"https://api.github.com/users/desertkun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/desertkun/subscriptions","organizations_url":"https://api.github.com/users/desertkun/orgs","repos_url":"https://api.github.com/users/desertkun/repos","events_url":"https://api.github.com/users/desertkun/events{/privacy}","received_events_url":"https://api.github.com/users/desertkun/received_events","type":"User","site_admin":false},"labels":[{"id":172870364,"url":"https://api.github.com/repos/libgdx/libgdx/labels/need%20more%20info","name":"need more info","color":"bfdadc","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2016-02-08T22:32:07Z","updated_at":"2016-04-28T22:11:48Z","closed_at":"2016-04-20T14:45:50Z","author_association":"NONE","body":"Hello!\n\nFrom time to time I get this crash: NullPointerException at Mp3.java:82 ([here](https://github.com/libgdx/libgdx/blob/master/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/audio/Mp3.java#L82)) as a part of crash reports from players, and once I did also reproduce this issue.\n\n(I load a lot of sounds using `AssetManager`)\n\n```\njava.lang.NullPointerException\nat com.badlogic.gdx.backends.lwjgl.audio.Mp3$Music.read(Mp3.java:82)\nat com.badlogic.gdx.backends.lwjgl.audio.OpenALMusic.fill(OpenALMusic.java:240)\nat com.badlogic.gdx.backends.lwjgl.audio.OpenALMusic.update(OpenALMusic.java:224)\nat com.badlogic.gdx.backends.lwjgl.audio.OpenALAudio.update(OpenALAudio.java:227)\nat com.badlogic.gdx.backends.lwjgl.LwjglApplication.mainLoop(LwjglApplication.java:211)\nat com.badlogic.gdx.backends.lwjgl.LwjglApplication$1.run(LwjglApplication.java:123)\n```\n\nProbably, this is a thread problem, but I think, simple wrap with `if (bitstream != null)` gonna solve the issue.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3830/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3829","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3829/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3829/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3829/events","html_url":"https://github.com/libgdx/libgdx/issues/3829","id":132193718,"number":3829,"title":"LibGDX version in setup not updated to 1.9.2","user":{"login":"Fringale","id":2722396,"avatar_url":"https://avatars1.githubusercontent.com/u/2722396?v=4","gravatar_id":"","url":"https://api.github.com/users/Fringale","html_url":"https://github.com/Fringale","followers_url":"https://api.github.com/users/Fringale/followers","following_url":"https://api.github.com/users/Fringale/following{/other_user}","gists_url":"https://api.github.com/users/Fringale/gists{/gist_id}","starred_url":"https://api.github.com/users/Fringale/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Fringale/subscriptions","organizations_url":"https://api.github.com/users/Fringale/orgs","repos_url":"https://api.github.com/users/Fringale/repos","events_url":"https://api.github.com/users/Fringale/events{/privacy}","received_events_url":"https://api.github.com/users/Fringale/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-02-08T16:44:35Z","updated_at":"2016-02-08T20:29:02Z","closed_at":"2016-02-08T20:29:02Z","author_association":"NONE","body":"It seems the libGDX version in the setup dependency bank has not been updated to 1.9.2 (https://github.com/libgdx/libgdx/blob/master/extensions/gdx-setup/src/com/badlogic/gdx/setup/DependencyBank.java#L25), and as such the current setup app generates a build.gradle file referencing 1.9.1.\n\nI suspect this is also the cause of the [Versions page](http://libgdx.badlogicgames.com/versions.html) still showing 1.9.1 as the release version.\n\nJust a quick heads-up, thanks guys for your work! : )\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3829/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}}],"meta":{"x-ratelimit-limit":"5000","x-ratelimit-remaining":"4964","x-ratelimit-reset":"1506844633","x-github-request-id":"CA36:110A:24825D1:40C547A:59D09422","x-github-media-type":"github.squirrel-girl-preview","link":"<https://api.github.com/repositories/5373551/issues?state=all&page=37>; rel=\"next\", <https://api.github.com/repositories/5373551/issues?state=all&page=164>; rel=\"last\", <https://api.github.com/repositories/5373551/issues?state=all&page=1>; rel=\"first\", <https://api.github.com/repositories/5373551/issues?state=all&page=35>; rel=\"prev\"","etag":"\"08c3782e214a10fb8478a58f12d29a72\"","status":"200 OK"}}
