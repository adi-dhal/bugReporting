{"data":[{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1995","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1995/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1995/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1995/events","html_url":"https://github.com/libgdx/libgdx/issues/1995","id":36068178,"number":1995,"title":".","user":{"login":"Portals","id":7045380,"avatar_url":"https://avatars0.githubusercontent.com/u/7045380?v=4","gravatar_id":"","url":"https://api.github.com/users/Portals","html_url":"https://github.com/Portals","followers_url":"https://api.github.com/users/Portals/followers","following_url":"https://api.github.com/users/Portals/following{/other_user}","gists_url":"https://api.github.com/users/Portals/gists{/gist_id}","starred_url":"https://api.github.com/users/Portals/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Portals/subscriptions","organizations_url":"https://api.github.com/users/Portals/orgs","repos_url":"https://api.github.com/users/Portals/repos","events_url":"https://api.github.com/users/Portals/events{/privacy}","received_events_url":"https://api.github.com/users/Portals/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2014-06-19T10:56:40Z","updated_at":"2014-06-19T11:27:44Z","closed_at":"2014-06-19T10:58:57Z","author_association":"NONE","body":".\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1995/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1994","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1994/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1994/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1994/events","html_url":"https://github.com/libgdx/libgdx/issues/1994","id":36019220,"number":1994,"title":"Add a rowspan method to Table.","user":{"login":"Portals","id":7045380,"avatar_url":"https://avatars0.githubusercontent.com/u/7045380?v=4","gravatar_id":"","url":"https://api.github.com/users/Portals","html_url":"https://github.com/Portals","followers_url":"https://api.github.com/users/Portals/followers","following_url":"https://api.github.com/users/Portals/following{/other_user}","gists_url":"https://api.github.com/users/Portals/gists{/gist_id}","starred_url":"https://api.github.com/users/Portals/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Portals/subscriptions","organizations_url":"https://api.github.com/users/Portals/orgs","repos_url":"https://api.github.com/users/Portals/repos","events_url":"https://api.github.com/users/Portals/events{/privacy}","received_events_url":"https://api.github.com/users/Portals/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2014-06-18T19:29:35Z","updated_at":"2014-06-18T23:35:09Z","closed_at":"2014-06-18T21:19:00Z","author_association":"NONE","body":"Add a rowspan method to Table. \n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1994/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1993","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1993/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1993/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1993/events","html_url":"https://github.com/libgdx/libgdx/issues/1993","id":36004821,"number":1993,"title":"[Enhancement] Please make every setter in scene2d.ui return this","user":{"login":"vlaaad","id":732554,"avatar_url":"https://avatars2.githubusercontent.com/u/732554?v=4","gravatar_id":"","url":"https://api.github.com/users/vlaaad","html_url":"https://github.com/vlaaad","followers_url":"https://api.github.com/users/vlaaad/followers","following_url":"https://api.github.com/users/vlaaad/following{/other_user}","gists_url":"https://api.github.com/users/vlaaad/gists{/gist_id}","starred_url":"https://api.github.com/users/vlaaad/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vlaaad/subscriptions","organizations_url":"https://api.github.com/users/vlaaad/orgs","repos_url":"https://api.github.com/users/vlaaad/repos","events_url":"https://api.github.com/users/vlaaad/events{/privacy}","received_events_url":"https://api.github.com/users/vlaaad/received_events","type":"User","site_admin":false},"labels":[{"id":11336982,"url":"https://api.github.com/repos/libgdx/libgdx/labels/enhancement","name":"enhancement","color":"84b6eb","default":true},{"id":89047068,"url":"https://api.github.com/repos/libgdx/libgdx/labels/scene2d","name":"scene2d","color":"ff00ff","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":22,"created_at":"2014-06-18T16:46:43Z","updated_at":"2014-06-25T16:57:51Z","closed_at":"2014-06-25T16:57:51Z","author_association":"NONE","body":"It is annoying to write in every new ui things like\n\n```\nLabel scoreLabel = new Label(scoreValue, skin, \"score\");\nscoreLabel.setAlignment(Align.center);\ntable.add(score);\n```\n\nIt would be so much easier to write just one line like\n\n```\ntable.add(new Label(scoreValue, skin, \"score\").withAlign(Align.Center))\n```\n\nUI is very boring to write. It is as boring as writing particles in code. Sadly there is no oficial ui editor... So may be just make life a little easier and provide more elegant api?\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1993/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1992","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1992/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1992/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1992/events","html_url":"https://github.com/libgdx/libgdx/pull/1992","id":36004313,"number":1992,"title":"PriorityQueue: fixed GWT compatibility.","user":{"login":"davebaol","id":2366334,"avatar_url":"https://avatars3.githubusercontent.com/u/2366334?v=4","gravatar_id":"","url":"https://api.github.com/users/davebaol","html_url":"https://github.com/davebaol","followers_url":"https://api.github.com/users/davebaol/followers","following_url":"https://api.github.com/users/davebaol/following{/other_user}","gists_url":"https://api.github.com/users/davebaol/gists{/gist_id}","starred_url":"https://api.github.com/users/davebaol/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davebaol/subscriptions","organizations_url":"https://api.github.com/users/davebaol/orgs","repos_url":"https://api.github.com/users/davebaol/repos","events_url":"https://api.github.com/users/davebaol/events{/privacy}","received_events_url":"https://api.github.com/users/davebaol/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2014-06-18T16:41:46Z","updated_at":"2014-06-18T17:36:13Z","closed_at":"2014-06-18T17:23:52Z","author_association":"MEMBER","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/1992","html_url":"https://github.com/libgdx/libgdx/pull/1992","diff_url":"https://github.com/libgdx/libgdx/pull/1992.diff","patch_url":"https://github.com/libgdx/libgdx/pull/1992.patch"},"body":"As per request https://github.com/libgdx/libgdx/issues/1991\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1992/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1991","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1991/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1991/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1991/events","html_url":"https://github.com/libgdx/libgdx/issues/1991","id":35982913,"number":1991,"title":"gdx-ai: PriorityQueue not GWT compatible","user":{"login":"MobiDevelop","id":1095464,"avatar_url":"https://avatars2.githubusercontent.com/u/1095464?v=4","gravatar_id":"","url":"https://api.github.com/users/MobiDevelop","html_url":"https://github.com/MobiDevelop","followers_url":"https://api.github.com/users/MobiDevelop/followers","following_url":"https://api.github.com/users/MobiDevelop/following{/other_user}","gists_url":"https://api.github.com/users/MobiDevelop/gists{/gist_id}","starred_url":"https://api.github.com/users/MobiDevelop/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MobiDevelop/subscriptions","organizations_url":"https://api.github.com/users/MobiDevelop/orgs","repos_url":"https://api.github.com/users/MobiDevelop/repos","events_url":"https://api.github.com/users/MobiDevelop/events{/privacy}","received_events_url":"https://api.github.com/users/MobiDevelop/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-06-18T13:15:44Z","updated_at":"2014-06-18T16:42:17Z","closed_at":"2014-06-18T16:42:17Z","author_association":"OWNER","body":"Within the `growToSize` method, `OutOfMemoryError` should be replaced with an `IllegalArgumentException` when the `minCapacity` argument is less than 0. Also, `Array.copyOf` is not compatible with GWT.\n\nThese prevent compiling of HTML projects using the gdx-ai extension.\n\n@davebaol, want to take a stab at it?\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1991/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1990","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1990/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1990/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1990/events","html_url":"https://github.com/libgdx/libgdx/issues/1990","id":35976699,"number":1990,"title":"scene2d.ui.SelectBox renders wrong font when camera ortho true","user":{"login":"mozgovipc","id":289455,"avatar_url":"https://avatars1.githubusercontent.com/u/289455?v=4","gravatar_id":"","url":"https://api.github.com/users/mozgovipc","html_url":"https://github.com/mozgovipc","followers_url":"https://api.github.com/users/mozgovipc/followers","following_url":"https://api.github.com/users/mozgovipc/following{/other_user}","gists_url":"https://api.github.com/users/mozgovipc/gists{/gist_id}","starred_url":"https://api.github.com/users/mozgovipc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mozgovipc/subscriptions","organizations_url":"https://api.github.com/users/mozgovipc/orgs","repos_url":"https://api.github.com/users/mozgovipc/repos","events_url":"https://api.github.com/users/mozgovipc/events{/privacy}","received_events_url":"https://api.github.com/users/mozgovipc/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2014-06-18T11:46:01Z","updated_at":"2014-06-22T12:28:28Z","closed_at":"2014-06-22T12:28:28Z","author_association":"NONE","body":"Hi,\nthe problem is that when I create a SelectBox, add it to the stage, and set stage's camera reversed axis y to true and the font flip property true in the skin file, then the select box items are rendered wrong. Please see screenshots.\nReversed y axis:\n![screen shot 2014-06-18 at 2 28 51 pm](https://cloud.githubusercontent.com/assets/289455/3313043/501d291e-f6dd-11e3-9287-29949cb0c20a.png)\nNormal y axis:\n![screen shot 2014-06-18 at 2 30 48 pm](https://cloud.githubusercontent.com/assets/289455/3313044/57b6cc3e-f6dd-11e3-9698-2c34901c82c3.png)\n\nThe problem is platform-independent. I tried multiple ui components but SelectBox seams to be the only one that has this problem.\n\nCan be reproduced with this simple code:\n\n``` Java\npublic class MyGdxGame extends ApplicationAdapter implements ApplicationListener {\n    private Stage stage;\n    private Table mainTab;\n    private SelectBox select;\n    private Skin skin;\n    private OrthographicCamera camera;\n\n    @Override\n    public void create () {\n        skin = new Skin(Gdx.files.internal(\"uiskin.json\"));\n        camera = new OrthographicCamera(Gdx.graphics.getWidth(), Gdx.graphics.getHeight());\n        camera.setToOrtho(true, Gdx.graphics.getWidth(), Gdx.graphics.getHeight());\n        ScreenViewport sw = new ScreenViewport(camera);\n        stage = new Stage(sw);\n        Gdx.input.setInputProcessor(stage);\n        mainTab = new Table(skin); \n        select = new SelectBox(skin);\n        String[] items = {\"item1\",\"item2\",\"item3\"};\n        mainTab.setSize(200, 200);\n        select.setItems(items);\n        mainTab.add(select);\n        stage.addActor(mainTab);\n        mainTab.debug();\n    }\n\n    @Override\n    public void render() {\n        Gdx.gl.glClearColor(0, 0, 0, 0);\n        Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);\n        Table.drawDebug(stage);\n        stage.act(Gdx.graphics.getDeltaTime());\n        stage.draw();\n    }\n}\n```\n\nThanks.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1990/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1989","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1989/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1989/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1989/events","html_url":"https://github.com/libgdx/libgdx/pull/1989","id":35963276,"number":1989,"title":"iOS; Allow to run without IOSAudio","user":{"login":"xoppa","id":2349087,"avatar_url":"https://avatars3.githubusercontent.com/u/2349087?v=4","gravatar_id":"","url":"https://api.github.com/users/xoppa","html_url":"https://github.com/xoppa","followers_url":"https://api.github.com/users/xoppa/followers","following_url":"https://api.github.com/users/xoppa/following{/other_user}","gists_url":"https://api.github.com/users/xoppa/gists{/gist_id}","starred_url":"https://api.github.com/users/xoppa/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xoppa/subscriptions","organizations_url":"https://api.github.com/users/xoppa/orgs","repos_url":"https://api.github.com/users/xoppa/repos","events_url":"https://api.github.com/users/xoppa/events{/privacy}","received_events_url":"https://api.github.com/users/xoppa/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-06-18T08:17:55Z","updated_at":"2014-06-18T08:22:12Z","closed_at":"2014-06-18T08:21:58Z","author_association":"OWNER","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/1989","html_url":"https://github.com/libgdx/libgdx/pull/1989","diff_url":"https://github.com/libgdx/libgdx/pull/1989.diff","patch_url":"https://github.com/libgdx/libgdx/pull/1989.patch"},"body":"I finally have OSX running. The only problem i encountered was that the audio device wasn't available (which makes sense), causing a NPE in IOSAudio. This change checks for this NPE, making it possible to run without an audio device.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1989/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1988","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1988/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1988/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1988/events","html_url":"https://github.com/libgdx/libgdx/pull/1988","id":35932286,"number":1988,"title":"A finger-independent GestureDetector. (fixes issue #1349)","user":{"login":"jksiezni","id":5984059,"avatar_url":"https://avatars3.githubusercontent.com/u/5984059?v=4","gravatar_id":"","url":"https://api.github.com/users/jksiezni","html_url":"https://github.com/jksiezni","followers_url":"https://api.github.com/users/jksiezni/followers","following_url":"https://api.github.com/users/jksiezni/following{/other_user}","gists_url":"https://api.github.com/users/jksiezni/gists{/gist_id}","starred_url":"https://api.github.com/users/jksiezni/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jksiezni/subscriptions","organizations_url":"https://api.github.com/users/jksiezni/orgs","repos_url":"https://api.github.com/users/jksiezni/repos","events_url":"https://api.github.com/users/jksiezni/events{/privacy}","received_events_url":"https://api.github.com/users/jksiezni/received_events","type":"User","site_admin":false},"labels":[{"id":11336982,"url":"https://api.github.com/repos/libgdx/libgdx/labels/enhancement","name":"enhancement","color":"84b6eb","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2014-06-17T21:11:55Z","updated_at":"2014-07-02T23:46:02Z","closed_at":"2014-06-29T09:03:11Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/1988","html_url":"https://github.com/libgdx/libgdx/pull/1988","diff_url":"https://github.com/libgdx/libgdx/pull/1988.diff","patch_url":"https://github.com/libgdx/libgdx/pull/1988.patch"},"body":"Hi, I've changed a GestureDetector to be finger independent. It means that gestures can be detected for each widget independently now.\n\nFor example, when I put two scroll panes next to each other, then I'm unable to scroll two lists simultaneously. GestureDetector simply expects, that I always use one finger to operate the GUI.\n\nA good test of this scenario is in a ScrollPane2Test class. First, touch the screen outside of the scroll pane, and then try to scroll with a second finger.\n\nThe second test GestureDetectorTest can be used to check, that the change is backward compatible, but it also shows some shortcomings of the implementation, like the third touch is not registered, so it can't be used to prolong pinching (like in Google Maps for instance).\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1988/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1987","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1987/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1987/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1987/events","html_url":"https://github.com/libgdx/libgdx/pull/1987","id":35896095,"number":1987,"title":"fixed issue #937, On screen keyboard not show the selectable words when use chinese input method editor.","user":{"login":"lefay1982","id":5716884,"avatar_url":"https://avatars2.githubusercontent.com/u/5716884?v=4","gravatar_id":"","url":"https://api.github.com/users/lefay1982","html_url":"https://github.com/lefay1982","followers_url":"https://api.github.com/users/lefay1982/followers","following_url":"https://api.github.com/users/lefay1982/following{/other_user}","gists_url":"https://api.github.com/users/lefay1982/gists{/gist_id}","starred_url":"https://api.github.com/users/lefay1982/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lefay1982/subscriptions","organizations_url":"https://api.github.com/users/lefay1982/orgs","repos_url":"https://api.github.com/users/lefay1982/repos","events_url":"https://api.github.com/users/lefay1982/events{/privacy}","received_events_url":"https://api.github.com/users/lefay1982/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-06-17T14:46:08Z","updated_at":"2014-06-17T17:08:57Z","closed_at":"2014-06-17T17:08:57Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/1987","html_url":"https://github.com/libgdx/libgdx/pull/1987","diff_url":"https://github.com/libgdx/libgdx/pull/1987.diff","patch_url":"https://github.com/libgdx/libgdx/pull/1987.patch"},"body":"fixed issue #937, On screen keyboard not show the selectable words when use chinese input method editor.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1987/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1986","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1986/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1986/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1986/events","html_url":"https://github.com/libgdx/libgdx/issues/1986","id":35890608,"number":1986,"title":"AssetManager does not dispose of unloaded sounds properly on iOS","user":{"login":"dgmp88","id":6919834,"avatar_url":"https://avatars3.githubusercontent.com/u/6919834?v=4","gravatar_id":"","url":"https://api.github.com/users/dgmp88","html_url":"https://github.com/dgmp88","followers_url":"https://api.github.com/users/dgmp88/followers","following_url":"https://api.github.com/users/dgmp88/following{/other_user}","gists_url":"https://api.github.com/users/dgmp88/gists{/gist_id}","starred_url":"https://api.github.com/users/dgmp88/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dgmp88/subscriptions","organizations_url":"https://api.github.com/users/dgmp88/orgs","repos_url":"https://api.github.com/users/dgmp88/repos","events_url":"https://api.github.com/users/dgmp88/events{/privacy}","received_events_url":"https://api.github.com/users/dgmp88/received_events","type":"User","site_admin":false},"labels":[{"id":11336980,"url":"https://api.github.com/repos/libgdx/libgdx/labels/bug","name":"bug","color":"fc2929","default":true},{"id":59604199,"url":"https://api.github.com/repos/libgdx/libgdx/labels/ios","name":"ios","color":"207de5","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":11,"created_at":"2014-06-17T13:52:13Z","updated_at":"2015-03-07T19:38:24Z","closed_at":"2015-03-07T19:38:24Z","author_association":"NONE","body":"Calling AssetManager.unload() doesn't seem to remove Sounds from memory on iOS (iPad Air, iOS 7.1.1). As far as I can tell, this is working fine on both Desktop and Android. Calling Sound.dispose() on the sound directly seems to be fine. The leak is visible in Instruments, use a large file (e.g. \"8.12.mp3\" in gdx-tests) to make this as obvious as possible.\n\nApologies if I'm just misunderstanding the AssetManager.\n\nDemo code: \n\n``` java\npackage com.mygdx.game;\n\nimport com.badlogic.gdx.ApplicationAdapter;\nimport com.badlogic.gdx.assets.AssetManager;\nimport com.badlogic.gdx.audio.Sound;\n\n\npublic class MyGdxTests extends ApplicationAdapter {\n    public AssetManager manager = new AssetManager();\n    int counter = 1;\n\n    @Override\n    public void create () {\n    }\n\n    @Override\n    public void render () {\n        if (counter == 1) {\n            // Load up the sound\n            manager.load(\"8.12.mp3\",Sound.class);\n            manager.finishLoading();\n            System.out.println(\"loaded\");\n        }\n\n        if (counter == 100) {\n            // Check it's there \n            for (String s : manager.getAssetNames()) {\n                System.out.println(\"before: \" + s);\n            }\n            // Unload the sound\n            manager.unload(\"8.12.mp3\");\n\n            // Check it's gone \n            for (String s : manager.getAssetNames()) {\n                System.out.println(\"after: \" + s); // Should never be seen (and isn't)\n            }\n            counter = 0;\n            System.out.println(\"unloaded\");\n        }\n        counter ++;\n    }\n}\n```\n\nInstruments output: \n![screen shot 2014-06-17 at 14 33 52](https://cloud.githubusercontent.com/assets/6919834/3300926/f641d1fe-f625-11e3-9693-83c054a84ae9.png)\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1986/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1985","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1985/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1985/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1985/events","html_url":"https://github.com/libgdx/libgdx/issues/1985","id":35881759,"number":1985,"title":"HTTP Methods other than GET/POST Unpossible in GWT","user":{"login":"DanielCloudCredo","id":5970158,"avatar_url":"https://avatars0.githubusercontent.com/u/5970158?v=4","gravatar_id":"","url":"https://api.github.com/users/DanielCloudCredo","html_url":"https://github.com/DanielCloudCredo","followers_url":"https://api.github.com/users/DanielCloudCredo/followers","following_url":"https://api.github.com/users/DanielCloudCredo/following{/other_user}","gists_url":"https://api.github.com/users/DanielCloudCredo/gists{/gist_id}","starred_url":"https://api.github.com/users/DanielCloudCredo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DanielCloudCredo/subscriptions","organizations_url":"https://api.github.com/users/DanielCloudCredo/orgs","repos_url":"https://api.github.com/users/DanielCloudCredo/repos","events_url":"https://api.github.com/users/DanielCloudCredo/events{/privacy}","received_events_url":"https://api.github.com/users/DanielCloudCredo/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2014-06-17T11:56:31Z","updated_at":"2014-06-24T19:21:15Z","closed_at":"2014-06-20T05:06:04Z","author_association":"NONE","body":"GwtNet currently checks to see if a HttpRequest is GET, and if not assumes it is POST. This means that it's not possible to use other methods (PUT and DELETE being the most useful), even though they're supported by GWT itself.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1985/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1984","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1984/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1984/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1984/events","html_url":"https://github.com/libgdx/libgdx/pull/1984","id":35831753,"number":1984,"title":"TMXLoader : Add support for 'rotation' property","user":{"login":"vbousquet","id":2796036,"avatar_url":"https://avatars1.githubusercontent.com/u/2796036?v=4","gravatar_id":"","url":"https://api.github.com/users/vbousquet","html_url":"https://github.com/vbousquet","followers_url":"https://api.github.com/users/vbousquet/followers","following_url":"https://api.github.com/users/vbousquet/following{/other_user}","gists_url":"https://api.github.com/users/vbousquet/gists{/gist_id}","starred_url":"https://api.github.com/users/vbousquet/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vbousquet/subscriptions","organizations_url":"https://api.github.com/users/vbousquet/orgs","repos_url":"https://api.github.com/users/vbousquet/repos","events_url":"https://api.github.com/users/vbousquet/events{/privacy}","received_events_url":"https://api.github.com/users/vbousquet/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-06-16T20:12:59Z","updated_at":"2014-06-17T11:22:27Z","closed_at":"2014-06-17T11:22:27Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/1984","html_url":"https://github.com/libgdx/libgdx/pull/1984","diff_url":"https://github.com/libgdx/libgdx/pull/1984.diff","patch_url":"https://github.com/libgdx/libgdx/pull/1984.patch"},"body":"Very simple commit, just to load Tiled's 'rotation' property when it is defined (i.e. when used in Tiled editor) in the MapObject properties. When the rotation is not used, Tiled do not put this property, therefore nothing is loaded and you just get the current behavior.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1984/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1983","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1983/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1983/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1983/events","html_url":"https://github.com/libgdx/libgdx/pull/1983","id":35776099,"number":1983,"title":"Made SelectBox account for list background size","user":{"login":"aegamesi","id":552502,"avatar_url":"https://avatars2.githubusercontent.com/u/552502?v=4","gravatar_id":"","url":"https://api.github.com/users/aegamesi","html_url":"https://github.com/aegamesi","followers_url":"https://api.github.com/users/aegamesi/followers","following_url":"https://api.github.com/users/aegamesi/following{/other_user}","gists_url":"https://api.github.com/users/aegamesi/gists{/gist_id}","starred_url":"https://api.github.com/users/aegamesi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aegamesi/subscriptions","organizations_url":"https://api.github.com/users/aegamesi/orgs","repos_url":"https://api.github.com/users/aegamesi/repos","events_url":"https://api.github.com/users/aegamesi/events{/privacy}","received_events_url":"https://api.github.com/users/aegamesi/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-06-16T08:21:42Z","updated_at":"2014-06-17T11:28:57Z","closed_at":"2014-06-17T11:28:54Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/1983","html_url":"https://github.com/libgdx/libgdx/pull/1983","diff_url":"https://github.com/libgdx/libgdx/pull/1983.diff","patch_url":"https://github.com/libgdx/libgdx/pull/1983.patch"},"body":"Addresses issue #1982\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1983/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1982","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1982/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1982/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1982/events","html_url":"https://github.com/libgdx/libgdx/issues/1982","id":35775591,"number":1982,"title":"SelectBox does not account for the size of the background of the List","user":{"login":"aegamesi","id":552502,"avatar_url":"https://avatars2.githubusercontent.com/u/552502?v=4","gravatar_id":"","url":"https://api.github.com/users/aegamesi","html_url":"https://github.com/aegamesi","followers_url":"https://api.github.com/users/aegamesi/followers","following_url":"https://api.github.com/users/aegamesi/following{/other_user}","gists_url":"https://api.github.com/users/aegamesi/gists{/gist_id}","starred_url":"https://api.github.com/users/aegamesi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aegamesi/subscriptions","organizations_url":"https://api.github.com/users/aegamesi/orgs","repos_url":"https://api.github.com/users/aegamesi/repos","events_url":"https://api.github.com/users/aegamesi/events{/privacy}","received_events_url":"https://api.github.com/users/aegamesi/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-06-16T08:12:49Z","updated_at":"2014-06-17T11:32:26Z","closed_at":"2014-06-17T11:32:26Z","author_association":"CONTRIBUTOR","body":"SelectBox does not properly account for the both the size of the background (if one exists) of the List as well as the size of the background of the ScrollPane (if one exists). It only accounts for the size of the background of the ScrollPane.\n\nThis leads to an issue where if a background is set in the ListStyle, rather than the ScrollBoxStyle, the SelectBox will make the dropdown box too small, and show a scrollbar even if one is not necessary.\n\n![correct](https://cloud.githubusercontent.com/assets/552502/3284612/d2a272b0-f52d-11e3-928b-7c48db50affb.png)\nCorrect behavior, when a background for the ScrollPane is set, and a background for the List is not set.\n\n![incorrect](https://cloud.githubusercontent.com/assets/552502/3284613/d2a34014-f52d-11e3-82f2-e4cf8edb0f33.png)\nIncorrect behavior. A background for the ScrollPane has not been set, however, a background for the List has been set. There is clearly enough room to not have to show a scrollbar.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1982/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1981","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1981/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1981/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1981/events","html_url":"https://github.com/libgdx/libgdx/pull/1981","id":35767319,"number":1981,"title":"Rectangle: Equals and HashCode","user":{"login":"MadcowD","id":719535,"avatar_url":"https://avatars3.githubusercontent.com/u/719535?v=4","gravatar_id":"","url":"https://api.github.com/users/MadcowD","html_url":"https://github.com/MadcowD","followers_url":"https://api.github.com/users/MadcowD/followers","following_url":"https://api.github.com/users/MadcowD/following{/other_user}","gists_url":"https://api.github.com/users/MadcowD/gists{/gist_id}","starred_url":"https://api.github.com/users/MadcowD/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MadcowD/subscriptions","organizations_url":"https://api.github.com/users/MadcowD/orgs","repos_url":"https://api.github.com/users/MadcowD/repos","events_url":"https://api.github.com/users/MadcowD/events{/privacy}","received_events_url":"https://api.github.com/users/MadcowD/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-06-16T04:27:14Z","updated_at":"2014-06-17T11:21:00Z","closed_at":"2014-06-17T11:21:00Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/1981","html_url":"https://github.com/libgdx/libgdx/pull/1981","diff_url":"https://github.com/libgdx/libgdx/pull/1981.diff","patch_url":"https://github.com/libgdx/libgdx/pull/1981.patch"},"body":"Hi,\n\nI was working on my game for the Nar8 jam, and upon implementing a bounding volume hierarchy using rectangles, I noticed two critical functions were missing. First, the equals method was non-existent, making equivalence comparison between rectangles impossible. Secondly, the hashcode method was missing. Normally overriding hashcode is not required, but given that I have chosen to override equals, it is good coding practice to thereby override hashcode (See http://stackoverflow.com/questions/27581/overriding-equals-and-hashcode-in-java). I hope you find these additions useful to the API.\n\nCheers,\nMadcowD\ncarlostnb@gmail dot com.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1981/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1980","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1980/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1980/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1980/events","html_url":"https://github.com/libgdx/libgdx/issues/1980","id":35766272,"number":1980,"title":"Change the particle effect by  changing the .p file","user":{"login":"flycatdeng","id":1482018,"avatar_url":"https://avatars0.githubusercontent.com/u/1482018?v=4","gravatar_id":"","url":"https://api.github.com/users/flycatdeng","html_url":"https://github.com/flycatdeng","followers_url":"https://api.github.com/users/flycatdeng/followers","following_url":"https://api.github.com/users/flycatdeng/following{/other_user}","gists_url":"https://api.github.com/users/flycatdeng/gists{/gist_id}","starred_url":"https://api.github.com/users/flycatdeng/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/flycatdeng/subscriptions","organizations_url":"https://api.github.com/users/flycatdeng/orgs","repos_url":"https://api.github.com/users/flycatdeng/repos","events_url":"https://api.github.com/users/flycatdeng/events{/privacy}","received_events_url":"https://api.github.com/users/flycatdeng/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-06-16T03:45:16Z","updated_at":"2014-06-16T10:47:54Z","closed_at":"2014-06-16T10:47:54Z","author_association":"NONE","body":"I wanna change the particle effect by changing the .p file but not by the ParticleEmitter instance. However , it will always giving me an error \"sprite cannot be null\". How can I solve this ?\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1980/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1979","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1979/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1979/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1979/events","html_url":"https://github.com/libgdx/libgdx/pull/1979","id":35756562,"number":1979,"title":"Profiling utilities","user":{"login":"nooone","id":5896510,"avatar_url":"https://avatars3.githubusercontent.com/u/5896510?v=4","gravatar_id":"","url":"https://api.github.com/users/nooone","html_url":"https://github.com/nooone","followers_url":"https://api.github.com/users/nooone/followers","following_url":"https://api.github.com/users/nooone/following{/other_user}","gists_url":"https://api.github.com/users/nooone/gists{/gist_id}","starred_url":"https://api.github.com/users/nooone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nooone/subscriptions","organizations_url":"https://api.github.com/users/nooone/orgs","repos_url":"https://api.github.com/users/nooone/repos","events_url":"https://api.github.com/users/nooone/events{/privacy}","received_events_url":"https://api.github.com/users/nooone/received_events","type":"User","site_admin":false},"labels":[{"id":11336982,"url":"https://api.github.com/repos/libgdx/libgdx/labels/enhancement","name":"enhancement","color":"84b6eb","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":19,"created_at":"2014-06-15T19:51:21Z","updated_at":"2014-06-17T19:54:42Z","closed_at":"2014-06-17T19:28:35Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/1979","html_url":"https://github.com/libgdx/libgdx/pull/1979","diff_url":"https://github.com/libgdx/libgdx/pull/1979.diff","patch_url":"https://github.com/libgdx/libgdx/pull/1979.patch"},"body":"Together with @Xoppa I figured out a way to collect some benchmarking information like rendered tris of a `ModelBatch` or the total amount of gl calls that happened.\n\nI think it might be useful to many people who want to do some performance optimizations, like reducing texture bindings by using texture atlasses or something similar.\n\nThere is a `Benchmark3DTest` which shows how the benchmark utilities are setup and how to get the information.\n\nFor now I measure the total gl calls, draw calls, texture bindings and shader switches (for this to work https://github.com/libgdx/libgdx/pull/1978 needs to be merged first). But this could be easily extended to also measure other special gl calls.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1979/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1978","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1978/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1978/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1978/events","html_url":"https://github.com/libgdx/libgdx/pull/1978","id":35756201,"number":1978,"title":"Replaced all internal uses of Gdx.graphics.gl20() with Gdx.gl20","user":{"login":"nooone","id":5896510,"avatar_url":"https://avatars3.githubusercontent.com/u/5896510?v=4","gravatar_id":"","url":"https://api.github.com/users/nooone","html_url":"https://github.com/nooone","followers_url":"https://api.github.com/users/nooone/followers","following_url":"https://api.github.com/users/nooone/following{/other_user}","gists_url":"https://api.github.com/users/nooone/gists{/gist_id}","starred_url":"https://api.github.com/users/nooone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nooone/subscriptions","organizations_url":"https://api.github.com/users/nooone/orgs","repos_url":"https://api.github.com/users/nooone/repos","events_url":"https://api.github.com/users/nooone/events{/privacy}","received_events_url":"https://api.github.com/users/nooone/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-06-15T19:32:39Z","updated_at":"2014-06-16T08:27:13Z","closed_at":"2014-06-15T21:53:33Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/1978","html_url":"https://github.com/libgdx/libgdx/pull/1978","diff_url":"https://github.com/libgdx/libgdx/pull/1978.diff","patch_url":"https://github.com/libgdx/libgdx/pull/1978.patch"},"body":"Currently there are two ways to access the (actually unique) instances of `GL20` and `GL30`. Via `Gdx.gl20`/`Gdx.gl30` and `Gdx.graphics.getGL20()`/`Gdx.graphics.getGL30()`.\n\nFor an upcoming PR with some benchmarking utilities I have to replace `Gdx.gl20` with something like `Gdx.gl20 = new GL20Benchmark(Gdx.gl20)` to intercept the calls and collect statistics. However two important classes (`FrameBuffer` and `ShaderProgram`) bypass this by using `Gdx.graphics.getGL20()` instead and using an \"old\" copy of the `GL20` instance. Thus breaking the measuring of the shader switches for example.\n\nTo not break any existing API I have replaced all internal uses of this getter with the static property of `Gdx`.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1978/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1977","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1977/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1977/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1977/events","html_url":"https://github.com/libgdx/libgdx/pull/1977","id":35750040,"number":1977,"title":"Added pathfinding to AI extension","user":{"login":"hneuer","id":1545118,"avatar_url":"https://avatars3.githubusercontent.com/u/1545118?v=4","gravatar_id":"","url":"https://api.github.com/users/hneuer","html_url":"https://github.com/hneuer","followers_url":"https://api.github.com/users/hneuer/followers","following_url":"https://api.github.com/users/hneuer/following{/other_user}","gists_url":"https://api.github.com/users/hneuer/gists{/gist_id}","starred_url":"https://api.github.com/users/hneuer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hneuer/subscriptions","organizations_url":"https://api.github.com/users/hneuer/orgs","repos_url":"https://api.github.com/users/hneuer/repos","events_url":"https://api.github.com/users/hneuer/events{/privacy}","received_events_url":"https://api.github.com/users/hneuer/received_events","type":"User","site_admin":false},"labels":[{"id":11336982,"url":"https://api.github.com/repos/libgdx/libgdx/labels/enhancement","name":"enhancement","color":"84b6eb","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2014-06-15T14:12:30Z","updated_at":"2014-09-08T16:38:24Z","closed_at":"2014-09-08T16:38:24Z","author_association":"OWNER","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/1977","html_url":"https://github.com/libgdx/libgdx/pull/1977","diff_url":"https://github.com/libgdx/libgdx/pull/1977.diff","patch_url":"https://github.com/libgdx/libgdx/pull/1977.patch"},"body":"This is basically the same code as in the original PR #575 with the following changes:\n- moved code into AI extension\n- cleaned up the generics in the interfaces. No more compiler warnings.\n- Added the ability to switch between a flying and a walking mover in PathfinderTest\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1977/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1976","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1976/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1976/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1976/events","html_url":"https://github.com/libgdx/libgdx/pull/1976","id":35746008,"number":1976,"title":"Added a FreeTypeFontGeneratorLoader","user":{"login":"nooone","id":5896510,"avatar_url":"https://avatars3.githubusercontent.com/u/5896510?v=4","gravatar_id":"","url":"https://api.github.com/users/nooone","html_url":"https://github.com/nooone","followers_url":"https://api.github.com/users/nooone/followers","following_url":"https://api.github.com/users/nooone/following{/other_user}","gists_url":"https://api.github.com/users/nooone/gists{/gist_id}","starred_url":"https://api.github.com/users/nooone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nooone/subscriptions","organizations_url":"https://api.github.com/users/nooone/orgs","repos_url":"https://api.github.com/users/nooone/repos","events_url":"https://api.github.com/users/nooone/events{/privacy}","received_events_url":"https://api.github.com/users/nooone/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-06-15T09:45:43Z","updated_at":"2014-06-16T08:26:27Z","closed_at":"2014-06-15T21:54:23Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/1976","html_url":"https://github.com/libgdx/libgdx/pull/1976","diff_url":"https://github.com/libgdx/libgdx/pull/1976.diff","patch_url":"https://github.com/libgdx/libgdx/pull/1976.patch"},"body":"(New PR because I broke the old one...)\n\nI added a loader to be able to manage `FreeTypeFontGenerator`s with an `AssetManager`. I think the generators might be used in a lot of places and being able to load and retrieve them via the `AssetManager` should be good choice.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1976/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1975","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1975/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1975/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1975/events","html_url":"https://github.com/libgdx/libgdx/pull/1975","id":35737545,"number":1975,"title":"Implement material attribute hashcode","user":{"login":"xoppa","id":2349087,"avatar_url":"https://avatars3.githubusercontent.com/u/2349087?v=4","gravatar_id":"","url":"https://api.github.com/users/xoppa","html_url":"https://github.com/xoppa","followers_url":"https://api.github.com/users/xoppa/followers","following_url":"https://api.github.com/users/xoppa/following{/other_user}","gists_url":"https://api.github.com/users/xoppa/gists{/gist_id}","starred_url":"https://api.github.com/users/xoppa/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xoppa/subscriptions","organizations_url":"https://api.github.com/users/xoppa/orgs","repos_url":"https://api.github.com/users/xoppa/repos","events_url":"https://api.github.com/users/xoppa/events{/privacy}","received_events_url":"https://api.github.com/users/xoppa/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2014-06-14T21:51:44Z","updated_at":"2014-06-14T21:51:47Z","closed_at":"2014-06-14T21:51:47Z","author_association":"OWNER","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/1975","html_url":"https://github.com/libgdx/libgdx/pull/1975","diff_url":"https://github.com/libgdx/libgdx/pull/1975.diff","patch_url":"https://github.com/libgdx/libgdx/pull/1975.patch"},"body":"","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1975/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1974","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1974/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1974/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1974/events","html_url":"https://github.com/libgdx/libgdx/issues/1974","id":35729787,"number":1974,"title":"Add setRotation and setScale to ParticleEffect","user":{"login":"alexprey","id":7888563,"avatar_url":"https://avatars3.githubusercontent.com/u/7888563?v=4","gravatar_id":"","url":"https://api.github.com/users/alexprey","html_url":"https://github.com/alexprey","followers_url":"https://api.github.com/users/alexprey/followers","following_url":"https://api.github.com/users/alexprey/following{/other_user}","gists_url":"https://api.github.com/users/alexprey/gists{/gist_id}","starred_url":"https://api.github.com/users/alexprey/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexprey/subscriptions","organizations_url":"https://api.github.com/users/alexprey/orgs","repos_url":"https://api.github.com/users/alexprey/repos","events_url":"https://api.github.com/users/alexprey/events{/privacy}","received_events_url":"https://api.github.com/users/alexprey/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2014-06-14T14:50:35Z","updated_at":"2016-05-15T17:35:22Z","closed_at":"2014-06-17T11:34:19Z","author_association":"NONE","body":"Hello,\nCan you implement additional methods for ParticleEffect class - setRotation and setScale. This methods needs for attaching effects for Actor in Scene2D. At current time ParticleEffect class contain one method - setPosition, it is not enough for attaching particle effects for actors in scene2d.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1974/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1973","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1973/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1973/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1973/events","html_url":"https://github.com/libgdx/libgdx/pull/1973","id":35727076,"number":1973,"title":"Adding Kindle Fire TV controller mapper file and updating the Ouya mapper file","user":{"login":"witnessmenow","id":1562562,"avatar_url":"https://avatars2.githubusercontent.com/u/1562562?v=4","gravatar_id":"","url":"https://api.github.com/users/witnessmenow","html_url":"https://github.com/witnessmenow","followers_url":"https://api.github.com/users/witnessmenow/followers","following_url":"https://api.github.com/users/witnessmenow/following{/other_user}","gists_url":"https://api.github.com/users/witnessmenow/gists{/gist_id}","starred_url":"https://api.github.com/users/witnessmenow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/witnessmenow/subscriptions","organizations_url":"https://api.github.com/users/witnessmenow/orgs","repos_url":"https://api.github.com/users/witnessmenow/repos","events_url":"https://api.github.com/users/witnessmenow/events{/privacy}","received_events_url":"https://api.github.com/users/witnessmenow/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":14,"created_at":"2014-06-14T12:09:59Z","updated_at":"2014-06-22T15:38:45Z","closed_at":"2014-06-15T22:05:18Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/1973","html_url":"https://github.com/libgdx/libgdx/pull/1973","diff_url":"https://github.com/libgdx/libgdx/pull/1973.diff","patch_url":"https://github.com/libgdx/libgdx/pull/1973.patch"},"body":"Hi Guys,\n\nI use LibGDX for my Ouya game \"Soc-Car\" and I thought I would just share back some changes that I have made.\n\nI recently went through the process of porting the game to the Kindle Fire TV and while I was there I decided it would be a good idea to create a mapper file similar to the Ouya one.\n\nI know they are small changes but hopefully someone finds them useful.\n\nThanks for all the great work on LibGDX!\nBrian \n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1973/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1972","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1972/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1972/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1972/events","html_url":"https://github.com/libgdx/libgdx/pull/1972","id":35721908,"number":1972,"title":"Pathfinding Implementation","user":{"login":"jmrapp1","id":376226,"avatar_url":"https://avatars0.githubusercontent.com/u/376226?v=4","gravatar_id":"","url":"https://api.github.com/users/jmrapp1","html_url":"https://github.com/jmrapp1","followers_url":"https://api.github.com/users/jmrapp1/followers","following_url":"https://api.github.com/users/jmrapp1/following{/other_user}","gists_url":"https://api.github.com/users/jmrapp1/gists{/gist_id}","starred_url":"https://api.github.com/users/jmrapp1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jmrapp1/subscriptions","organizations_url":"https://api.github.com/users/jmrapp1/orgs","repos_url":"https://api.github.com/users/jmrapp1/repos","events_url":"https://api.github.com/users/jmrapp1/events{/privacy}","received_events_url":"https://api.github.com/users/jmrapp1/received_events","type":"User","site_admin":false},"labels":[{"id":11336982,"url":"https://api.github.com/repos/libgdx/libgdx/labels/enhancement","name":"enhancement","color":"84b6eb","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":10,"created_at":"2014-06-14T05:44:33Z","updated_at":"2014-09-08T16:40:24Z","closed_at":"2014-09-08T16:40:24Z","author_association":"NONE","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/1972","html_url":"https://github.com/libgdx/libgdx/pull/1972","diff_url":"https://github.com/libgdx/libgdx/pull/1972.diff","patch_url":"https://github.com/libgdx/libgdx/pull/1972.patch"},"body":"Hello everyone. I have added a pathfinding system into Libgdx that can be used to get an Array of Nodes that will lead from a starting point to an ending point. This Array can then be used to walk through, draw, or whatever you want to do with it. \n\nThe important part about this implementation is that it is not bound directly with TileMaps and can be used anywhere. The way it works is when you first instantiate the PathFinder class you provide the width and height of the area that will be mapped out. You can also, optionally, provide a multidimensional array of boolean values which contains whether or not a node can be walked on at the given position of the array. So if at (5, 4) you don't want the node to be able to be walked on you would simply set array[5][4] = false. \n\nNow of course this can be incorporated with TileMaps or your own map system. All you would have to do is give the width and height of the TileMap and then when providing the walkable array you would simply loop through each Tile and determine whether or not that Tile is able to be walked on. If it is you set the walkable array value at the given position to true otherwise you set it to false. \n\nHere is a demonstration of the Pathfinding algorithm in action in my Game Engine: https://www.youtube.com/watch?v=5HW02maUCf8\n\nAnd here is a demonstration of the Pathfinding algorithm being used in a game to walk entities across the path:  https://www.youtube.com/watch?v=nDlPPHaMbKY\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1972/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1971","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1971/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1971/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1971/events","html_url":"https://github.com/libgdx/libgdx/pull/1971","id":35680853,"number":1971,"title":"FrameBuffer with multisampling","user":{"login":"titoasty","id":7881515,"avatar_url":"https://avatars0.githubusercontent.com/u/7881515?v=4","gravatar_id":"","url":"https://api.github.com/users/titoasty","html_url":"https://github.com/titoasty","followers_url":"https://api.github.com/users/titoasty/followers","following_url":"https://api.github.com/users/titoasty/following{/other_user}","gists_url":"https://api.github.com/users/titoasty/gists{/gist_id}","starred_url":"https://api.github.com/users/titoasty/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/titoasty/subscriptions","organizations_url":"https://api.github.com/users/titoasty/orgs","repos_url":"https://api.github.com/users/titoasty/repos","events_url":"https://api.github.com/users/titoasty/events{/privacy}","received_events_url":"https://api.github.com/users/titoasty/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2014-06-13T15:22:43Z","updated_at":"2014-06-13T22:16:32Z","closed_at":"2014-06-13T16:19:13Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/1971","html_url":"https://github.com/libgdx/libgdx/pull/1971","diff_url":"https://github.com/libgdx/libgdx/pull/1971.diff","patch_url":"https://github.com/libgdx/libgdx/pull/1971.patch"},"body":"Hello all,\n\nAfter working with post-processing shaders, I found out that framebuffers don't use msaa (only the default one).\nIt was a very annoying discovery so I decided to modify the FrameBuffer class and add the ability to automatically use multisampling if graphic card is able to.\n\nIt's quite brute coded but everything should be there before refactoring !\nI know it uses opengl extensions, so for compatibility this is not the best thing, but because it switches automatically to multisampling if and only if available, it shouldn't be a problem for non-capable graphic cards.\n(perhaps frameBuffer multisampling should it be an option in FrameBuffer constructor or get the msaa variable of configuration ?)\nWhat do you think ?\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1971/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1970","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1970/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1970/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1970/events","html_url":"https://github.com/libgdx/libgdx/pull/1970","id":35667797,"number":1970,"title":"Added a FreeTypeFontGeneratorLoader","user":{"login":"nooone","id":5896510,"avatar_url":"https://avatars3.githubusercontent.com/u/5896510?v=4","gravatar_id":"","url":"https://api.github.com/users/nooone","html_url":"https://github.com/nooone","followers_url":"https://api.github.com/users/nooone/followers","following_url":"https://api.github.com/users/nooone/following{/other_user}","gists_url":"https://api.github.com/users/nooone/gists{/gist_id}","starred_url":"https://api.github.com/users/nooone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nooone/subscriptions","organizations_url":"https://api.github.com/users/nooone/orgs","repos_url":"https://api.github.com/users/nooone/repos","events_url":"https://api.github.com/users/nooone/events{/privacy}","received_events_url":"https://api.github.com/users/nooone/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-06-13T12:36:32Z","updated_at":"2014-06-14T22:48:20Z","closed_at":"2014-06-14T22:48:20Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/1970","html_url":"https://github.com/libgdx/libgdx/pull/1970","diff_url":"https://github.com/libgdx/libgdx/pull/1970.diff","patch_url":"https://github.com/libgdx/libgdx/pull/1970.patch"},"body":"A loader for the `AssetManager` so the generators can be managed just like other assets.\n\nIf this gets merged I'll add a little note to https://github.com/libgdx/libgdx/wiki/Gdx-freetype about how to register this loader if the gdx-freetype extension is used.\n\nI created this via the github website. I hope there's no typo anywhere...\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1970/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1969","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1969/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1969/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1969/events","html_url":"https://github.com/libgdx/libgdx/issues/1969","id":35651422,"number":1969,"title":"The Android TouchEvent is intercepted","user":{"login":"conley84","id":7877839,"avatar_url":"https://avatars0.githubusercontent.com/u/7877839?v=4","gravatar_id":"","url":"https://api.github.com/users/conley84","html_url":"https://github.com/conley84","followers_url":"https://api.github.com/users/conley84/followers","following_url":"https://api.github.com/users/conley84/following{/other_user}","gists_url":"https://api.github.com/users/conley84/gists{/gist_id}","starred_url":"https://api.github.com/users/conley84/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/conley84/subscriptions","organizations_url":"https://api.github.com/users/conley84/orgs","repos_url":"https://api.github.com/users/conley84/repos","events_url":"https://api.github.com/users/conley84/events{/privacy}","received_events_url":"https://api.github.com/users/conley84/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2014-06-13T07:57:05Z","updated_at":"2014-06-15T22:12:49Z","closed_at":"2014-06-15T22:01:00Z","author_association":"NONE","body":"1:GdxView =(GLSurfaceView )initializeForView(new particle(), config);\n2:I add GdxView to my android project.\n3:Behind GdxView other view will not receive the Events.That's because GdxView intercepted events。\n4:if AndroidInput.onTouch return false.GdxView will not intercept events.but GdxView can only get touchDown event。\nI hope GdxView can receive all the Events, and not intercepted Events。\nHow can we solve this problem?\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1969/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1968","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1968/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1968/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1968/events","html_url":"https://github.com/libgdx/libgdx/pull/1968","id":35623222,"number":1968,"title":"Skipped color markup when computing font metrics.","user":{"login":"davebaol","id":2366334,"avatar_url":"https://avatars3.githubusercontent.com/u/2366334?v=4","gravatar_id":"","url":"https://api.github.com/users/davebaol","html_url":"https://github.com/davebaol","followers_url":"https://api.github.com/users/davebaol/followers","following_url":"https://api.github.com/users/davebaol/following{/other_user}","gists_url":"https://api.github.com/users/davebaol/gists{/gist_id}","starred_url":"https://api.github.com/users/davebaol/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davebaol/subscriptions","organizations_url":"https://api.github.com/users/davebaol/orgs","repos_url":"https://api.github.com/users/davebaol/repos","events_url":"https://api.github.com/users/davebaol/events{/privacy}","received_events_url":"https://api.github.com/users/davebaol/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2014-06-12T21:04:29Z","updated_at":"2014-06-13T09:48:51Z","closed_at":"2014-06-12T21:05:26Z","author_association":"MEMBER","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/1968","html_url":"https://github.com/libgdx/libgdx/pull/1968","diff_url":"https://github.com/libgdx/libgdx/pull/1968.diff","patch_url":"https://github.com/libgdx/libgdx/pull/1968.patch"},"body":"This should fix font metrics issues when color markup is enabled.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1968/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1967","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1967/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1967/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1967/events","html_url":"https://github.com/libgdx/libgdx/pull/1967","id":35612028,"number":1967,"title":"Removed a non existant model","user":{"login":"nooone","id":5896510,"avatar_url":"https://avatars3.githubusercontent.com/u/5896510?v=4","gravatar_id":"","url":"https://api.github.com/users/nooone","html_url":"https://github.com/nooone","followers_url":"https://api.github.com/users/nooone/followers","following_url":"https://api.github.com/users/nooone/following{/other_user}","gists_url":"https://api.github.com/users/nooone/gists{/gist_id}","starred_url":"https://api.github.com/users/nooone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nooone/subscriptions","organizations_url":"https://api.github.com/users/nooone/orgs","repos_url":"https://api.github.com/users/nooone/repos","events_url":"https://api.github.com/users/nooone/events{/privacy}","received_events_url":"https://api.github.com/users/nooone/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2014-06-12T18:46:44Z","updated_at":"2014-06-12T20:38:51Z","closed_at":"2014-06-12T19:20:02Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/1967","html_url":"https://github.com/libgdx/libgdx/pull/1967","diff_url":"https://github.com/libgdx/libgdx/pull/1967.diff","patch_url":"https://github.com/libgdx/libgdx/pull/1967.patch"},"body":"This model does not exist (anymore). When it is selected via the UI of the test, the test crashes.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1967/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1966","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1966/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1966/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1966/events","html_url":"https://github.com/libgdx/libgdx/pull/1966","id":35605380,"number":1966,"title":"Annotations","user":{"login":"Badazdz","id":1550507,"avatar_url":"https://avatars3.githubusercontent.com/u/1550507?v=4","gravatar_id":"","url":"https://api.github.com/users/Badazdz","html_url":"https://github.com/Badazdz","followers_url":"https://api.github.com/users/Badazdz/followers","following_url":"https://api.github.com/users/Badazdz/following{/other_user}","gists_url":"https://api.github.com/users/Badazdz/gists{/gist_id}","starred_url":"https://api.github.com/users/Badazdz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Badazdz/subscriptions","organizations_url":"https://api.github.com/users/Badazdz/orgs","repos_url":"https://api.github.com/users/Badazdz/repos","events_url":"https://api.github.com/users/Badazdz/events{/privacy}","received_events_url":"https://api.github.com/users/Badazdz/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2014-06-12T17:25:44Z","updated_at":"2014-06-12T17:50:17Z","closed_at":"2014-06-12T17:50:17Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/1966","html_url":"https://github.com/libgdx/libgdx/pull/1966","diff_url":"https://github.com/libgdx/libgdx/pull/1966.diff","patch_url":"https://github.com/libgdx/libgdx/pull/1966.patch"},"body":"Getters for Field Annotations\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1966/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}}],"meta":{"x-ratelimit-limit":"5000","x-ratelimit-remaining":"4901","x-ratelimit-reset":"1506844633","x-github-request-id":"BF94:0285:10378C5:1FCD539:59D0963F","x-github-media-type":"github.squirrel-girl-preview","link":"<https://api.github.com/repositories/5373551/issues?state=all&page=99>; rel=\"next\", <https://api.github.com/repositories/5373551/issues?state=all&page=164>; rel=\"last\", <https://api.github.com/repositories/5373551/issues?state=all&page=1>; rel=\"first\", <https://api.github.com/repositories/5373551/issues?state=all&page=97>; rel=\"prev\"","etag":"\"d3ec4856740bc4e678aef8eacad0543d\"","status":"200 OK"}}
