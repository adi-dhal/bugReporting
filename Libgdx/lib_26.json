{"data":[{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4158","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4158/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4158/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4158/events","html_url":"https://github.com/libgdx/libgdx/pull/4158","id":161193982,"number":4158,"title":"JniGen can have methods with Classes and Throwables","user":{"login":"mdsimmo","id":6169305,"avatar_url":"https://avatars2.githubusercontent.com/u/6169305?v=4","gravatar_id":"","url":"https://api.github.com/users/mdsimmo","html_url":"https://github.com/mdsimmo","followers_url":"https://api.github.com/users/mdsimmo/followers","following_url":"https://api.github.com/users/mdsimmo/following{/other_user}","gists_url":"https://api.github.com/users/mdsimmo/gists{/gist_id}","starred_url":"https://api.github.com/users/mdsimmo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mdsimmo/subscriptions","organizations_url":"https://api.github.com/users/mdsimmo/orgs","repos_url":"https://api.github.com/users/mdsimmo/repos","events_url":"https://api.github.com/users/mdsimmo/events{/privacy}","received_events_url":"https://api.github.com/users/mdsimmo/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2016-06-20T13:24:09Z","updated_at":"2016-12-05T22:27:13Z","closed_at":"2016-12-05T22:27:09Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4158","html_url":"https://github.com/libgdx/libgdx/pull/4158","diff_url":"https://github.com/libgdx/libgdx/pull/4158.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4158.patch"},"body":"This pull request allows native code generated with JniGen to have parameters of type java.lang.Class or java.lang.Throwable. \n\nPreviously, JniGen would crash when parameters included a Class or Throwable because the method declaration created by javah would not match the expectation from the JniGen code generator. (See this issue: #4157 )\n\nThe jni test code has not changed; I've merely reformatted it so it's valid C code and added a couple of arguments. \n\nAlso, I wasn't really sure what I was doing with the Ant stuff in the test code, so someone might want to look closely at that part. I just modified it until it stopped giving errors :P\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4158/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4157","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4157/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4157/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4157/events","html_url":"https://github.com/libgdx/libgdx/issues/4157","id":161119769,"number":4157,"title":"Jnigen can't have a Class argument ","user":{"login":"mdsimmo","id":6169305,"avatar_url":"https://avatars2.githubusercontent.com/u/6169305?v=4","gravatar_id":"","url":"https://api.github.com/users/mdsimmo","html_url":"https://github.com/mdsimmo","followers_url":"https://api.github.com/users/mdsimmo/followers","following_url":"https://api.github.com/users/mdsimmo/following{/other_user}","gists_url":"https://api.github.com/users/mdsimmo/gists{/gist_id}","starred_url":"https://api.github.com/users/mdsimmo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mdsimmo/subscriptions","organizations_url":"https://api.github.com/users/mdsimmo/orgs","repos_url":"https://api.github.com/users/mdsimmo/repos","events_url":"https://api.github.com/users/mdsimmo/events{/privacy}","received_events_url":"https://api.github.com/users/mdsimmo/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2016-06-20T05:32:00Z","updated_at":"2016-12-04T13:29:07Z","closed_at":"2016-12-04T13:29:07Z","author_association":"CONTRIBUTOR","body":"Whenever a native method with a Class argument is passed, jnigen will crash with this error:\n\n```\nGenerating C/C++ for 'src/main/java/my/domain/MyClass.java'\n...Exception in thread \"main\" java.lang.RuntimeException: Couldn't find C method for Java method 'MyClass#myNativeMethod'\nat com.badlogic.gdx.jnigen.NativeCodeGenerator.generateCppFile(NativeCodeGenerator.java:322)\nat com.badlogic.gdx.jnigen.NativeCodeGenerator.processDirectory(NativeCodeGenerator.java:267)\nat com.badlogic.gdx.jnigen.NativeCodeGenerator.processDirectory(NativeCodeGenerator.java:245)\n...\n```\n#### Reproduction steps/code\n\nTry to create this native method:\n\n```\npublic static native <T> int myNativeMethod (int a, Class<T> crashParam, int b); /*\n    return a + b;\n*/\n```\n\nIf `crashParam` is removed, the code compiles cleanly and runs fine. Note: when the program does crash, only the *.h file is created.\n#### Version of LibGDX and/or relevant dependencies\n\nJNIGen version 1.9.3.\nNot using LibGDX.\nRunning Ubuntu\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4157/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4156","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4156/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4156/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4156/events","html_url":"https://github.com/libgdx/libgdx/pull/4156","id":161088863,"number":4156,"title":"Custom ignore tag","user":{"login":"xpenatan","id":6472084,"avatar_url":"https://avatars3.githubusercontent.com/u/6472084?v=4","gravatar_id":"","url":"https://api.github.com/users/xpenatan","html_url":"https://github.com/xpenatan","followers_url":"https://api.github.com/users/xpenatan/followers","following_url":"https://api.github.com/users/xpenatan/following{/other_user}","gists_url":"https://api.github.com/users/xpenatan/gists{/gist_id}","starred_url":"https://api.github.com/users/xpenatan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xpenatan/subscriptions","organizations_url":"https://api.github.com/users/xpenatan/orgs","repos_url":"https://api.github.com/users/xpenatan/repos","events_url":"https://api.github.com/users/xpenatan/events{/privacy}","received_events_url":"https://api.github.com/users/xpenatan/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2016-06-19T19:55:03Z","updated_at":"2016-06-20T17:12:59Z","closed_at":"2016-06-20T17:12:59Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4156","html_url":"https://github.com/libgdx/libgdx/pull/4156","diff_url":"https://github.com/libgdx/libgdx/pull/4156.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4156.patch"},"body":"#4111\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4156/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4155","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4155/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4155/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4155/events","html_url":"https://github.com/libgdx/libgdx/issues/4155","id":161082906,"number":4155,"title":"Gdx.app is not initialized yet","user":{"login":"centy","id":581714,"avatar_url":"https://avatars2.githubusercontent.com/u/581714?v=4","gravatar_id":"","url":"https://api.github.com/users/centy","html_url":"https://github.com/centy","followers_url":"https://api.github.com/users/centy/followers","following_url":"https://api.github.com/users/centy/following{/other_user}","gists_url":"https://api.github.com/users/centy/gists{/gist_id}","starred_url":"https://api.github.com/users/centy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/centy/subscriptions","organizations_url":"https://api.github.com/users/centy/orgs","repos_url":"https://api.github.com/users/centy/repos","events_url":"https://api.github.com/users/centy/events{/privacy}","received_events_url":"https://api.github.com/users/centy/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2016-06-19T17:28:14Z","updated_at":"2016-06-19T19:02:39Z","closed_at":"2016-06-19T18:03:45Z","author_association":"NONE","body":"We experience few strange crashes reported through google play console. It looks like some events come faster thant setting Gdx.graphics Gdx.app etc.\n\nException java.lang.NullPointerException: Attempt to invoke interface method 'com.badlogic.gdx.Graphics com.badlogic.gdx.Application.getGraphics()' on a null object reference\ncom.badlogic.gdx.backends.android.AndroidMouseHandler.onGenericMotion (AndroidMouseHandler.java:62)\ncom.badlogic.gdx.backends.android.AndroidInputThreePlus.onGenericMotion (AndroidInputThreePlus.java:47)\nandroid.view.View.dispatchGenericMotionEventInternal (View.java:7882)\nandroid.view.View.dispatchGenericMotionEvent (View.java:7869)\nandroid.view.ViewGroup.dispatchTransformedGenericPointerEvent (ViewGroup.java:1862)\nandroid.view.ViewGroup.dispatchHoverEvent (ViewGroup.java:1606)\nandroid.view.View.dispatchGenericMotionEvent (View.java:7859)\nandroid.view.ViewGroup.dispatchTransformedGenericPointerEvent (ViewGroup.java:1862)\nandroid.view.ViewGroup.dispatchHoverEvent (ViewGroup.java:1606)\nandroid.view.View.dispatchGenericMotionEvent (View.java:7859)\nandroid.view.ViewGroup.dispatchTransformedGenericPointerEvent (ViewGroup.java:1862)\nandroid.view.ViewGroup.dispatchHoverEvent (ViewGroup.java:1606)\nandroid.view.View.dispatchGenericMotionEvent (View.java:7859)\nandroid.view.ViewGroup.dispatchTransformedGenericPointerEvent (ViewGroup.java:1862)\nandroid.view.ViewGroup.dispatchHoverEvent (ViewGroup.java:1606)\nandroid.view.ViewGroup.exitHoverTargets (ViewGroup.java:1688)\nandroid.view.ViewGroup.dispatchDetachedFromWindow (ViewGroup.java:2689)\nandroid.view.ViewRootImpl.dispatchDetachedFromWindow (ViewRootImpl.java:3207)\nandroid.view.ViewRootImpl.doDie (ViewRootImpl.java:5818)\nandroid.view.ViewRootImpl.die (ViewRootImpl.java:5791)\nandroid.view.WindowManagerGlobal.removeViewLocked (WindowManagerGlobal.java:348)\nandroid.view.WindowManagerGlobal.removeView (WindowManagerGlobal.java:303)\nandroid.view.WindowManagerImpl.removeViewImmediate (WindowManagerImpl.java:84)\nandroid.app.ActivityThread.handleDestroyActivity (ActivityThread.java:3725)\nandroid.app.ActivityThread.access$1400 (ActivityThread.java:151)\nandroid.app.ActivityThread$H.handleMessage (ActivityThread.java:1374)\nandroid.os.Handler.dispatchMessage (Handler.java:110)\nandroid.os.Looper.loop (Looper.java:193)\nandroid.app.ActivityThread.main (ActivityThread.java:5292)\njava.lang.reflect.Method.invokeNative (Method.java)\njava.lang.reflect.Method.invoke (Method.java:515)\ncom.android.internal.os.ZygoteInit$MethodAndArgsCaller.run (ZygoteInit.java:824)\ncom.android.internal.os.ZygoteInit.main (ZygoteInit.java:640)\ndalvik.system.NativeStart.main (NativeStart.java)\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4155/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4154","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4154/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4154/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4154/events","html_url":"https://github.com/libgdx/libgdx/issues/4154","id":160942807,"number":4154,"title":"RotateToAction behavior missing wrap around logic","user":{"login":"wiverson","id":873850,"avatar_url":"https://avatars1.githubusercontent.com/u/873850?v=4","gravatar_id":"","url":"https://api.github.com/users/wiverson","html_url":"https://github.com/wiverson","followers_url":"https://api.github.com/users/wiverson/followers","following_url":"https://api.github.com/users/wiverson/following{/other_user}","gists_url":"https://api.github.com/users/wiverson/gists{/gist_id}","starred_url":"https://api.github.com/users/wiverson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wiverson/subscriptions","organizations_url":"https://api.github.com/users/wiverson/orgs","repos_url":"https://api.github.com/users/wiverson/repos","events_url":"https://api.github.com/users/wiverson/events{/privacy}","received_events_url":"https://api.github.com/users/wiverson/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2016-06-17T17:59:34Z","updated_at":"2016-12-04T13:30:14Z","closed_at":"2016-12-04T13:30:14Z","author_association":"CONTRIBUTOR","body":"#### Issue details\n\nRotateToAction does not properly deal with rotation cases around the 360 degree barrier - it always goes \"the long way around\".\n\n```\ncom.badlogic.gdx.scenes.scene2d.actions.RotateToAction.update (float percent) {\n        target.setRotation(start + (end - start) * percent);\n    }\n```\n\nshould probably be implemented as something like...\n\n`target.setRotation(MathUtils.lerpAngleDeg(start, end, percent));\n`\n#### Version of LibGDX and/or relevant dependencies\n\n  `gdxVersion = '1.9.3'\n`\n#### Affected platforms  - All\n\nMy first reported issue, so be kind.  :)  Seems awfully tiny for a pull request, but if that or anything else would be helpful just let me know.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4154/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4153","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4153/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4153/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4153/events","html_url":"https://github.com/libgdx/libgdx/pull/4153","id":160763942,"number":4153,"title":"private and public methods sorted by name to simplify syncing with Playn HtmlGl20","user":{"login":"stefanhaustein","id":4282319,"avatar_url":"https://avatars0.githubusercontent.com/u/4282319?v=4","gravatar_id":"","url":"https://api.github.com/users/stefanhaustein","html_url":"https://github.com/stefanhaustein","followers_url":"https://api.github.com/users/stefanhaustein/followers","following_url":"https://api.github.com/users/stefanhaustein/following{/other_user}","gists_url":"https://api.github.com/users/stefanhaustein/gists{/gist_id}","starred_url":"https://api.github.com/users/stefanhaustein/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stefanhaustein/subscriptions","organizations_url":"https://api.github.com/users/stefanhaustein/orgs","repos_url":"https://api.github.com/users/stefanhaustein/repos","events_url":"https://api.github.com/users/stefanhaustein/events{/privacy}","received_events_url":"https://api.github.com/users/stefanhaustein/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2016-06-16T21:21:14Z","updated_at":"2016-06-21T20:37:31Z","closed_at":"2016-06-21T20:15:24Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4153","html_url":"https://github.com/libgdx/libgdx/pull/4153","diff_url":"https://github.com/libgdx/libgdx/pull/4153.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4153.patch"},"body":"Both variants have some independent improvements that may make sense to carry over.\nSorting simplifies the comparison.  \n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4153/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4152","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4152/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4152/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4152/events","html_url":"https://github.com/libgdx/libgdx/issues/4152","id":160761216,"number":4152,"title":"Missing Bullet JNI btSoftBody.getLinks() or alternative method","user":{"login":"Bolt-Head","id":19981350,"avatar_url":"https://avatars0.githubusercontent.com/u/19981350?v=4","gravatar_id":"","url":"https://api.github.com/users/Bolt-Head","html_url":"https://github.com/Bolt-Head","followers_url":"https://api.github.com/users/Bolt-Head/followers","following_url":"https://api.github.com/users/Bolt-Head/following{/other_user}","gists_url":"https://api.github.com/users/Bolt-Head/gists{/gist_id}","starred_url":"https://api.github.com/users/Bolt-Head/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Bolt-Head/subscriptions","organizations_url":"https://api.github.com/users/Bolt-Head/orgs","repos_url":"https://api.github.com/users/Bolt-Head/repos","events_url":"https://api.github.com/users/Bolt-Head/events{/privacy}","received_events_url":"https://api.github.com/users/Bolt-Head/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-06-16T21:07:08Z","updated_at":"2016-06-16T21:46:35Z","closed_at":"2016-06-16T21:46:35Z","author_association":"CONTRIBUTOR","body":"btSoftBody.getLinks() has not been implemented yet as it just returns the placeholder SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Link_t:\nhttps://github.com/libgdx/libgdx/blob/master/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btSoftBody.java#L1430\n\nThe primary use case is to be able change the length of SoftBody ropes as outlined in this example:\nhttp://bulletphysics.org/Bullet/phpBB3/viewtopic.php?f=9&t=5679#p21180\n\nIt might be easier to do something similar to getting nodes which instead of using getNodes() we can use getNode(int idx) and getNodeCount(). \n\nSo adding getLink(int idx) and getLinkCount() should cover this use case as well.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4152/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4151","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4151/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4151/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4151/events","html_url":"https://github.com/libgdx/libgdx/issues/4151","id":160313088,"number":4151,"title":"TexturePacker.isModified() do not checks subdirectories","user":{"login":"Try4W","id":5736157,"avatar_url":"https://avatars1.githubusercontent.com/u/5736157?v=4","gravatar_id":"","url":"https://api.github.com/users/Try4W","html_url":"https://github.com/Try4W","followers_url":"https://api.github.com/users/Try4W/followers","following_url":"https://api.github.com/users/Try4W/following{/other_user}","gists_url":"https://api.github.com/users/Try4W/gists{/gist_id}","starred_url":"https://api.github.com/users/Try4W/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Try4W/subscriptions","organizations_url":"https://api.github.com/users/Try4W/orgs","repos_url":"https://api.github.com/users/Try4W/repos","events_url":"https://api.github.com/users/Try4W/events{/privacy}","received_events_url":"https://api.github.com/users/Try4W/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-06-15T00:14:33Z","updated_at":"2016-11-25T00:53:21Z","closed_at":"2016-11-25T00:53:21Z","author_association":"NONE","body":"Details in the title.\n#### Solution (by gradle task)\n\nIn this solution Gradle will take care about comparing directories.\nDetials: [https://docs.gradle.org/current/userguide/more_about_tasks.html#sec:task_inputs_outputs](click)\n\n```\nimport com.badlogic.gdx.tools.texturepacker.TexturePacker\ntask packTextures {\n    File assetsInput = new File(\"../assets/\")\n    File assetsOutput = new File(\"./assets\")\n    String packFileName = \"sprites\"\n\n    inputs.dir assetsInput\n    outputs.dir assetsOutput\n\n    doLast {\n        TexturePacker.Settings settings = new TexturePacker.Settings()\n        settings.maxWidth = 4096\n        settings.maxHeight = 4096\n        settings.combineSubdirectories = true\n        TexturePacker.process(\n                settings,\n                assetsInput.absolutePath,\n                assetsOutput.absolutePath,\n                packFileName\n        )\n    }\n}\nrun.dependsOn packTextures\n```\n#### Solution (dirty)\n\nThere is my dirty groovy code that fix it.\n\n```\nimport groovy.io.FileType\nimport com.badlogic.gdx.tools.texturepacker.TexturePacker\ntask packTextures << {\n    File assetsInput = new File(\"../assets/\")\n    File assetsOutput = new File(\"./assets\")\n    String packFileName = \"sprites\"\n\n    List<File> listOfAssetsInput = new ArrayList<>();\n    File[] listOfAssetsOutput = assetsOutput.listFiles();\n\n    assetsInput.eachFileRecurse (FileType.ANY) { file ->\n        listOfAssetsInput.add(file)\n    }\n\n    if(listOfAssetsOutput.length > 0) {\n        long lastModifiedAssetsInput = listOfAssetsInput.sort { -it.lastModified() }?.head()?.lastModified()\n        long lastModifiedAssetsOutput = listOfAssetsOutput.sort { -it.lastModified() }?.head()?.lastModified()\n\n        Date lastModifiedAssetsInputDate = new Date(lastModifiedAssetsInput);\n        Date lastModifiedAssetsOutputDate = new Date(lastModifiedAssetsOutput);\n        println(\"last input assets date: \" + lastModifiedAssetsInputDate)\n        println(\"last output assets date: \" + lastModifiedAssetsOutputDate)\n        if(lastModifiedAssetsOutputDate.after(lastModifiedAssetsInputDate)) {\n            println(\"No changes detected, skip textures packing\")\n            return;\n        }\n    }\n\n    TexturePacker.Settings settings = new TexturePacker.Settings()\n    settings.maxWidth = 4096\n    settings.maxHeight = 4096\n    settings.combineSubdirectories = true\n    TexturePacker.process(\n            settings,\n            assetsInput.absolutePath,\n            assetsOutput.absolutePath,\n            packFileName\n    )\n}\n```\n#### Version of LibGDX and/or relevant dependencies\n\n'1.9.3'\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4151/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4150","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4150/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4150/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4150/events","html_url":"https://github.com/libgdx/libgdx/issues/4150","id":160017019,"number":4150,"title":"Model instance.transform rotation and translate dont work perfectly together","user":{"login":"Aduci01","id":16927018,"avatar_url":"https://avatars1.githubusercontent.com/u/16927018?v=4","gravatar_id":"","url":"https://api.github.com/users/Aduci01","html_url":"https://github.com/Aduci01","followers_url":"https://api.github.com/users/Aduci01/followers","following_url":"https://api.github.com/users/Aduci01/following{/other_user}","gists_url":"https://api.github.com/users/Aduci01/gists{/gist_id}","starred_url":"https://api.github.com/users/Aduci01/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Aduci01/subscriptions","organizations_url":"https://api.github.com/users/Aduci01/orgs","repos_url":"https://api.github.com/users/Aduci01/repos","events_url":"https://api.github.com/users/Aduci01/events{/privacy}","received_events_url":"https://api.github.com/users/Aduci01/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2016-06-13T18:40:05Z","updated_at":"2016-06-13T19:18:11Z","closed_at":"2016-06-13T18:50:54Z","author_association":"NONE","body":"touchPosition.x = Gdx.input.getX();\n        touchPosition.y = Gdx.input.getY();\n        rotation.y = (float) Math.atan2(touchPosition.x - Gdx.graphics.getWidth() / 2, touchPosition.y - Gdx.graphics.getHeight() / 2) \\* MathUtils.radiansToDegrees + 90;\n        shipInstance.transform.translate(-10, 0, 0);\n        shipInstance.transform.setToRotation(new Vector3(0,1,0),rotation.y);\n\nOnly the rotation works, translation does not.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4150/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4149","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4149/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4149/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4149/events","html_url":"https://github.com/libgdx/libgdx/issues/4149","id":159990171,"number":4149,"title":"WebGL error when load (png) image in Firefox Developer Edition.","user":{"login":"Dgzt","id":1684274,"avatar_url":"https://avatars3.githubusercontent.com/u/1684274?v=4","gravatar_id":"","url":"https://api.github.com/users/Dgzt","html_url":"https://github.com/Dgzt","followers_url":"https://api.github.com/users/Dgzt/followers","following_url":"https://api.github.com/users/Dgzt/following{/other_user}","gists_url":"https://api.github.com/users/Dgzt/gists{/gist_id}","starred_url":"https://api.github.com/users/Dgzt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Dgzt/subscriptions","organizations_url":"https://api.github.com/users/Dgzt/orgs","repos_url":"https://api.github.com/users/Dgzt/repos","events_url":"https://api.github.com/users/Dgzt/events{/privacy}","received_events_url":"https://api.github.com/users/Dgzt/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-06-13T16:21:35Z","updated_at":"2016-12-04T13:30:37Z","closed_at":"2016-12-04T13:30:37Z","author_association":"NONE","body":"#### Issue details\n\nWebGL error when load (png) image in Firefox Developer Edition.\n#### Reproduction steps/code\n- Download gdx-setup.jar\n- Generate empty (HTML) project\n- ./gradlew html:dist\n- Open in the Firefox Developer Edition from local server\n#### Version of LibGDX and/or relevant dependencies\n\nlibGDX 1.9.3\nFirefox Developer Edition 49.0a2 (2016-06-13)\n#### Stacktrace in browser's console\n\nError: WebGL: texImage2D: Chosen format/type incured an expensive reformat: 0x1908/0x1401\n#### Please select the affected platforms\n- [x] HTML/GWT\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4149/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4148","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4148/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4148/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4148/events","html_url":"https://github.com/libgdx/libgdx/issues/4148","id":159839830,"number":4148,"title":"Pixmap.getPixels() doesn't return the pixel data for GWT","user":{"login":"stefanhaustein","id":4282319,"avatar_url":"https://avatars0.githubusercontent.com/u/4282319?v=4","gravatar_id":"","url":"https://api.github.com/users/stefanhaustein","html_url":"https://github.com/stefanhaustein","followers_url":"https://api.github.com/users/stefanhaustein/followers","following_url":"https://api.github.com/users/stefanhaustein/following{/other_user}","gists_url":"https://api.github.com/users/stefanhaustein/gists{/gist_id}","starred_url":"https://api.github.com/users/stefanhaustein/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stefanhaustein/subscriptions","organizations_url":"https://api.github.com/users/stefanhaustein/orgs","repos_url":"https://api.github.com/users/stefanhaustein/repos","events_url":"https://api.github.com/users/stefanhaustein/events{/privacy}","received_events_url":"https://api.github.com/users/stefanhaustein/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2016-06-12T18:07:27Z","updated_at":"2016-12-04T13:32:26Z","closed_at":"2016-12-04T13:32:26Z","author_association":"CONTRIBUTOR","body":"Platform: GWT\nExpected: Pixmap.getPixels() returns a \"native\" nio buffer backed by the canvas pixel array.\nActual: An int buffer of size 1 containing the image id is returned. \n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4148/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4147","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4147/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4147/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4147/events","html_url":"https://github.com/libgdx/libgdx/pull/4147","id":159826473,"number":4147,"title":"Added the setInputProcessor.","user":{"login":"LoveraSantiago","id":7741737,"avatar_url":"https://avatars3.githubusercontent.com/u/7741737?v=4","gravatar_id":"","url":"https://api.github.com/users/LoveraSantiago","html_url":"https://github.com/LoveraSantiago","followers_url":"https://api.github.com/users/LoveraSantiago/followers","following_url":"https://api.github.com/users/LoveraSantiago/following{/other_user}","gists_url":"https://api.github.com/users/LoveraSantiago/gists{/gist_id}","starred_url":"https://api.github.com/users/LoveraSantiago/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/LoveraSantiago/subscriptions","organizations_url":"https://api.github.com/users/LoveraSantiago/orgs","repos_url":"https://api.github.com/users/LoveraSantiago/repos","events_url":"https://api.github.com/users/LoveraSantiago/events{/privacy}","received_events_url":"https://api.github.com/users/LoveraSantiago/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-06-12T13:05:09Z","updated_at":"2016-07-12T19:39:15Z","closed_at":"2016-07-12T19:39:15Z","author_association":"NONE","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4147","html_url":"https://github.com/libgdx/libgdx/pull/4147","diff_url":"https://github.com/libgdx/libgdx/pull/4147.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4147.patch"},"body":"Added the setInputProcessor. \nIn the current class and the parent class, was not set neither in the input processor.\n\nI do not know if the ApplyForce class is extended in some other example and that other example there is the set for inputprocessor. If ApplyForce really is a complete example then missed this set.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4147/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4146","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4146/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4146/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4146/events","html_url":"https://github.com/libgdx/libgdx/pull/4146","id":159795069,"number":4146,"title":"Create AmazonFireGameController.java and fix an error in Json-Util","user":{"login":"B4dT0bi","id":5924195,"avatar_url":"https://avatars3.githubusercontent.com/u/5924195?v=4","gravatar_id":"","url":"https://api.github.com/users/B4dT0bi","html_url":"https://github.com/B4dT0bi","followers_url":"https://api.github.com/users/B4dT0bi/followers","following_url":"https://api.github.com/users/B4dT0bi/following{/other_user}","gists_url":"https://api.github.com/users/B4dT0bi/gists{/gist_id}","starred_url":"https://api.github.com/users/B4dT0bi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/B4dT0bi/subscriptions","organizations_url":"https://api.github.com/users/B4dT0bi/orgs","repos_url":"https://api.github.com/users/B4dT0bi/repos","events_url":"https://api.github.com/users/B4dT0bi/events{/privacy}","received_events_url":"https://api.github.com/users/B4dT0bi/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2016-06-11T21:35:32Z","updated_at":"2017-01-25T16:14:05Z","closed_at":"2017-01-25T16:14:05Z","author_association":"NONE","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4146","html_url":"https://github.com/libgdx/libgdx/pull/4146","diff_url":"https://github.com/libgdx/libgdx/pull/4146.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4146.patch"},"body":"Just a simple mapping of the Amazon Fire Game Controller (Amazon FireTV) and a fix of Json Util which got a SerializationException when trying to DeSerialize an ArrayList inside a TreeMap. (see JUnitTest)\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4146/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4145","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4145/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4145/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4145/events","html_url":"https://github.com/libgdx/libgdx/issues/4145","id":159780356,"number":4145,"title":"FR: Add getUrl() to FileHandle, use in GWT sound construction (and potentially for other resources)","user":{"login":"stefanhaustein","id":4282319,"avatar_url":"https://avatars0.githubusercontent.com/u/4282319?v=4","gravatar_id":"","url":"https://api.github.com/users/stefanhaustein","html_url":"https://github.com/stefanhaustein","followers_url":"https://api.github.com/users/stefanhaustein/followers","following_url":"https://api.github.com/users/stefanhaustein/following{/other_user}","gists_url":"https://api.github.com/users/stefanhaustein/gists{/gist_id}","starred_url":"https://api.github.com/users/stefanhaustein/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stefanhaustein/subscriptions","organizations_url":"https://api.github.com/users/stefanhaustein/orgs","repos_url":"https://api.github.com/users/stefanhaustein/repos","events_url":"https://api.github.com/users/stefanhaustein/events{/privacy}","received_events_url":"https://api.github.com/users/stefanhaustein/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2016-06-11T16:07:56Z","updated_at":"2016-06-14T10:39:43Z","closed_at":"2016-06-14T10:39:43Z","author_association":"CONTRIBUTOR","body":"Currently, it's not possible to create sounds from data with LibGdx.\n\nTheoretically, one could create a temp file for this purpose, but for the web platform, the only file system available is read-only, and adding unnecessary FS IO seems to be quite inefficient.\n\nA getUrl() method (perhaps utilizing an optional, type- and platform-specific base URL) would allow users to create custom FileHandle implementations that could provide \"data:\" urls (when generating simple resources clientside) and / or blob urls (e.g. for indexeddb blobs) on the web platform.\n\n**Alternatives considered**\n\nDirect sound / image construction from URLs\n- URLs for specific types of data (byter buffers, database entries) may not be desirable / available on all platforms. \n- FileHandle is already used to construct resources from URLs, just in a way that can't be directly utilized by the user for bytebuffers or database entries\n\nDirect sound / image construction from Data\n- Would require to materialize data asynchronously on the web platform in cases where handing over a handle would be sufficient \n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4145/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4144","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4144/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4144/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4144/events","html_url":"https://github.com/libgdx/libgdx/pull/4144","id":159768759,"number":4144,"title":"Updated Vis extensions","user":{"login":"kotcrab","id":4594081,"avatar_url":"https://avatars1.githubusercontent.com/u/4594081?v=4","gravatar_id":"","url":"https://api.github.com/users/kotcrab","html_url":"https://github.com/kotcrab","followers_url":"https://api.github.com/users/kotcrab/followers","following_url":"https://api.github.com/users/kotcrab/following{/other_user}","gists_url":"https://api.github.com/users/kotcrab/gists{/gist_id}","starred_url":"https://api.github.com/users/kotcrab/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kotcrab/subscriptions","organizations_url":"https://api.github.com/users/kotcrab/orgs","repos_url":"https://api.github.com/users/kotcrab/repos","events_url":"https://api.github.com/users/kotcrab/events{/privacy}","received_events_url":"https://api.github.com/users/kotcrab/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-06-11T11:13:00Z","updated_at":"2016-06-11T12:16:49Z","closed_at":"2016-06-11T12:16:49Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4144","html_url":"https://github.com/libgdx/libgdx/pull/4144","diff_url":"https://github.com/libgdx/libgdx/pull/4144.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4144.patch"},"body":"","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4144/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4143","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4143/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4143/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4143/events","html_url":"https://github.com/libgdx/libgdx/issues/4143","id":159696983,"number":4143,"title":"LWJGL3 - OpenGL 3.2 - Windows Only - transitioning to Fullscreen breaks rendering.","user":{"login":"NateAustin","id":6526816,"avatar_url":"https://avatars3.githubusercontent.com/u/6526816?v=4","gravatar_id":"","url":"https://api.github.com/users/NateAustin","html_url":"https://github.com/NateAustin","followers_url":"https://api.github.com/users/NateAustin/followers","following_url":"https://api.github.com/users/NateAustin/following{/other_user}","gists_url":"https://api.github.com/users/NateAustin/gists{/gist_id}","starred_url":"https://api.github.com/users/NateAustin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NateAustin/subscriptions","organizations_url":"https://api.github.com/users/NateAustin/orgs","repos_url":"https://api.github.com/users/NateAustin/repos","events_url":"https://api.github.com/users/NateAustin/events{/privacy}","received_events_url":"https://api.github.com/users/NateAustin/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-06-10T18:43:48Z","updated_at":"2016-06-21T17:10:44Z","closed_at":"2016-06-21T17:10:44Z","author_association":"CONTRIBUTOR","body":"### Description\n\nOn Windows Using LWJGL3 and OpenGL 3, transitioning to fullscreen from windowed mode breaks all rendering (except for clear color.) Transitioning back to windowed does not fix the issue. Using LWJGL3 without OpenGL3 does not see this problem. I've tested on 1 NVIDIA card and 1 Intel integrated card with the same results.\n### Tested on versions\n\n1.9.3, 1.9.4-SNAPSHOT\n### Modified testbed that exhibits the problem\n\ngradle:\n\n```\nproject(\":desktop\") {\n    apply plugin: \"java\"\n\n    dependencies {\n        compile project(\":core\")\n        compile \"com.badlogicgames.gdx:gdx-backend-lwjgl3:$gdxVersion\"\n        compile \"com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop\"\n    }\n}\n```\n\nLauncher:\n\n```\npublic class DesktopLauncher {\n    public static void main (String[] arg) {\n        Lwjgl3ApplicationConfiguration config = new Lwjgl3ApplicationConfiguration();\n        config.useOpenGL3(true, 3, 2);\n        new Lwjgl3Application(new TestLwjgl3(), config);\n    }\n}\n```\n\nApp:\n\n```\npublic class TestLwjgl3 extends ApplicationAdapter {\n\n    private SpriteBatch batch;\n    private Texture img;\n\n    @Override\n    public void create () {\n        batch = new SpriteBatch();\n        img = new Texture(\"badlogic.jpg\");\n\n        Gdx.input.setInputProcessor(new InputAdapter() {\n            @Override\n            public boolean keyDown(int keycode) {\n                if (Gdx.graphics.isFullscreen()) {\n                    Gdx.graphics.setWindowedMode(640, 480);\n                } else {\n                    Gdx.graphics.setFullscreenMode(Gdx.graphics.getDisplayMode());\n                }\n                return true;\n            }\n        });\n    }\n\n    @Override\n    public void resize(int width, int height) {\n        batch.getProjectionMatrix().setToOrtho2D(0, 0, width, height);\n        //necessary on windows only due to a separate bug, however no effect on this issue.\n        Gdx.gl20.glViewport(0, 0, width, height);\n    }\n\n    @Override\n    public void render () {\n        Gdx.gl.glClearColor(1, 0, 0, 1);\n        Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);\n        batch.begin();\n        batch.draw(img, 0, 0);\n        batch.end();\n    }\n}\n```\n#### Instructions\n\nLaunch the App. Press any key to toggle fullscreen.\nEXEPCTED:\nthe badlogic logo shows up in the corner of the screen.\nACTUAL:\nthe window contents are red.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4143/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4142","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4142/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4142/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4142/events","html_url":"https://github.com/libgdx/libgdx/issues/4142","id":159694150,"number":4142,"title":"LWJGL3 - Windows Only - glViewport must now be called by user after any resize.","user":{"login":"NateAustin","id":6526816,"avatar_url":"https://avatars3.githubusercontent.com/u/6526816?v=4","gravatar_id":"","url":"https://api.github.com/users/NateAustin","html_url":"https://github.com/NateAustin","followers_url":"https://api.github.com/users/NateAustin/followers","following_url":"https://api.github.com/users/NateAustin/following{/other_user}","gists_url":"https://api.github.com/users/NateAustin/gists{/gist_id}","starred_url":"https://api.github.com/users/NateAustin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NateAustin/subscriptions","organizations_url":"https://api.github.com/users/NateAustin/orgs","repos_url":"https://api.github.com/users/NateAustin/repos","events_url":"https://api.github.com/users/NateAustin/events{/privacy}","received_events_url":"https://api.github.com/users/NateAustin/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-06-10T18:29:10Z","updated_at":"2016-06-21T17:10:37Z","closed_at":"2016-06-21T17:10:37Z","author_association":"CONTRIBUTOR","body":"### Description\n\nWhen using LWJGL3 on Windows, when the window is resized, the application must call `glViewport()` in order to be able to access the new screen size.\n### Modified Example App\n\nTo see the problem, resize the app on Windows. Make the window wider than it was.\nEXPECTED:\nThe logo fills the window:\nACTUAL:\nThere is a red bar at the right edge of the window.\n\nThen recompile with the glViewport() line commented in, and see that it behaves as expected.\n\ngradle:\n\n```\nproject(\":desktop\") {\n    apply plugin: \"java\"\n\n    dependencies {\n        compile project(\":core\")\n        compile \"com.badlogicgames.gdx:gdx-backend-lwjgl3:$gdxVersion\"\n        compile \"com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop\"\n    }\n}\n```\n\nLauncher:\n\n```\npublic class DesktopLauncher {\n    public static void main (String[] arg) {\n        Lwjgl3ApplicationConfiguration config = new Lwjgl3ApplicationConfiguration();\n        new Lwjgl3Application(new TestLwjgl3(), config);\n    }\n}\n```\n\nApp:\n\n```\npublic class TestLwjgl3 extends ApplicationAdapter {\n\n    private SpriteBatch batch;\n    private Texture img;\n\n    @Override\n    public void create () {\n        batch = new SpriteBatch();\n        img = new Texture(\"badlogic.jpg\");\n\n        //toggle fullscreen on keypress\n        Gdx.input.setInputProcessor(new InputAdapter() {\n            @Override\n            public boolean keyDown(int keycode) {\n                if (Gdx.graphics.isFullscreen()) {\n                    Gdx.graphics.setWindowedMode(640, 480);\n                } else {\n                    Gdx.graphics.setFullscreenMode(Gdx.graphics.getDisplayMode());\n                }\n                return true;\n            }\n        });\n\n    }\n\n    @Override\n    public void resize(int width, int height) {\n        batch.getProjectionMatrix().setToOrtho2D(0, 0, width, height);\n        //The following line is necessary on Windows to make window resizing work correctly. Not needed on Mac.\n        //Gdx.gl20.glViewport(0, 0, width, height);\n    }\n\n    @Override\n    public void render () {\n        Gdx.gl.glClearColor(1, 0, 0, 1);\n        Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);\n        batch.begin();\n        batch.draw(img, 0, 0, Gdx.graphics.getWidth(), Gdx.graphics.getHeight());\n        batch.end();\n    }\n}\n```\n\n(pulled out as a separate issue from #4135)\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4142/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4141","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4141/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4141/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4141/events","html_url":"https://github.com/libgdx/libgdx/issues/4141","id":159691934,"number":4141,"title":"LWJGL3 - when transitioning to Fullscreen, wrong dimensions are reported by API","user":{"login":"NateAustin","id":6526816,"avatar_url":"https://avatars3.githubusercontent.com/u/6526816?v=4","gravatar_id":"","url":"https://api.github.com/users/NateAustin","html_url":"https://github.com/NateAustin","followers_url":"https://api.github.com/users/NateAustin/followers","following_url":"https://api.github.com/users/NateAustin/following{/other_user}","gists_url":"https://api.github.com/users/NateAustin/gists{/gist_id}","starred_url":"https://api.github.com/users/NateAustin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NateAustin/subscriptions","organizations_url":"https://api.github.com/users/NateAustin/orgs","repos_url":"https://api.github.com/users/NateAustin/repos","events_url":"https://api.github.com/users/NateAustin/events{/privacy}","received_events_url":"https://api.github.com/users/NateAustin/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-06-10T18:17:26Z","updated_at":"2016-06-21T17:11:14Z","closed_at":"2016-06-21T15:56:26Z","author_association":"CONTRIBUTOR","body":"(pulled out as a separate issue from #4135)\n### Description\n\nWhen using LWJGL3, When switching from Windowed to Fullscreen mode, the `Gdx.graphics.getWidth()` family of functions reports incorrect (out of date) values during the call to `ApplicationListener.resize()`. This is inconsistent with how `resize()` normally behaves.\n\nThis is visible in an example app modified to use lwjgl3 and to switch to fullscreen on a keypress.\n\n```\nresizing to FULLSCREEN: 1920, 1200 (Gdx.graphics.getX: 640, 480) (Gdx.graphics.getBackBufferX: 640, 480)\nresizing to WINDOW: 640, 480 (Gdx.graphics.getX: 1920, 1200) (Gdx.graphics.getBackBufferX: 1920, 1200)\n```\n### Modified Example App\n\ngradle:\n\n```\nproject(\":desktop\") {\n    apply plugin: \"java\"\n\n    dependencies {\n        compile project(\":core\")\n        compile \"com.badlogicgames.gdx:gdx-backend-lwjgl3:$gdxVersion\"\n        compile \"com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop\"\n    }\n}\n```\n\nLauncher:\n\n```\npublic class DesktopLauncher {\n    public static void main (String[] arg) {\n        Lwjgl3ApplicationConfiguration config = new Lwjgl3ApplicationConfiguration();\n        new Lwjgl3Application(new TestLwjgl3(), config);\n    }\n}\n```\n\nApp:\n\n```\npublic class TestLwjgl3 extends ApplicationAdapter {\n\n    private SpriteBatch batch;\n    private Texture img;\n\n    @Override\n    public void create () {\n        batch = new SpriteBatch();\n        img = new Texture(\"badlogic.jpg\");\n\n        Gdx.input.setInputProcessor(new InputAdapter() {\n            @Override\n            public boolean keyDown(int keycode) {\n                if (Gdx.graphics.isFullscreen()) {\n                    Gdx.graphics.setWindowedMode(640, 480);\n                } else {\n                    Gdx.graphics.setFullscreenMode(Gdx.graphics.getDisplayMode());\n                }\n                return true;\n            }\n        });\n\n    }\n\n    @Override\n    public void resize(int width, int height) {\n        String ew = Integer.toString(Gdx.graphics.getWidth());\n        String eh = Integer.toString(Gdx.graphics.getHeight());\n        String sw = Integer.toString(width);\n        String sh = Integer.toString(height);\n        String logicalW = Integer.toString(Gdx.graphics.getBackBufferWidth());\n        String logicalH = Integer.toString(Gdx.graphics.getBackBufferHeight());\n        String mode;\n        if (Gdx.graphics.isFullscreen()) {\n            mode = \"FULLSCREEN\";\n\n        } else {\n            mode = \"WINDOW\";\n        }\n        System.out.println(\"resizing to \" + mode + \": \" + sw + \", \" + sh\n                + \" (Gdx.graphics.getX: \" + ew +  \", \" + eh + \")\"\n                + \" (Gdx.graphics.getBackBufferX: \" + logicalW +  \", \" + logicalH + \")\");\n\n    }\n\n    @Override\n    public void render () {\n        Gdx.gl.glClearColor(1, 0, 0, 1);\n        Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);\n        batch.begin();\n        batch.draw(img, 0, 0);\n        batch.end();\n    }\n}\n```\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4141/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4140","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4140/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4140/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4140/events","html_url":"https://github.com/libgdx/libgdx/pull/4140","id":159599047,"number":4140,"title":"Added support for typed TMX-properties.","user":{"login":"wcmatthysen","id":121888,"avatar_url":"https://avatars2.githubusercontent.com/u/121888?v=4","gravatar_id":"","url":"https://api.github.com/users/wcmatthysen","html_url":"https://github.com/wcmatthysen","followers_url":"https://api.github.com/users/wcmatthysen/followers","following_url":"https://api.github.com/users/wcmatthysen/following{/other_user}","gists_url":"https://api.github.com/users/wcmatthysen/gists{/gist_id}","starred_url":"https://api.github.com/users/wcmatthysen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wcmatthysen/subscriptions","organizations_url":"https://api.github.com/users/wcmatthysen/orgs","repos_url":"https://api.github.com/users/wcmatthysen/repos","events_url":"https://api.github.com/users/wcmatthysen/events{/privacy}","received_events_url":"https://api.github.com/users/wcmatthysen/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2016-06-10T09:50:24Z","updated_at":"2016-06-10T21:26:29Z","closed_at":"2016-06-10T21:26:29Z","author_association":"NONE","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4140","html_url":"https://github.com/libgdx/libgdx/pull/4140","diff_url":"https://github.com/libgdx/libgdx/pull/4140.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4140.patch"},"body":"Modified the loadProperties() method by adding support for detecting the\ntypes of the different properties. The type-information is stored as an\nadditional attribute with the name \"type\" in the property-element. If\npresent, this type-information is then used to convert the value-string\nto the correct type (i.e. Boolean, Color, Float, FileHandle or Integer).\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4140/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4139","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4139/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4139/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4139/events","html_url":"https://github.com/libgdx/libgdx/issues/4139","id":159569143,"number":4139,"title":"Controllers extension - The sent HWND is not valid!","user":{"login":"metc","id":229670,"avatar_url":"https://avatars1.githubusercontent.com/u/229670?v=4","gravatar_id":"","url":"https://api.github.com/users/metc","html_url":"https://github.com/metc","followers_url":"https://api.github.com/users/metc/followers","following_url":"https://api.github.com/users/metc/following{/other_user}","gists_url":"https://api.github.com/users/metc/gists{/gist_id}","starred_url":"https://api.github.com/users/metc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/metc/subscriptions","organizations_url":"https://api.github.com/users/metc/orgs","repos_url":"https://api.github.com/users/metc/repos","events_url":"https://api.github.com/users/metc/events{/privacy}","received_events_url":"https://api.github.com/users/metc/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2016-06-10T06:36:43Z","updated_at":"2016-06-18T10:09:31Z","closed_at":"2016-06-18T10:09:31Z","author_association":"NONE","body":"I use `libgdx` version 1.5.6 with the same `gdx-controllers` version on PC (tested on Windows).\n\nWhen I start a libgdx application in \"standalone\" mode (using `LwjglApplication`), the controllers extensions works as expected and I am able to use the connected controller.\n\nBut when I launch the libgdx application in a Swing frame (using a `LwjglAWTCanvas`), the same application code makes the JVM crashing. This is due to this line:\n\n``` java\nControllers.getControllers();\n```\n\nI get this error:\n\n```\nThis application has requested the Runtime to terminate it in an unusual way.\nPlease contact the application's support team for more information.\nterminate called after throwing an instance of 'OIS::Exception'\n  what():  Win32InputManager::Win32InputManager >> The sent HWND is not valid!\nAL lib: (EE) alc_cleanup: 1 device not closed\n```\n\n![jvm](https://cloud.githubusercontent.com/assets/229670/15956099/6ae9717e-2ee6-11e6-8253-ee463860aac9.png)\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4139/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4138","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4138/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4138/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4138/events","html_url":"https://github.com/libgdx/libgdx/pull/4138","id":159448159,"number":4138,"title":"gdx-facebook extension update","user":{"login":"TomGrill","id":9935213,"avatar_url":"https://avatars1.githubusercontent.com/u/9935213?v=4","gravatar_id":"","url":"https://api.github.com/users/TomGrill","html_url":"https://github.com/TomGrill","followers_url":"https://api.github.com/users/TomGrill/followers","following_url":"https://api.github.com/users/TomGrill/following{/other_user}","gists_url":"https://api.github.com/users/TomGrill/gists{/gist_id}","starred_url":"https://api.github.com/users/TomGrill/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/TomGrill/subscriptions","organizations_url":"https://api.github.com/users/TomGrill/orgs","repos_url":"https://api.github.com/users/TomGrill/repos","events_url":"https://api.github.com/users/TomGrill/events{/privacy}","received_events_url":"https://api.github.com/users/TomGrill/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-06-09T16:11:59Z","updated_at":"2016-06-09T16:59:41Z","closed_at":"2016-06-09T16:59:41Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4138","html_url":"https://github.com/libgdx/libgdx/pull/4138","diff_url":"https://github.com/libgdx/libgdx/pull/4138.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4138.patch"},"body":"version 1.2.1, compatibility 1.9.3, GWT support\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4138/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4137","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4137/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4137/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4137/events","html_url":"https://github.com/libgdx/libgdx/pull/4137","id":159378171,"number":4137,"title":"Add support for HTTP PATCH","user":{"login":"pjot","id":1204131,"avatar_url":"https://avatars2.githubusercontent.com/u/1204131?v=4","gravatar_id":"","url":"https://api.github.com/users/pjot","html_url":"https://github.com/pjot","followers_url":"https://api.github.com/users/pjot/followers","following_url":"https://api.github.com/users/pjot/following{/other_user}","gists_url":"https://api.github.com/users/pjot/gists{/gist_id}","starred_url":"https://api.github.com/users/pjot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pjot/subscriptions","organizations_url":"https://api.github.com/users/pjot/orgs","repos_url":"https://api.github.com/users/pjot/repos","events_url":"https://api.github.com/users/pjot/events{/privacy}","received_events_url":"https://api.github.com/users/pjot/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-06-09T10:43:33Z","updated_at":"2016-06-09T10:43:33Z","closed_at":null,"author_association":"NONE","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4137","html_url":"https://github.com/libgdx/libgdx/pull/4137","diff_url":"https://github.com/libgdx/libgdx/pull/4137.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4137.patch"},"body":"Setting the method to \"PATCH\" on a request causes it to be sent without a body but still with the PATCH verb.\n\nThis PR makes PATCH a proper HTTP verb in libgdx. The alternative would be to make the HTTP classes throw an exception when unsupported verbs are used instead of failing silently like it does now.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4137/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4136","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4136/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4136/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4136/events","html_url":"https://github.com/libgdx/libgdx/issues/4136","id":159345406,"number":4136,"title":"Error making a socket connection when I try with ipv6.","user":{"login":"truonguit2010","id":4622117,"avatar_url":"https://avatars0.githubusercontent.com/u/4622117?v=4","gravatar_id":"","url":"https://api.github.com/users/truonguit2010","html_url":"https://github.com/truonguit2010","followers_url":"https://api.github.com/users/truonguit2010/followers","following_url":"https://api.github.com/users/truonguit2010/following{/other_user}","gists_url":"https://api.github.com/users/truonguit2010/gists{/gist_id}","starred_url":"https://api.github.com/users/truonguit2010/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/truonguit2010/subscriptions","organizations_url":"https://api.github.com/users/truonguit2010/orgs","repos_url":"https://api.github.com/users/truonguit2010/repos","events_url":"https://api.github.com/users/truonguit2010/events{/privacy}","received_events_url":"https://api.github.com/users/truonguit2010/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-06-09T07:38:32Z","updated_at":"2016-08-17T05:49:35Z","closed_at":"2016-08-17T05:49:35Z","author_association":"NONE","body":"Is Libgdx support IPV6 when making a socket connection? I got an error when i do. Please give me a hand.\n\n```\ncom.badlogic.gdx.utils.GdxRuntimeException: Error making a socket connection to my_version_6_ip:my_port\n    at com.badlogic.gdx.net.NetJavaSocketImpl.<init>(NetJavaSocketImpl.java:51)\n    at com.badlogic.gdx.backends.iosrobovm.IOSNet.newClientSocket(IOSNet.java:63)\n    at vn.me.engine.network.MobileClient.doConnect(MobileClient.java:155)\n    at vn.me.engine.network.MobileClient.access$3(MobileClient.java:153)\n    at vn.me.engine.network.MobileClient$1.run(MobileClient.java:122)\n    at java.lang.Thread.run(Thread.java:837)\nCaused by: java.net.UnknownHostException: Host is unresolved: my_version_6_ip\n    at java.net.Socket.connect(Socket.java:826)\n    at java.net.Socket.connect(Socket.java:786)\n    at com.badlogic.gdx.net.NetJavaSocketImpl.<init>(NetJavaSocketImpl.java:48)\n```\n\nI got this on:\n- [x] iOS (robovm)\n- [x] Windows\n- [x] MacOS\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4136/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4135","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4135/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4135/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4135/events","html_url":"https://github.com/libgdx/libgdx/issues/4135","id":159264366,"number":4135,"title":"LWJGL3 - OpenGL 3.2 - switching to fullscreen or back breaks rendering.","user":{"login":"NateAustin","id":6526816,"avatar_url":"https://avatars3.githubusercontent.com/u/6526816?v=4","gravatar_id":"","url":"https://api.github.com/users/NateAustin","html_url":"https://github.com/NateAustin","followers_url":"https://api.github.com/users/NateAustin/followers","following_url":"https://api.github.com/users/NateAustin/following{/other_user}","gists_url":"https://api.github.com/users/NateAustin/gists{/gist_id}","starred_url":"https://api.github.com/users/NateAustin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NateAustin/subscriptions","organizations_url":"https://api.github.com/users/NateAustin/orgs","repos_url":"https://api.github.com/users/NateAustin/repos","events_url":"https://api.github.com/users/NateAustin/events{/privacy}","received_events_url":"https://api.github.com/users/NateAustin/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2016-06-08T20:34:13Z","updated_at":"2016-06-10T17:26:11Z","closed_at":"2016-06-10T17:26:11Z","author_association":"CONTRIBUTOR","body":"With LWJGL3 back end, when using OpenGL 3 (requesting 3.2), switching to fullscreen mode while the app is running (or to windowed mode from fullscreen)  causes rendering to fail. glClear works, but no subsequent render calls seem to.\n\nEXPECTED:\nbadlogic logo shows up after switching to fullscreen. (This works on LWGL2 and on LWJGL3 without OpenGL 3 core profile.)\n\nACTUAL:\ndemo app shows red screen with no logo. \n#### Reproduction steps/code\n\nThis is barebones app with 3 changes.\n1. use lwjgl3 backend\n2. `useOpenGL3(true, 3, 2);`\n3. code to toggle fullscreen on any keypress\n\ngradle:\n\n```\nproject(\":desktop\") {\n    apply plugin: \"java\"\n    dependencies {\n        compile project(\":core\")\n        compile \"com.badlogicgames.gdx:gdx-backend-lwjgl3:$gdxVersion\"\n        compile \"com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop\"\n    }\n}\n```\n\nlauncher:\n\n```\npublic class DesktopLauncher {\n  public static void main (String[] arg) {\n    Lwjgl3ApplicationConfiguration config = new Lwjgl3ApplicationConfiguration();\n    config.useOpenGL3(true, 3, 2);\n    new Lwjgl3Application(new TestLwjgl3(), config);\n  }\n}\n```\n\nApp:\n\n```\npublic class TestLwjgl3 extends ApplicationAdapter {\n\n    private SpriteBatch batch;\n    private Texture img;\n    private boolean shouldBeFullscreen = false;\n\n    @Override\n    public void create () {\n        batch = new SpriteBatch();\n        img = new Texture(\"badlogic.jpg\");\n\n\n        Gdx.input.setInputProcessor(new InputAdapter() {\n            @Override\n            public boolean keyDown(int keycode) {\n                shouldBeFullscreen = !shouldBeFullscreen;\n\n                if (shouldBeFullscreen) {\n                    if (!Gdx.graphics.isFullscreen()) {\n                        Gdx.graphics.setFullscreenMode(Gdx.graphics.getDisplayMode());\n                    }\n                } else {\n                    if (Gdx.graphics.isFullscreen()) {\n                        Gdx.graphics.setWindowedMode(640, 480);\n                    }\n                }\n\n                return true;\n            }\n        });\n\n    }\n\n    @Override\n    public void render () {\n\n        Gdx.gl.glClearColor(1, 0, 0, 1);\n        Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);\n        batch.begin();\n        batch.draw(img, 0, 0);\n        batch.end();\n    }\n}\n```\n#### Version of LibGDX and/or relevant dependencies\n\n1.9.3 and 1.9.4-SNAPSHOT, lwjgl3\n#### Stacktrace\n#### Please select the affected platforms\n- [ ] Android\n- [ ] iOS (robovm)\n- [ ] iOS (MOE)\n- [ ] HTML/GWT\n- [x] Windows\n- [ ] Linux\n- [x] MacOS\n\nI'm totally willing to help chase this down, especially if someone can point me in the right direction.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4135/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4134","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4134/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4134/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4134/events","html_url":"https://github.com/libgdx/libgdx/pull/4134","id":159241392,"number":4134,"title":"Implements properties types for tiled map loader","user":{"login":"KyuBlade","id":7126657,"avatar_url":"https://avatars2.githubusercontent.com/u/7126657?v=4","gravatar_id":"","url":"https://api.github.com/users/KyuBlade","html_url":"https://github.com/KyuBlade","followers_url":"https://api.github.com/users/KyuBlade/followers","following_url":"https://api.github.com/users/KyuBlade/following{/other_user}","gists_url":"https://api.github.com/users/KyuBlade/gists{/gist_id}","starred_url":"https://api.github.com/users/KyuBlade/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/KyuBlade/subscriptions","organizations_url":"https://api.github.com/users/KyuBlade/orgs","repos_url":"https://api.github.com/users/KyuBlade/repos","events_url":"https://api.github.com/users/KyuBlade/events{/privacy}","received_events_url":"https://api.github.com/users/KyuBlade/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-06-08T18:40:42Z","updated_at":"2016-06-23T23:27:07Z","closed_at":"2016-06-23T23:26:47Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4134","html_url":"https://github.com/libgdx/libgdx/pull/4134","diff_url":"https://github.com/libgdx/libgdx/pull/4134.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4134.patch"},"body":"Added property cast for new tiled maps.\nYou can now use the methods :\n- get (String key, Class<T> clazz)\n- get (String key, T defaultValue, Class<T> clazz)\n\nof the MapProperties class.\nSupport String, Boolean, Integer and Float types.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4134/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4133","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4133/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4133/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4133/events","html_url":"https://github.com/libgdx/libgdx/issues/4133","id":159240529,"number":4133,"title":"Issues with Versioning, Backends, and Deprecations","user":{"login":"JBird62","id":18637197,"avatar_url":"https://avatars1.githubusercontent.com/u/18637197?v=4","gravatar_id":"","url":"https://api.github.com/users/JBird62","html_url":"https://github.com/JBird62","followers_url":"https://api.github.com/users/JBird62/followers","following_url":"https://api.github.com/users/JBird62/following{/other_user}","gists_url":"https://api.github.com/users/JBird62/gists{/gist_id}","starred_url":"https://api.github.com/users/JBird62/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JBird62/subscriptions","organizations_url":"https://api.github.com/users/JBird62/orgs","repos_url":"https://api.github.com/users/JBird62/repos","events_url":"https://api.github.com/users/JBird62/events{/privacy}","received_events_url":"https://api.github.com/users/JBird62/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-06-08T18:36:26Z","updated_at":"2016-06-08T18:43:31Z","closed_at":"2016-06-08T18:43:31Z","author_association":"NONE","body":" I have successfully built and deployed a LibGDX game on desktop for linux, \nbut I am having issues with attempting to use a JOGL backend on a new project. \nI currently develop on 64 bit ubuntu 14.04 using LibGDX 1.9.3 and Gradle 2.13.\n\nI have researched for a few weeks and I am confused on the topic on using a JOGL backend. My end goal is to build a game/GUI that can be deployed on a Raspberrypi 2B with the latest raspian Jessie. RPI just released a few weeks ago the ability to use OpenGL ES 2 on Raspbian Jessie. I have attempted to port multiple games(or at least game samples) to my PI; all games were used with a lwjgl backend with nothing but errors forming from PI. \n I came across using JOGL backends in LIBGDX. However, I have read using JOGL was deprecated, yet in the github repository, there were files released for doing just that 8 days ago, though I haven't been able to find some of the files I am told to alter (i.e. multiple pom.xml files). Also, most ports to Raspberry pi that I came across were done back in 2013 when Raspbian Wheezy was the supported image. Wheezy is now deprecated and Jessie is now the supported image.\n  I saw a build.gradle file in the LibGDX master repository I downloaded; I attempted to execute a build with my gradle version 2.13(the Latest I do Believe). Running the build with --stacktrace, I was told I needed to build with the Gradle Version 2.2 as well as a problem occured evaluating root project (the master repository I downloaded). My questions are this.\n\n  If I was to build using Gradle 2.2, I would only want to use it once for this build. Is that possible? I only see about changing a path to use Gradle wrapper 2.2.\n\n  Was using JOGL Backend with LibGDX only when LibGDX was using the AntBuild? The reason I ask is because of all the pom.xml files I apparantly need to alter.\n\n  If using a JOGL backend build with LibGDX is possible, do I need to alter the files in the LibGDX master repository I downloaded and build it to a new gdx_setup.jar?\n\nCan anyone supply a possible link to explain to me how to to use the LibGDX Master Repository effectively and efficiently? That would be greatly appreciated.\n\nThank you all in advance. I appreciate any help.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4133/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4132","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4132/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4132/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4132/events","html_url":"https://github.com/libgdx/libgdx/issues/4132","id":159179237,"number":4132,"title":"Particle in game is not the same in editor","user":{"login":"massonetto","id":10254699,"avatar_url":"https://avatars0.githubusercontent.com/u/10254699?v=4","gravatar_id":"","url":"https://api.github.com/users/massonetto","html_url":"https://github.com/massonetto","followers_url":"https://api.github.com/users/massonetto/followers","following_url":"https://api.github.com/users/massonetto/following{/other_user}","gists_url":"https://api.github.com/users/massonetto/gists{/gist_id}","starred_url":"https://api.github.com/users/massonetto/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/massonetto/subscriptions","organizations_url":"https://api.github.com/users/massonetto/orgs","repos_url":"https://api.github.com/users/massonetto/repos","events_url":"https://api.github.com/users/massonetto/events{/privacy}","received_events_url":"https://api.github.com/users/massonetto/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2016-06-08T14:33:40Z","updated_at":"2016-06-08T18:38:07Z","closed_at":"2016-06-08T14:40:40Z","author_association":"NONE","body":"#### Issue details\n\nWhen i add the ParticleEffect in my game it is different from the original in the editor\n#### Reproduction steps/code\n\nHere is the particle : \n[particle.zip](https://github.com/libgdx/libgdx/files/304982/particle.zip)\n\nIf it is loaded on Game, it will be different if loaded in Editor\n#### Version of LibGDX and/or relevant dependencies\n\nI am using the last version on GIT\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4132/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4131","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4131/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4131/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4131/events","html_url":"https://github.com/libgdx/libgdx/pull/4131","id":159050652,"number":4131,"title":"Update LWJGL3 to release version 3.0.0 (build 90)","user":{"login":"Zomby2D","id":5513720,"avatar_url":"https://avatars0.githubusercontent.com/u/5513720?v=4","gravatar_id":"","url":"https://api.github.com/users/Zomby2D","html_url":"https://github.com/Zomby2D","followers_url":"https://api.github.com/users/Zomby2D/followers","following_url":"https://api.github.com/users/Zomby2D/following{/other_user}","gists_url":"https://api.github.com/users/Zomby2D/gists{/gist_id}","starred_url":"https://api.github.com/users/Zomby2D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Zomby2D/subscriptions","organizations_url":"https://api.github.com/users/Zomby2D/orgs","repos_url":"https://api.github.com/users/Zomby2D/repos","events_url":"https://api.github.com/users/Zomby2D/events{/privacy}","received_events_url":"https://api.github.com/users/Zomby2D/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-06-07T23:55:02Z","updated_at":"2016-06-09T19:45:25Z","closed_at":"2016-06-09T19:45:25Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4131","html_url":"https://github.com/libgdx/libgdx/pull/4131","diff_url":"https://github.com/libgdx/libgdx/pull/4131.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4131.patch"},"body":"I also fixed a compile error in AwtTestLWJGL.java\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4131/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4130","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4130/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4130/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4130/events","html_url":"https://github.com/libgdx/libgdx/pull/4130","id":158968339,"number":4130,"title":"Added access to application windows","user":{"login":"kiture","id":3867845,"avatar_url":"https://avatars0.githubusercontent.com/u/3867845?v=4","gravatar_id":"","url":"https://api.github.com/users/kiture","html_url":"https://github.com/kiture","followers_url":"https://api.github.com/users/kiture/followers","following_url":"https://api.github.com/users/kiture/following{/other_user}","gists_url":"https://api.github.com/users/kiture/gists{/gist_id}","starred_url":"https://api.github.com/users/kiture/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kiture/subscriptions","organizations_url":"https://api.github.com/users/kiture/orgs","repos_url":"https://api.github.com/users/kiture/repos","events_url":"https://api.github.com/users/kiture/events{/privacy}","received_events_url":"https://api.github.com/users/kiture/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2016-06-07T16:32:29Z","updated_at":"2016-07-12T19:47:52Z","closed_at":"2016-07-12T19:47:52Z","author_association":"NONE","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4130","html_url":"https://github.com/libgdx/libgdx/pull/4130","diff_url":"https://github.com/libgdx/libgdx/pull/4130.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4130.patch"},"body":"Now it's possible to hide window at start (using: setInitialVisible(false)) in LWJGL3, but later it's not possible to show it.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4130/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4129","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4129/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4129/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4129/events","html_url":"https://github.com/libgdx/libgdx/issues/4129","id":158937618,"number":4129,"title":"Add a getListeners() method to the Controller Interface","user":{"login":"phunni","id":11048658,"avatar_url":"https://avatars2.githubusercontent.com/u/11048658?v=4","gravatar_id":"","url":"https://api.github.com/users/phunni","html_url":"https://github.com/phunni","followers_url":"https://api.github.com/users/phunni/followers","following_url":"https://api.github.com/users/phunni/following{/other_user}","gists_url":"https://api.github.com/users/phunni/gists{/gist_id}","starred_url":"https://api.github.com/users/phunni/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/phunni/subscriptions","organizations_url":"https://api.github.com/users/phunni/orgs","repos_url":"https://api.github.com/users/phunni/repos","events_url":"https://api.github.com/users/phunni/events{/privacy}","received_events_url":"https://api.github.com/users/phunni/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-06-07T14:29:00Z","updated_at":"2016-12-04T13:37:46Z","closed_at":"2016-12-04T13:37:46Z","author_association":"NONE","body":"If the Controller interface (and, therefore, it's implementations) had a getListener() method; it would be easier to pass required data to Listener classes.\n\nThis should be a trivial addition.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4129/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}}],"meta":{"x-ratelimit-limit":"5000","x-ratelimit-remaining":"4974","x-ratelimit-reset":"1506844633","x-github-request-id":"BAFE:0287:84AFF7:11CD8F7:59D093BF","x-github-media-type":"github.squirrel-girl-preview","link":"<https://api.github.com/repositories/5373551/issues?state=all&page=27>; rel=\"next\", <https://api.github.com/repositories/5373551/issues?state=all&page=164>; rel=\"last\", <https://api.github.com/repositories/5373551/issues?state=all&page=1>; rel=\"first\", <https://api.github.com/repositories/5373551/issues?state=all&page=25>; rel=\"prev\"","etag":"\"d9be01d9c74e403fad169a5210f052a9\"","status":"200 OK"}}
