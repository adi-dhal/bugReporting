{"data":[{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2986","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2986/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2986/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2986/events","html_url":"https://github.com/libgdx/libgdx/issues/2986","id":64941503,"number":2986,"title":"Decal setter for DecalMaterial","user":{"login":"scientistnm","id":933456,"avatar_url":"https://avatars3.githubusercontent.com/u/933456?v=4","gravatar_id":"","url":"https://api.github.com/users/scientistnm","html_url":"https://github.com/scientistnm","followers_url":"https://api.github.com/users/scientistnm/followers","following_url":"https://api.github.com/users/scientistnm/following{/other_user}","gists_url":"https://api.github.com/users/scientistnm/gists{/gist_id}","starred_url":"https://api.github.com/users/scientistnm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/scientistnm/subscriptions","organizations_url":"https://api.github.com/users/scientistnm/orgs","repos_url":"https://api.github.com/users/scientistnm/repos","events_url":"https://api.github.com/users/scientistnm/events{/privacy}","received_events_url":"https://api.github.com/users/scientistnm/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2015-03-28T13:12:24Z","updated_at":"2015-05-28T04:53:51Z","closed_at":"2015-05-28T04:53:51Z","author_association":"NONE","body":"Hello,\n\nI was trying to change blending of decals in my app.\nBut I needed to use glBlendFuncSeparate instead of glBlendFunc.\n\nSo I needed to extended Decal class and DecalMaterial, and override DecalMaterial set() method.\nTo change the instance od DecalMaterial in Decal class I needed to to set new instance of my custom DecalMaterial in constructor of custom Decal class. Like:\n\nmaterial = new CustomDecalMaterial();\n\nIt's working and it's fine, but I think that would be much cleaner solution if Decal has setter for custom material.\n\nsetMaterial(DecalMaterial material){\n     this.material = material;\n}\n\nThis would be much cleaner solution for customizing blending of decals.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2986/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2985","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2985/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2985/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2985/events","html_url":"https://github.com/libgdx/libgdx/issues/2985","id":64926943,"number":2985,"title":"GWT texture blending broken on firefox but works in chrome - change since dec 2014","user":{"login":"sridharsundaram","id":200954,"avatar_url":"https://avatars2.githubusercontent.com/u/200954?v=4","gravatar_id":"","url":"https://api.github.com/users/sridharsundaram","html_url":"https://github.com/sridharsundaram","followers_url":"https://api.github.com/users/sridharsundaram/followers","following_url":"https://api.github.com/users/sridharsundaram/following{/other_user}","gists_url":"https://api.github.com/users/sridharsundaram/gists{/gist_id}","starred_url":"https://api.github.com/users/sridharsundaram/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sridharsundaram/subscriptions","organizations_url":"https://api.github.com/users/sridharsundaram/orgs","repos_url":"https://api.github.com/users/sridharsundaram/repos","events_url":"https://api.github.com/users/sridharsundaram/events{/privacy}","received_events_url":"https://api.github.com/users/sridharsundaram/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2015-03-28T10:35:36Z","updated_at":"2015-04-02T04:21:51Z","closed_at":"2015-04-02T04:21:51Z","author_association":"CONTRIBUTOR","body":"@MobiDevelop \nMy GWT application based on libGdx was earlier working in IE, firefox and Chrome. Now it works only on chrome.\nMy suspicion is that [this cl may have broken it](https://github.com/libgdx/libgdx/commit/32a8ceb5edf9974f6b1d8e875a314b18edee7cc3?diff=split</code)\n- [ ] Creating a texture from a pixmap with a sem-transparent color no longer works in firefox. The texture does not have transparency.\n- [ ] Drawing an image over another image so that both are composited no longer works in firefox.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2985/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2984","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2984/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2984/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2984/events","html_url":"https://github.com/libgdx/libgdx/pull/2984","id":64855942,"number":2984,"title":"Fix 3D Particles for GWT : loader and GLSL bug","user":{"login":"vbousquet","id":2796036,"avatar_url":"https://avatars1.githubusercontent.com/u/2796036?v=4","gravatar_id":"","url":"https://api.github.com/users/vbousquet","html_url":"https://github.com/vbousquet","followers_url":"https://api.github.com/users/vbousquet/followers","following_url":"https://api.github.com/users/vbousquet/following{/other_user}","gists_url":"https://api.github.com/users/vbousquet/gists{/gist_id}","starred_url":"https://api.github.com/users/vbousquet/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vbousquet/subscriptions","organizations_url":"https://api.github.com/users/vbousquet/orgs","repos_url":"https://api.github.com/users/vbousquet/repos","events_url":"https://api.github.com/users/vbousquet/events{/privacy}","received_events_url":"https://api.github.com/users/vbousquet/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2015-03-27T21:37:12Z","updated_at":"2015-04-08T13:25:11Z","closed_at":"2015-04-08T13:25:11Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2984","html_url":"https://github.com/libgdx/libgdx/pull/2984","diff_url":"https://github.com/libgdx/libgdx/pull/2984.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2984.patch"},"body":"On GWT, the particle 3D loader did not work since ResourceData.AssetData class was not feed to the ReflectionCache, other classes needed to be added manually, and there was missing precision specification for GLSL (Firefox rejected it).\n\nThis PR fixes this by:\n- forcing inclusion of explicitely declared reflection includes (i.e. they don't need to be used by an accesible class, which is the case here since AssetData is only used in generics) - Note that this will only work when the gdx.reflect.include property is set to a class (and not a package)\n- adding the needed includes to the reflection cache spec of GWT backend module definition\n- adding the precision marker expected in GLSL\n- adding an explicit message when loading fail due to absolute path (used by default in Flame) - Note: when formatting this file has quite a lot of whitespace change, don't know why.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2984/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2982","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2982/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2982/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2982/events","html_url":"https://github.com/libgdx/libgdx/issues/2982","id":64795400,"number":2982,"title":"vSync in fullscreen on OSX will run very slow","user":{"login":"orangepascal","id":11682717,"avatar_url":"https://avatars2.githubusercontent.com/u/11682717?v=4","gravatar_id":"","url":"https://api.github.com/users/orangepascal","html_url":"https://github.com/orangepascal","followers_url":"https://api.github.com/users/orangepascal/followers","following_url":"https://api.github.com/users/orangepascal/following{/other_user}","gists_url":"https://api.github.com/users/orangepascal/gists{/gist_id}","starred_url":"https://api.github.com/users/orangepascal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/orangepascal/subscriptions","organizations_url":"https://api.github.com/users/orangepascal/orgs","repos_url":"https://api.github.com/users/orangepascal/repos","events_url":"https://api.github.com/users/orangepascal/events{/privacy}","received_events_url":"https://api.github.com/users/orangepascal/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2015-03-27T16:17:34Z","updated_at":"2015-06-25T15:34:50Z","closed_at":"2015-06-25T15:34:50Z","author_association":"NONE","body":"Setting vSyncEnabled=true or calling graphics.setVSync(true) doesn't work correctly when running in Fullscreen mode on OSX.  Framerate seems to drop to 50%.\n\nWorks correctly in windowed mode, even works perfect when manually resizing the window to fullscreen.  But framerate drops by 50% when setting Fullscreen=true on graphics.\n\nSeems to work fine on Windows and Linux, just not on OSX.\n\n(tested on OSX Yosemite) \n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2982/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2981","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2981/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2981/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2981/events","html_url":"https://github.com/libgdx/libgdx/issues/2981","id":64690814,"number":2981,"title":"Incorrect sizes for incremental fonts with one generator and more than one font (different parameters)","user":{"login":"RobRendell","id":1848870,"avatar_url":"https://avatars1.githubusercontent.com/u/1848870?v=4","gravatar_id":"","url":"https://api.github.com/users/RobRendell","html_url":"https://github.com/RobRendell","followers_url":"https://api.github.com/users/RobRendell/followers","following_url":"https://api.github.com/users/RobRendell/following{/other_user}","gists_url":"https://api.github.com/users/RobRendell/gists{/gist_id}","starred_url":"https://api.github.com/users/RobRendell/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/RobRendell/subscriptions","organizations_url":"https://api.github.com/users/RobRendell/orgs","repos_url":"https://api.github.com/users/RobRendell/repos","events_url":"https://api.github.com/users/RobRendell/events{/privacy}","received_events_url":"https://api.github.com/users/RobRendell/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2015-03-27T04:27:26Z","updated_at":"2015-03-27T23:55:35Z","closed_at":"2015-03-27T23:55:35Z","author_association":"NONE","body":"(Note that to try to isolate this bug, I've removed anything manipulating `FreeTypeBitmapFontData.scale`, so scale is 1.0f in all cases.  Thus, I don't believe this is a duplicate of #2977)\n\nIn my game, I have a single FreeTypeFontGenerator (since I only have one TTF file), but I create three different fonts using that generator by using different FreeTypeFontParameter values (different sizes, colours, border widths etc).\n\nTrying out gdx 1.5.6-SNAPSHOT, I've modified my code now so that if I create my fonts up-front everything is rendering correctly.  However, if I set `parameter.incremental = true` and `parameter.characters = \"\"` so it generates everything incrementally, the different fonts are all rendering the same size as each other despite having different size parameters.  The other differences, e.g. colours, border sizes, drop shadows etc are displayed correctly.  If I change my code to create a new instance of FreeTypeFontGenerator for each different configuration of FreeTypeFontParameter, the incremental fonts go back to being sized correctly, so presumably there's something being set in the shared generator instead of the distinct data instances which is causing this.\n\nAs part of debugging this, I've dumped out the texture atlas using PixmapPackerIO, so I can see that the glyphs are indeed being created with the incorrect (equal) size - it's not something to do with the way that I'm rendering them.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2981/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2980","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2980/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2980/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2980/events","html_url":"https://github.com/libgdx/libgdx/issues/2980","id":64681339,"number":2980,"title":"NullPointerException if FreeTypeFontParameter.packer set","user":{"login":"RobRendell","id":1848870,"avatar_url":"https://avatars1.githubusercontent.com/u/1848870?v=4","gravatar_id":"","url":"https://api.github.com/users/RobRendell","html_url":"https://github.com/RobRendell","followers_url":"https://api.github.com/users/RobRendell/followers","following_url":"https://api.github.com/users/RobRendell/following{/other_user}","gists_url":"https://api.github.com/users/RobRendell/gists{/gist_id}","starred_url":"https://api.github.com/users/RobRendell/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/RobRendell/subscriptions","organizations_url":"https://api.github.com/users/RobRendell/orgs","repos_url":"https://api.github.com/users/RobRendell/repos","events_url":"https://api.github.com/users/RobRendell/events{/privacy}","received_events_url":"https://api.github.com/users/RobRendell/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":13,"created_at":"2015-03-27T03:08:49Z","updated_at":"2015-05-02T23:33:02Z","closed_at":"2015-05-02T15:54:04Z","author_association":"NONE","body":"While you're making changes to the font code: trying to call `FreeTypeFontGenerator.generateFont(FreeTypeFontParameter parameter, FreeTypeBitmapFontData data)` with the `FreeTypeFontParameter.packer` parameter assigned to your own packer throws a NullPointerException, because the generated FreeTypeBitmapFontData has regions == null.  The generator only assigns regions if the code decides that it owns the atlas, so the BitmapFont constructor is passed a null value for the array of regions.\n\nTo better support packing font glyphs using our own packers, generateData should assign regions on the resulting FreeTypeBitmapFontData object whether the data owns the atlas or it was supplied by the user.  As far as I can see, simply making the block at the end of generateData() that generates the texture regions unconditional, rather than testing if ownsAtlas is true, would be the correct behaviour whether the packer was created by FreeTypeFontGenerator or passed in via the FreeTypeFontParameter.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2980/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2979","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2979/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2979/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2979/events","html_url":"https://github.com/libgdx/libgdx/pull/2979","id":64677603,"number":2979,"title":"Fix 2D Particle Editor bug where the tint timeline does not update the emitter","user":{"login":"cjuillard","id":2320281,"avatar_url":"https://avatars3.githubusercontent.com/u/2320281?v=4","gravatar_id":"","url":"https://api.github.com/users/cjuillard","html_url":"https://github.com/cjuillard","followers_url":"https://api.github.com/users/cjuillard/followers","following_url":"https://api.github.com/users/cjuillard/following{/other_user}","gists_url":"https://api.github.com/users/cjuillard/gists{/gist_id}","starred_url":"https://api.github.com/users/cjuillard/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cjuillard/subscriptions","organizations_url":"https://api.github.com/users/cjuillard/orgs","repos_url":"https://api.github.com/users/cjuillard/repos","events_url":"https://api.github.com/users/cjuillard/events{/privacy}","received_events_url":"https://api.github.com/users/cjuillard/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2015-03-27T02:43:01Z","updated_at":"2017-01-16T14:55:41Z","closed_at":"2015-03-27T11:43:29Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2979","html_url":"https://github.com/libgdx/libgdx/pull/2979","diff_url":"https://github.com/libgdx/libgdx/pull/2979.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2979.patch"},"body":"Reproduce steps...\n1. Duplicate an emitter\n2. Add a new marker to emitter 2's Tint timeline or drag an existing marker to a new spot on the timeline\n3. Select emitter 1\n4. Select emitter 2 (and see the marker is gone)\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2979/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2978","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2978/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2978/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2978/events","html_url":"https://github.com/libgdx/libgdx/issues/2978","id":64568429,"number":2978,"title":"updating scene2d Table with threads","user":{"login":"nwodb","id":9101530,"avatar_url":"https://avatars3.githubusercontent.com/u/9101530?v=4","gravatar_id":"","url":"https://api.github.com/users/nwodb","html_url":"https://github.com/nwodb","followers_url":"https://api.github.com/users/nwodb/followers","following_url":"https://api.github.com/users/nwodb/following{/other_user}","gists_url":"https://api.github.com/users/nwodb/gists{/gist_id}","starred_url":"https://api.github.com/users/nwodb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nwodb/subscriptions","organizations_url":"https://api.github.com/users/nwodb/orgs","repos_url":"https://api.github.com/users/nwodb/repos","events_url":"https://api.github.com/users/nwodb/events{/privacy}","received_events_url":"https://api.github.com/users/nwodb/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2015-03-26T16:07:46Z","updated_at":"2015-03-26T21:51:24Z","closed_at":"2015-03-26T21:51:24Z","author_association":"NONE","body":"I am sometimes getting an ArrayIndexOutOfBoundsException when running my app, it looks like it is running through the Table::layout method while the Table is being updated by a network thread that is updating how many objects are in the table. Is there a way around this? or should the code in Table be be using the min between rows and expandHeight.length so it is not overrunning the array? -Thanks\n\nException in thread \"LWJGL Application\" java.lang.ArrayIndexOutOfBoundsException: 1\n    at com.badlogic.gdx.scenes.scene2d.ui.Table.layout(Table.java:932)\n    at com.badlogic.gdx.scenes.scene2d.ui.Table.layout(Table.java:712)\n    at com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup.validate(WidgetGroup.java:106)\n    at com.badlogic.gdx.scenes.scene2d.ui.Table.draw(Table.java:100)\n    at com.badlogic.gdx.scenes.scene2d.Group.drawChildren(Group.java:111)\n    at com.badlogic.gdx.scenes.scene2d.Group.draw(Group.java:58)\n    at com.badlogic.gdx.scenes.scene2d.Stage.draw(Stage.java:128)\n    at com.dawgged.GFL.client.GFLClient.render(GFLClient.java:101)\n    at com.badlogic.gdx.backends.lwjgl.LwjglApplication.mainLoop(LwjglApplication.java:207)\n    at com.badlogic.gdx.backends.lwjgl.LwjglApplication$1.run(LwjglApplication.java:114)\n\nFrom Table::layout - \n        int columns = this.columns, rows = this.rows;\n        float[] expandWidth = this.expandWidth, expandHeight = this.expandHeight;\n        float[] columnWidth = this.columnWidth, rowHeight = this.rowHeight;\n\n```\n    float totalExpandWidth = 0, totalExpandHeight = 0;\n    for (int i = 0; i < columns; i++)\n        totalExpandWidth += expandWidth[i];\n    for (int i = 0; i < rows; i++)\n        totalExpandHeight += expandHeight[i]; // crashes here\n```\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2978/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2977","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2977/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2977/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2977/events","html_url":"https://github.com/libgdx/libgdx/issues/2977","id":64417551,"number":2977,"title":"Label bounds don't take scale into account","user":{"login":"BlueRiverInteractive","id":5451631,"avatar_url":"https://avatars2.githubusercontent.com/u/5451631?v=4","gravatar_id":"","url":"https://api.github.com/users/BlueRiverInteractive","html_url":"https://github.com/BlueRiverInteractive","followers_url":"https://api.github.com/users/BlueRiverInteractive/followers","following_url":"https://api.github.com/users/BlueRiverInteractive/following{/other_user}","gists_url":"https://api.github.com/users/BlueRiverInteractive/gists{/gist_id}","starred_url":"https://api.github.com/users/BlueRiverInteractive/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/BlueRiverInteractive/subscriptions","organizations_url":"https://api.github.com/users/BlueRiverInteractive/orgs","repos_url":"https://api.github.com/users/BlueRiverInteractive/repos","events_url":"https://api.github.com/users/BlueRiverInteractive/events{/privacy}","received_events_url":"https://api.github.com/users/BlueRiverInteractive/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2015-03-26T02:06:16Z","updated_at":"2015-03-29T12:38:51Z","closed_at":"2015-03-29T12:38:51Z","author_association":"CONTRIBUTOR","body":"It seems the latest changes to BitmapFont and Label broke bounds for scaled fonts. Regardless what fontScale you specify for a Label, layout.setText() in computeSize() will always deliver you the same layout width and height. \n\nUPDATE: The width changes with the scale but the height doesn't. Thus the label isn't correctly positioned, either too high or too low. \n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2977/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2976","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2976/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2976/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2976/events","html_url":"https://github.com/libgdx/libgdx/pull/2976","id":64252676,"number":2976,"title":"fix #2974 GeometryUtils#polygonArea(float[], int, int)","user":{"login":"dermetfan","id":4956158,"avatar_url":"https://avatars1.githubusercontent.com/u/4956158?v=4","gravatar_id":"","url":"https://api.github.com/users/dermetfan","html_url":"https://github.com/dermetfan","followers_url":"https://api.github.com/users/dermetfan/followers","following_url":"https://api.github.com/users/dermetfan/following{/other_user}","gists_url":"https://api.github.com/users/dermetfan/gists{/gist_id}","starred_url":"https://api.github.com/users/dermetfan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dermetfan/subscriptions","organizations_url":"https://api.github.com/users/dermetfan/orgs","repos_url":"https://api.github.com/users/dermetfan/repos","events_url":"https://api.github.com/users/dermetfan/events{/privacy}","received_events_url":"https://api.github.com/users/dermetfan/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2015-03-25T11:58:29Z","updated_at":"2015-03-25T15:28:04Z","closed_at":"2015-03-25T13:22:31Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2976","html_url":"https://github.com/libgdx/libgdx/pull/2976","diff_url":"https://github.com/libgdx/libgdx/pull/2976.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2976.patch"},"body":"This is the fix for #2974.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2976/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2975","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2975/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2975/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2975/events","html_url":"https://github.com/libgdx/libgdx/issues/2975","id":64138443,"number":2975,"title":"Custom Cursor doesn't work on OSX","user":{"login":"ghost","id":10137,"avatar_url":"https://avatars3.githubusercontent.com/u/10137?v=4","gravatar_id":"","url":"https://api.github.com/users/ghost","html_url":"https://github.com/ghost","followers_url":"https://api.github.com/users/ghost/followers","following_url":"https://api.github.com/users/ghost/following{/other_user}","gists_url":"https://api.github.com/users/ghost/gists{/gist_id}","starred_url":"https://api.github.com/users/ghost/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ghost/subscriptions","organizations_url":"https://api.github.com/users/ghost/orgs","repos_url":"https://api.github.com/users/ghost/repos","events_url":"https://api.github.com/users/ghost/events{/privacy}","received_events_url":"https://api.github.com/users/ghost/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2015-03-25T00:48:21Z","updated_at":"2015-05-17T20:37:58Z","closed_at":"2015-05-17T20:37:58Z","author_association":"NONE","body":"It works on Windows and Ubuntu, but not on OSX Yosemite\n\n``` java\nPixmap pm = new Pixmap(Gdx.files.internal(\"textures/ui/cursor_x16.png\"));\nGdx.input.setCursorImage(pm, 0, 0);\npm.dispose();\n```\n# Problem:\n\nCustom cursor seems to work for few seconds then it go back to original OS cursor\n# What is the result expected:\n\nCustom Cursor should be displayed all the time\n# Tested with\n- libGDX 1.5.5\n- libGDX 1.5.4\n# Where it works:\n- [x] Windows 8/10\n- [x] Ubuntu 15.04\n- [ ] OS X Yosemite\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2975/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2974","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2974/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2974/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2974/events","html_url":"https://github.com/libgdx/libgdx/issues/2974","id":64126916,"number":2974,"title":"GeometryUtils#polygonArea(..) is broken","user":{"login":"dermetfan","id":4956158,"avatar_url":"https://avatars1.githubusercontent.com/u/4956158?v=4","gravatar_id":"","url":"https://api.github.com/users/dermetfan","html_url":"https://github.com/dermetfan","followers_url":"https://api.github.com/users/dermetfan/followers","following_url":"https://api.github.com/users/dermetfan/following{/other_user}","gists_url":"https://api.github.com/users/dermetfan/gists{/gist_id}","starred_url":"https://api.github.com/users/dermetfan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dermetfan/subscriptions","organizations_url":"https://api.github.com/users/dermetfan/orgs","repos_url":"https://api.github.com/users/dermetfan/repos","events_url":"https://api.github.com/users/dermetfan/events{/privacy}","received_events_url":"https://api.github.com/users/dermetfan/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2015-03-24T23:29:29Z","updated_at":"2015-03-25T13:22:36Z","closed_at":"2015-03-25T13:22:36Z","author_association":"CONTRIBUTOR","body":"`GeometryUtils.polygonArea(..)` returns wrong values if offset and count are not `0` and `polygon.length`.\n\nHere's a method to test:\n\n``` java\npublic static boolean isBroken() {\n    float[] polygon = {0, 0, 1, 0, 1.5f, .5f, 1, 1, .5f, 1.25f, 0, 1};\n    float area1 = com.badlogic.gdx.math.GeometryUtils.polygonArea(polygon, 0, polygon.length);\n\n    float[] polygon2 = {99, 99, 0, 0, 1, 0, 1.5f, .5f, 1, 1, .5f, 1.25f, 0, 1, 99, 99};\n    float area2 = com.badlogic.gdx.math.GeometryUtils.polygonArea(polygon2, 2, polygon.length);\n\n    return area1 != area2;\n}\n```\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2974/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2973","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2973/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2973/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2973/events","html_url":"https://github.com/libgdx/libgdx/pull/2973","id":64051089,"number":2973,"title":"Added on the fly glyph rendering to FreeTypeFontGenerator.","user":{"login":"NathanSweet","id":434010,"avatar_url":"https://avatars3.githubusercontent.com/u/434010?v=4","gravatar_id":"","url":"https://api.github.com/users/NathanSweet","html_url":"https://github.com/NathanSweet","followers_url":"https://api.github.com/users/NathanSweet/followers","following_url":"https://api.github.com/users/NathanSweet/following{/other_user}","gists_url":"https://api.github.com/users/NathanSweet/gists{/gist_id}","starred_url":"https://api.github.com/users/NathanSweet/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NathanSweet/subscriptions","organizations_url":"https://api.github.com/users/NathanSweet/orgs","repos_url":"https://api.github.com/users/NathanSweet/repos","events_url":"https://api.github.com/users/NathanSweet/events{/privacy}","received_events_url":"https://api.github.com/users/NathanSweet/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2015-03-24T17:15:12Z","updated_at":"2015-04-05T01:32:50Z","closed_at":"2015-03-24T17:27:50Z","author_association":"OWNER","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2973","html_url":"https://github.com/libgdx/libgdx/pull/2973","diff_url":"https://github.com/libgdx/libgdx/pull/2973.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2973.patch"},"body":"This allows FreeTypeFontGenerator to create a BitmapFontData that renders glyphs as they are encountered so we can support fonts for languages that have many glyphs. See FreeTypeIncrementalTest.\n\n![](http://i.imgur.com/T2cKloK.png)\n\nThe red boxes at the top are the glyph atlas pages, purposefully made tiny for testing. Better packing (a skyline variant) can be implemented in the future, for now it uses PixmapPacker as it used to.\n\nI don't believe this breaks much, if anything, except that BitmapFont `regions` changes from `TextureRegion[]` to `Array<TextureRegion>` so adding a region on the fly is easier.\n\nRelated to #1589.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2973/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2972","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2972/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2972/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2972/events","html_url":"https://github.com/libgdx/libgdx/issues/2972","id":64047533,"number":2972,"title":"Crash on OS X when using Excelsior Jet AND when gamepad is connected","user":{"login":"schleinzer","id":3717927,"avatar_url":"https://avatars1.githubusercontent.com/u/3717927?v=4","gravatar_id":"","url":"https://api.github.com/users/schleinzer","html_url":"https://github.com/schleinzer","followers_url":"https://api.github.com/users/schleinzer/followers","following_url":"https://api.github.com/users/schleinzer/following{/other_user}","gists_url":"https://api.github.com/users/schleinzer/gists{/gist_id}","starred_url":"https://api.github.com/users/schleinzer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/schleinzer/subscriptions","organizations_url":"https://api.github.com/users/schleinzer/orgs","repos_url":"https://api.github.com/users/schleinzer/repos","events_url":"https://api.github.com/users/schleinzer/events{/privacy}","received_events_url":"https://api.github.com/users/schleinzer/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2015-03-24T17:00:36Z","updated_at":"2017-01-16T14:52:54Z","closed_at":"2015-04-09T04:25:42Z","author_association":"CONTRIBUTOR","body":"Hi,\n\nI have a rather specific issue, which might be known to someone: I \"packed\" my game with the evaluation version of Excelsior Jet 10.5 for OS X.\n\nThe  game runs fine _unless_ I connect my gamepad to the mac. When starting the game with a gamepad connected, the game crashes right at the start with a \"pointer freed, but not allocated\" problem.\n\nWhen running the game on the very same configuration with \"java -jar ...\" (that is, no JET) it works fine - no matter if a gamepad is connected or not.\n\nIs there anybody experiencing the same issue?\n\nThank you!\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2972/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2971","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2971/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2971/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2971/events","html_url":"https://github.com/libgdx/libgdx/issues/2971","id":63612357,"number":2971,"title":"Error on startup in NixOS","user":{"login":"ChetRippo","id":1483832,"avatar_url":"https://avatars3.githubusercontent.com/u/1483832?v=4","gravatar_id":"","url":"https://api.github.com/users/ChetRippo","html_url":"https://github.com/ChetRippo","followers_url":"https://api.github.com/users/ChetRippo/followers","following_url":"https://api.github.com/users/ChetRippo/following{/other_user}","gists_url":"https://api.github.com/users/ChetRippo/gists{/gist_id}","starred_url":"https://api.github.com/users/ChetRippo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ChetRippo/subscriptions","organizations_url":"https://api.github.com/users/ChetRippo/orgs","repos_url":"https://api.github.com/users/ChetRippo/repos","events_url":"https://api.github.com/users/ChetRippo/events{/privacy}","received_events_url":"https://api.github.com/users/ChetRippo/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2015-03-23T03:18:25Z","updated_at":"2015-03-23T08:46:53Z","closed_at":"2015-03-23T08:46:32Z","author_association":"CONTRIBUTOR","body":"Hi,\n\nA steam user for my game just reported this exception whenever he starts it up:\n\nException in thread \"LWJGL Application\"\njava.lang.ExceptionInInitializerError at\ncom.badlogic.gdx.backends.lwjgl.LwjglGraphics.setVSync(LwjglGraphics.java:446)\nat\ncom.badlogic.gdx.backends.lwjgl.LwjglApplication$1.run(LwjglApplication.java:118)\nCaused by: java.lang.ArrayIndexOutOfBoundsException: 0 at\norg.lwjgl.opengl.LinuxDisplay.getAvailableDisplayModes(LinuxDisplay.java:954)\nat org.lwjgl.opengl.LinuxDisplay.init(LinuxDisplay.java:738) at\norg.lwjgl.opengl.Display.<clinit>(Display.java:138) ... 2 more AL lib:\n(EE) alc_cleanup: 1 device not closed \n\nThis is on NixOS 64-bit. Does LibGDX support this OS?\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2971/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2970","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2970/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2970/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2970/events","html_url":"https://github.com/libgdx/libgdx/issues/2970","id":63577526,"number":2970,"title":"Instantiating `Music` from an Android `FileDescriptor`","user":{"login":"manta","id":11437612,"avatar_url":"https://avatars2.githubusercontent.com/u/11437612?v=4","gravatar_id":"","url":"https://api.github.com/users/manta","html_url":"https://github.com/manta","followers_url":"https://api.github.com/users/manta/followers","following_url":"https://api.github.com/users/manta/following{/other_user}","gists_url":"https://api.github.com/users/manta/gists{/gist_id}","starred_url":"https://api.github.com/users/manta/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/manta/subscriptions","organizations_url":"https://api.github.com/users/manta/orgs","repos_url":"https://api.github.com/users/manta/repos","events_url":"https://api.github.com/users/manta/events{/privacy}","received_events_url":"https://api.github.com/users/manta/received_events","type":"User","site_admin":false},"labels":[{"id":59604218,"url":"https://api.github.com/repos/libgdx/libgdx/labels/android","name":"android","color":"009800","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2015-03-22T21:13:23Z","updated_at":"2015-11-04T05:30:56Z","closed_at":"2015-11-04T05:30:56Z","author_association":"NONE","body":"The way `Music` instances are created in LibGDX is through `Gdx.audio.newMusic(FileHandle)` &mdash; creating the `FileHandle` argument requires that users have the path to the file they want to play. There are legitimate situations where this path cannot be obtained, so a `Music` instance cannot be created.\n## The problem\n\nOne situation where the path cannot be obtained is when starting an `Intent` that asks the user to select a file from the device.\n\n```\nIntent intent = new Intent();\nintent.setAction(Intent.ACTION_PICK);\nintent.setData(android.provider.MediaStore.Audio.Media.EXTERNAL_CONTENT_URI);\nactivity.startActivityForResult(Intent.createChooser(intent, \"Select song\"), 0);\n```\n\nAfter the above `Activity` is completed, the `onActivityResult` method is called. Now we can try to obtain the path from `data` argument. However, we cannot do this directly. We have to query the database and look for the value of the `MediaStore.MediaColumns.DATA` column. \n\n```\nvoid onActivityResult(int requestCode, int resultCode, Intent data) {\n    Uri uri = data.getData();\n    String[] cols = { MediaStore.MediaColumns.DATA };\n    try (Cursor cursor = activity.getContentResolver().query(uri, cols, null, null, null)) {\n        cursor.moveToFirst();\n        int columnIndex = cursor.getColumnIndex(cols[0]);\n        this.path = cursor.getString(columnIndex);\n    } catch (Exception e) {\n        // Can throw if moveToFirst() fails.\n    }\n}\n```\n\nThe call to `cursor.moveToFirst()` can fail because there is no guarantee that the `DATA` column is available. Note that a missing `DATA` column does not mean the file is invalid or that it cannot be played. The `uri` object still is a valid `content://` id and it can be used to obtain a `FileDescriptor` that can then be passed to Android's [`MediaPlayer`](http://developer.android.com/reference/android/media/MediaPlayer.html#setDataSource%28java.io.FileDescriptor%29).\n\nFortunatelly, LibGDX uses `MediaPlayer` internally in `AndroidAudio`. _Un_fortunatelly LibGDX does not offer a mechanism through which the `MediaPlayer` can be passed an instance of a `FileDescriptor` &mdash; there is no `AndroidAudio.newMusic(FileDescriptor)`.\n## Proposed solution\n### Backend changes\n\nThe proposed solution is to add a new method `AndroidMusic newMusic(FileDescriptor)` to the `AndroidAudio` class. This would only be available on Android (it's not part of the generic `Audio` interface).\n\nBelow is a first draft of what the method would do. It is based on the already existing [`newMusic(FileHandle)`](https://github.com/libgdx/libgdx/blob/master/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidAudio.java#L99) method.\n\n```\npublic AndroidMusic newMusic(FileDescriptor file) {\n    if (soundPool == null) {\n        throw new GdxRuntimeException(\"Android audio is not enabled by the application config.\");\n    }\n\n    MediaPlayer mediaPlayer = new MediaPlayer();\n\n    try {      \n        mediaPlayer.setDataSource(file);\n        mediaPlayer.prepare();\n\n        AndroidMusic music = new AndroidMusic(this, mediaPlayer);\n        synchronized (musics) {\n            musics.add(music);\n        }\n        return music;\n    } catch (Exception ex) {\n        throw new GdxRuntimeException(\"Error loading audio file: \" + file, ex);\n    }\n}\n```\n### Usage\n\nHere is an example of how the user would modify the `onActivityResult` method to use the new functionality.\n\n```\nvoid onActivityResult(int requestCode, int resultCode, Intent data) {\n    Uri uri = data.getData();\n    ContentResolver resolver = this.getContentResolver();  // `this` is an `Activity`\n    try (ParcelFileDescriptor parcelFile = resolver.openFileDescriptor(uri, \"r\")) {\n        FileDescriptor file = parcelFile.getFileDescriptor();\n        AndroidAudio audio = (AndroidAudio) Gdx.audio;\n        this.theMusicWeWanted = audio.newMusic(file);\n    } catch (Exception e) {\n    }\n}\n```\n\nAfter obtaining `this.theMusicWeWanted` we can then [somehow](https://github.com/libgdx/libgdx/wiki/Interfacing-with-platform-specific-code) pass it back to the core application.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2970/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2969","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2969/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2969/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2969/events","html_url":"https://github.com/libgdx/libgdx/pull/2969","id":63562185,"number":2969,"title":"Fix for #2968","user":{"login":"nooone","id":5896510,"avatar_url":"https://avatars3.githubusercontent.com/u/5896510?v=4","gravatar_id":"","url":"https://api.github.com/users/nooone","html_url":"https://github.com/nooone","followers_url":"https://api.github.com/users/nooone/followers","following_url":"https://api.github.com/users/nooone/following{/other_user}","gists_url":"https://api.github.com/users/nooone/gists{/gist_id}","starred_url":"https://api.github.com/users/nooone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nooone/subscriptions","organizations_url":"https://api.github.com/users/nooone/orgs","repos_url":"https://api.github.com/users/nooone/repos","events_url":"https://api.github.com/users/nooone/events{/privacy}","received_events_url":"https://api.github.com/users/nooone/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":16,"created_at":"2015-03-22T18:40:35Z","updated_at":"2015-03-23T17:36:02Z","closed_at":"2015-03-22T19:32:41Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2969","html_url":"https://github.com/libgdx/libgdx/pull/2969","diff_url":"https://github.com/libgdx/libgdx/pull/2969.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2969.patch"},"body":"My eclipse initially added 10 missing `@Override`s (I still don't know why _some_ people don't like 'em), so I used the github file edit feature instead.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2969/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2968","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2968/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2968/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2968/events","html_url":"https://github.com/libgdx/libgdx/issues/2968","id":63473318,"number":2968,"title":"Stage.ScrollFocus mistyped","user":{"login":"xpenatan","id":6472084,"avatar_url":"https://avatars3.githubusercontent.com/u/6472084?v=4","gravatar_id":"","url":"https://api.github.com/users/xpenatan","html_url":"https://github.com/xpenatan","followers_url":"https://api.github.com/users/xpenatan/followers","following_url":"https://api.github.com/users/xpenatan/following{/other_user}","gists_url":"https://api.github.com/users/xpenatan/gists{/gist_id}","starred_url":"https://api.github.com/users/xpenatan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xpenatan/subscriptions","organizations_url":"https://api.github.com/users/xpenatan/orgs","repos_url":"https://api.github.com/users/xpenatan/repos","events_url":"https://api.github.com/users/xpenatan/events{/privacy}","received_events_url":"https://api.github.com/users/xpenatan/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2015-03-22T01:04:06Z","updated_at":"2015-03-22T20:19:28Z","closed_at":"2015-03-22T20:19:28Z","author_association":"CONTRIBUTOR","body":"I think oldScrollFocus actor needs to be scrollFocus listener and not keyboardFocus listener.\n\nStage at line 638\n\n```\npublic void setScrollFocus (Actor actor) {\n        if (scrollFocus == actor) return;\n        FocusEvent event = Pools.obtain(FocusEvent.class);\n        event.setStage(this);\n        event.setType(FocusEvent.Type.scroll);\n        Actor oldScrollFocus = keyboardFocus;\n...\n```\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2968/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2967","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2967/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2967/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2967/events","html_url":"https://github.com/libgdx/libgdx/pull/2967","id":63471485,"number":2967,"title":"Adding link to JavaDocs for offline use","user":{"login":"epochofentropy","id":3837352,"avatar_url":"https://avatars0.githubusercontent.com/u/3837352?v=4","gravatar_id":"","url":"https://api.github.com/users/epochofentropy","html_url":"https://github.com/epochofentropy","followers_url":"https://api.github.com/users/epochofentropy/followers","following_url":"https://api.github.com/users/epochofentropy/following{/other_user}","gists_url":"https://api.github.com/users/epochofentropy/gists{/gist_id}","starred_url":"https://api.github.com/users/epochofentropy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/epochofentropy/subscriptions","organizations_url":"https://api.github.com/users/epochofentropy/orgs","repos_url":"https://api.github.com/users/epochofentropy/repos","events_url":"https://api.github.com/users/epochofentropy/events{/privacy}","received_events_url":"https://api.github.com/users/epochofentropy/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2015-03-22T00:43:22Z","updated_at":"2015-03-27T14:28:01Z","closed_at":"2015-03-27T14:28:01Z","author_association":"NONE","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2967","html_url":"https://github.com/libgdx/libgdx/pull/2967","diff_url":"https://github.com/libgdx/libgdx/pull/2967.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2967.patch"},"body":"This link wasn't available anyplace, and is useful for those that can't be online all the time.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2967/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2966","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2966/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2966/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2966/events","html_url":"https://github.com/libgdx/libgdx/issues/2966","id":63414801,"number":2966,"title":"AndroidFileHandle cannot be extended","user":{"login":"clementhely","id":3869204,"avatar_url":"https://avatars2.githubusercontent.com/u/3869204?v=4","gravatar_id":"","url":"https://api.github.com/users/clementhely","html_url":"https://github.com/clementhely","followers_url":"https://api.github.com/users/clementhely/followers","following_url":"https://api.github.com/users/clementhely/following{/other_user}","gists_url":"https://api.github.com/users/clementhely/gists{/gist_id}","starred_url":"https://api.github.com/users/clementhely/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clementhely/subscriptions","organizations_url":"https://api.github.com/users/clementhely/orgs","repos_url":"https://api.github.com/users/clementhely/repos","events_url":"https://api.github.com/users/clementhely/events{/privacy}","received_events_url":"https://api.github.com/users/clementhely/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2015-03-21T14:57:39Z","updated_at":"2015-03-21T15:12:32Z","closed_at":"2015-03-21T15:12:32Z","author_association":"NONE","body":"Hello,\n\nI am trying to use an APK Expansion Files in combination with libGDX. My plan is to store all game's assets in this .zip file, as our APK will soon reach the 50 MiB limit.\n\nI started by creating a new FileHandle and a new FileHandleResolver to load all assets directly from the ZIP file. This seems to do the trick quite well for most assets, except for audio files... When trying to load audio files, I get a ClassCastException from line 145 of com.badlogic.gdx.backends.android.AndroidAudio, since the FileHandle is cast to an AndroidFileHandle and my custom FileHandle extends com.badlogic.gdx.files.FileHandle and not AndroidFileHandle.\n\nWhen encountering this problem, I of course tried to extend AndroidFileHandle instead. And this is when I noticed that this was not possible as AndroidFileHandle constructors are both package private...\n\nIs there something I am missing on the way to use AndroidFileHandle? Or is there a way to extend this class?\n\nOtherwise I guess I could make these constructors public or create a wrapper in com.badlogic.gdx.backends.android to be able to access them from outside the package.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2966/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2965","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2965/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2965/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2965/events","html_url":"https://github.com/libgdx/libgdx/issues/2965","id":63411959,"number":2965,"title":"Use libgdx as Java Lib: instantiate math objects","user":{"login":"manudahmen","id":266825,"avatar_url":"https://avatars3.githubusercontent.com/u/266825?v=4","gravatar_id":"","url":"https://api.github.com/users/manudahmen","html_url":"https://github.com/manudahmen","followers_url":"https://api.github.com/users/manudahmen/followers","following_url":"https://api.github.com/users/manudahmen/following{/other_user}","gists_url":"https://api.github.com/users/manudahmen/gists{/gist_id}","starred_url":"https://api.github.com/users/manudahmen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/manudahmen/subscriptions","organizations_url":"https://api.github.com/users/manudahmen/orgs","repos_url":"https://api.github.com/users/manudahmen/repos","events_url":"https://api.github.com/users/manudahmen/events{/privacy}","received_events_url":"https://api.github.com/users/manudahmen/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2015-03-21T14:33:43Z","updated_at":"2015-03-21T15:09:02Z","closed_at":"2015-03-21T15:09:02Z","author_association":"NONE","body":"Hello,\n\nI'm sorry I can't understand without an explanation if I can instantiate a three dimensional BSpline  within my project [github.com/Graphics3D/emptycanvas-3] I first block with com.badlogic.math.Vector class wihich is abstract. I thought yes I have to \"type\" it with my 3D basic class Point3D (similar to Vector3) but I don't think it is the same thing.\n\nWhat I like to do, is to implement BSpline and Nurbs, starting with Spline curves. I thought I could use _com.badlogic.gdx.math.BSpline_ as a base class and wrap it in my project.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2965/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2964","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2964/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2964/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2964/events","html_url":"https://github.com/libgdx/libgdx/issues/2964","id":63408684,"number":2964,"title":"Joystick support crash with X7 keyboard/mouse","user":{"login":"dusakus","id":3822753,"avatar_url":"https://avatars0.githubusercontent.com/u/3822753?v=4","gravatar_id":"","url":"https://api.github.com/users/dusakus","html_url":"https://github.com/dusakus","followers_url":"https://api.github.com/users/dusakus/followers","following_url":"https://api.github.com/users/dusakus/following{/other_user}","gists_url":"https://api.github.com/users/dusakus/gists{/gist_id}","starred_url":"https://api.github.com/users/dusakus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dusakus/subscriptions","organizations_url":"https://api.github.com/users/dusakus/orgs","repos_url":"https://api.github.com/users/dusakus/repos","events_url":"https://api.github.com/users/dusakus/events{/privacy}","received_events_url":"https://api.github.com/users/dusakus/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2015-03-21T14:13:29Z","updated_at":"2016-01-17T20:40:03Z","closed_at":null,"author_association":"NONE","body":"App: Delver EarlyAcces (probably not game specific)\n\nThe problem: Instant crash when using A4Tech X7 keyboard or mouse buttons. Game crashes when i try to use arrow keys on external keyboard (G800V), i can play using builtin keyboard, but not the external one.\n\nCrashLog (all I have):\n Exception in thread \"LWJGL Application\" java.lang.ArrayIndexOutOfBoundsException: [keyID here]\n        at com.badlogic.gdx.controllers.desktop.ois.OisJoystick.buttonPressed(OisJoystick.java:51)\n        at com.badlogic.gdx.controllers.desktop.ois.OisJoystick.update(Native Method)\n        at com.badlogic.gdx.controllers.desktop.ois.OisJoystick.update(OisJoystick.java:82)\n        at com.badlogic.gdx.controllers.desktop.ois.Ois.update(Ois.java:45)\n        at com.badlogic.gdx.controllers.desktop.OisControllers$1.run(OisControllers.java:60)\n        at com.badlogic.gdx.backends.lwjgl.LwjglApplication.executeRunnables(LwjglApplication.java:238)\n        at com.badlogic.gdx.backends.lwjgl.LwjglApplication.mainLoop(LwjglApplication.java:193)\n        at com.badlogic.gdx.backends.lwjgl.LwjglApplication$1.run(LwjglApplication.java:114)\n\nMy setup:\n OS: Kubuntu 14.10  (kernel: 3.16.0)\n Laptop (CPU: i7-4800MQ, GPU: GTX770M, RAM: 16GB)\n ext Keyboard: A4Tech X7 G800V\n mouse: A4Tech X7 X-755BK\n\nAdditional info:\n System's configuration utility detects both input devices (additionally to their primary function) as  Joysticks with 69 buttons and 37 axis. It's known that a4tech devices mess up some games, but this is the first time it causes them to crash and based on the exception it's not a game specific problem\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2964/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2963","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2963/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2963/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2963/events","html_url":"https://github.com/libgdx/libgdx/pull/2963","id":63344168,"number":2963,"title":"Merge pull request #1 from libgdx/master","user":{"login":"epochofentropy","id":3837352,"avatar_url":"https://avatars0.githubusercontent.com/u/3837352?v=4","gravatar_id":"","url":"https://api.github.com/users/epochofentropy","html_url":"https://github.com/epochofentropy","followers_url":"https://api.github.com/users/epochofentropy/followers","following_url":"https://api.github.com/users/epochofentropy/following{/other_user}","gists_url":"https://api.github.com/users/epochofentropy/gists{/gist_id}","starred_url":"https://api.github.com/users/epochofentropy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/epochofentropy/subscriptions","organizations_url":"https://api.github.com/users/epochofentropy/orgs","repos_url":"https://api.github.com/users/epochofentropy/repos","events_url":"https://api.github.com/users/epochofentropy/events{/privacy}","received_events_url":"https://api.github.com/users/epochofentropy/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2015-03-21T01:56:01Z","updated_at":"2015-03-21T01:56:17Z","closed_at":"2015-03-21T01:56:17Z","author_association":"NONE","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2963","html_url":"https://github.com/libgdx/libgdx/pull/2963","diff_url":"https://github.com/libgdx/libgdx/pull/2963.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2963.patch"},"body":"Updating to latest libGDX\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2963/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2962","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2962/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2962/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2962/events","html_url":"https://github.com/libgdx/libgdx/pull/2962","id":63278641,"number":2962,"title":"Added support for not flipping Y values in a TMX map.","user":{"login":"gjroelofs","id":398630,"avatar_url":"https://avatars2.githubusercontent.com/u/398630?v=4","gravatar_id":"","url":"https://api.github.com/users/gjroelofs","html_url":"https://github.com/gjroelofs","followers_url":"https://api.github.com/users/gjroelofs/followers","following_url":"https://api.github.com/users/gjroelofs/following{/other_user}","gists_url":"https://api.github.com/users/gjroelofs/gists{/gist_id}","starred_url":"https://api.github.com/users/gjroelofs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gjroelofs/subscriptions","organizations_url":"https://api.github.com/users/gjroelofs/orgs","repos_url":"https://api.github.com/users/gjroelofs/repos","events_url":"https://api.github.com/users/gjroelofs/events{/privacy}","received_events_url":"https://api.github.com/users/gjroelofs/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2015-03-20T18:26:00Z","updated_at":"2015-03-20T19:34:15Z","closed_at":"2015-03-20T19:34:15Z","author_association":"MEMBER","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2962","html_url":"https://github.com/libgdx/libgdx/pull/2962","diff_url":"https://github.com/libgdx/libgdx/pull/2962.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2962.patch"},"body":"As referenced in issue #2929 .\n\nWe ourselves have run into this usecase as well, as we use Tiled for creating meta information for maps.\n\nNow with added documentation on usecase.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2962/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2961","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2961/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2961/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2961/events","html_url":"https://github.com/libgdx/libgdx/pull/2961","id":63240067,"number":2961,"title":"libgdx-utils as 3rd party extension","user":{"login":"dermetfan","id":4956158,"avatar_url":"https://avatars1.githubusercontent.com/u/4956158?v=4","gravatar_id":"","url":"https://api.github.com/users/dermetfan","html_url":"https://github.com/dermetfan","followers_url":"https://api.github.com/users/dermetfan/followers","following_url":"https://api.github.com/users/dermetfan/following{/other_user}","gists_url":"https://api.github.com/users/dermetfan/gists{/gist_id}","starred_url":"https://api.github.com/users/dermetfan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dermetfan/subscriptions","organizations_url":"https://api.github.com/users/dermetfan/orgs","repos_url":"https://api.github.com/users/dermetfan/repos","events_url":"https://api.github.com/users/dermetfan/events{/privacy}","received_events_url":"https://api.github.com/users/dermetfan/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2015-03-20T14:37:20Z","updated_at":"2015-04-10T13:52:05Z","closed_at":"2015-04-10T08:06:49Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2961","html_url":"https://github.com/libgdx/libgdx/pull/2961","diff_url":"https://github.com/libgdx/libgdx/pull/2961.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2961.patch"},"body":"I'm hg user and don't trust my git skills enough to rebase #2945 into a single commit so here's a fresh PR.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2961/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2960","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2960/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2960/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2960/events","html_url":"https://github.com/libgdx/libgdx/issues/2960","id":63170380,"number":2960,"title":"BitmapFont doesn't support reading float values from .fnt files","user":{"login":"larrxu","id":2924315,"avatar_url":"https://avatars0.githubusercontent.com/u/2924315?v=4","gravatar_id":"","url":"https://api.github.com/users/larrxu","html_url":"https://github.com/larrxu","followers_url":"https://api.github.com/users/larrxu/followers","following_url":"https://api.github.com/users/larrxu/following{/other_user}","gists_url":"https://api.github.com/users/larrxu/gists{/gist_id}","starred_url":"https://api.github.com/users/larrxu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/larrxu/subscriptions","organizations_url":"https://api.github.com/users/larrxu/orgs","repos_url":"https://api.github.com/users/larrxu/repos","events_url":"https://api.github.com/users/larrxu/events{/privacy}","received_events_url":"https://api.github.com/users/larrxu/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2015-03-20T06:02:18Z","updated_at":"2017-03-06T19:07:34Z","closed_at":"2015-10-03T20:09:27Z","author_association":"NONE","body":"When reading a fnt file that contains float values instead of integers, BitmapFont crashes at line:\n\n```\nFile: BitmapFont.java\n973: int amount = Integer.parseInt(tokens.nextToken());\n```\n\nThis is a bug as nowadays many tools are generating fnt files with float values. For example:\n\n```\nchar id=43  x=1  y=248  width=17  height=18  xoffset=-3  yoffset=14  xadvance=12.7  page=0  chnl=0  letter=\"+\"\nkernings count=1703\nkerning first=34 second=42 amount=-0.5\n```\n\nPlease change to allow reading floats, or round to an integer.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2960/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2959","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2959/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2959/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2959/events","html_url":"https://github.com/libgdx/libgdx/issues/2959","id":62996610,"number":2959,"title":"[Enhancement] BitmapFont issues","user":{"login":"bachtrong43","id":6166994,"avatar_url":"https://avatars0.githubusercontent.com/u/6166994?v=4","gravatar_id":"","url":"https://api.github.com/users/bachtrong43","html_url":"https://github.com/bachtrong43","followers_url":"https://api.github.com/users/bachtrong43/followers","following_url":"https://api.github.com/users/bachtrong43/following{/other_user}","gists_url":"https://api.github.com/users/bachtrong43/gists{/gist_id}","starred_url":"https://api.github.com/users/bachtrong43/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bachtrong43/subscriptions","organizations_url":"https://api.github.com/users/bachtrong43/orgs","repos_url":"https://api.github.com/users/bachtrong43/repos","events_url":"https://api.github.com/users/bachtrong43/events{/privacy}","received_events_url":"https://api.github.com/users/bachtrong43/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2015-03-19T14:08:42Z","updated_at":"2015-12-19T05:11:07Z","closed_at":"2015-12-19T05:11:07Z","author_association":"NONE","body":"1) Can set the TextureFilter for BitmapFont which has separated TextureRegions in Skin.\n2) Unable to load BitmapFont which has multiple TextureRegions that were put on TextureAtlas. The reason in code of Skin: method getJsonLoader\n\n``` javascript\njson.setSerializer(BitmapFont.class, new ReadOnlySerializer<BitmapFont>() {\n            public BitmapFont read (Json json, JsonValue jsonData, Class type) {\n                String path = json.readValue(\"file\", String.class, jsonData);\n                int scaledSize = json.readValue(\"scaledSize\", int.class, -1, jsonData);\n                Boolean flip = json.readValue(\"flip\", Boolean.class, false, jsonData);\n                Boolean markupEnabled = json.readValue(\"markupEnabled\", Boolean.class, false, jsonData);\n\n                FileHandle fontFile = skinFile.parent().child(path);\n                if (!fontFile.exists()) fontFile = Gdx.files.internal(path);\n                if (!fontFile.exists()) throw new SerializationException(\"Font file not found: \" + fontFile);\n\n                // Use a region with the same name as the font, else use a PNG file in the same directory as the FNT file.\n                String regionName = fontFile.nameWithoutExtension();\n                try {\n                    BitmapFont font;\n                    TextureRegion region = skin.optional(regionName, TextureRegion.class);\n                    if (region != null)\n                        font = new BitmapFont(fontFile, region, flip);\n                    else {\n                        FileHandle imageFile = fontFile.parent().child(regionName + \".png\");\n                        if (imageFile.exists())\n                            font = new BitmapFont(fontFile, imageFile, flip);\n                        else\n                            font = new BitmapFont(fontFile, flip);\n                    }\n                    font.setMarkupEnabled(markupEnabled);\n                    // Scaled size is the desired cap height to scale the font to.\n                    if (scaledSize != -1) font.setScale(scaledSize / font.getCapHeight());\n                    return font;\n                } catch (RuntimeException ex) {\n                    throw new SerializationException(\"Error loading bitmap font: \" + fontFile, ex);\n                }\n            }\n        });\n```\n\nIf the BitmapFont font.fnt contains two images(with the name font1.png,font2,png), the above code will search the region or the image file with name \"font\".\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2959/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2958","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2958/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2958/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2958/events","html_url":"https://github.com/libgdx/libgdx/pull/2958","id":62983287,"number":2958,"title":"Added support for not flipping Y values in a TMX map.","user":{"login":"gjroelofs","id":398630,"avatar_url":"https://avatars2.githubusercontent.com/u/398630?v=4","gravatar_id":"","url":"https://api.github.com/users/gjroelofs","html_url":"https://github.com/gjroelofs","followers_url":"https://api.github.com/users/gjroelofs/followers","following_url":"https://api.github.com/users/gjroelofs/following{/other_user}","gists_url":"https://api.github.com/users/gjroelofs/gists{/gist_id}","starred_url":"https://api.github.com/users/gjroelofs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gjroelofs/subscriptions","organizations_url":"https://api.github.com/users/gjroelofs/orgs","repos_url":"https://api.github.com/users/gjroelofs/repos","events_url":"https://api.github.com/users/gjroelofs/events{/privacy}","received_events_url":"https://api.github.com/users/gjroelofs/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2015-03-19T13:20:47Z","updated_at":"2015-03-20T18:24:46Z","closed_at":"2015-03-20T18:21:39Z","author_association":"MEMBER","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2958","html_url":"https://github.com/libgdx/libgdx/pull/2958","diff_url":"https://github.com/libgdx/libgdx/pull/2958.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2958.patch"},"body":"As referenced in issue #2929 .\n\nWe ourselves have run into this usecase as well, as we use Tiled for creating meta information for maps.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2958/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2957","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2957/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2957/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2957/events","html_url":"https://github.com/libgdx/libgdx/issues/2957","id":62902816,"number":2957,"title":"TiledMapLoader with AssetManager","user":{"login":"mars3142","id":220423,"avatar_url":"https://avatars0.githubusercontent.com/u/220423?v=4","gravatar_id":"","url":"https://api.github.com/users/mars3142","html_url":"https://github.com/mars3142","followers_url":"https://api.github.com/users/mars3142/followers","following_url":"https://api.github.com/users/mars3142/following{/other_user}","gists_url":"https://api.github.com/users/mars3142/gists{/gist_id}","starred_url":"https://api.github.com/users/mars3142/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mars3142/subscriptions","organizations_url":"https://api.github.com/users/mars3142/orgs","repos_url":"https://api.github.com/users/mars3142/repos","events_url":"https://api.github.com/users/mars3142/events{/privacy}","received_events_url":"https://api.github.com/users/mars3142/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2015-03-19T07:30:35Z","updated_at":"2015-03-19T12:28:31Z","closed_at":"2015-03-19T12:28:31Z","author_association":"NONE","body":"As far as I can see, the **TmxMapLoader** isn't integrated into the AssetManager, but it implements **AsynchronousAssetLoader**. Why don't you add the loader into the AssetManager?\n\n``` java\n    public AssetManager (FileHandleResolver resolver) {\n        setLoader(BitmapFont.class, new BitmapFontLoader(resolver));\n        setLoader(Music.class, new MusicLoader(resolver));\n        setLoader(Pixmap.class, new PixmapLoader(resolver));\n        setLoader(Sound.class, new SoundLoader(resolver));\n        setLoader(TextureAtlas.class, new TextureAtlasLoader(resolver));\n        setLoader(Texture.class, new TextureLoader(resolver));\n        setLoader(Skin.class, new SkinLoader(resolver));\n        setLoader(ParticleEffect.class, new ParticleEffectLoader(resolver));\n        setLoader(com.badlogic.gdx.graphics.g3d.particles.ParticleEffect.class,\n            new com.badlogic.gdx.graphics.g3d.particles.ParticleEffectLoader(resolver));\n        setLoader(PolygonRegion.class, new PolygonRegionLoader(resolver));\n        setLoader(I18NBundle.class, new I18NBundleLoader(resolver));\n        setLoader(Model.class, \".g3dj\", new G3dModelLoader(new JsonReader(), resolver));\n        setLoader(Model.class, \".g3db\", new G3dModelLoader(new UBJsonReader(), resolver));\n        setLoader(Model.class, \".obj\", new ObjLoader(resolver));\n        executor = new AsyncExecutor(1);\n    }\n```\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2957/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2956","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2956/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2956/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2956/events","html_url":"https://github.com/libgdx/libgdx/issues/2956","id":62866060,"number":2956,"title":"VertexBufferObjectWithVAO not GWT compatible","user":{"login":"MobiDevelop","id":1095464,"avatar_url":"https://avatars2.githubusercontent.com/u/1095464?v=4","gravatar_id":"","url":"https://api.github.com/users/MobiDevelop","html_url":"https://github.com/MobiDevelop","followers_url":"https://api.github.com/users/MobiDevelop/followers","following_url":"https://api.github.com/users/MobiDevelop/following{/other_user}","gists_url":"https://api.github.com/users/MobiDevelop/gists{/gist_id}","starred_url":"https://api.github.com/users/MobiDevelop/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MobiDevelop/subscriptions","organizations_url":"https://api.github.com/users/MobiDevelop/orgs","repos_url":"https://api.github.com/users/MobiDevelop/repos","events_url":"https://api.github.com/users/MobiDevelop/events{/privacy}","received_events_url":"https://api.github.com/users/MobiDevelop/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2015-03-19T03:48:16Z","updated_at":"2015-03-19T04:19:22Z","closed_at":"2015-03-19T04:19:22Z","author_association":"OWNER","body":"This class is not compatible with GWT. Since it is used by Mesh, either this class or Mesh needs to be emulated in GWT, then it needs to be added as an include in the gdx.gwt.xml file. As it stands, this prevents html builds from completing.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2956/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}}],"meta":{"x-ratelimit-limit":"5000","x-ratelimit-remaining":"4935","x-ratelimit-reset":"1506844633","x-github-request-id":"87E4:110A:248724D:40CD915:59D09513","x-github-media-type":"github.squirrel-girl-preview","link":"<https://api.github.com/repositories/5373551/issues?state=all&page=66>; rel=\"next\", <https://api.github.com/repositories/5373551/issues?state=all&page=164>; rel=\"last\", <https://api.github.com/repositories/5373551/issues?state=all&page=1>; rel=\"first\", <https://api.github.com/repositories/5373551/issues?state=all&page=64>; rel=\"prev\"","etag":"\"f5f65fb2169ef224845c2822f8de21d1\"","status":"200 OK"}}
