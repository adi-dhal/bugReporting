{"data":[{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1935","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1935/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1935/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1935/events","html_url":"https://github.com/libgdx/libgdx/pull/1935","id":35010553,"number":1935,"title":"TiledMap uses ObjectMap, override equals/hashcode for GridPoint.","user":{"login":"aspic","id":788059,"avatar_url":"https://avatars1.githubusercontent.com/u/788059?v=4","gravatar_id":"","url":"https://api.github.com/users/aspic","html_url":"https://github.com/aspic","followers_url":"https://api.github.com/users/aspic/followers","following_url":"https://api.github.com/users/aspic/following{/other_user}","gists_url":"https://api.github.com/users/aspic/gists{/gist_id}","starred_url":"https://api.github.com/users/aspic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aspic/subscriptions","organizations_url":"https://api.github.com/users/aspic/orgs","repos_url":"https://api.github.com/users/aspic/repos","events_url":"https://api.github.com/users/aspic/events{/privacy}","received_events_url":"https://api.github.com/users/aspic/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2014-06-04T22:26:06Z","updated_at":"2014-06-14T00:38:00Z","closed_at":"2014-06-08T19:27:16Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/1935","html_url":"https://github.com/libgdx/libgdx/pull/1935","diff_url":"https://github.com/libgdx/libgdx/pull/1935.diff","patch_url":"https://github.com/libgdx/libgdx/pull/1935.patch"},"body":"I am writing this openstreetmap extension for Libgdx. However I ran into memory problems when using the TiledMap-API. When creating a new layer, the layer immediately allocates Cell[width][height]. For potentially large maps this is problematic (gives JVM out of memory exception). This solution uses ObjectMap instead of allocating the arrays. However, I also had to override equals/hashcode for GridPoint (which is used as the key).\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1935/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1934","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1934/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1934/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1934/events","html_url":"https://github.com/libgdx/libgdx/issues/1934","id":34969574,"number":1934,"title":"Color markup language does not work for Scene2D Labels","user":{"login":"JesseTG","id":1175189,"avatar_url":"https://avatars0.githubusercontent.com/u/1175189?v=4","gravatar_id":"","url":"https://api.github.com/users/JesseTG","html_url":"https://github.com/JesseTG","followers_url":"https://api.github.com/users/JesseTG/followers","following_url":"https://api.github.com/users/JesseTG/following{/other_user}","gists_url":"https://api.github.com/users/JesseTG/gists{/gist_id}","starred_url":"https://api.github.com/users/JesseTG/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JesseTG/subscriptions","organizations_url":"https://api.github.com/users/JesseTG/orgs","repos_url":"https://api.github.com/users/JesseTG/repos","events_url":"https://api.github.com/users/JesseTG/events{/privacy}","received_events_url":"https://api.github.com/users/JesseTG/received_events","type":"User","site_admin":false},"labels":[{"id":11336980,"url":"https://api.github.com/repos/libgdx/libgdx/labels/bug","name":"bug","color":"fc2929","default":true},{"id":89047068,"url":"https://api.github.com/repos/libgdx/libgdx/labels/scene2d","name":"scene2d","color":"ff00ff","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":13,"created_at":"2014-06-04T15:26:25Z","updated_at":"2014-10-08T19:48:32Z","closed_at":"2014-09-30T23:48:44Z","author_association":"CONTRIBUTOR","body":"Apparently it's because `Label` wipes out the color specified in the markup language with its own `Color` property.  The text _does_ get parsed (i.e. `[RED]velvet` turns into `velvet`), but not recolored.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1934/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1933","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1933/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1933/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1933/events","html_url":"https://github.com/libgdx/libgdx/issues/1933","id":34932162,"number":1933,"title":"box2d a little puzzled ","user":{"login":"luxiaoming","id":5537365,"avatar_url":"https://avatars1.githubusercontent.com/u/5537365?v=4","gravatar_id":"","url":"https://api.github.com/users/luxiaoming","html_url":"https://github.com/luxiaoming","followers_url":"https://api.github.com/users/luxiaoming/followers","following_url":"https://api.github.com/users/luxiaoming/following{/other_user}","gists_url":"https://api.github.com/users/luxiaoming/gists{/gist_id}","starred_url":"https://api.github.com/users/luxiaoming/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/luxiaoming/subscriptions","organizations_url":"https://api.github.com/users/luxiaoming/orgs","repos_url":"https://api.github.com/users/luxiaoming/repos","events_url":"https://api.github.com/users/luxiaoming/events{/privacy}","received_events_url":"https://api.github.com/users/luxiaoming/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-06-04T06:04:44Z","updated_at":"2014-06-04T06:06:21Z","closed_at":"2014-06-04T06:06:21Z","author_association":"NONE","body":"box2d inside boby (such as squares) after a collision with an object will rotate, why turn the process will not square it? Corners are changing, how this handled?\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1933/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1932","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1932/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1932/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1932/events","html_url":"https://github.com/libgdx/libgdx/issues/1932","id":34924729,"number":1932,"title":"Cannot run android project with external dependencies from Eclipse","user":{"login":"btd-f-lago","id":6994255,"avatar_url":"https://avatars1.githubusercontent.com/u/6994255?v=4","gravatar_id":"","url":"https://api.github.com/users/btd-f-lago","html_url":"https://github.com/btd-f-lago","followers_url":"https://api.github.com/users/btd-f-lago/followers","following_url":"https://api.github.com/users/btd-f-lago/following{/other_user}","gists_url":"https://api.github.com/users/btd-f-lago/gists{/gist_id}","starred_url":"https://api.github.com/users/btd-f-lago/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/btd-f-lago/subscriptions","organizations_url":"https://api.github.com/users/btd-f-lago/orgs","repos_url":"https://api.github.com/users/btd-f-lago/repos","events_url":"https://api.github.com/users/btd-f-lago/events{/privacy}","received_events_url":"https://api.github.com/users/btd-f-lago/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2014-06-04T03:10:12Z","updated_at":"2014-06-08T19:28:36Z","closed_at":"2014-06-08T19:28:36Z","author_association":"CONTRIBUTOR","body":"Steps:\n1) Create an empty libgdx gradle projectset.\n2) Add an external dependency to \"core\" project (es. gson 2.2.4) EDIT: From maven central repo, i.e.: compile \"com.google.code.gson:gson:2.2.4\"\n3) Use any functionality of gson inside core project\n4) From eclipse, run android project by right click on android project->run as \n\nApplication will crash when trying to load gson bytecode which does not get included in the apk.\n\nThis does not happen for the desktop version which works correctly even from eclipse.\nRunning the android probject with gradle from the command line works perfectly.\n\nThis might probably be an issue with eclipse gradle plugin rather than libGDX though.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1932/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1931","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1931/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1931/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1931/events","html_url":"https://github.com/libgdx/libgdx/issues/1931","id":34924489,"number":1931,"title":"LibGDX RoboVM Package for .ipa crashes after splash screen ","user":{"login":"PhuDaiSu","id":1661921,"avatar_url":"https://avatars0.githubusercontent.com/u/1661921?v=4","gravatar_id":"","url":"https://api.github.com/users/PhuDaiSu","html_url":"https://github.com/PhuDaiSu","followers_url":"https://api.github.com/users/PhuDaiSu/followers","following_url":"https://api.github.com/users/PhuDaiSu/following{/other_user}","gists_url":"https://api.github.com/users/PhuDaiSu/gists{/gist_id}","starred_url":"https://api.github.com/users/PhuDaiSu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/PhuDaiSu/subscriptions","organizations_url":"https://api.github.com/users/PhuDaiSu/orgs","repos_url":"https://api.github.com/users/PhuDaiSu/repos","events_url":"https://api.github.com/users/PhuDaiSu/events{/privacy}","received_events_url":"https://api.github.com/users/PhuDaiSu/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2014-06-04T03:02:39Z","updated_at":"2014-06-08T19:36:13Z","closed_at":"2014-06-08T19:36:13Z","author_association":"NONE","body":"I have an libGDX iOS application that works perfectly when testing in Eclipse via Run as iOS Device or Run as Simulator. However, when I use RoboVM Tools -> Package for App Store to get an .IPA file that I install on my iPhone, it crashes after the libGDX splash screen.\n\nIt isn't a problem with provisionals or certificates since my Run Configurations are exactly the same as the options I used to export.\n\nThis problem seems to be pretty common after gradle build, but I have not found a solution yet.\n\nI'm using the last LibGDX version (1.1.0), and the last RoboVM version (0.0.13). My iPhone 5 with iOS 7.1.1\n\nThanks!!!\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1931/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1930","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1930/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1930/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1930/events","html_url":"https://github.com/libgdx/libgdx/issues/1930","id":34922579,"number":1930,"title":"Most recent Timer fix seems to break lifecyle","user":{"login":"skunktrading","id":6710255,"avatar_url":"https://avatars0.githubusercontent.com/u/6710255?v=4","gravatar_id":"","url":"https://api.github.com/users/skunktrading","html_url":"https://github.com/skunktrading","followers_url":"https://api.github.com/users/skunktrading/followers","following_url":"https://api.github.com/users/skunktrading/following{/other_user}","gists_url":"https://api.github.com/users/skunktrading/gists{/gist_id}","starred_url":"https://api.github.com/users/skunktrading/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/skunktrading/subscriptions","organizations_url":"https://api.github.com/users/skunktrading/orgs","repos_url":"https://api.github.com/users/skunktrading/repos","events_url":"https://api.github.com/users/skunktrading/events{/privacy}","received_events_url":"https://api.github.com/users/skunktrading/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-06-04T02:10:30Z","updated_at":"2014-08-28T15:43:43Z","closed_at":"2014-06-08T19:38:27Z","author_association":"CONTRIBUTOR","body":"https://github.com/libgdx/libgdx/commit/da8fb9e108abdf593f02258f0b3f52093124c937 seems to break the normal lifecycle handling of the Timer.\nIf you add a trivial Task to an application (I tested using lwjgl)\n\n```\nTimer.schedule(new Task() {\n@Override\npublic void run() {\nGdx.app.error(\"bug\", \"task::run\");\n}\n}, 1, 1);\n```\n\nthen cause the application to pause() by clicking on another window, then resume the app by clicking on the app window, you will see that the task is no longer running. Removing checkStatics() makes the Timer behave correctly again.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1930/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1929","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1929/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1929/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1929/events","html_url":"https://github.com/libgdx/libgdx/pull/1929","id":34887870,"number":1929,"title":"A new extension for AI with FSM and message handling ","user":{"login":"davebaol","id":2366334,"avatar_url":"https://avatars3.githubusercontent.com/u/2366334?v=4","gravatar_id":"","url":"https://api.github.com/users/davebaol","html_url":"https://github.com/davebaol","followers_url":"https://api.github.com/users/davebaol/followers","following_url":"https://api.github.com/users/davebaol/following{/other_user}","gists_url":"https://api.github.com/users/davebaol/gists{/gist_id}","starred_url":"https://api.github.com/users/davebaol/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davebaol/subscriptions","organizations_url":"https://api.github.com/users/davebaol/orgs","repos_url":"https://api.github.com/users/davebaol/repos","events_url":"https://api.github.com/users/davebaol/events{/privacy}","received_events_url":"https://api.github.com/users/davebaol/received_events","type":"User","site_admin":false},"labels":[{"id":11336982,"url":"https://api.github.com/repos/libgdx/libgdx/labels/enhancement","name":"enhancement","color":"84b6eb","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":27,"created_at":"2014-06-03T17:55:59Z","updated_at":"2014-06-12T05:47:51Z","closed_at":"2014-06-09T10:13:30Z","author_association":"MEMBER","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/1929","html_url":"https://github.com/libgdx/libgdx/pull/1929","diff_url":"https://github.com/libgdx/libgdx/pull/1929.diff","patch_url":"https://github.com/libgdx/libgdx/pull/1929.patch"},"body":"This new extension should contain anything AI related. A good candidate is https://github.com/libgdx/libgdx/pull/575.\nFor now I've implemented generic state machine and message handling having in mind both design and performance. I'm going to post documentation here very soon. \nAlso, I'm currently working on steering behaviors.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1929/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1928","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1928/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1928/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1928/events","html_url":"https://github.com/libgdx/libgdx/pull/1928","id":34882977,"number":1928,"title":"particles3d","user":{"login":"lordjone","id":6410722,"avatar_url":"https://avatars0.githubusercontent.com/u/6410722?v=4","gravatar_id":"","url":"https://api.github.com/users/lordjone","html_url":"https://github.com/lordjone","followers_url":"https://api.github.com/users/lordjone/followers","following_url":"https://api.github.com/users/lordjone/following{/other_user}","gists_url":"https://api.github.com/users/lordjone/gists{/gist_id}","starred_url":"https://api.github.com/users/lordjone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lordjone/subscriptions","organizations_url":"https://api.github.com/users/lordjone/orgs","repos_url":"https://api.github.com/users/lordjone/repos","events_url":"https://api.github.com/users/lordjone/events{/privacy}","received_events_url":"https://api.github.com/users/lordjone/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":18,"created_at":"2014-06-03T16:59:53Z","updated_at":"2014-06-21T13:42:49Z","closed_at":"2014-06-09T10:08:39Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/1928","html_url":"https://github.com/libgdx/libgdx/pull/1928","diff_url":"https://github.com/libgdx/libgdx/pull/1928.diff","patch_url":"https://github.com/libgdx/libgdx/pull/1928.patch"},"body":"Doc complete check it out\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1928/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1927","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1927/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1927/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1927/events","html_url":"https://github.com/libgdx/libgdx/pull/1927","id":34867699,"number":1927,"title":"Hiero: add ability to change order of effects","user":{"login":"alexander-mironov","id":1929058,"avatar_url":"https://avatars2.githubusercontent.com/u/1929058?v=4","gravatar_id":"","url":"https://api.github.com/users/alexander-mironov","html_url":"https://github.com/alexander-mironov","followers_url":"https://api.github.com/users/alexander-mironov/followers","following_url":"https://api.github.com/users/alexander-mironov/following{/other_user}","gists_url":"https://api.github.com/users/alexander-mironov/gists{/gist_id}","starred_url":"https://api.github.com/users/alexander-mironov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexander-mironov/subscriptions","organizations_url":"https://api.github.com/users/alexander-mironov/orgs","repos_url":"https://api.github.com/users/alexander-mironov/repos","events_url":"https://api.github.com/users/alexander-mironov/events{/privacy}","received_events_url":"https://api.github.com/users/alexander-mironov/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2014-06-03T14:20:40Z","updated_at":"2014-06-13T16:47:12Z","closed_at":"2014-06-03T14:25:39Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/1927","html_url":"https://github.com/libgdx/libgdx/pull/1927","diff_url":"https://github.com/libgdx/libgdx/pull/1927.diff","patch_url":"https://github.com/libgdx/libgdx/pull/1927.patch"},"body":"For now there is no way to change order of effects but deleting them and then recreating in a new order. This pull tries to fix the situation.\n![ordering](https://cloud.githubusercontent.com/assets/1929058/3161219/97bb123c-eb29-11e3-8bf2-0ca8668c7b6a.PNG)\n\nNote: the right panel should get some more horizontal space, but I was unable to achieve this (I'm not familiar with Swing). Please fix it.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1927/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1926","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1926/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1926/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1926/events","html_url":"https://github.com/libgdx/libgdx/issues/1926","id":34745668,"number":1926,"title":"Drawing stages in frame buffers results in improper rendering","user":{"login":"nhydock","id":316728,"avatar_url":"https://avatars0.githubusercontent.com/u/316728?v=4","gravatar_id":"","url":"https://api.github.com/users/nhydock","html_url":"https://github.com/nhydock","followers_url":"https://api.github.com/users/nhydock/followers","following_url":"https://api.github.com/users/nhydock/following{/other_user}","gists_url":"https://api.github.com/users/nhydock/gists{/gist_id}","starred_url":"https://api.github.com/users/nhydock/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nhydock/subscriptions","organizations_url":"https://api.github.com/users/nhydock/orgs","repos_url":"https://api.github.com/users/nhydock/repos","events_url":"https://api.github.com/users/nhydock/events{/privacy}","received_events_url":"https://api.github.com/users/nhydock/received_events","type":"User","site_admin":false},"labels":[{"id":11336980,"url":"https://api.github.com/repos/libgdx/libgdx/labels/bug","name":"bug","color":"fc2929","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2014-06-02T04:30:41Z","updated_at":"2016-05-05T19:03:04Z","closed_at":"2014-06-02T17:50:09Z","author_association":"NONE","body":"In the process of creating my frame buffers, so I may use GLSL shaders to perform blur behind UI elements, I've encountered a problem where transparent actors in a stage(s) end up overlapping when rendering to a frame buffer.  \n\nFor some reason, the actors will completely crop away what's behind them instead of multiplying properly when they're rendered within a frame buffer, like in this image\n\n![screenshot - 06022014 - 12 21 01 am](https://cloud.githubusercontent.com/assets/316728/3143886/7a015c72-ea0e-11e3-9132-bd31dc610bfc.png)\n\nWhen rendering without being wrapped into a frame buffer, the ui renders as expected.\n\n![screenshot - 06022014 - 12 20 22 am](https://cloud.githubusercontent.com/assets/316728/3143887/7b9c4466-ea0e-11e3-83a1-dd1a5c142c56.png)\n\nFrom what I see here in my testing, it only appears to be happening with stacked Table elements with backgrounds set to a Drawable.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1926/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1925","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1925/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1925/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1925/events","html_url":"https://github.com/libgdx/libgdx/issues/1925","id":34732403,"number":1925,"title":"Unable to build without an internet connection","user":{"login":"n3m6","id":662255,"avatar_url":"https://avatars1.githubusercontent.com/u/662255?v=4","gravatar_id":"","url":"https://api.github.com/users/n3m6","html_url":"https://github.com/n3m6","followers_url":"https://api.github.com/users/n3m6/followers","following_url":"https://api.github.com/users/n3m6/following{/other_user}","gists_url":"https://api.github.com/users/n3m6/gists{/gist_id}","starred_url":"https://api.github.com/users/n3m6/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/n3m6/subscriptions","organizations_url":"https://api.github.com/users/n3m6/orgs","repos_url":"https://api.github.com/users/n3m6/repos","events_url":"https://api.github.com/users/n3m6/events{/privacy}","received_events_url":"https://api.github.com/users/n3m6/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2014-06-01T17:17:50Z","updated_at":"2014-06-02T10:25:06Z","closed_at":"2014-06-02T10:25:06Z","author_association":"NONE","body":"Unable to build without an internet connection. \n\nError:A problem occurred configuring root project 'ElectricRain'.\n\n> Could not resolve all dependencies for configuration ':classpath'.\n> Could not resolve com.android.tools.build:gradle:0.10+.\n>      Required by:\n>          :ElectricRain:unspecified\n>       > Failed to list versions for com.android.tools.build:gradle.\n>          > Could not list versions using M2 pattern 'http://repo1.maven.org/maven2/[organisation]/[module]/[revision]/[artifact]-[revision](-[classifier]).[ext]'.\n>             > Could not GET 'http://repo1.maven.org/maven2/com/android/tools/build/gradle/'.\n>                > repo1.maven.org\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1925/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1924","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1924/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1924/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1924/events","html_url":"https://github.com/libgdx/libgdx/issues/1924","id":34727104,"number":1924,"title":"ShapeRenderer throws strange exception on android","user":{"login":"macbury","id":110908,"avatar_url":"https://avatars0.githubusercontent.com/u/110908?v=4","gravatar_id":"","url":"https://api.github.com/users/macbury","html_url":"https://github.com/macbury","followers_url":"https://api.github.com/users/macbury/followers","following_url":"https://api.github.com/users/macbury/following{/other_user}","gists_url":"https://api.github.com/users/macbury/gists{/gist_id}","starred_url":"https://api.github.com/users/macbury/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/macbury/subscriptions","organizations_url":"https://api.github.com/users/macbury/orgs","repos_url":"https://api.github.com/users/macbury/repos","events_url":"https://api.github.com/users/macbury/events{/privacy}","received_events_url":"https://api.github.com/users/macbury/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-06-01T12:01:29Z","updated_at":"2014-06-01T12:02:56Z","closed_at":"2014-06-01T12:02:56Z","author_association":"NONE","body":"Phone Nexus 4, On desktop working well:\n\n```\n06-01 13:59:34.581    8116-8145/de.macbury.zanbox.android A/art﹕ art/runtime/check_jni.cc:64] JNI DETECTED ERROR IN APPLICATION: capacity must be greater than 0: 0\n06-01 13:59:34.581    8116-8145/de.macbury.zanbox.android A/art﹕ art/runtime/check_jni.cc:64]     in call to NewDirectByteBuffer\n06-01 13:59:34.581    8116-8145/de.macbury.zanbox.android A/art﹕ art/runtime/check_jni.cc:64]     from java.nio.ByteBuffer com.badlogic.gdx.utils.BufferUtils.newDisposableByteBuffer(int)\n06-01 13:59:34.581    8116-8145/de.macbury.zanbox.android A/art﹕ art/runtime/check_jni.cc:64] \"GLThread 1137\" prio=5 tid=14 Runnable\n06-01 13:59:34.581    8116-8145/de.macbury.zanbox.android A/art﹕ art/runtime/check_jni.cc:64]   | group=\"main\" sCount=0 dsCount=0 obj=0x64dfcdf0 self=0x44209c30\n06-01 13:59:34.581    8116-8145/de.macbury.zanbox.android A/art﹕ art/runtime/check_jni.cc:64]   | sysTid=8145 nice=0 cgrp=apps sched=0/0 handle=0x44217008\n06-01 13:59:34.581    8116-8145/de.macbury.zanbox.android A/art﹕ art/runtime/check_jni.cc:64]   | state=R schedstat=( 0 0 0 ) utm=21 stm=7 core=2 HZ=100\n06-01 13:59:34.581    8116-8145/de.macbury.zanbox.android A/art﹕ art/runtime/check_jni.cc:64]   | stack=0x487e4000-0x487e8000 stackSize=1040KB\n06-01 13:59:34.581    8116-8145/de.macbury.zanbox.android A/art﹕ art/runtime/check_jni.cc:64]   native: art::Thread::DumpStack(std::ostream&) const+87 [0x417dbedc] (libart.so)\n06-01 13:59:34.581    8116-8145/de.macbury.zanbox.android A/art﹕ art/runtime/check_jni.cc:64]   native: ??? [0x4168983e] (libart.so)\n06-01 13:59:34.581    8116-8145/de.macbury.zanbox.android A/art﹕ art/runtime/check_jni.cc:64]   native: art::JniAbortF(char const*, char const*, ...)+51 [0x4168a1f4] (libart.so)\n06-01 13:59:34.581    8116-8145/de.macbury.zanbox.android A/art﹕ art/runtime/check_jni.cc:64]   native: ??? [0x416953e4] (libart.so)\n06-01 13:59:34.581    8116-8145/de.macbury.zanbox.android A/art﹕ art/runtime/check_jni.cc:64]   native: Java_com_badlogic_gdx_utils_BufferUtils_newDisposableByteBuffer+44 [0x487b80d8] (libgdx.so)\n06-01 13:59:34.581    8116-8145/de.macbury.zanbox.android A/art﹕ art/runtime/check_jni.cc:64]   at com.badlogic.gdx.utils.BufferUtils.newDisposableByteBuffer(Native method)\n06-01 13:59:34.581    8116-8145/de.macbury.zanbox.android A/art﹕ art/runtime/check_jni.cc:64]   at com.badlogic.gdx.utils.BufferUtils.newUnsafeByteBuffer(BufferUtils.java:517)\n06-01 13:59:34.581    8116-8145/de.macbury.zanbox.android A/art﹕ art/runtime/check_jni.cc:64]   at com.badlogic.gdx.graphics.glutils.IndexBufferObject.<init>(IndexBufferObject.java:64)\n06-01 13:59:34.581    8116-8145/de.macbury.zanbox.android A/art﹕ art/runtime/check_jni.cc:64]   at com.badlogic.gdx.graphics.Mesh.<init>(Mesh.java:88)\n06-01 13:59:34.581    8116-8145/de.macbury.zanbox.android A/art﹕ art/runtime/check_jni.cc:64]   at com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer20.<init>(ImmediateModeRenderer20.java:65)\n06-01 13:59:34.581    8116-8145/de.macbury.zanbox.android A/art﹕ art/runtime/check_jni.cc:64]   at com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer20.<init>(ImmediateModeRenderer20.java:55)\n06-01 13:59:34.581    8116-8145/de.macbury.zanbox.android A/art﹕ art/runtime/check_jni.cc:64]   at com.badlogic.gdx.graphics.glutils.ShapeRenderer.<init>(ShapeRenderer.java:114)\n06-01 13:59:34.581    8116-8145/de.macbury.zanbox.android A/art﹕ art/runtime/check_jni.cc:64]   at com.badlogic.gdx.graphics.glutils.ShapeRenderer.<init>(ShapeRenderer.java:110)\n06-01 13:59:34.581    8116-8145/de.macbury.zanbox.android A/art﹕ art/runtime/check_jni.cc:64]   at de.macbury.zanbox.level.GameLevel.<init>(GameLevel.java:55)\n06-01 13:59:34.581    8116-8145/de.macbury.zanbox.android A/art﹕ art/runtime/check_jni.cc:64]   at de.macbury.zanbox.screens.GameScreen.<init>(GameScreen.java:24)\n06-01 13:59:34.581    8116-8145/de.macbury.zanbox.android A/art﹕ art/runtime/check_jni.cc:64]   at de.macbury.zanbox.managers.Screens.showGameScreen(Screens.java:29)\n06-01 13:59:34.581    8116-8145/de.macbury.zanbox.android A/art﹕ art/runtime/check_jni.cc:64]   at de.macbury.zanbox.screens.LoadingScreen.render(LoadingScreen.java:19)\n06-01 13:59:34.581    8116-8145/de.macbury.zanbox.android A/art﹕ art/runtime/check_jni.cc:64]   at com.badlogic.gdx.Game.render(Game.java:46)\n06-01 13:59:34.581    8116-8145/de.macbury.zanbox.android A/art﹕ art/runtime/check_jni.cc:64]   at de.macbury.zanbox.Zanbox.render(Zanbox.java:53)\n06-01 13:59:34.581    8116-8145/de.macbury.zanbox.android A/art﹕ art/runtime/check_jni.cc:64]   at com.badlogic.gdx.backends.android.AndroidGraphics.onDrawFrame(AndroidGraphics.java:414)\n06-01 13:59:34.581    8116-8145/de.macbury.zanbox.android A/art﹕ art/runtime/check_jni.cc:64]   at android.opengl.GLSurfaceView$GLThread.guardedRun(GLSurfaceView.java:1523)\n06-01 13:59:34.581    8116-8145/de.macbury.zanbox.android A/art﹕ art/runtime/check_jni.cc:64]   at android.opengl.GLSurfaceView$GLThread.run(GLSurfaceView.java:1240)\n06-01 13:59:34.581    8116-8145/de.macbury.zanbox.android A/art﹕ art/runtime/check_jni.cc:64]\n06-01 13:59:34.881    8116-8145/de.macbury.zanbox.android A/art﹕ art/runtime/runtime.cc:203] Runtime aborting...\n06-01 13:59:34.881    8116-8145/de.macbury.zanbox.android A/art﹕ art/runtime/runtime.cc:203] Aborting thread:\n06-01 13:59:34.881    8116-8145/de.macbury.zanbox.android A/art﹕ art/runtime/runtime.cc:203] \"GLThread 1137\" prio=5 tid=14 Runnable\n06-01 13:59:34.881    8116-8145/de.macbury.zanbox.android A/art﹕ art/runtime/runtime.cc:203]   | group=\"main\" sCount=0 dsCount=0 obj=0x64dfcdf0 self=0x44209c30\n06-01 13:59:34.881    8116-8145/de.macbury.zanbox.android A/art﹕ art/runtime/runtime.cc:203]   | sysTid=8145 nice=0 cgrp=apps sched=0/0 handle=0x44217008\n06-01 13:59:34.881    8116-8145/de.macbury.zanbox.android A/art﹕ art/runtime/runtime.cc:203]   | state=R schedstat=( 0 0 0 ) utm=22 stm=9 core=2 HZ=100\n06-01 13:59:34.881    8116-8145/de.macbury.zanbox.android A/art﹕ art/runtime/runtime.cc:203]   | stack=0x487e4000-0x487e8000 stackSize=1040KB\n06-01 13:59:34.881    8116-8145/de.macbury.zanbox.android A/art﹕ art/runtime/runtime.cc:203]   native: art::Thread::DumpStack(std::ostream&) const+87 [0x417dbedc] (libart.so)\n06-01 13:59:34.881    8116-8145/de.macbury.zanbox.android A/art﹕ art/runtime/runtime.cc:203]   native: ??? [0x417d406c] (libart.so)\n06-01 13:59:34.881    8116-8145/de.macbury.zanbox.android A/art﹕ art/runtime/runtime.cc:203]   native: art::Runtime::Abort()+79 [0x417d45fc] (libart.so)\n06-01 13:59:34.881    8116-8145/de.macbury.zanbox.android A/art﹕ art/runtime/runtime.cc:203]   native: art::LogMessage::~LogMessage()+505 [0x4168193a] (libart.so)\n06-01 13:59:34.881    8116-8145/de.macbury.zanbox.android A/art﹕ art/runtime/runtime.cc:203]   native: ??? [0x41689a5c] (libart.so)\n06-01 13:59:34.881    8116-8145/de.macbury.zanbox.android A/art﹕ art/runtime/runtime.cc:203]   native: art::JniAbortF(char const*, char const*, ...)+51 [0x4168a1f4] (libart.so)\n06-01 13:59:34.881    8116-8145/de.macbury.zanbox.android A/art﹕ art/runtime/runtime.cc:203]   native: ??? [0x416953e4] (libart.so)\n06-01 13:59:34.881    8116-8145/de.macbury.zanbox.android A/art﹕ art/runtime/runtime.cc:203]   native: Java_com_badlogic_gdx_utils_BufferUtils_newDisposableByteBuffer+44 [0x487b80d8] (libgdx.so)\n06-01 13:59:34.881    8116-8145/de.macbury.zanbox.android A/art﹕ art/runtime/runtime.cc:203]   at com.badlogic.gdx.utils.BufferUtils.newDisposableByteBuffer(Native method)\n06-01 13:59:34.881    8116-8145/de.macbury.zanbox.android A/art﹕ art/runtime/runtime.cc:203]   at com.badlogic.gdx.utils.BufferUtils.newUnsafeByteBuffer(BufferUtils.java:517)\n06-01 13:59:34.881    8116-8145/de.macbury.zanbox.android A/art﹕ art/runtime/runtime.cc:203]   at com.badlogic.gdx.graphics.glutils.IndexBufferObject.<init>(IndexBufferObject.java:64)\n06-01 13:59:34.881    8116-8145/de.macbury.zanbox.android A/art﹕ art/runtime/runtime.cc:203]   at com.badlogic.gdx.graphics.Mesh.<init>(Mesh.java:88)\n06-01 13:59:34.881    8116-8145/de.macbury.zanbox.android A/art﹕ art/runtime/runtime.cc:203]   at com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer20.<init>(ImmediateModeRenderer20.java:65)\n06-01 13:59:34.881    8116-8145/de.macbury.zanbox.android A/art﹕ art/runtime/runtime.cc:203]   at com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer20.<init>(ImmediateModeRenderer20.java:55)\n```\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1924/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1923","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1923/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1923/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1923/events","html_url":"https://github.com/libgdx/libgdx/issues/1923","id":34725127,"number":1923,"title":"Add a support for unit tests on module Core","user":{"login":"DanielChesters","id":291102,"avatar_url":"https://avatars3.githubusercontent.com/u/291102?v=4","gravatar_id":"","url":"https://api.github.com/users/DanielChesters","html_url":"https://github.com/DanielChesters","followers_url":"https://api.github.com/users/DanielChesters/followers","following_url":"https://api.github.com/users/DanielChesters/following{/other_user}","gists_url":"https://api.github.com/users/DanielChesters/gists{/gist_id}","starred_url":"https://api.github.com/users/DanielChesters/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DanielChesters/subscriptions","organizations_url":"https://api.github.com/users/DanielChesters/orgs","repos_url":"https://api.github.com/users/DanielChesters/repos","events_url":"https://api.github.com/users/DanielChesters/events{/privacy}","received_events_url":"https://api.github.com/users/DanielChesters/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2014-06-01T09:33:40Z","updated_at":"2014-06-01T09:54:23Z","closed_at":"2014-06-01T09:41:14Z","author_association":"NONE","body":"Hi,\n\nI started a game project a few days ago and I tried to add unit tests on my project with TestNG (but I can use Junit instead, I am not closed). Currently, I tried with Mockito for mock, but I block about GL context.\n\nWhen I search about unit test with libgdx project, I found this: http://stackoverflow.com/questions/22984129/unit-testing-of-libgdx-using-classes\n\nMaybe we can have a support for simple unit test without have to run application for each test.\n\nThanks\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1923/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1922","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1922/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1922/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1922/events","html_url":"https://github.com/libgdx/libgdx/pull/1922","id":34719941,"number":1922,"title":"make particle effect loading less restrictive when using an atlas image","user":{"login":"FredGithub","id":1611174,"avatar_url":"https://avatars1.githubusercontent.com/u/1611174?v=4","gravatar_id":"","url":"https://api.github.com/users/FredGithub","html_url":"https://github.com/FredGithub","followers_url":"https://api.github.com/users/FredGithub/followers","following_url":"https://api.github.com/users/FredGithub/following{/other_user}","gists_url":"https://api.github.com/users/FredGithub/gists{/gist_id}","starred_url":"https://api.github.com/users/FredGithub/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/FredGithub/subscriptions","organizations_url":"https://api.github.com/users/FredGithub/orgs","repos_url":"https://api.github.com/users/FredGithub/repos","events_url":"https://api.github.com/users/FredGithub/events{/privacy}","received_events_url":"https://api.github.com/users/FredGithub/received_events","type":"User","site_admin":false},"labels":[{"id":11336982,"url":"https://api.github.com/repos/libgdx/libgdx/labels/enhancement","name":"enhancement","color":"84b6eb","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2014-06-01T02:19:16Z","updated_at":"2014-06-13T16:47:13Z","closed_at":"2014-06-02T13:33:16Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/1922","html_url":"https://github.com/libgdx/libgdx/pull/1922","diff_url":"https://github.com/libgdx/libgdx/pull/1922.diff","patch_url":"https://github.com/libgdx/libgdx/pull/1922.patch"},"body":"The particle loading system strips the Image Path, keeping only the filename without the extension. But when using an atlas, you might wanna use an image with a name such as \"game/particle\". But this is impossible, even if I manually change the particle file made by the particle editor and put \"game/particle\" as the image path, the loading system will strip it to \"particle\", and throw an exception of a missing atlas image.\n\nThis is quite annoying, as I do not wish to change my atlas hierarchy. This commit is a simple but dirty fix for this, allowing you to pass a prefix to be added to the image name. In the example above, you'd pass \"game\" as a prefix.\n\nA real fix would be to add real atlas support directly in the particle editor, allowing you to load an atlas, and choose an image from it. I'd be glad to contribute this, but before spending any more time on it, I wanna know what you guys think\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1922/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1921","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1921/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1921/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1921/events","html_url":"https://github.com/libgdx/libgdx/issues/1921","id":34705825,"number":1921,"title":"Just tried to create a new project.","user":{"login":"dmg46664","id":1296603,"avatar_url":"https://avatars0.githubusercontent.com/u/1296603?v=4","gravatar_id":"","url":"https://api.github.com/users/dmg46664","html_url":"https://github.com/dmg46664","followers_url":"https://api.github.com/users/dmg46664/followers","following_url":"https://api.github.com/users/dmg46664/following{/other_user}","gists_url":"https://api.github.com/users/dmg46664/gists{/gist_id}","starred_url":"https://api.github.com/users/dmg46664/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dmg46664/subscriptions","organizations_url":"https://api.github.com/users/dmg46664/orgs","repos_url":"https://api.github.com/users/dmg46664/repos","events_url":"https://api.github.com/users/dmg46664/events{/privacy}","received_events_url":"https://api.github.com/users/dmg46664/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2014-05-31T12:53:29Z","updated_at":"2014-05-31T13:32:35Z","closed_at":"2014-05-31T13:32:35Z","author_association":"NONE","body":"For desktop, android & ios.\nBullet, freetype, controllers, tools selected.\nUnder advanced selected IDEA.\n\nError:\n\nGenerating app in C:\\Users\\daniel\\workspace\\bitfuel\nExecuting 'C:\\Users\\daniel\\workspace\\bitfuel/gradlew.bat clean --no-daemon idea'\nDownloading http://services.gradle.org/distributions/gradle-1.11-all.zip\nnUnzipping C:\\Users\\daniel.gradle\\wrapper\\dists\\gradle-1.11-all\\7qd8qq8te5j4f5q9aaei3gh3lj\\gradle-1.11-all.zip to C:\\Users\\daniel.gradle\\wrapper\\dists\\gradle-1.11-all\\7qd8qq8te5j4f5q9aaei3gh3lj\nTo honour the JVM settings for this build a new JVM will be forked. Please consider using the daemon: http://gradle.org/docs/1.11/userguide/gradle_daemon.html.\nConfiguration on demand is an incubating feature.\nError listing versions of com.android.tools.build:gradle using class org.gradle.api.internal.artifacts.repositories.resolver.MavenVersionLister$1. Will attempt an alternate way to list versions. This behaviour has been deprecated and is scheduled to be removed in Gradle 2.0\n\nFAILURE: Build failed with an exception.\n- What went wrong:\n  A problem occurred configuring root project 'bitfuel'.\n  \n  > Could not resolve all dependencies for configuration ':classpath'.\n  > Could not resolve com.android.tools.build:gradle:0.10+.\n  >  Required by:\n  >      :bitfuel:unspecified\n  > Failed to list versions for com.android.tools.build:gradle.\n  >      > Could not list versions using M2 pattern 'http://repo1.maven.org/maven2/[organisation]/[module]/[revision]/[artifact]-[revision](-[classifier]).[ext]'.\n  >         > Could not GET 'http://repo1.maven.org/maven2/com/android/tools/build/gradle/'.\n  >            > repo1.maven.org\n  > Could not resolve com.github.jtakakura:gradle-robovm-plugin:0.0.9.\n  >  Required by:\n  >      :bitfuel:unspecified\n  > Could not GET 'http://repo1.maven.org/maven2/com/github/jtakakura/gradle-robovm-plugin/0.0.9/gradle-robovm-plugin-0.0.9.pom'.\n  >      > repo1.maven.org\n- Try:\n  Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output.\n\nBUILD FAILED\n\nTotal time: 8 mins 58.564 secs\nDone!\nTo import in Eclipse: File -> Import -> General -> Exisiting Projects into Workspace\nTo import to Intellij IDEA: File -> Open -> YourProject.ipr\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1921/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1920","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1920/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1920/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1920/events","html_url":"https://github.com/libgdx/libgdx/issues/1920","id":34696368,"number":1920,"title":"Animation should allow changing frameDuration dynamically","user":{"login":"sunnyawake","id":1327349,"avatar_url":"https://avatars1.githubusercontent.com/u/1327349?v=4","gravatar_id":"","url":"https://api.github.com/users/sunnyawake","html_url":"https://github.com/sunnyawake","followers_url":"https://api.github.com/users/sunnyawake/followers","following_url":"https://api.github.com/users/sunnyawake/following{/other_user}","gists_url":"https://api.github.com/users/sunnyawake/gists{/gist_id}","starred_url":"https://api.github.com/users/sunnyawake/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sunnyawake/subscriptions","organizations_url":"https://api.github.com/users/sunnyawake/orgs","repos_url":"https://api.github.com/users/sunnyawake/repos","events_url":"https://api.github.com/users/sunnyawake/events{/privacy}","received_events_url":"https://api.github.com/users/sunnyawake/received_events","type":"User","site_admin":false},"labels":[{"id":11336982,"url":"https://api.github.com/repos/libgdx/libgdx/labels/enhancement","name":"enhancement","color":"84b6eb","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-05-31T06:13:39Z","updated_at":"2014-06-08T19:45:33Z","closed_at":"2014-06-08T19:45:33Z","author_association":"NONE","body":"","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1920/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1919","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1919/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1919/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1919/events","html_url":"https://github.com/libgdx/libgdx/pull/1919","id":34674830,"number":1919,"title":"Add offline mode setting to the setup","user":{"login":"Tom-Ski","id":4346114,"avatar_url":"https://avatars0.githubusercontent.com/u/4346114?v=4","gravatar_id":"","url":"https://api.github.com/users/Tom-Ski","html_url":"https://github.com/Tom-Ski","followers_url":"https://api.github.com/users/Tom-Ski/followers","following_url":"https://api.github.com/users/Tom-Ski/following{/other_user}","gists_url":"https://api.github.com/users/Tom-Ski/gists{/gist_id}","starred_url":"https://api.github.com/users/Tom-Ski/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Tom-Ski/subscriptions","organizations_url":"https://api.github.com/users/Tom-Ski/orgs","repos_url":"https://api.github.com/users/Tom-Ski/repos","events_url":"https://api.github.com/users/Tom-Ski/events{/privacy}","received_events_url":"https://api.github.com/users/Tom-Ski/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2014-05-30T19:39:16Z","updated_at":"2014-06-13T16:47:14Z","closed_at":"2014-06-01T09:43:08Z","author_association":"OWNER","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/1919","html_url":"https://github.com/libgdx/libgdx/pull/1919","diff_url":"https://github.com/libgdx/libgdx/pull/1919.diff","patch_url":"https://github.com/libgdx/libgdx/pull/1919.patch"},"body":"Adds a setting in the advanced tab to add the --offline flag when building the project.\n\nThis will give users the option to use the dependencies already in the local maven/gradle cache rather than forcing a re-download even if those dependencies already exist.\n\nAlso adds a warning screen when the user selects this, notifying them that if they don't have the dependencies, their project will fail.  \n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1919/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1918","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1918/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1918/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1918/events","html_url":"https://github.com/libgdx/libgdx/pull/1918","id":34658944,"number":1918,"title":"iOS: Add hooks to optionally get notification of viewDidAppear from root view controller","user":{"login":"mpr90","id":1548943,"avatar_url":"https://avatars3.githubusercontent.com/u/1548943?v=4","gravatar_id":"","url":"https://api.github.com/users/mpr90","html_url":"https://github.com/mpr90","followers_url":"https://api.github.com/users/mpr90/followers","following_url":"https://api.github.com/users/mpr90/following{/other_user}","gists_url":"https://api.github.com/users/mpr90/gists{/gist_id}","starred_url":"https://api.github.com/users/mpr90/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mpr90/subscriptions","organizations_url":"https://api.github.com/users/mpr90/orgs","repos_url":"https://api.github.com/users/mpr90/repos","events_url":"https://api.github.com/users/mpr90/events{/privacy}","received_events_url":"https://api.github.com/users/mpr90/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-05-30T16:11:36Z","updated_at":"2014-06-13T16:47:13Z","closed_at":"2014-06-01T09:45:12Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/1918","html_url":"https://github.com/libgdx/libgdx/pull/1918","diff_url":"https://github.com/libgdx/libgdx/pull/1918.diff","patch_url":"https://github.com/libgdx/libgdx/pull/1918.patch"},"body":"I have a need to sometimes present native screens outside of the libGDX framework, for example to allow for a login screen to an online service. When using the iOS backend, there is no way to hook into the root view controller's methods. This is required because you need to call presentViewController() after the root view controller has been pushed onto the view stack, i.e. in its viewDidAppear() method. If you call presentViewDController() earlier, for example in the application delegate's didFinishLaunching() method, you get a  \"Unbalanced calls to begin/end appearance transitions\" message.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1918/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1917","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1917/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1917/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1917/events","html_url":"https://github.com/libgdx/libgdx/issues/1917","id":34650551,"number":1917,"title":"getLocalAxis to PrismaticJoint","user":{"login":"slarbu","id":7264732,"avatar_url":"https://avatars1.githubusercontent.com/u/7264732?v=4","gravatar_id":"","url":"https://api.github.com/users/slarbu","html_url":"https://github.com/slarbu","followers_url":"https://api.github.com/users/slarbu/followers","following_url":"https://api.github.com/users/slarbu/following{/other_user}","gists_url":"https://api.github.com/users/slarbu/gists{/gist_id}","starred_url":"https://api.github.com/users/slarbu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/slarbu/subscriptions","organizations_url":"https://api.github.com/users/slarbu/orgs","repos_url":"https://api.github.com/users/slarbu/repos","events_url":"https://api.github.com/users/slarbu/events{/privacy}","received_events_url":"https://api.github.com/users/slarbu/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-05-30T14:35:03Z","updated_at":"2014-05-31T08:00:52Z","closed_at":"2014-05-30T15:48:12Z","author_association":"NONE","body":"I am writing a game that allows the user to load and save box2d physics based worlds ( https://play.google.com/store/apps/details?id=com.createdinformed.buildeverything ). This requires all the information to define a physical body or a joint to be available from the body or joint in question. In latest versions (1.0.0+) most of this is in place, but I noticed that the local axis (localAxisA) in PrismaticJoint is still inaccessible after creating the joint.\n\nCan we a have method PrismaticJoint.getLocalAxis() to return this information?\n\n(Also, as part of this game I have put together code to store and load box2d worlds from JSON files. I'd be happy to share the code if you think it would be useful for the community.)\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1917/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1916","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1916/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1916/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1916/events","html_url":"https://github.com/libgdx/libgdx/pull/1916","id":34650493,"number":1916,"title":"Added setZero method to Vector interface.","user":{"login":"davebaol","id":2366334,"avatar_url":"https://avatars3.githubusercontent.com/u/2366334?v=4","gravatar_id":"","url":"https://api.github.com/users/davebaol","html_url":"https://github.com/davebaol","followers_url":"https://api.github.com/users/davebaol/followers","following_url":"https://api.github.com/users/davebaol/following{/other_user}","gists_url":"https://api.github.com/users/davebaol/gists{/gist_id}","starred_url":"https://api.github.com/users/davebaol/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davebaol/subscriptions","organizations_url":"https://api.github.com/users/davebaol/orgs","repos_url":"https://api.github.com/users/davebaol/repos","events_url":"https://api.github.com/users/davebaol/events{/privacy}","received_events_url":"https://api.github.com/users/davebaol/received_events","type":"User","site_admin":false},"labels":[{"id":11336982,"url":"https://api.github.com/repos/libgdx/libgdx/labels/enhancement","name":"enhancement","color":"84b6eb","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-05-30T14:34:23Z","updated_at":"2014-06-13T16:47:09Z","closed_at":"2014-06-08T19:50:12Z","author_association":"MEMBER","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/1916","html_url":"https://github.com/libgdx/libgdx/pull/1916","diff_url":"https://github.com/libgdx/libgdx/pull/1916.diff","patch_url":"https://github.com/libgdx/libgdx/pull/1916.patch"},"body":"Of course one could use `v.sub(v)` where v is declared as Vector, but `v.setZero()` is more readable IMO.\nAlso `setZero` falls in line with `isZero` which already exists.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1916/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1915","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1915/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1915/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1915/events","html_url":"https://github.com/libgdx/libgdx/issues/1915","id":34642159,"number":1915,"title":"libgdx black texture on android","user":{"login":"Edison4","id":2210573,"avatar_url":"https://avatars3.githubusercontent.com/u/2210573?v=4","gravatar_id":"","url":"https://api.github.com/users/Edison4","html_url":"https://github.com/Edison4","followers_url":"https://api.github.com/users/Edison4/followers","following_url":"https://api.github.com/users/Edison4/following{/other_user}","gists_url":"https://api.github.com/users/Edison4/gists{/gist_id}","starred_url":"https://api.github.com/users/Edison4/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Edison4/subscriptions","organizations_url":"https://api.github.com/users/Edison4/orgs","repos_url":"https://api.github.com/users/Edison4/repos","events_url":"https://api.github.com/users/Edison4/events{/privacy}","received_events_url":"https://api.github.com/users/Edison4/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-05-30T12:49:19Z","updated_at":"2014-05-30T12:51:05Z","closed_at":"2014-05-30T12:51:05Z","author_association":"NONE","body":"Libgdx black texture on android\nFirst launch application :\n![screenshot_2014-05-30-16-44-03](https://cloud.githubusercontent.com/assets/2210573/3130483/b1d8a76c-e7f8-11e3-9b37-4f0bef52bf0c.png)\nSecond launch application :\n![screenshot_2014-05-30-16-44-59](https://cloud.githubusercontent.com/assets/2210573/3130488/c1641ab8-e7f8-11e3-841e-9d02cc42c02f.png)\nAndroid 4.0 Huawei U8660\nLibgdx 1.1.0\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1915/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1914","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1914/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1914/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1914/events","html_url":"https://github.com/libgdx/libgdx/pull/1914","id":34639898,"number":1914,"title":"Update PolygonShape.java","user":{"login":"Herjanz","id":3253205,"avatar_url":"https://avatars2.githubusercontent.com/u/3253205?v=4","gravatar_id":"","url":"https://api.github.com/users/Herjanz","html_url":"https://github.com/Herjanz","followers_url":"https://api.github.com/users/Herjanz/followers","following_url":"https://api.github.com/users/Herjanz/following{/other_user}","gists_url":"https://api.github.com/users/Herjanz/gists{/gist_id}","starred_url":"https://api.github.com/users/Herjanz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Herjanz/subscriptions","organizations_url":"https://api.github.com/users/Herjanz/orgs","repos_url":"https://api.github.com/users/Herjanz/repos","events_url":"https://api.github.com/users/Herjanz/events{/privacy}","received_events_url":"https://api.github.com/users/Herjanz/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2014-05-30T12:07:37Z","updated_at":"2014-06-13T17:48:27Z","closed_at":"2014-05-30T12:28:22Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/1914","html_url":"https://github.com/libgdx/libgdx/pull/1914","diff_url":"https://github.com/libgdx/libgdx/pull/1914.diff","patch_url":"https://github.com/libgdx/libgdx/pull/1914.patch"},"body":"PolygonShape.set(vertices); didn't work, I hope it does now ...\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1914/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1913","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1913/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1913/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1913/events","html_url":"https://github.com/libgdx/libgdx/issues/1913","id":34607450,"number":1913,"title":"GWT box2d destroying bodies with joints","user":{"login":"nbilyk","id":589193,"avatar_url":"https://avatars0.githubusercontent.com/u/589193?v=4","gravatar_id":"","url":"https://api.github.com/users/nbilyk","html_url":"https://github.com/nbilyk","followers_url":"https://api.github.com/users/nbilyk/followers","following_url":"https://api.github.com/users/nbilyk/following{/other_user}","gists_url":"https://api.github.com/users/nbilyk/gists{/gist_id}","starred_url":"https://api.github.com/users/nbilyk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nbilyk/subscriptions","organizations_url":"https://api.github.com/users/nbilyk/orgs","repos_url":"https://api.github.com/users/nbilyk/repos","events_url":"https://api.github.com/users/nbilyk/events{/privacy}","received_events_url":"https://api.github.com/users/nbilyk/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2014-05-30T00:47:47Z","updated_at":"2014-05-30T04:34:38Z","closed_at":"2014-05-30T04:34:38Z","author_association":"CONTRIBUTOR","body":"In GWT if you destroy a body with joints before destroying the joints, the joints will not properly destroy, causing a runtime error.\n\nThis problem doesn't appear to occur in Desktop.\n\nAccording to iforce2d.net, when a body is destroyed, its joints should be cleaned up automatically:\nhttp://www.iforce2d.net/b2dtut/joints-overview  See \"Cleaning up\"\n\nThe runtime error happens in the debug renderer.\n\n```\nGwtApplication: exception: (TypeError)\n stack: TypeError: Cannot read property 'body_0' of null\n     at $getTransform\n     at $drawJoint\n     at $renderBodies\n```\n\nExample code:\n\n```\npackage com.mygdx.game;\n\nimport com.badlogic.gdx.ApplicationAdapter;\nimport com.badlogic.gdx.Gdx;\nimport com.badlogic.gdx.graphics.GL20;\nimport com.badlogic.gdx.graphics.OrthographicCamera;\nimport com.badlogic.gdx.math.Matrix4;\nimport com.badlogic.gdx.math.Vector2;\nimport com.badlogic.gdx.physics.box2d.*;\nimport com.badlogic.gdx.physics.box2d.joints.WeldJointDef;\n\npublic class MyGdxGame extends ApplicationAdapter {\n\n\n\n    private World world;\n    private Box2DDebugRenderer debugRenderer;\n    private OrthographicCamera cam;\n    private final Matrix4 projection = new Matrix4();\n\n    private Body bodyA;\n    private float time = 0.0f;\n    private boolean destroyed;\n\n    @Override\n    public void create () {\n        cam = new OrthographicCamera(Gdx.graphics.getWidth(), Gdx.graphics.getHeight());\n        world = new World(Vector2.Zero, true);\n        debugRenderer = new Box2DDebugRenderer();\n\n        createDude();\n    }\n\n    private void createDude() {\n        CircleShape shape = new CircleShape();\n        shape.setRadius(1.0f);\n\n        FixtureDef fixture = new FixtureDef();\n        fixture.shape = shape;\n        fixture.density = 1.0f;\n\n        BodyDef bodyDef = new BodyDef();\n        bodyDef.allowSleep = true;\n        bodyDef.type = BodyDef.BodyType.DynamicBody;\n\n        bodyA = world.createBody(bodyDef);\n        bodyA.createFixture(fixture);\n\n        Body bodyB = world.createBody(bodyDef);\n        bodyB.createFixture(fixture);\n\n        WeldJointDef jointDef = new WeldJointDef();\n        jointDef.bodyA = bodyA;\n        jointDef.bodyB = bodyB;\n        jointDef.localAnchorB.set(-3, 0);\n\n        world.createJoint(jointDef);\n    }\n\n    @Override\n    public void render () {\n        Gdx.gl.glClearColor(0, 0, 0, 1);\n        Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);\n\n        world.step(Gdx.graphics.getDeltaTime(), 1, 1);\n        projection.set(cam.combined);\n        projection.scl(30f);\n        debugRenderer.render(world, projection);\n\n        if (!destroyed) {\n            time += Gdx.graphics.getDeltaTime();\n            if (time > 3.0f) {\n                Gdx.app.log(\"MyGdxGame\", \"Destroying bodyA\");\n                // Will cause html version to crash.\n                // Does not cause Desktop to crash.\n                world.destroyBody(bodyA);\n                destroyed = true;\n            }\n        }\n    }\n}\n```\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1913/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1912","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1912/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1912/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1912/events","html_url":"https://github.com/libgdx/libgdx/pull/1912","id":34594083,"number":1912,"title":"Add DS_Store to default gitignore","user":{"login":"Darkyenus","id":5280068,"avatar_url":"https://avatars0.githubusercontent.com/u/5280068?v=4","gravatar_id":"","url":"https://api.github.com/users/Darkyenus","html_url":"https://github.com/Darkyenus","followers_url":"https://api.github.com/users/Darkyenus/followers","following_url":"https://api.github.com/users/Darkyenus/following{/other_user}","gists_url":"https://api.github.com/users/Darkyenus/gists{/gist_id}","starred_url":"https://api.github.com/users/Darkyenus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Darkyenus/subscriptions","organizations_url":"https://api.github.com/users/Darkyenus/orgs","repos_url":"https://api.github.com/users/Darkyenus/repos","events_url":"https://api.github.com/users/Darkyenus/events{/privacy}","received_events_url":"https://api.github.com/users/Darkyenus/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-05-29T21:16:58Z","updated_at":"2014-06-13T16:47:15Z","closed_at":"2014-05-29T21:21:31Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/1912","html_url":"https://github.com/libgdx/libgdx/pull/1912","diff_url":"https://github.com/libgdx/libgdx/pull/1912.diff","patch_url":"https://github.com/libgdx/libgdx/pull/1912.patch"},"body":"Those files are automatically created in folders of OSX and don't belong to repository. Since a lot of people code in OSX this is quite convenient and doesn't hurt anything, they would probably add it anyway.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1912/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1911","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1911/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1911/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1911/events","html_url":"https://github.com/libgdx/libgdx/pull/1911","id":34579320,"number":1911,"title":"Container: add checks for null in getWidth/Height functions","user":{"login":"caryoscelus","id":1758893,"avatar_url":"https://avatars3.githubusercontent.com/u/1758893?v=4","gravatar_id":"","url":"https://api.github.com/users/caryoscelus","html_url":"https://github.com/caryoscelus","followers_url":"https://api.github.com/users/caryoscelus/followers","following_url":"https://api.github.com/users/caryoscelus/following{/other_user}","gists_url":"https://api.github.com/users/caryoscelus/gists{/gist_id}","starred_url":"https://api.github.com/users/caryoscelus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/caryoscelus/subscriptions","organizations_url":"https://api.github.com/users/caryoscelus/orgs","repos_url":"https://api.github.com/users/caryoscelus/repos","events_url":"https://api.github.com/users/caryoscelus/events{/privacy}","received_events_url":"https://api.github.com/users/caryoscelus/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2014-05-29T18:25:56Z","updated_at":"2014-06-13T16:47:15Z","closed_at":"2014-05-29T18:26:56Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/1911","html_url":"https://github.com/libgdx/libgdx/pull/1911","diff_url":"https://github.com/libgdx/libgdx/pull/1911.diff","patch_url":"https://github.com/libgdx/libgdx/pull/1911.patch"},"body":"Don't throw NPE when there is no widget in Container, assume 0 size instead.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1911/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1910","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1910/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1910/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1910/events","html_url":"https://github.com/libgdx/libgdx/issues/1910","id":34515582,"number":1910,"title":"GWT Serialize Json IntMap ","user":{"login":"kremsy","id":2006941,"avatar_url":"https://avatars0.githubusercontent.com/u/2006941?v=4","gravatar_id":"","url":"https://api.github.com/users/kremsy","html_url":"https://github.com/kremsy","followers_url":"https://api.github.com/users/kremsy/followers","following_url":"https://api.github.com/users/kremsy/following{/other_user}","gists_url":"https://api.github.com/users/kremsy/gists{/gist_id}","starred_url":"https://api.github.com/users/kremsy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kremsy/subscriptions","organizations_url":"https://api.github.com/users/kremsy/orgs","repos_url":"https://api.github.com/users/kremsy/repos","events_url":"https://api.github.com/users/kremsy/events{/privacy}","received_events_url":"https://api.github.com/users/kremsy/received_events","type":"User","site_admin":false},"labels":[{"id":11336980,"url":"https://api.github.com/repos/libgdx/libgdx/labels/bug","name":"bug","color":"fc2929","default":true},{"id":67383148,"url":"https://api.github.com/repos/libgdx/libgdx/labels/gwt","name":"gwt","color":"5319e7","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2014-05-28T23:09:31Z","updated_at":"2014-05-30T16:53:41Z","closed_at":"2014-05-30T16:53:41Z","author_association":"NONE","body":"http://www.badlogicgames.com/forum/viewtopic.php?f=11&t=14562&p=63605#p63605\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1910/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1909","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1909/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1909/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1909/events","html_url":"https://github.com/libgdx/libgdx/issues/1909","id":34508946,"number":1909,"title":"1.1.0 UnsatisfiedLinkError for gdx-controllers-desktop64.dll","user":{"login":"heschlie","id":4544262,"avatar_url":"https://avatars3.githubusercontent.com/u/4544262?v=4","gravatar_id":"","url":"https://api.github.com/users/heschlie","html_url":"https://github.com/heschlie","followers_url":"https://api.github.com/users/heschlie/followers","following_url":"https://api.github.com/users/heschlie/following{/other_user}","gists_url":"https://api.github.com/users/heschlie/gists{/gist_id}","starred_url":"https://api.github.com/users/heschlie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/heschlie/subscriptions","organizations_url":"https://api.github.com/users/heschlie/orgs","repos_url":"https://api.github.com/users/heschlie/repos","events_url":"https://api.github.com/users/heschlie/events{/privacy}","received_events_url":"https://api.github.com/users/heschlie/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-05-28T21:33:33Z","updated_at":"2014-05-28T22:45:56Z","closed_at":"2014-05-28T22:45:56Z","author_association":"NONE","body":"After switching to 1.1.0 when I try to launch the desktop application I get an UnsatisfiedLinkError looking for gdx-controllers-desktop64.dll. When I switch back to 1.0.0 everything launches just like before.I've verified that dll is where libgdx expects it to be, tried deleting the temp files to see is that helped, but I'm still not getting any joy.\n\nIDEA\nWin7 x64\n\npastebin here:\nhttp://pastebin.com/3FhxWG56\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1909/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1908","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1908/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1908/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1908/events","html_url":"https://github.com/libgdx/libgdx/issues/1908","id":34360029,"number":1908,"title":"There should be easy way to check if an Action is completed","user":{"login":"sunnyawake","id":1327349,"avatar_url":"https://avatars1.githubusercontent.com/u/1327349?v=4","gravatar_id":"","url":"https://api.github.com/users/sunnyawake","html_url":"https://github.com/sunnyawake","followers_url":"https://api.github.com/users/sunnyawake/followers","following_url":"https://api.github.com/users/sunnyawake/following{/other_user}","gists_url":"https://api.github.com/users/sunnyawake/gists{/gist_id}","starred_url":"https://api.github.com/users/sunnyawake/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sunnyawake/subscriptions","organizations_url":"https://api.github.com/users/sunnyawake/orgs","repos_url":"https://api.github.com/users/sunnyawake/repos","events_url":"https://api.github.com/users/sunnyawake/events{/privacy}","received_events_url":"https://api.github.com/users/sunnyawake/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-05-27T10:46:14Z","updated_at":"2014-05-27T17:40:03Z","closed_at":"2014-05-27T17:40:03Z","author_association":"NONE","body":"","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1908/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1907","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1907/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1907/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1907/events","html_url":"https://github.com/libgdx/libgdx/pull/1907","id":34336739,"number":1907,"title":"Added methods that check if any polygon intersects","user":{"login":"tavomaciel","id":1661000,"avatar_url":"https://avatars0.githubusercontent.com/u/1661000?v=4","gravatar_id":"","url":"https://api.github.com/users/tavomaciel","html_url":"https://github.com/tavomaciel","followers_url":"https://api.github.com/users/tavomaciel/followers","following_url":"https://api.github.com/users/tavomaciel/following{/other_user}","gists_url":"https://api.github.com/users/tavomaciel/gists{/gist_id}","starred_url":"https://api.github.com/users/tavomaciel/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tavomaciel/subscriptions","organizations_url":"https://api.github.com/users/tavomaciel/orgs","repos_url":"https://api.github.com/users/tavomaciel/repos","events_url":"https://api.github.com/users/tavomaciel/events{/privacy}","received_events_url":"https://api.github.com/users/tavomaciel/received_events","type":"User","site_admin":false},"labels":[{"id":11336982,"url":"https://api.github.com/repos/libgdx/libgdx/labels/enhancement","name":"enhancement","color":"84b6eb","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2014-05-27T01:48:28Z","updated_at":"2014-06-14T00:38:31Z","closed_at":"2014-06-08T19:17:48Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/1907","html_url":"https://github.com/libgdx/libgdx/pull/1907","diff_url":"https://github.com/libgdx/libgdx/pull/1907.diff","patch_url":"https://github.com/libgdx/libgdx/pull/1907.patch"},"body":"","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1907/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1906","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1906/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1906/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1906/events","html_url":"https://github.com/libgdx/libgdx/issues/1906","id":34333080,"number":1906,"title":"TextureRegions not rendered correctly in world space after moving camera","user":{"login":"haimat","id":6633976,"avatar_url":"https://avatars2.githubusercontent.com/u/6633976?v=4","gravatar_id":"","url":"https://api.github.com/users/haimat","html_url":"https://github.com/haimat","followers_url":"https://api.github.com/users/haimat/followers","following_url":"https://api.github.com/users/haimat/following{/other_user}","gists_url":"https://api.github.com/users/haimat/gists{/gist_id}","starred_url":"https://api.github.com/users/haimat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/haimat/subscriptions","organizations_url":"https://api.github.com/users/haimat/orgs","repos_url":"https://api.github.com/users/haimat/repos","events_url":"https://api.github.com/users/haimat/events{/privacy}","received_events_url":"https://api.github.com/users/haimat/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2014-05-26T23:11:38Z","updated_at":"2014-05-29T21:20:33Z","closed_at":"2014-05-29T10:38:23Z","author_association":"NONE","body":"Using latest libGDX nightlies on Desktop I am experiencing a strange issue. It seems to me this could be a bug in libGDX. But I am not 100% sure, so I would like to hear your opinion.\n\nSo in my game I am rendering TextureRegions as tiles side by side in a grid to get the ground plane. When the player clicks somewhere on the screen with the mouse, the main character is moving to that location, and the camera is following him. In other words: the main character always stays in the center of the screen / camera viewport while moving on the ground plane.\n\nI am using a world space different from screen space, so I initialise the camera like this:\n\n```\nvWidth = game.screenWidth / 32;\nvHeight = game.screenHeight / 32;\ncamera = new OrthographicCamera(vWidth, vHeight);\ncamera.position.set(vWidth / 2, vHeight / 2, 0f);\ncamera.update();\n```\n\nNow when the game starts with the camera on the initial position like shown above, everything is fine. The ground tiles are being rendered perfectly side by side, no gaps between them or anything. However, when the camera moves, then in some cases the tiles are not rendered perfectly any more, then I can see the background color shine through between all tiles as thin lines. In other words: In that case the tiles are rendered with gaps of 1-2 pixels in between them.\n\nThe drawing of the tiles is simple:\n\n```\n// final tileSize is the side length of one tile in world space, 2.0 in my case\nspriteBatch.draw(tex, x, y, tileSize, tileSize);\n```\n\nHowever, this happens even if I move the camera only a tiny little bit from its original position. For debugging I print out the x coordinates in world space used when drawing the tiles. And in both cases, the original camera position as well as the camera position after the move, the x values used in the spriteBatch are exactly the same, eg.:\n\n```\n984.0 986.0 988.0 990.0 992.0 994.0 996.0 998.0\n```\n\nSo I am wondering: If the drawing of tiles uses _exactly_ the same coordinates and size value in both cases, how can the problem with the background color shining through tiles only happen in some cases? Could it be related to the camera or viewport or anything like this?\n\nPS: I just found out that I can work around this issue by using this draw command:\n\n```\nspriteBatch.draw(tex, x, y, tileSize * 1.01, tileSize * 1.01);\n```\n\nI can live with that, but it doesn't seem to be real solution...\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1906/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}}],"meta":{"x-ratelimit-limit":"5000","x-ratelimit-remaining":"4899","x-ratelimit-reset":"1506844633","x-github-request-id":"C300:110A:248DF1B:40D8E93:59D09650","x-github-media-type":"github.squirrel-girl-preview","link":"<https://api.github.com/repositories/5373551/issues?state=all&page=101>; rel=\"next\", <https://api.github.com/repositories/5373551/issues?state=all&page=164>; rel=\"last\", <https://api.github.com/repositories/5373551/issues?state=all&page=1>; rel=\"first\", <https://api.github.com/repositories/5373551/issues?state=all&page=99>; rel=\"prev\"","etag":"\"5c1dfa5882e19e7271b9dc5f0971dd70\"","status":"200 OK"}}
