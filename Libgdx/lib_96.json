{"data":[{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2055","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2055/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2055/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2055/events","html_url":"https://github.com/libgdx/libgdx/pull/2055","id":36813905,"number":2055,"title":"setFollowRedirects accoring to HttpRequest","user":{"login":"WillemMali","id":4689687,"avatar_url":"https://avatars2.githubusercontent.com/u/4689687?v=4","gravatar_id":"","url":"https://api.github.com/users/WillemMali","html_url":"https://github.com/WillemMali","followers_url":"https://api.github.com/users/WillemMali/followers","following_url":"https://api.github.com/users/WillemMali/following{/other_user}","gists_url":"https://api.github.com/users/WillemMali/gists{/gist_id}","starred_url":"https://api.github.com/users/WillemMali/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/WillemMali/subscriptions","organizations_url":"https://api.github.com/users/WillemMali/orgs","repos_url":"https://api.github.com/users/WillemMali/repos","events_url":"https://api.github.com/users/WillemMali/events{/privacy}","received_events_url":"https://api.github.com/users/WillemMali/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-06-30T16:30:08Z","updated_at":"2014-07-05T15:55:30Z","closed_at":"2014-07-05T15:55:30Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2055","html_url":"https://github.com/libgdx/libgdx/pull/2055","diff_url":"https://github.com/libgdx/libgdx/pull/2055.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2055.patch"},"body":"Adds a call to setFollowRedirects on the HttpURLConnection so that this is set according to the HttpRequest.\nCorresponding pull request: (this uses a method introduced in the pull request/change to Net.HttpRequest below)\nhttps://github.com/libgdx/libgdx/pull/2054\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2055/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2054","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2054/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2054/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2054/events","html_url":"https://github.com/libgdx/libgdx/pull/2054","id":36813443,"number":2054,"title":"Add field and get/setters for \"followRedirects\"","user":{"login":"WillemMali","id":4689687,"avatar_url":"https://avatars2.githubusercontent.com/u/4689687?v=4","gravatar_id":"","url":"https://api.github.com/users/WillemMali","html_url":"https://github.com/WillemMali","followers_url":"https://api.github.com/users/WillemMali/followers","following_url":"https://api.github.com/users/WillemMali/following{/other_user}","gists_url":"https://api.github.com/users/WillemMali/gists{/gist_id}","starred_url":"https://api.github.com/users/WillemMali/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/WillemMali/subscriptions","organizations_url":"https://api.github.com/users/WillemMali/orgs","repos_url":"https://api.github.com/users/WillemMali/repos","events_url":"https://api.github.com/users/WillemMali/events{/privacy}","received_events_url":"https://api.github.com/users/WillemMali/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2014-06-30T16:24:35Z","updated_at":"2014-07-05T15:55:37Z","closed_at":"2014-07-05T15:55:37Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2054","html_url":"https://github.com/libgdx/libgdx/pull/2054","diff_url":"https://github.com/libgdx/libgdx/pull/2054.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2054.patch"},"body":"This should go with a corresponding change to NetJavaImpl so that this field will determine whether redirects will be followed. Useful when it's necessary to get information from a redirect page or when reaching the redirect page is enough.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2054/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2053","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2053/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2053/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2053/events","html_url":"https://github.com/libgdx/libgdx/issues/2053","id":36812534,"number":2053,"title":"Gdx.Net always follows redirects","user":{"login":"WillemMali","id":4689687,"avatar_url":"https://avatars2.githubusercontent.com/u/4689687?v=4","gravatar_id":"","url":"https://api.github.com/users/WillemMali","html_url":"https://github.com/WillemMali","followers_url":"https://api.github.com/users/WillemMali/followers","following_url":"https://api.github.com/users/WillemMali/following{/other_user}","gists_url":"https://api.github.com/users/WillemMali/gists{/gist_id}","starred_url":"https://api.github.com/users/WillemMali/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/WillemMali/subscriptions","organizations_url":"https://api.github.com/users/WillemMali/orgs","repos_url":"https://api.github.com/users/WillemMali/repos","events_url":"https://api.github.com/users/WillemMali/events{/privacy}","received_events_url":"https://api.github.com/users/WillemMali/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2014-06-30T16:13:54Z","updated_at":"2014-07-05T15:55:52Z","closed_at":"2014-07-05T15:55:52Z","author_association":"CONTRIBUTOR","body":"There's currently no option to not follow http redirects. This could be cured by adding a method setFollowRedirects(boolean) in Net.HttpRequest, which would set a variable in the request which is later passed to setFollowRedirects(boolean) in the used java.net.HttpURLConnection.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2053/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2052","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2052/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2052/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2052/events","html_url":"https://github.com/libgdx/libgdx/issues/2052","id":36812171,"number":2052,"title":"offset var in writesamples() of AudioDevice in Lwjgl","user":{"login":"gysi","id":1576445,"avatar_url":"https://avatars0.githubusercontent.com/u/1576445?v=4","gravatar_id":"","url":"https://api.github.com/users/gysi","html_url":"https://github.com/gysi","followers_url":"https://api.github.com/users/gysi/followers","following_url":"https://api.github.com/users/gysi/following{/other_user}","gists_url":"https://api.github.com/users/gysi/gists{/gist_id}","starred_url":"https://api.github.com/users/gysi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gysi/subscriptions","organizations_url":"https://api.github.com/users/gysi/orgs","repos_url":"https://api.github.com/users/gysi/repos","events_url":"https://api.github.com/users/gysi/events{/privacy}","received_events_url":"https://api.github.com/users/gysi/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-06-30T16:09:28Z","updated_at":"2014-07-05T16:08:51Z","closed_at":"2014-07-05T16:08:51Z","author_association":"NONE","body":"# Description\n\nI want to record the input of the mic and simultaneously play and visualize the amplitude. \nThe visualization period is 2 seconds. \nBut because recording and playing are blocking operations I try to record and play in little 100 sample junks. \nThese junks should be pasted in the 2 seconds array for the visualization. For this purpose I wanted to use the offsets in read & writesamples to walk through the 2 seconds array.\nBut for some reason the writesamples function only seems to work when the offset is set to 0 (see workaround-solution in the code example)\n# Code example:\n\n``` java\nimport com.badlogic.gdx.ApplicationListener;\nimport com.badlogic.gdx.Gdx;\nimport com.badlogic.gdx.audio.AudioDevice;\nimport com.badlogic.gdx.audio.AudioRecorder;\nimport com.badlogic.gdx.backends.lwjgl.LwjglApplication;\nimport com.badlogic.gdx.backends.lwjgl.LwjglApplicationConfiguration;\n\n/**\n * Live visualization of 2 seconds recorded audio (loop)\n * @author gysi\n *\n */\npublic class NBugTest implements ApplicationListener {\n    public static final String TAG = NBugTest.class.getSimpleName();\n    private short[] recArray = new short[44100 * 2]; // 2 secs of recorded Audio for visualization\n    private int pointer = 0;\n    AudioTestRunnable audioTestRunnable;\n    Thread audioTestThread;\n\n    class AudioTestRunnable implements Runnable{\n        AudioDevice audioDevice;\n        AudioRecorder audioRecorder;\n        private boolean stop = false;\n\n        public AudioTestRunnable(){\n            audioDevice = Gdx.app.getAudio().newAudioDevice(44100, true);\n            audioRecorder = Gdx.app.getAudio().newAudioRecorder(44100, true);\n            audioDevice.setVolume(1f);\n        }\n\n        @Override\n        public void run() {\n            while(!stop){\n                int numsamples = 100; // samples to be read per tick\n                short[] helpArray = new short[100]; // helper array for implementation that works\n                while(!stop){\n                    if(pointer + numsamples >= recArray.length){\n                        pointer = 0;\n                    }\n\n                    // --------This implementation doesn't work\n                    Gdx.app.log(TAG, \"recording\");\n                    audioRecorder.read(recArray, pointer, numsamples);\n\n                    Gdx.app.log(TAG, \"playing\");\n                    audioDevice.writeSamples(recArray, pointer, numsamples);\n                    // --------\n\n\n                    // --------This implementation works\n//                  Gdx.app.log(TAG, \"recording\");\n//                  audioRecorder.read(helpArray, 0, helpArray.length);\n//                  \n//                  Gdx.app.log(TAG, \"playing\");\n//                  audioDevice.writeSamples(helpArray, 0, helpArray.length);\n//                  \n//                  for(int i = 0; i < helpArray.length; i++){\n//                      recArray[i+pointer] = helpArray[i];\n//                  }\n                    // --------\n\n\n                    pointer = pointer + numsamples;  \n                    Gdx.app.log(TAG, pointer + \"\");\n                }\n            }\n        }\n\n        public void stop(){\n            stop = true;\n        }\n    }\n\n    @Override\n    public void create() {\n        audioTestRunnable = new AudioTestRunnable();\n        audioTestThread = new Thread(audioTestRunnable);\n        audioTestThread.start();\n    }\n\n    @Override\n    public void resize(int width, int height) {\n    }\n\n    @Override\n    public void render() {\n        // visualising recArray     \n    }\n\n    @Override\n    public void pause() {\n    }\n\n    @Override\n    public void resume() {\n    }\n\n    @Override\n    public void dispose() {\n        audioTestRunnable.stop();\n        try {\n            audioTestThread.join();\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n    }\n\n    public static void main (String[] arg) {\n        LwjglApplicationConfiguration config = new LwjglApplicationConfiguration();\n        new LwjglApplication(new NBugTest(), config);\n    }\n}\n```\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2052/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2051","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2051/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2051/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2051/events","html_url":"https://github.com/libgdx/libgdx/issues/2051","id":36812060,"number":2051,"title":"Net.HttpRequest - option not to follow redirects","user":{"login":"WillemMali","id":4689687,"avatar_url":"https://avatars2.githubusercontent.com/u/4689687?v=4","gravatar_id":"","url":"https://api.github.com/users/WillemMali","html_url":"https://github.com/WillemMali","followers_url":"https://api.github.com/users/WillemMali/followers","following_url":"https://api.github.com/users/WillemMali/following{/other_user}","gists_url":"https://api.github.com/users/WillemMali/gists{/gist_id}","starred_url":"https://api.github.com/users/WillemMali/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/WillemMali/subscriptions","organizations_url":"https://api.github.com/users/WillemMali/orgs","repos_url":"https://api.github.com/users/WillemMali/repos","events_url":"https://api.github.com/users/WillemMali/events{/privacy}","received_events_url":"https://api.github.com/users/WillemMali/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-06-30T16:08:16Z","updated_at":"2014-06-30T16:14:40Z","closed_at":"2014-06-30T16:14:33Z","author_association":"CONTRIBUTOR","body":"I need to get cookies from a 301/302 redirect page so I need to be able to disable redirects for this HttpRequest.\nAssuming Net.HttpRequests are used to construct a java.net.HttpURLConnection it would need a boolean to track this variable (followRedirects) and this boolean would then be used in setFollowRedirects(boolean)\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2051/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2050","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2050/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2050/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2050/events","html_url":"https://github.com/libgdx/libgdx/issues/2050","id":36810700,"number":2050,"title":"[bug] [scene2d] clearActions() inside actions behaves wrong.","user":{"login":"vlaaad","id":732554,"avatar_url":"https://avatars2.githubusercontent.com/u/732554?v=4","gravatar_id":"","url":"https://api.github.com/users/vlaaad","html_url":"https://github.com/vlaaad","followers_url":"https://api.github.com/users/vlaaad/followers","following_url":"https://api.github.com/users/vlaaad/following{/other_user}","gists_url":"https://api.github.com/users/vlaaad/gists{/gist_id}","starred_url":"https://api.github.com/users/vlaaad/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vlaaad/subscriptions","organizations_url":"https://api.github.com/users/vlaaad/orgs","repos_url":"https://api.github.com/users/vlaaad/repos","events_url":"https://api.github.com/users/vlaaad/events{/privacy}","received_events_url":"https://api.github.com/users/vlaaad/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2014-06-30T15:54:21Z","updated_at":"2014-07-05T21:31:25Z","closed_at":"2014-07-05T21:31:17Z","author_association":"NONE","body":"There is a bug in `act()` method, which can lead to some strange behaviour. \nWhen `clearListeners()` and `addAction()` is called inside `act()` method, (at least one?) next added action is not working. Here is example based on default gdx-setup project with `gdxVersion = '1.2.1-SNAPSHOT'`.\n\n``` java\npackage com.mygdx.game;\n\nimport com.badlogic.gdx.ApplicationAdapter;\nimport com.badlogic.gdx.Gdx;\nimport com.badlogic.gdx.graphics.GL20;\nimport com.badlogic.gdx.graphics.Texture;\nimport com.badlogic.gdx.scenes.scene2d.Stage;\nimport com.badlogic.gdx.scenes.scene2d.actions.Actions;\nimport com.badlogic.gdx.scenes.scene2d.ui.Image;\n\npublic class MyGdxGame extends ApplicationAdapter {\n    private Stage stage;\n\n    @Override\n    public void create () {\n        stage = new Stage();\n        final Image image = new Image(new Texture(\"badlogic.jpg\"));\n        stage.addActor(image);\n        Runnable runnable = new Runnable() {\n            @Override\n            public void run () {\n                //comment next line for expected behaviour\n                image.clearActions();\n                image.addAction(Actions.moveTo(0, 0, 0.5f));\n            }\n        };\n        image.addAction(Actions.sequence(\n            Actions.moveBy(100, 100, 0.5f),\n            Actions.run(runnable)\n        ));\n    }\n\n    @Override\n    public void render () {\n        Gdx.gl.glClearColor(1, 0, 0, 1);\n        Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);\n        stage.act();\n        stage.draw();\n    }\n}\n```\n\nIn this example image is moved to `(100,100)`, end then (should be) moved to `(0, 0)`. But it only moves to `(100,100)` and stays there. \n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2050/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2049","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2049/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2049/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2049/events","html_url":"https://github.com/libgdx/libgdx/pull/2049","id":36800985,"number":2049,"title":"Added Loaders to generate texture at launch","user":{"login":"avianey","id":1625652,"avatar_url":"https://avatars3.githubusercontent.com/u/1625652?v=4","gravatar_id":"","url":"https://api.github.com/users/avianey","html_url":"https://github.com/avianey","followers_url":"https://api.github.com/users/avianey/followers","following_url":"https://api.github.com/users/avianey/following{/other_user}","gists_url":"https://api.github.com/users/avianey/gists{/gist_id}","starred_url":"https://api.github.com/users/avianey/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/avianey/subscriptions","organizations_url":"https://api.github.com/users/avianey/orgs","repos_url":"https://api.github.com/users/avianey/repos","events_url":"https://api.github.com/users/avianey/events{/privacy}","received_events_url":"https://api.github.com/users/avianey/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2014-06-30T14:13:29Z","updated_at":"2014-07-05T16:36:30Z","closed_at":"2014-07-05T14:59:34Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2049","html_url":"https://github.com/libgdx/libgdx/pull/2049","diff_url":"https://github.com/libgdx/libgdx/pull/2049.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2049.patch"},"body":"Can be use to generate texture that fit the screen constraints on every device...\n\n``` java\nmanager.load(\"cachedResponsiveTexture\", ProxyTexture.class, \n        // load texture from cached (as PNG) version\n        new ProxyTextureLoader.ProxyTextureParameter(\n                // or generate it with another loader if no cached version exists\n                new FreePaintTextureLoader.FreePaintTextureParameter(\n                    new FreePaintTextureLoader.Painter() {\n                        @Override\n                        public void draw(final Gdx2DPixmap pixmap) {\n                            pixmap.fillRect(...);\n                            // utility method of FreePaintTextureLoader.Painter\n                            applyNoise(pixmap);\n                            pixmap.fillCircle(...);\n                            // anything else\n                        }\n                    },\n                    Gdx.graphics.getWidth(), \n                    Gdx.graphics.getHeight()),\n                FreePaintTexture.class\n        )\n);\n```\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2049/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2048","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2048/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2048/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2048/events","html_url":"https://github.com/libgdx/libgdx/issues/2048","id":36789985,"number":2048,"title":"Delayed Telegrams are sent automatically","user":{"login":"MonsterOfCookie","id":2905478,"avatar_url":"https://avatars2.githubusercontent.com/u/2905478?v=4","gravatar_id":"","url":"https://api.github.com/users/MonsterOfCookie","html_url":"https://github.com/MonsterOfCookie","followers_url":"https://api.github.com/users/MonsterOfCookie/followers","following_url":"https://api.github.com/users/MonsterOfCookie/following{/other_user}","gists_url":"https://api.github.com/users/MonsterOfCookie/gists{/gist_id}","starred_url":"https://api.github.com/users/MonsterOfCookie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MonsterOfCookie/subscriptions","organizations_url":"https://api.github.com/users/MonsterOfCookie/orgs","repos_url":"https://api.github.com/users/MonsterOfCookie/repos","events_url":"https://api.github.com/users/MonsterOfCookie/events{/privacy}","received_events_url":"https://api.github.com/users/MonsterOfCookie/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2014-06-30T11:39:41Z","updated_at":"2014-06-30T11:59:48Z","closed_at":"2014-06-30T11:59:27Z","author_association":"NONE","body":"if I do:\n\n```\nMessageDispatcher.getInstance().dispatchMessage(5F, sender, receiver, 1, null);\n```\n\nI would expect the message to be delayed by 5 seconds, but instead it is sent straight away.\n\nI believe the bug is here:\n\nln 160 of MessageDispatcher\n\n```\nif (telegram.getTimestamp() < currentTime) break;\n```\n\nEssentially it will only break, and not dispatch the message if the telegram time stamp is in the past, but this is the opposite of what we want.\n\nShouldn't it be:\n\n```\nif (telegram.getTimestamp() > currentTime) break;\n```\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2048/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2047","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2047/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2047/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2047/events","html_url":"https://github.com/libgdx/libgdx/issues/2047","id":36767147,"number":2047,"title":"List of Exception Management Anti-Patterns and Code Smells ","user":{"login":"ashishsureka","id":8017755,"avatar_url":"https://avatars1.githubusercontent.com/u/8017755?v=4","gravatar_id":"","url":"https://api.github.com/users/ashishsureka","html_url":"https://github.com/ashishsureka","followers_url":"https://api.github.com/users/ashishsureka/followers","following_url":"https://api.github.com/users/ashishsureka/following{/other_user}","gists_url":"https://api.github.com/users/ashishsureka/gists{/gist_id}","starred_url":"https://api.github.com/users/ashishsureka/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ashishsureka/subscriptions","organizations_url":"https://api.github.com/users/ashishsureka/orgs","repos_url":"https://api.github.com/users/ashishsureka/repos","events_url":"https://api.github.com/users/ashishsureka/events{/privacy}","received_events_url":"https://api.github.com/users/ashishsureka/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2014-06-30T03:46:48Z","updated_at":"2014-06-30T04:11:32Z","closed_at":"2014-06-30T04:01:07Z","author_association":"NONE","body":"Code smells are defined as symptom s in the program source code which are usually not bugs or technically incorrect but indicates a possible deeper problem. Anti-patterns are counterparts of design patterns and are defined as mistakes during software development that produces negative consequences and is ineffective or counter-productive. During program execution, error events can occur that disrupts the normal flow of the program. Programming languages provide exception handling mechanism to developers for handling errors and exception events. \n\nI mined the source-code for automatically detecting 10 exception handling anti-patterns (https://today.java.net/article/2006/04/04/exception-handling-antipatterns).  In this issue report, I list the exception handling anti-patterns and code-smells that I found in the source code. My experimental results demonstrate presence of various exception handling anti-patterns and throw light on their intensity. I believe my tool for automatic detection of anti-patterns in source code and the attached \n\n1 Mining Source Code for Automatically Discovering Exception Management Anti-Patterns and Code Smell\n\n---\n\n2 FILE NAME : libgdx-master\\backends\\gdx-backend-android\\src\\com\\badlogic\\gdx\\backends\\android\\AndroidApplication.java\n\n3 CATCH CLAUSE : catch (Exception ex) {\n  log(\"AndroidApplication\",\"Content already displayed, cannot request FEATURE_NO_TITLE\",ex);\n}\n\n4 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n5 FILE NAME : libgdx-master\\backends\\gdx-backend-android\\src\\com\\badlogic\\gdx\\backends\\android\\AndroidApplication.java\n\n6 CATCH CLAUSE : catch (Exception e) {\n  log(\"AndroidApplication\",\"Failed to create AndroidVisibilityListener\",e);\n}\n\n7 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n8 FILE NAME : libgdx-master\\backends\\gdx-backend-android\\src\\com\\badlogic\\gdx\\backends\\android\\AndroidApplication.java\n\n9 CATCH CLAUSE : catch (Exception e) {\n  log(\"AndroidApplication\",\"Can't hide status bar\",e);\n}\n\n10 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n11 FILE NAME : libgdx-master\\backends\\gdx-backend-android\\src\\com\\badlogic\\gdx\\backends\\android\\AndroidApplication.java\n\n12 CATCH CLAUSE : catch (Exception e) {\n  log(\"AndroidApplication\",\"Can't set immersive mode\",e);\n}\n\n13 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n14 FILE NAME : libgdx-master\\backends\\gdx-backend-android\\src\\com\\badlogic\\gdx\\backends\\android\\AndroidAudio.java\n\n15 CATCH CLAUSE : catch (Exception ex) {\n  throw new GdxRuntimeException(\"Error loading audio file: \" + file + \"\\nNote: Internal audio files must be placed in the assets directory.\",ex);\n}\n\n16 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n17 FILE NAME : libgdx-master\\backends\\gdx-backend-android\\src\\com\\badlogic\\gdx\\backends\\android\\AndroidAudio.java\n\n18 CATCH CLAUSE : catch (Exception ex) {\n  throw new GdxRuntimeException(\"Error loading audio file: \" + file,ex);\n}\n\n19 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n20 FILE NAME : libgdx-master\\backends\\gdx-backend-android\\src\\com\\badlogic\\gdx\\backends\\android\\AndroidAudio.java\n\n21 CATCH CLAUSE : catch (Exception ex) {\n  throw new GdxRuntimeException(\"Error loading audio file: \" + file,ex);\n}\n\n22 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n23 FILE NAME : libgdx-master\\backends\\gdx-backend-android\\src\\com\\badlogic\\gdx\\backends\\android\\AndroidClipboard.java\n\n24 CATCH CLAUSE : catch (final Exception ex) {\n}\n\n25 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n26 FILE NAME : libgdx-master\\backends\\gdx-backend-android\\src\\com\\badlogic\\gdx\\backends\\android\\AndroidDaydream.java\n\n27 CATCH CLAUSE : catch (Exception e) {\n  log(\"AndroidApplication\",\"Can't hide status bar\",e);\n}\n\n28 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n29 FILE NAME : libgdx-master\\backends\\gdx-backend-android\\src\\com\\badlogic\\gdx\\backends\\android\\AndroidFileHandle.java\n\n30 CATCH CLAUSE : catch (Exception ex) {\n  throw new GdxRuntimeException(\"Error listing children: \" + file + \" (\"+ type+ \")\",ex);\n}\n\n31 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n32 FILE NAME : libgdx-master\\backends\\gdx-backend-android\\src\\com\\badlogic\\gdx\\backends\\android\\AndroidFileHandle.java\n\n33 CATCH CLAUSE : catch (Exception ex) {\n  throw new GdxRuntimeException(\"Error listing children: \" + file + \" (\"+ type+ \")\",ex);\n}\n\n34 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n35 FILE NAME : libgdx-master\\backends\\gdx-backend-android\\src\\com\\badlogic\\gdx\\backends\\android\\AndroidFileHandle.java\n\n36 CATCH CLAUSE : catch (Exception ex) {\n  throw new GdxRuntimeException(\"Error listing children: \" + file + \" (\"+ type+ \")\",ex);\n}\n\n37 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n38 FILE NAME : libgdx-master\\backends\\gdx-backend-android\\src\\com\\badlogic\\gdx\\backends\\android\\AndroidFileHandle.java\n\n39 CATCH CLAUSE : catch (Exception ex) {\n  throw new GdxRuntimeException(\"Error listing children: \" + file + \" (\"+ type+ \")\",ex);\n}\n\n40 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n41 FILE NAME : libgdx-master\\backends\\gdx-backend-android\\src\\com\\badlogic\\gdx\\backends\\android\\AndroidFileHandle.java\n\n42 CATCH CLAUSE : catch (Exception ex) {\n  try {\n    return assets.list(fileName).length > 0;\n  }\n catch (  Exception ignored) {\n  }\n  return false;\n}\n\n43 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n44 FILE NAME : libgdx-master\\backends\\gdx-backend-android\\src\\com\\badlogic\\gdx\\backends\\android\\AndroidFileHandle.java\n\n45 CATCH CLAUSE : catch (Exception ignored) {\n}\n\n46 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n47 FILE NAME : libgdx-master\\backends\\gdx-backend-android\\src\\com\\badlogic\\gdx\\backends\\android\\AndroidFragmentApplication.java\n\n48 CATCH CLAUSE : catch (Exception e) {\n  log(\"AndroidApplication\",\"Can't set immersive mode\",e);\n}\n\n49 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n50 FILE NAME : libgdx-master\\backends\\gdx-backend-android\\src\\com\\badlogic\\gdx\\backends\\android\\AndroidFragmentApplication.java\n\n51 CATCH CLAUSE : catch (Exception e) {\n  log(\"AndroidApplication\",\"Failed to create AndroidVisibilityListener\",e);\n}\n\n52 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n53 FILE NAME : libgdx-master\\backends\\gdx-backend-android\\src\\com\\badlogic\\gdx\\backends\\android\\AndroidGraphics.java\n\n54 CATCH CLAUSE : catch (Exception e) {\n  Gdx.app.log(LOG_TAG,\"Method GLSurfaceView.setPreserveEGLContextOnPause not found\");\n}\n\n55 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n56 FILE NAME : libgdx-master\\backends\\gdx-backend-android\\src\\com\\badlogic\\gdx\\backends\\android\\AndroidInputFactory.java\n\n57 CATCH CLAUSE : catch (Exception e) {\n  throw new RuntimeException(\"Couldn't construct AndroidInput, this should never happen\",e);\n}\n\n58 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n59 FILE NAME : libgdx-master\\backends\\gdx-backend-headless\\src\\com\\badlogic\\gdx\\backends\\headless\\HeadlessPreferences.java\n\n60 CATCH CLAUSE : catch (Exception ex) {\n  throw new GdxRuntimeException(\"Error writing preferences: \" + file,ex);\n}\n\n61 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n62 FILE NAME : libgdx-master\\backends\\gdx-backend-jglfw\\src\\com\\badlogic\\gdx\\backends\\jglfw\\JglfwClipboard.java\n\n63 CATCH CLAUSE : catch (Exception ignored) {\n}\n\n64 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n65 FILE NAME : libgdx-master\\backends\\gdx-backend-jglfw\\src\\com\\badlogic\\gdx\\backends\\jglfw\\JglfwNet.java\n\n66 CATCH CLAUSE : catch (Exception ex) {\n  throw new GdxRuntimeException(ex);\n}\n\n67 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n68 FILE NAME : libgdx-master\\backends\\gdx-backend-jglfw\\src\\com\\badlogic\\gdx\\backends\\jglfw\\JglfwPreferences.java\n\n69 CATCH CLAUSE : catch (Exception ex) {\n  throw new GdxRuntimeException(\"Error writing preferences: \" + file,ex);\n}\n\n70 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n71 FILE NAME : libgdx-master\\backends\\gdx-backend-jglfw\\src\\com\\badlogic\\gdx\\backends\\jglfw\\Sync.java\n\n72 CATCH CLAUSE : catch (Exception e) {\n}\n\n73 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n74 FILE NAME : libgdx-master\\backends\\gdx-backend-lwjgl\\src\\com\\badlogic\\gdx\\backends\\lwjgl\\audio\\JavaSoundAudioRecorder.java\n\n75 CATCH CLAUSE : catch (Exception ex) {\n  throw new GdxRuntimeException(\"Error creating JavaSoundAudioRecorder.\",ex);\n}\n\n76 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n77 FILE NAME : libgdx-master\\backends\\gdx-backend-lwjgl\\src\\com\\badlogic\\gdx\\backends\\lwjgl\\audio\\Mp3.java\n\n78 CATCH CLAUSE : catch (Exception ignored) {\n}\n\n79 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n80 FILE NAME : libgdx-master\\backends\\gdx-backend-lwjgl\\src\\com\\badlogic\\gdx\\backends\\lwjgl\\audio\\Mp3.java\n\n81 CATCH CLAUSE : catch (Exception ignored) {\n}\n\n82 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n83 FILE NAME : libgdx-master\\backends\\gdx-backend-lwjgl\\src\\com\\badlogic\\gdx\\backends\\lwjgl\\audio\\OggInputStream.java\n\n84 CATCH CLAUSE : catch (Exception e) {\n  throw new GdxRuntimeException(\"Failure reading Vorbis.\",e);\n}\n\n85 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n86 FILE NAME : libgdx-master\\backends\\gdx-backend-lwjgl\\src\\com\\badlogic\\gdx\\backends\\lwjgl\\audio\\OggInputStream.java\n\n87 CATCH CLAUSE : catch (Exception e) {\n  throw new GdxRuntimeException(\"Failed to read Vorbis.\",e);\n}\n\n88 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n89 FILE NAME : libgdx-master\\backends\\gdx-backend-lwjgl\\src\\com\\badlogic\\gdx\\backends\\lwjgl\\audio\\OggInputStream.java\n\n90 CATCH CLAUSE : catch (Exception e) {\n  throw new GdxRuntimeException(\"Error during Vorbis decoding.\",e);\n}\n\n91 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n92 FILE NAME : libgdx-master\\backends\\gdx-backend-lwjgl\\src\\com\\badlogic\\gdx\\backends\\lwjgl\\audio\\OpenALAudio.java\n\n93 CATCH CLAUSE : catch (Exception ex) {\n  throw new GdxRuntimeException(\"Error creating sound \" + soundClass.getName() + \" for file: \"+ file,ex);\n}\n\n94 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n95 FILE NAME : libgdx-master\\backends\\gdx-backend-lwjgl\\src\\com\\badlogic\\gdx\\backends\\lwjgl\\audio\\OpenALAudio.java\n\n96 CATCH CLAUSE : catch (Exception ex) {\n  throw new GdxRuntimeException(\"Error creating music \" + musicClass.getName() + \" for file: \"+ file,ex);\n}\n\n97 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n98 FILE NAME : libgdx-master\\backends\\gdx-backend-lwjgl\\src\\com\\badlogic\\gdx\\backends\\lwjgl\\LwjglApplication.java\n\n99 CATCH CLAUSE : catch (Exception ex) {\n}\n\n100 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n101 FILE NAME : libgdx-master\\backends\\gdx-backend-lwjgl\\src\\com\\badlogic\\gdx\\backends\\lwjgl\\LwjglAWTCanvas.java\n\n102 CATCH CLAUSE : catch (Exception ex) {\n  stopped();\n  throw new GdxRuntimeException(ex);\n}\n\n103 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n104 FILE NAME : libgdx-master\\backends\\gdx-backend-lwjgl\\src\\com\\badlogic\\gdx\\backends\\lwjgl\\LwjglCanvas.java\n\n105 CATCH CLAUSE : catch (Exception ex) {\n  stopped();\n  exception(ex);\n  return;\n}\n\n106 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n107 FILE NAME : libgdx-master\\backends\\gdx-backend-lwjgl\\src\\com\\badlogic\\gdx\\backends\\lwjgl\\LwjglGraphics.java\n\n108 CATCH CLAUSE : catch (Exception e) {\n  Display.create(new PixelFormat(config.r + config.g + config.b,config.a,config.depth,config.stencil,config.samples));\n  System.out.println(\"LwjglGraphics: couldn't create OpenGL 3.2+ core profile context\");\n}\n\n109 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n110 FILE NAME : libgdx-master\\backends\\gdx-backend-lwjgl\\src\\com\\badlogic\\gdx\\backends\\lwjgl\\LwjglGraphics.java\n\n111 CATCH CLAUSE : catch (Exception ex) {\n  Display.destroy();\n  try {\n    Thread.sleep(200);\n  }\n catch (  InterruptedException ignored) {\n  }\n  try {\n    Display.create(new PixelFormat(0,16,8));\n    if (getDesktopDisplayMode().bitsPerPixel == 16) {\n      bufferFormat=new BufferFormat(5,6,5,0,16,8,0,false);\n    }\n    if (getDesktopDisplayMode().bitsPerPixel == 24) {\n      bufferFormat=new BufferFormat(8,8,8,0,16,8,0,false);\n    }\n    if (getDesktopDisplayMode().bitsPerPixel == 32) {\n      bufferFormat=new BufferFormat(8,8,8,8,16,8,0,false);\n    }\n  }\n catch (  Exception ex2) {\n    Display.destroy();\n    try {\n      Thread.sleep(200);\n    }\n catch (    InterruptedException ignored) {\n    }\n    try {\n      Display.create(new PixelFormat());\n    }\n catch (    Exception ex3) {\n      if (ex3.getMessage().contains(\"Pixel format not accelerated\")) {\n        if (!softwareMode && config.allowSoftwareMode) {\n          softwareMode=true;\n          System.setProperty(\"org.lwjgl.opengl.Display.allowSoftwareOpenGL\",\"true\");\n          createDisplayPixelFormat();\n          return;\n        }\n        String glInfo=\".\";\n        try {\n          glInfo=\": \" + GL11.glGetString(GL11.GL_VENDOR) + \" \"+ GL11.glGetString(GL11.GL_RENDERER)+ \" \"+ GL11.glGetString(GL11.GL_VERSION);\n        }\n catch (        Throwable ignored) {\n        }\n        throw new GdxRuntimeException(\"OpenGL is not supported by the video driver\" + glInfo,ex3);\n      }\n      throw new GdxRuntimeException(\"Unable to create OpenGL display.\",ex3);\n    }\n    if (getDesktopDisplayMode().bitsPerPixel == 16) {\n      bufferFormat=new BufferFormat(5,6,5,0,8,0,0,false);\n    }\n    if (getDesktopDisplayMode().bitsPerPixel == 24) {\n      bufferFormat=new BufferFormat(8,8,8,0,8,0,0,false);\n    }\n    if (getDesktopDisplayMode().bitsPerPixel == 32) {\n      bufferFormat=new BufferFormat(8,8,8,8,8,0,0,false);\n    }\n  }\n}\n\n112 ANTI-PATTERN WEPG : Wrapping the exception and passing getMessage() destroys the stack trace of original exception\n\n---\n\n---\n\n113 FILE NAME : libgdx-master\\backends\\gdx-backend-lwjgl\\src\\com\\badlogic\\gdx\\backends\\lwjgl\\LwjglGraphics.java\n\n114 CATCH CLAUSE : catch (Exception ex) {\n  Display.destroy();\n  try {\n    Thread.sleep(200);\n  }\n catch (  InterruptedException ignored) {\n  }\n  try {\n    Display.create(new PixelFormat(0,16,8));\n    if (getDesktopDisplayMode().bitsPerPixel == 16) {\n      bufferFormat=new BufferFormat(5,6,5,0,16,8,0,false);\n    }\n    if (getDesktopDisplayMode().bitsPerPixel == 24) {\n      bufferFormat=new BufferFormat(8,8,8,0,16,8,0,false);\n    }\n    if (getDesktopDisplayMode().bitsPerPixel == 32) {\n      bufferFormat=new BufferFormat(8,8,8,8,16,8,0,false);\n    }\n  }\n catch (  Exception ex2) {\n    Display.destroy();\n    try {\n      Thread.sleep(200);\n    }\n catch (    InterruptedException ignored) {\n    }\n    try {\n      Display.create(new PixelFormat());\n    }\n catch (    Exception ex3) {\n      if (ex3.getMessage().contains(\"Pixel format not accelerated\")) {\n        if (!softwareMode && config.allowSoftwareMode) {\n          softwareMode=true;\n          System.setProperty(\"org.lwjgl.opengl.Display.allowSoftwareOpenGL\",\"true\");\n          createDisplayPixelFormat();\n          return;\n        }\n        String glInfo=\".\";\n        try {\n          glInfo=\": \" + GL11.glGetString(GL11.GL_VENDOR) + \" \"+ GL11.glGetString(GL11.GL_RENDERER)+ \" \"+ GL11.glGetString(GL11.GL_VERSION);\n        }\n catch (        Throwable ignored) {\n        }\n        throw new GdxRuntimeException(\"OpenGL is not supported by the video driver\" + glInfo,ex3);\n      }\n      throw new GdxRuntimeException(\"Unable to create OpenGL display.\",ex3);\n    }\n    if (getDesktopDisplayMode().bitsPerPixel == 16) {\n      bufferFormat=new BufferFormat(5,6,5,0,8,0,0,false);\n    }\n    if (getDesktopDisplayMode().bitsPerPixel == 24) {\n      bufferFormat=new BufferFormat(8,8,8,0,8,0,0,false);\n    }\n    if (getDesktopDisplayMode().bitsPerPixel == 32) {\n      bufferFormat=new BufferFormat(8,8,8,8,8,0,0,false);\n    }\n  }\n}\n\n115 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n116 FILE NAME : libgdx-master\\backends\\gdx-backend-lwjgl\\src\\com\\badlogic\\gdx\\backends\\lwjgl\\LwjglGraphics.java\n\n117 CATCH CLAUSE : catch (Exception ex2) {\n  Display.destroy();\n  try {\n    Thread.sleep(200);\n  }\n catch (  InterruptedException ignored) {\n  }\n  try {\n    Display.create(new PixelFormat());\n  }\n catch (  Exception ex3) {\n    if (ex3.getMessage().contains(\"Pixel format not accelerated\")) {\n      if (!softwareMode && config.allowSoftwareMode) {\n        softwareMode=true;\n        System.setProperty(\"org.lwjgl.opengl.Display.allowSoftwareOpenGL\",\"true\");\n        createDisplayPixelFormat();\n        return;\n      }\n      String glInfo=\".\";\n      try {\n        glInfo=\": \" + GL11.glGetString(GL11.GL_VENDOR) + \" \"+ GL11.glGetString(GL11.GL_RENDERER)+ \" \"+ GL11.glGetString(GL11.GL_VERSION);\n      }\n catch (      Throwable ignored) {\n      }\n      throw new GdxRuntimeException(\"OpenGL is not supported by the video driver\" + glInfo,ex3);\n    }\n    throw new GdxRuntimeException(\"Unable to create OpenGL display.\",ex3);\n  }\n  if (getDesktopDisplayMode().bitsPerPixel == 16) {\n    bufferFormat=new BufferFormat(5,6,5,0,8,0,0,false);\n  }\n  if (getDesktopDisplayMode().bitsPerPixel == 24) {\n    bufferFormat=new BufferFormat(8,8,8,0,8,0,0,false);\n  }\n  if (getDesktopDisplayMode().bitsPerPixel == 32) {\n    bufferFormat=new BufferFormat(8,8,8,8,8,0,0,false);\n  }\n}\n\n118 ANTI-PATTERN WEPG : Wrapping the exception and passing getMessage() destroys the stack trace of original exception\n\n---\n\n---\n\n119 FILE NAME : libgdx-master\\backends\\gdx-backend-lwjgl\\src\\com\\badlogic\\gdx\\backends\\lwjgl\\LwjglGraphics.java\n\n120 CATCH CLAUSE : catch (Exception ex2) {\n  Display.destroy();\n  try {\n    Thread.sleep(200);\n  }\n catch (  InterruptedException ignored) {\n  }\n  try {\n    Display.create(new PixelFormat());\n  }\n catch (  Exception ex3) {\n    if (ex3.getMessage().contains(\"Pixel format not accelerated\")) {\n      if (!softwareMode && config.allowSoftwareMode) {\n        softwareMode=true;\n        System.setProperty(\"org.lwjgl.opengl.Display.allowSoftwareOpenGL\",\"true\");\n        createDisplayPixelFormat();\n        return;\n      }\n      String glInfo=\".\";\n      try {\n        glInfo=\": \" + GL11.glGetString(GL11.GL_VENDOR) + \" \"+ GL11.glGetString(GL11.GL_RENDERER)+ \" \"+ GL11.glGetString(GL11.GL_VERSION);\n      }\n catch (      Throwable ignored) {\n      }\n      throw new GdxRuntimeException(\"OpenGL is not supported by the video driver\" + glInfo,ex3);\n    }\n    throw new GdxRuntimeException(\"Unable to create OpenGL display.\",ex3);\n  }\n  if (getDesktopDisplayMode().bitsPerPixel == 16) {\n    bufferFormat=new BufferFormat(5,6,5,0,8,0,0,false);\n  }\n  if (getDesktopDisplayMode().bitsPerPixel == 24) {\n    bufferFormat=new BufferFormat(8,8,8,0,8,0,0,false);\n  }\n  if (getDesktopDisplayMode().bitsPerPixel == 32) {\n    bufferFormat=new BufferFormat(8,8,8,8,8,0,0,false);\n  }\n}\n\n121 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n122 FILE NAME : libgdx-master\\backends\\gdx-backend-lwjgl\\src\\com\\badlogic\\gdx\\backends\\lwjgl\\LwjglGraphics.java\n\n123 CATCH CLAUSE : catch (Exception ex3) {\n  if (ex3.getMessage().contains(\"Pixel format not accelerated\")) {\n    if (!softwareMode && config.allowSoftwareMode) {\n      softwareMode=true;\n      System.setProperty(\"org.lwjgl.opengl.Display.allowSoftwareOpenGL\",\"true\");\n      createDisplayPixelFormat();\n      return;\n    }\n    String glInfo=\".\";\n    try {\n      glInfo=\": \" + GL11.glGetString(GL11.GL_VENDOR) + \" \"+ GL11.glGetString(GL11.GL_RENDERER)+ \" \"+ GL11.glGetString(GL11.GL_VERSION);\n    }\n catch (    Throwable ignored) {\n    }\n    throw new GdxRuntimeException(\"OpenGL is not supported by the video driver\" + glInfo,ex3);\n  }\n  throw new GdxRuntimeException(\"Unable to create OpenGL display.\",ex3);\n}\n\n124 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n125 FILE NAME : libgdx-master\\backends\\gdx-backend-lwjgl\\src\\com\\badlogic\\gdx\\backends\\lwjgl\\LwjglPreferences.java\n\n126 CATCH CLAUSE : catch (Exception ex) {\n  throw new GdxRuntimeException(\"Error writing preferences: \" + file,ex);\n}\n\n127 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n128 FILE NAME : libgdx-master\\backends\\gdx-backends-gwt\\src\\com\\badlogic\\gdx\\backends\\gwt\\emu\\com\\badlogic\\gdx\\utils\\async\\AsyncTask.java\n\n---\n\n129 FILE NAME : libgdx-master\\backends\\gdx-backends-gwt\\src\\com\\badlogic\\gdx\\backends\\gwt\\GwtApplication.java\n\n130 CATCH CLAUSE : catch (Throwable t) {\n  error(\"GwtApplication\",\"exception: \" + t.getMessage(),t);\n  t.printStackTrace();\n  throw new RuntimeException(t);\n}\n\n131 ANTI-PATTERN PSTE : printing stack-trace and throwing Exception, choose one otherwise it results in multiple log messages (multiple-entries, duplication)\n\n---\n\n---\n\n132 FILE NAME : libgdx-master\\backends\\gdx-backends-gwt\\src\\com\\badlogic\\gdx\\backends\\gwt\\GwtFileHandle.java\n\n133 CATCH CLAUSE : catch (UnsupportedEncodingException e) {\n  return null;\n}\n\n134 ANTI-PATTERN RNHR : just returns null instead of handling or re-throwing the exception, swallows the exception, losing the information forever\n\n---\n\n---\n\n135 FILE NAME : libgdx-master\\backends\\gdx-backends-gwt\\src\\com\\badlogic\\gdx\\backends\\gwt\\GwtPreferences.java\n\n136 CATCH CLAUSE : catch (Exception e) {\n  values.clear();\n}\n\n137 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n138 FILE NAME : libgdx-master\\backends\\gdx-backends-gwt\\src\\com\\badlogic\\gdx\\backends\\gwt\\GwtPreferences.java\n\n139 CATCH CLAUSE : catch (Exception e) {\n  throw new GdxRuntimeException(\"Couldn't flush preferences\");\n}\n\n140 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n141 FILE NAME : libgdx-master\\backends\\gdx-backends-gwt\\src\\com\\badlogic\\gdx\\backends\\gwt\\preloader\\FileWrapper.java\n\n142 CATCH CLAUSE : catch (Exception ex) {\n  if (file().isDirectory())   throw new GdxRuntimeException(\"Cannot open a stream to a directory: \" + file + \" (\"+ type+ \")\",ex);\n  throw new GdxRuntimeException(\"Error reading file: \" + file + \" (\"+ type+ \")\",ex);\n}\n\n143 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n144 FILE NAME : libgdx-master\\backends\\gdx-backends-gwt\\src\\com\\badlogic\\gdx\\backends\\gwt\\preloader\\FileWrapper.java\n\n145 CATCH CLAUSE : catch (Exception ex) {\n  if (file().isDirectory())   throw new GdxRuntimeException(\"Cannot open a stream to a directory: \" + file + \" (\"+ type+ \")\",ex);\n  throw new GdxRuntimeException(\"Error writing file: \" + file + \" (\"+ type+ \")\",ex);\n}\n\n146 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n147 FILE NAME : libgdx-master\\backends\\gdx-backends-gwt\\src\\com\\badlogic\\gdx\\backends\\gwt\\preloader\\FileWrapper.java\n\n148 CATCH CLAUSE : catch (Exception ex) {\n  throw new GdxRuntimeException(\"Error stream writing to file: \" + file + \" (\"+ type+ \")\",ex);\n}\n\n149 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n150 FILE NAME : libgdx-master\\backends\\gdx-backends-gwt\\src\\com\\badlogic\\gdx\\backends\\gwt\\preloader\\FileWrapper.java\n\n151 CATCH CLAUSE : catch (Exception ignored) {\n}\n\n152 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n153 FILE NAME : libgdx-master\\backends\\gdx-backends-gwt\\src\\com\\badlogic\\gdx\\backends\\gwt\\preloader\\FileWrapper.java\n\n154 CATCH CLAUSE : catch (Exception ignored) {\n}\n\n155 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n156 FILE NAME : libgdx-master\\backends\\gdx-backends-gwt\\src\\com\\badlogic\\gdx\\backends\\gwt\\preloader\\FileWrapper.java\n\n157 CATCH CLAUSE : catch (Exception ex) {\n  throw new GdxRuntimeException(\"Error writing file: \" + file + \" (\"+ type+ \")\",ex);\n}\n\n158 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n159 FILE NAME : libgdx-master\\backends\\gdx-backends-gwt\\src\\com\\badlogic\\gdx\\backends\\gwt\\preloader\\FileWrapper.java\n\n160 CATCH CLAUSE : catch (Exception ex) {\n  throw new GdxRuntimeException(\"Error copying source file: \" + source.file + \" (\"+ source.type+ \")\\n\"+ \"To destination: \"+ dest.file+ \" (\"+ dest.type+ \")\",ex);\n}\n\n161 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n162 FILE NAME : libgdx-master\\backends\\gdx-backends-gwt\\src\\com\\badlogic\\gdx\\backends\\gwt\\preloader\\Preloader.java\n\n163 CATCH CLAUSE : catch (UnsupportedEncodingException e) {\n  return null;\n}\n\n164 ANTI-PATTERN RNHR : just returns null instead of handling or re-throwing the exception, swallows the exception, losing the information forever\n\n---\n\n---\n\n165 FILE NAME : libgdx-master\\backends\\gdx-backends-gwt\\src\\com\\badlogic\\gdx\\backends\\gwt\\preloader\\PreloaderBundleGenerator.java\n\n166 CATCH CLAUSE : catch (Exception ex) {\n  throw new GdxRuntimeException(\"Error copying source file: \" + source + \"\\n\"+ \"To destination: \"+ dest,ex);\n}\n\n167 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n168 FILE NAME : libgdx-master\\backends\\gdx-backends-gwt\\src\\com\\badlogic\\gdx\\backends\\gwt\\preloader\\PreloaderBundleGenerator.java\n\n169 CATCH CLAUSE : catch (Exception e) {\n  throw new RuntimeException(\"Couldn't instantiate custom AssetFilter '\" + assetFilterClass + \"', make sure the class is public and has a public default constructor\",e);\n}\n\n170 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n171 FILE NAME : libgdx-master\\backends\\gdx-backends-gwt\\src\\com\\badlogic\\gdx\\backends\\gwt\\preloader\\PreloaderBundleGenerator.java\n\n172 CATCH CLAUSE : catch (BadPropertyValueException e) {\n  return null;\n}\n\n173 ANTI-PATTERN RNHR : just returns null instead of handling or re-throwing the exception, swallows the exception, losing the information forever\n\n---\n\n---\n\n174 FILE NAME : libgdx-master\\extensions\\gdx-box2d\\gdx-box2d\\src\\com\\badlogic\\gdx\\physics\\box2d\\utils\\Box2DBuild.java\n\n175 METHOD NAME : main(String[] args) throws Exception \n\n176 ANTI-PATTERN THGE : Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw\n\n---\n\n---\n\n177 FILE NAME : libgdx-master\\extensions\\gdx-box2d\\gdx-box2d-gwt\\src\\com\\badlogic\\gdx\\physics\\box2d\\gwt\\emu\\org\\jbox2d\\common\\BufferUtils.java\n\n178 CATCH CLAUSE : catch (Exception e) {\n  throw new RuntimeException(e);\n}\n\n179 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n180 FILE NAME : libgdx-master\\extensions\\gdx-box2d\\gdx-box2d-gwt\\src\\com\\badlogic\\gdx\\physics\\box2d\\gwt\\emu\\org\\jbox2d\\particle\\ParticleSystem.java\n\n181 CATCH CLAUSE : catch (Exception e) {\n  throw new RuntimeException(e);\n}\n\n182 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n183 FILE NAME : libgdx-master\\extensions\\gdx-bullet\\src\\com\\badlogic\\gdx\\physics\\bullet\\BulletBuild.java\n\n184 METHOD NAME : main(String[] args) throws Exception \n\n185 ANTI-PATTERN THGE : Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw\n\n---\n\n---\n\n186 FILE NAME : libgdx-master\\extensions\\gdx-controllers\\gdx-controllers\\src\\com\\badlogic\\gdx\\controllers\\mappings\\Ouya.java\n\n187 CATCH CLAUSE : catch (Exception e) {\n}\n\n188 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n189 FILE NAME : libgdx-master\\extensions\\gdx-controllers\\gdx-controllers-android\\src\\com\\badlogic\\gdx\\controllers\\android\\AndroidControllers.java\n\n190 CATCH CLAUSE : catch (Exception e) {\n  Gdx.app.log(TAG,\"Couldn't register controller life-cycle listener\");\n}\n\n191 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n192 FILE NAME : libgdx-master\\extensions\\gdx-controllers\\gdx-controllers-desktop\\src\\com\\badlogic\\gdx\\controllers\\desktop\\DesktopControllersBuild.java\n\n193 METHOD NAME : main(String[] args) throws Exception \n\n194 ANTI-PATTERN THGE : Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw\n\n---\n\n---\n\n195 FILE NAME : libgdx-master\\extensions\\gdx-controllers\\gdx-controllers-desktop\\src\\com\\badlogic\\gdx\\controllers\\desktop\\ois\\OisTest.java\n\n196 METHOD NAME : main(String[] args) throws Exception \n\n197 ANTI-PATTERN THGE : Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw\n\n---\n\n---\n\n198 FILE NAME : libgdx-master\\extensions\\gdx-controllers\\gdx-controllers-desktop\\src\\com\\badlogic\\gdx\\controllers\\desktop\\OisControllers.java\n\n199 CATCH CLAUSE : catch (Exception ex) {\n  throw new RuntimeException(\"Unable to get window handle.\",ex);\n}\n\n200 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n201 FILE NAME : libgdx-master\\extensions\\gdx-controllers\\gdx-controllers-desktop\\src\\com\\badlogic\\gdx\\controllers\\desktop\\OisControllers.java\n\n202 METHOD NAME : invokeMethod(Object object,String methodName) throws Exception \n\n203 ANTI-PATTERN THGE : Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw\n\n---\n\n---\n\n204 FILE NAME : libgdx-master\\extensions\\gdx-freetype\\src\\com\\badlogic\\gdx\\graphics\\g2d\\freetype\\FreetypeBuild.java\n\n205 METHOD NAME : main(String[] args) throws Exception \n\n206 ANTI-PATTERN THGE : Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw\n\n---\n\n---\n\n207 FILE NAME : libgdx-master\\extensions\\gdx-jnigen\\src\\com\\badlogic\\gdx\\jnigen\\BuildExecutor.java\n\n208 CATCH CLAUSE : catch (Exception e) {\n  e.printStackTrace();\n  return false;\n}\n\n209 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n210 FILE NAME : libgdx-master\\extensions\\gdx-jnigen\\src\\com\\badlogic\\gdx\\jnigen\\FileDescriptor.java\n\n211 CATCH CLAUSE : catch (Exception ex) {\n  throw new RuntimeException(\"Error stream writing to file: \" + file + \" (\"+ type+ \")\",ex);\n}\n\n212 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n213 FILE NAME : libgdx-master\\extensions\\gdx-jnigen\\src\\com\\badlogic\\gdx\\jnigen\\FileDescriptor.java\n\n214 CATCH CLAUSE : catch (Exception ignored) {\n}\n\n215 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n216 FILE NAME : libgdx-master\\extensions\\gdx-jnigen\\src\\com\\badlogic\\gdx\\jnigen\\FileDescriptor.java\n\n217 CATCH CLAUSE : catch (Exception ignored) {\n}\n\n218 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n219 FILE NAME : libgdx-master\\extensions\\gdx-jnigen\\src\\com\\badlogic\\gdx\\jnigen\\FileDescriptor.java\n\n220 CATCH CLAUSE : catch (Exception ex) {\n  throw new RuntimeException(\"Error writing file: \" + file + \" (\"+ type+ \")\",ex);\n}\n\n221 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n222 FILE NAME : libgdx-master\\extensions\\gdx-jnigen\\src\\com\\badlogic\\gdx\\jnigen\\FileDescriptor.java\n\n223 CATCH CLAUSE : catch (Exception ignored) {\n}\n\n224 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n225 FILE NAME : libgdx-master\\extensions\\gdx-jnigen\\src\\com\\badlogic\\gdx\\jnigen\\FileDescriptor.java\n\n226 CATCH CLAUSE : catch (Exception ignored) {\n}\n\n227 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n228 FILE NAME : libgdx-master\\extensions\\gdx-jnigen\\src\\com\\badlogic\\gdx\\jnigen\\FileDescriptor.java\n\n229 CATCH CLAUSE : catch (Exception ex) {\n  throw new RuntimeException(\"Error copying source file: \" + source.file + \" (\"+ source.type+ \")\\n\"+ \"To destination: \"+ dest.file+ \" (\"+ dest.type+ \")\",ex);\n}\n\n230 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n231 FILE NAME : libgdx-master\\extensions\\gdx-jnigen\\src\\com\\badlogic\\gdx\\jnigen\\JniGenSharedLibraryLoader.java\n\n232 CATCH CLAUSE : catch (Exception ex) {\n  try {\n    input.close();\n  }\n catch (  Exception ignored) {\n  }\n}\n\n233 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n234 FILE NAME : libgdx-master\\extensions\\gdx-jnigen\\src\\com\\badlogic\\gdx\\jnigen\\JniGenSharedLibraryLoader.java\n\n235 CATCH CLAUSE : catch (Exception ignored) {\n}\n\n236 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n237 FILE NAME : libgdx-master\\extensions\\gdx-jnigen\\src\\com\\badlogic\\gdx\\jnigen\\JniGenSharedLibraryLoader.java\n\n238 CATCH CLAUSE : catch (IOException ex) {\n  ex.printStackTrace();\n  throw new RuntimeException(ex);\n}\n\n239 ANTI-PATTERN PSTE : printing stack-trace and throwing Exception, choose one otherwise it results in multiple log messages (multiple-entries, duplication)\n\n---\n\n---\n\n240 FILE NAME : libgdx-master\\extensions\\gdx-jnigen\\src\\com\\badlogic\\gdx\\jnigen\\NativeCodeGenerator.java\n\n241 METHOD NAME : generated files\n- will be stored in \"jni/\". All paths are relative to the applications working directory.\n- @throws Exception \n  */\n  public void generate() throws Exception \n\n242 ANTI-PATTERN THGE : Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw\n\n---\n\n---\n\n243 FILE NAME : libgdx-master\\extensions\\gdx-jnigen\\src\\com\\badlogic\\gdx\\jnigen\\NativeCodeGenerator.java\n\n244 METHOD NAME : generated files will be stored in <code>jniDir</code>. All paths are relative to the\n- applications working directory.\n- @param sourceDir the directory containing the Java files\n- @param classpath the directory containing the .class files\n- @param jniDir the output directory\n- @throws Exception \n  */\n  public void generate(String sourceDir,String classpath,String jniDir) throws Exception \n\n245 ANTI-PATTERN THGE : Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw\n\n---\n\n---\n\n246 FILE NAME : libgdx-master\\extensions\\gdx-jnigen\\src\\com\\badlogic\\gdx\\jnigen\\NativeCodeGenerator.java\n\n247 METHOD NAME : generated files will be stored in <code>jniDir</code>. The <code>includes</code> and\n- <code>excludes</code> parameters allow to specify directories and files that should be included/excluded from the\n- generation. These can be given in the Ant path format. All paths are relative to the applications working directory.\n- @param sourceDir the directory containing the Java files\n- @param classpath the directory containing the .class files\n- @param jniDir the output directory\n- @param includes files/directories to include, can be null (all files are used)\n- @param excludes files/directories to exclude, can be null (no files are excluded)\n- @throws Exception \n  */\n  public void generate(String sourceDir,String classpath,String jniDir,String[] includes,String[] excludes) throws Exception \n\n248 ANTI-PATTERN THGE : Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw\n\n---\n\n---\n\n249 FILE NAME : libgdx-master\\extensions\\gdx-jnigen\\src\\com\\badlogic\\gdx\\jnigen\\NativeCodeGenerator.java\n\n250 METHOD NAME : processDirectory(FileDescriptor dir) throws Exception \n\n251 ANTI-PATTERN THGE : Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw\n\n---\n\n---\n\n252 FILE NAME : libgdx-master\\extensions\\gdx-jnigen\\src\\com\\badlogic\\gdx\\jnigen\\NativeCodeGenerator.java\n\n253 METHOD NAME : generateHFile(FileDescriptor file) throws Exception \n\n254 ANTI-PATTERN THGE : Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw\n\n---\n\n---\n\n255 FILE NAME : libgdx-master\\extensions\\gdx-jnigen\\src\\com\\badlogic\\gdx\\jnigen\\NativeCodeGenerator.java\n\n256 METHOD NAME : generateCppFile(ArrayList<JavaSegment> javaSegments,FileDescriptor hFile,FileDescriptor cppFile) throws Exception \n\n257 ANTI-PATTERN THGE : Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw\n\n---\n\n---\n\n258 FILE NAME : libgdx-master\\extensions\\gdx-jnigen\\src\\com\\badlogic\\gdx\\jnigen\\parsing\\JavaMethodParser.java\n\n259 METHOD NAME : parse(String classFile) throws Exception \n\n260 ANTI-PATTERN THGE : Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw\n\n---\n\n---\n\n261 FILE NAME : libgdx-master\\extensions\\gdx-jnigen\\src\\com\\badlogic\\gdx\\jnigen\\parsing\\RobustJavaMethodParser.java\n\n262 METHOD NAME : parse(String classFile) throws Exception \n\n263 ANTI-PATTERN THGE : Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw\n\n---\n\n---\n\n264 FILE NAME : libgdx-master\\extensions\\gdx-jnigen\\src\\com\\badlogic\\gdx\\jnigen\\test\\MyJniClass.java\n\n265 METHOD NAME : main(String[] args) throws Exception \n\n266 ANTI-PATTERN THGE : Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw\n\n---\n\n---\n\n267 FILE NAME : libgdx-master\\extensions\\gdx-setup\\src\\com\\badlogic\\gdx\\setup\\Executor.java\n\n268 CATCH CLAUSE : catch (Exception e) {\n  e.printStackTrace();\n  return false;\n}\n\n269 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n270 FILE NAME : libgdx-master\\extensions\\gdx-setup\\src\\com\\badlogic\\gdx\\setup\\GdxSetupUI.java\n\n271 METHOD NAME : main(String[] args) throws Exception \n\n272 ANTI-PATTERN THGE : Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw\n\n---\n\n---\n\n273 FILE NAME : libgdx-master\\extensions\\gdx-tools\\src\\com\\badlogic\\gdx\\tiledmappacker\\TiledMapPacker.java\n\n274 CATCH CLAUSE : catch (ParserConfigurationException e) {\n  throw new RuntimeException(\"ParserConfigurationException: \" + e.getMessage());\n}\n\n275 ANTI-PATTERN WEPG : Wrapping the exception and passing getMessage() destroys the stack trace of original exception\n\n---\n\n---\n\n276 FILE NAME : libgdx-master\\extensions\\gdx-tools\\src\\com\\badlogic\\gdx\\tiledmappacker\\TiledMapPacker.java\n\n277 CATCH CLAUSE : catch (SAXException e) {\n  throw new RuntimeException(\"SAXException: \" + e.getMessage());\n}\n\n278 ANTI-PATTERN WEPG : Wrapping the exception and passing getMessage() destroys the stack trace of original exception\n\n---\n\n---\n\n279 FILE NAME : libgdx-master\\extensions\\gdx-tools\\src\\com\\badlogic\\gdx\\tiledmappacker\\TiledMapPacker.java\n\n280 CATCH CLAUSE : catch (TransformerConfigurationException e) {\n  throw new RuntimeException(\"TransformerConfigurationException: \" + e.getMessage());\n}\n\n281 ANTI-PATTERN WEPG : Wrapping the exception and passing getMessage() destroys the stack trace of original exception\n\n---\n\n---\n\n282 FILE NAME : libgdx-master\\extensions\\gdx-tools\\src\\com\\badlogic\\gdx\\tiledmappacker\\TiledMapPacker.java\n\n283 CATCH CLAUSE : catch (TransformerException e) {\n  throw new RuntimeException(\"TransformerException: \" + e.getMessage());\n}\n\n284 ANTI-PATTERN WEPG : Wrapping the exception and passing getMessage() destroys the stack trace of original exception\n\n---\n\n---\n\n285 FILE NAME : libgdx-master\\extensions\\gdx-tools\\src\\com\\badlogic\\gdx\\tiledmappacker\\TiledMapPacker.java\n\n286 CATCH CLAUSE : catch (IOException e) {\n  throw new RuntimeException(\"Error processing map: \" + e.getMessage());\n}\n\n287 ANTI-PATTERN WEPG : Wrapping the exception and passing getMessage() destroys the stack trace of original exception\n\n---\n\n---\n\n288 FILE NAME : libgdx-master\\extensions\\gdx-tools\\src\\com\\badlogic\\gdx\\tools\\etc1\\ETC1Compressor.java\n\n289 METHOD NAME : processFile(Entry entry) throws Exception \n\n290 ANTI-PATTERN THGE : Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw\n\n---\n\n---\n\n291 FILE NAME : libgdx-master\\extensions\\gdx-tools\\src\\com\\badlogic\\gdx\\tools\\etc1\\ETC1Compressor.java\n\n292 METHOD NAME : processDir(Entry entryDir,ArrayList<Entry> value) throws Exception \n\n293 ANTI-PATTERN THGE : Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw\n\n---\n\n---\n\n294 FILE NAME : libgdx-master\\extensions\\gdx-tools\\src\\com\\badlogic\\gdx\\tools\\etc1\\ETC1Compressor.java\n\n295 METHOD NAME : process(String inputDirectory,String outputDirectory,boolean recursive,boolean flatten) throws Exception \n\n296 ANTI-PATTERN THGE : Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw\n\n---\n\n---\n\n297 FILE NAME : libgdx-master\\extensions\\gdx-tools\\src\\com\\badlogic\\gdx\\tools\\etc1\\ETC1Compressor.java\n\n298 METHOD NAME : main(String[] args) throws Exception \n\n299 ANTI-PATTERN THGE : Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw\n\n---\n\n---\n\n300 FILE NAME : libgdx-master\\extensions\\gdx-tools\\src\\com\\badlogic\\gdx\\tools\\FileProcessor.java\n\n301 METHOD NAME : process(File,File) \n */\npublic ArrayList<Entry> process(String inputFile,String outputRoot) throws Exception \n\n302 ANTI-PATTERN THGE : Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw\n\n---\n\n---\n\n303 FILE NAME : libgdx-master\\extensions\\gdx-tools\\src\\com\\badlogic\\gdx\\tools\\FileProcessor.java\n\n304 METHOD NAME : processing the files.\n- @return the processed files added with \n\n305 ANTI-PATTERN THGE : Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw\n\n---\n\n---\n\n306 FILE NAME : libgdx-master\\extensions\\gdx-tools\\src\\com\\badlogic\\gdx\\tools\\FileProcessor.java\n\n307 METHOD NAME : processing the files.\n- @return the processed files added with \n\n308 ANTI-PATTERN THGE : Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw\n\n---\n\n---\n\n309 FILE NAME : libgdx-master\\extensions\\gdx-tools\\src\\com\\badlogic\\gdx\\tools\\FileProcessor.java\n\n310 CATCH CLAUSE : catch (Exception ex) {\n  throw new Exception(\"Error processing directory: \" + entry.inputFile.getAbsolutePath(),ex);\n}\n\n311 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n312 FILE NAME : libgdx-master\\extensions\\gdx-tools\\src\\com\\badlogic\\gdx\\tools\\FileProcessor.java\n\n313 CATCH CLAUSE : catch (Exception ex) {\n  throw new Exception(\"Error processing file: \" + entry.inputFile.getAbsolutePath(),ex);\n}\n\n314 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n315 FILE NAME : libgdx-master\\extensions\\gdx-tools\\src\\com\\badlogic\\gdx\\tools\\FileProcessor.java\n\n316 METHOD NAME : processFile(Entry entry) throws Exception \n\n317 ANTI-PATTERN THGE : Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw\n\n---\n\n---\n\n318 FILE NAME : libgdx-master\\extensions\\gdx-tools\\src\\com\\badlogic\\gdx\\tools\\FileProcessor.java\n\n---\n\n319 FILE NAME : libgdx-master\\extensions\\gdx-tools\\src\\com\\badlogic\\gdx\\tools\\flame\\FlameMain.java\n\n320 CATCH CLAUSE : catch (Exception e1) {\n  e1.printStackTrace();\n}\n\n321 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n322 FILE NAME : libgdx-master\\extensions\\gdx-tools\\src\\com\\badlogic\\gdx\\tools\\flame\\FlameMain.java\n\n323 CATCH CLAUSE : catch (Exception ex) {\n  System.out.println(\"Error saving effect: \" + file.getAbsolutePath());\n  ex.printStackTrace();\n  JOptionPane.showMessageDialog(this,\"Error saving effect.\");\n}\n\n324 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n325 FILE NAME : libgdx-master\\extensions\\gdx-tools\\src\\com\\badlogic\\gdx\\tools\\flame\\FlameMain.java\n\n326 CATCH CLAUSE : catch (Exception ex) {\n  System.out.println(\"Error loading effect: \" + file.getAbsolutePath());\n  ex.printStackTrace();\n  JOptionPane.showMessageDialog(this,\"Error opening effect.\");\n}\n\n327 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n328 FILE NAME : libgdx-master\\extensions\\gdx-tools\\src\\com\\badlogic\\gdx\\tools\\flame\\LoaderButton.java\n\n329 CATCH CLAUSE : catch (Exception ex) {\n  System.out.println(\"Error loading effect: \" + file.getAbsolutePath());\n  ex.printStackTrace();\n  JOptionPane.showMessageDialog(getParent(),\"Error opening effect.\");\n  return;\n}\n\n330 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n331 FILE NAME : libgdx-master\\extensions\\gdx-tools\\src\\com\\badlogic\\gdx\\tools\\flame\\LoaderButton.java\n\n332 CATCH CLAUSE : catch (Exception ex) {\n  System.out.println(\"Error loading model: \" + file.getAbsolutePath());\n  ex.printStackTrace();\n  JOptionPane.showMessageDialog(getParent(),\"Error opening effect.\");\n  return;\n}\n\n333 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n334 FILE NAME : libgdx-master\\extensions\\gdx-tools\\src\\com\\badlogic\\gdx\\tools\\flame\\PreAlpha.java\n\n335 CATCH CLAUSE : catch (Exception ex) {\n  JOptionPane.showMessageDialog(this,\"Error saving image.\");\n  return;\n}\n\n336 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n337 FILE NAME : libgdx-master\\extensions\\gdx-tools\\src\\com\\badlogic\\gdx\\tools\\flame\\PreAlpha.java\n\n338 CATCH CLAUSE : catch (Exception ex) {\n  JOptionPane.showMessageDialog(this,\"Error opening image.\");\n  return;\n}\n\n339 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n340 FILE NAME : libgdx-master\\extensions\\gdx-tools\\src\\com\\badlogic\\gdx\\tools\\headers\\HeaderFixer.java\n\n341 METHOD NAME : processFile(Entry inputFile) throws Exception \n\n342 ANTI-PATTERN THGE : Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw\n\n---\n\n---\n\n343 FILE NAME : libgdx-master\\extensions\\gdx-tools\\src\\com\\badlogic\\gdx\\tools\\headers\\HeaderFixer.java\n\n344 METHOD NAME : processDir(Entry inputDir,ArrayList<Entry> value) throws Exception \n\n345 ANTI-PATTERN THGE : Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw\n\n---\n\n---\n\n346 FILE NAME : libgdx-master\\extensions\\gdx-tools\\src\\com\\badlogic\\gdx\\tools\\headers\\HeaderFixer.java\n\n347 METHOD NAME : process(String directory) throws Exception \n\n348 ANTI-PATTERN THGE : Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw\n\n---\n\n---\n\n349 FILE NAME : libgdx-master\\extensions\\gdx-tools\\src\\com\\badlogic\\gdx\\tools\\headers\\HeaderFixer.java\n\n350 METHOD NAME : main(String[] args) throws Exception \n\n351 ANTI-PATTERN THGE : Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw\n\n---\n\n---\n\n352 FILE NAME : libgdx-master\\extensions\\gdx-tools\\src\\com\\badlogic\\gdx\\tools\\hiero\\Hiero.java\n\n353 CATCH CLAUSE : catch (Exception ex) {\n}\n\n354 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n355 FILE NAME : libgdx-master\\extensions\\gdx-tools\\src\\com\\badlogic\\gdx\\tools\\hiero\\Hiero.java\n\n356 METHOD NAME : main(String[] args) throws Exception \n\n357 ANTI-PATTERN THGE : Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw\n\n---\n\n---\n\n358 FILE NAME : libgdx-master\\extensions\\gdx-tools\\src\\com\\badlogic\\gdx\\tools\\hiero\\Hiero4.java\n\n359 CATCH CLAUSE : catch (Exception ex) {\n  return null;\n}\n\n360 ANTI-PATTERN RNHR : just returns null instead of handling or re-throwing the exception, swallows the exception, losing the information forever\n\n---\n\n---\n\n361 FILE NAME : libgdx-master\\extensions\\gdx-tools\\src\\com\\badlogic\\gdx\\tools\\hiero\\Hiero4.java\n\n362 CATCH CLAUSE : catch (Exception ex) {\n  return null;\n}\n\n363 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n364 FILE NAME : libgdx-master\\extensions\\gdx-tools\\src\\com\\badlogic\\gdx\\tools\\hiero\\Hiero4.java\n\n365 METHOD NAME : main(String[] args) throws Exception \n\n366 ANTI-PATTERN THGE : Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw\n\n---\n\n---\n\n367 FILE NAME : libgdx-master\\extensions\\gdx-tools\\src\\com\\badlogic\\gdx\\tools\\particleeditor\\EffectPanel.java\n\n368 CATCH CLAUSE : catch (Exception ex) {\n  System.out.println(\"Error loading effect: \" + new File(dir,file).getAbsolutePath());\n  ex.printStackTrace();\n  JOptionPane.showMessageDialog(editor,\"Error opening effect.\");\n  return;\n}\n\n369 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n370 FILE NAME : libgdx-master\\extensions\\gdx-tools\\src\\com\\badlogic\\gdx\\tools\\particleeditor\\EffectPanel.java\n\n371 CATCH CLAUSE : catch (Exception ex) {\n  System.out.println(\"Error saving effect: \" + outputFile.getAbsolutePath());\n  ex.printStackTrace();\n  JOptionPane.showMessageDialog(editor,\"Error saving effect.\");\n}\n\n372 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n373 FILE NAME : libgdx-master\\extensions\\gdx-tools\\src\\com\\badlogic\\gdx\\tools\\particleeditor\\ImagePanel.java\n\n374 CATCH CLAUSE : catch (Exception ex) {\n  ex.printStackTrace();\n}\n\n375 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n376 FILE NAME : libgdx-master\\extensions\\gdx-tools\\src\\com\\badlogic\\gdx\\tools\\particleeditor\\NewSlider.java\n\n377 METHOD NAME : main(String[] args) throws Exception \n\n378 ANTI-PATTERN THGE : Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw\n\n---\n\n---\n\n379 FILE NAME : libgdx-master\\extensions\\gdx-tools\\src\\com\\badlogic\\gdx\\tools\\particleeditor\\Slider.java\n\n380 METHOD NAME : main(String[] args) throws Exception \n\n381 ANTI-PATTERN THGE : Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw\n\n---\n\n---\n\n382 FILE NAME : libgdx-master\\extensions\\gdx-tools\\src\\com\\badlogic\\gdx\\tools\\texturepacker\\TexturePacker.java\n\n383 CATCH CLAUSE : catch (Exception ignored) {\n}\n\n384 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n385 FILE NAME : libgdx-master\\extensions\\gdx-tools\\src\\com\\badlogic\\gdx\\tools\\texturepacker\\TexturePacker.java\n\n386 CATCH CLAUSE : catch (Exception ex) {\n  throw new RuntimeException(\"Error packing files.\",ex);\n}\n\n387 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n388 FILE NAME : libgdx-master\\extensions\\gdx-tools\\src\\com\\badlogic\\gdx\\tools\\texturepacker\\TexturePacker.java\n\n389 METHOD NAME : main(String[] args) throws Exception \n\n390 ANTI-PATTERN THGE : Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw\n\n---\n\n---\n\n391 FILE NAME : libgdx-master\\extensions\\gdx-tools\\src\\com\\badlogic\\gdx\\tools\\texturepacker\\TexturePackerFileProcessor.java\n\n392 METHOD NAME : process(File inputFile,File outputRoot) throws Exception \n\n393 ANTI-PATTERN THGE : Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw\n\n---\n\n---\n\n394 FILE NAME : libgdx-master\\extensions\\gdx-tools\\src\\com\\badlogic\\gdx\\tools\\texturepacker\\TexturePackerFileProcessor.java\n\n395 METHOD NAME : processFile(Entry inputFile) throws Exception \n\n396 ANTI-PATTERN THGE : Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw\n\n---\n\n---\n\n397 FILE NAME : libgdx-master\\extensions\\gdx-tools\\src\\com\\badlogic\\gdx\\tools\\texturepacker\\TexturePackerFileProcessor.java\n\n398 CATCH CLAUSE : catch (Exception ex) {\n  throw new GdxRuntimeException(\"Error reading settings file: \" + settingsFile,ex);\n}\n\n399 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n400 FILE NAME : libgdx-master\\extensions\\gdx-tools\\src\\com\\badlogic\\gdx\\tools\\texturepacker\\TexturePackerFileProcessor.java\n\n401 METHOD NAME : process(File[] files,File outputRoot) throws Exception \n\n402 ANTI-PATTERN THGE : Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw\n\n---\n\n---\n\n403 FILE NAME : libgdx-master\\extensions\\gdx-tools\\src\\com\\badlogic\\gdx\\tools\\texturepacker\\TexturePackerFileProcessor.java\n\n404 METHOD NAME : processFile(Entry inputFile) throws Exception \n\n405 ANTI-PATTERN THGE : Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw\n\n---\n\n---\n\n406 FILE NAME : libgdx-master\\extensions\\gdx-tools\\src\\com\\badlogic\\gdx\\tools\\texturepacker\\TexturePackerFileProcessor.java\n\n407 METHOD NAME : processDir(Entry inputDir,ArrayList<Entry> files) throws Exception \n\n408 ANTI-PATTERN THGE : Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw\n\n---\n\n---\n\n409 FILE NAME : libgdx-master\\extensions\\gdx-tools\\src\\com\\badlogic\\gdx\\tools\\texturepacker\\TexturePackerFileProcessor.java\n\n410 CATCH CLAUSE : catch (Exception ignored) {\n}\n\n411 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n412 FILE NAME : libgdx-master\\extensions\\gdx-tools\\src\\com\\badlogic\\gdx\\tools\\texturepacker\\TexturePackerFileProcessor.java\n\n413 CATCH CLAUSE : catch (Exception ignored) {\n}\n\n414 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n415 FILE NAME : libgdx-master\\extensions\\gdx-tools\\src\\com\\badlogic\\gdx\\tools\\texturepacker\\TexturePackerTest.java\n\n416 METHOD NAME : main(String[] args) throws Exception \n\n417 ANTI-PATTERN THGE : Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw\n\n---\n\n---\n\n418 FILE NAME : libgdx-master\\extensions\\gdx-tools\\src\\com\\badlogic\\gdx\\tools\\texturepacker\\TextureUnpacker.java\n\n419 CATCH CLAUSE : catch (Exception e) {\n  path=false;\n}\n\n420 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n421 FILE NAME : libgdx-master\\gdx\\src\\com\\badlogic\\gdx\\assets\\AssetLoadingTask.java\n\n---\n\n422 FILE NAME : libgdx-master\\gdx\\src\\com\\badlogic\\gdx\\files\\FileHandle.java\n\n423 CATCH CLAUSE : catch (Exception ex) {\n  if (file().isDirectory())   throw new GdxRuntimeException(\"Cannot open a stream to a directory: \" + file + \" (\"+ type+ \")\",ex);\n  throw new GdxRuntimeException(\"Error reading file: \" + file + \" (\"+ type+ \")\",ex);\n}\n\n424 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n425 FILE NAME : libgdx-master\\gdx\\src\\com\\badlogic\\gdx\\files\\FileHandle.java\n\n426 CATCH CLAUSE : catch (Exception ex) {\n  if (file().isDirectory())   throw new GdxRuntimeException(\"Cannot open a stream to a directory: \" + file + \" (\"+ type+ \")\",ex);\n  throw new GdxRuntimeException(\"Error writing file: \" + file + \" (\"+ type+ \")\",ex);\n}\n\n427 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n428 FILE NAME : libgdx-master\\gdx\\src\\com\\badlogic\\gdx\\files\\FileHandle.java\n\n429 CATCH CLAUSE : catch (Exception ex) {\n  throw new GdxRuntimeException(\"Error stream writing to file: \" + file + \" (\"+ type+ \")\",ex);\n}\n\n430 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n431 FILE NAME : libgdx-master\\gdx\\src\\com\\badlogic\\gdx\\files\\FileHandle.java\n\n432 CATCH CLAUSE : catch (Exception ex) {\n  throw new GdxRuntimeException(\"Error writing file: \" + file + \" (\"+ type+ \")\",ex);\n}\n\n433 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n434 FILE NAME : libgdx-master\\gdx\\src\\com\\badlogic\\gdx\\files\\FileHandle.java\n\n435 CATCH CLAUSE : catch (Exception ignored) {\n}\n\n436 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n437 FILE NAME : libgdx-master\\gdx\\src\\com\\badlogic\\gdx\\files\\FileHandle.java\n\n438 CATCH CLAUSE : catch (Exception ex) {\n  throw new GdxRuntimeException(\"Error copying source file: \" + source.file + \" (\"+ source.type+ \")\\n\"+ \"To destination: \"+ dest.file+ \" (\"+ dest.type+ \")\",ex);\n}\n\n439 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n440 FILE NAME : libgdx-master\\gdx\\src\\com\\badlogic\\gdx\\graphics\\g2d\\BitmapFont.java\n\n441 CATCH CLAUSE : catch (Exception ex) {\n  throw new GdxRuntimeException(\"Error loading font file: \" + fontFile,ex);\n}\n\n442 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n443 FILE NAME : libgdx-master\\gdx\\src\\com\\badlogic\\gdx\\graphics\\g2d\\Gdx2DPixmap.java\n\n444 CATCH CLAUSE : catch (IOException e) {\n  return null;\n}\n\n445 ANTI-PATTERN RNHR : just returns null instead of handling or re-throwing the exception, swallows the exception, losing the information forever\n\n---\n\n---\n\n446 FILE NAME : libgdx-master\\gdx\\src\\com\\badlogic\\gdx\\graphics\\g2d\\Gdx2DPixmap.java\n\n447 CATCH CLAUSE : catch (IllegalArgumentException e) {\n  return null;\n}\n\n448 ANTI-PATTERN RNHR : just returns null instead of handling or re-throwing the exception, swallows the exception, losing the information forever\n\n---\n\n---\n\n449 FILE NAME : libgdx-master\\gdx\\src\\com\\badlogic\\gdx\\graphics\\g2d\\TextureAtlas.java\n\n450 CATCH CLAUSE : catch (Exception ex) {\n  throw new GdxRuntimeException(\"Error reading pack file: \" + packFile,ex);\n}\n\n451 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n452 FILE NAME : libgdx-master\\gdx\\src\\com\\badlogic\\gdx\\graphics\\g3d\\loader\\ObjLoader.java\n\n453 CATCH CLAUSE : catch (IOException e) {\n  return null;\n}\n\n454 ANTI-PATTERN RNHR : just returns null instead of handling or re-throwing the exception, swallows the exception, losing the information forever\n\n---\n\n---\n\n455 FILE NAME : libgdx-master\\gdx\\src\\com\\badlogic\\gdx\\graphics\\glutils\\ETC1.java\n\n456 CATCH CLAUSE : catch (Exception e) {\n  throw new GdxRuntimeException(\"Couldn't load pkm file '\" + pkmFile + \"'\",e);\n}\n\n457 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n458 FILE NAME : libgdx-master\\gdx\\src\\com\\badlogic\\gdx\\graphics\\glutils\\ETC1.java\n\n459 CATCH CLAUSE : catch (Exception e) {\n  throw new GdxRuntimeException(\"Couldn't write PKM file to '\" + file + \"'\",e);\n}\n\n460 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n461 FILE NAME : libgdx-master\\gdx\\src\\com\\badlogic\\gdx\\graphics\\Pixmap.java\n\n462 CATCH CLAUSE : catch (Exception e) {\n  throw new GdxRuntimeException(\"Couldn't load file: \" + file,e);\n}\n\n463 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n464 FILE NAME : libgdx-master\\gdx\\src\\com\\badlogic\\gdx\\graphics\\PixmapIO.java\n\n465 CATCH CLAUSE : catch (Exception e) {\n  throw new GdxRuntimeException(\"Couldn't write Pixmap to file '\" + file + \"'\",e);\n}\n\n466 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n467 FILE NAME : libgdx-master\\gdx\\src\\com\\badlogic\\gdx\\graphics\\PixmapIO.java\n\n468 CATCH CLAUSE : catch (Exception e) {\n  throw new GdxRuntimeException(\"Couldn't read Pixmap from file '\" + file + \"'\",e);\n}\n\n469 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n470 FILE NAME : libgdx-master\\gdx\\src\\com\\badlogic\\gdx\\input\\RemoteInput.java\n\n471 CATCH CLAUSE : catch (Exception e) {\n  throw new GdxRuntimeException(\"Couldn't open listening socket at port '\" + port + \"'\",e);\n}\n\n472 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n473 FILE NAME : libgdx-master\\gdx\\src\\com\\badlogic\\gdx\\input\\RemoteSender.java\n\n474 CATCH CLAUSE : catch (Exception e) {\n  Gdx.app.log(\"RemoteSender\",\"couldn't connect to \" + ip + \":\"+ port);\n}\n\n475 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n476 FILE NAME : libgdx-master\\gdx\\src\\com\\badlogic\\gdx\\maps\\tiled\\AtlasTmxMapLoader.java\n\n477 CATCH CLAUSE : catch (Exception e) {\n  throw new GdxRuntimeException(\"Couldn't load tilemap '\" + fileName + \"'\",e);\n}\n\n478 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n479 FILE NAME : libgdx-master\\gdx\\src\\com\\badlogic\\gdx\\maps\\tiled\\TideMapLoader.java\n\n480 CATCH CLAUSE : catch (Exception e) {\n  throw new GdxRuntimeException(\"Couldn't load tilemap '\" + fileName + \"'\",e);\n}\n\n481 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n482 FILE NAME : libgdx-master\\gdx\\src\\com\\badlogic\\gdx\\maps\\tiled\\TmxMapHelper.java\n\n483 CATCH CLAUSE : catch (IOException e) {\n  throw new GdxRuntimeException(\"Error Reading TMX Layer Data - IOException: \" + e.getMessage());\n}\n\n484 ANTI-PATTERN WEPG : Wrapping the exception and passing getMessage() destroys the stack trace of original exception\n\n---\n\n---\n\n485 FILE NAME : libgdx-master\\gdx\\src\\com\\badlogic\\gdx\\maps\\tiled\\TmxMapLoader.java\n\n486 CATCH CLAUSE : catch (Exception e) {\n  throw new GdxRuntimeException(\"Couldn't load tilemap '\" + fileName + \"'\",e);\n}\n\n487 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n488 FILE NAME : libgdx-master\\gdx\\src\\com\\badlogic\\gdx\\net\\NetJavaImpl.java\n\n489 CATCH CLAUSE : catch (final Exception e) {\n  connection.disconnect();\n  lock.lock();\n  try {\n    httpResponseListener.failed(e);\n  }\n  finally {\n    connections.remove(httpRequest);\n    listeners.remove(httpRequest);\n    lock.unlock();\n  }\n}\n\n490 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n491 FILE NAME : libgdx-master\\gdx\\src\\com\\badlogic\\gdx\\net\\NetJavaImpl.java\n\n492 CATCH CLAUSE : catch (Exception e) {\n  lock.lock();\n  try {\n    httpResponseListener.failed(e);\n  }\n  finally {\n    connections.remove(httpRequest);\n    listeners.remove(httpRequest);\n    lock.unlock();\n  }\n  return;\n}\n\n493 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n494 FILE NAME : libgdx-master\\gdx\\src\\com\\badlogic\\gdx\\net\\NetJavaServerSocketImpl.java\n\n495 CATCH CLAUSE : catch (Exception e) {\n  throw new GdxRuntimeException(\"Cannot create a server socket at port \" + port + \".\",e);\n}\n\n496 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n497 FILE NAME : libgdx-master\\gdx\\src\\com\\badlogic\\gdx\\net\\NetJavaServerSocketImpl.java\n\n498 CATCH CLAUSE : catch (Exception e) {\n  throw new GdxRuntimeException(\"Error accepting socket.\",e);\n}\n\n499 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n500 FILE NAME : libgdx-master\\gdx\\src\\com\\badlogic\\gdx\\net\\NetJavaServerSocketImpl.java\n\n501 CATCH CLAUSE : catch (Exception e) {\n  throw new GdxRuntimeException(\"Error closing server.\",e);\n}\n\n502 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n503 FILE NAME : libgdx-master\\gdx\\src\\com\\badlogic\\gdx\\net\\NetJavaSocketImpl.java\n\n504 CATCH CLAUSE : catch (Exception e) {\n  throw new GdxRuntimeException(\"Error making a socket connection to \" + host + \":\"+ port,e);\n}\n\n505 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n506 FILE NAME : libgdx-master\\gdx\\src\\com\\badlogic\\gdx\\net\\NetJavaSocketImpl.java\n\n507 CATCH CLAUSE : catch (Exception e) {\n  throw new GdxRuntimeException(\"Error setting socket hints.\",e);\n}\n\n508 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n509 FILE NAME : libgdx-master\\gdx\\src\\com\\badlogic\\gdx\\net\\NetJavaSocketImpl.java\n\n510 CATCH CLAUSE : catch (Exception e) {\n  throw new GdxRuntimeException(\"Error getting input stream from socket.\",e);\n}\n\n511 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n512 FILE NAME : libgdx-master\\gdx\\src\\com\\badlogic\\gdx\\net\\NetJavaSocketImpl.java\n\n513 CATCH CLAUSE : catch (Exception e) {\n  throw new GdxRuntimeException(\"Error getting output stream from socket.\",e);\n}\n\n514 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n515 FILE NAME : libgdx-master\\gdx\\src\\com\\badlogic\\gdx\\net\\NetJavaSocketImpl.java\n\n516 CATCH CLAUSE : catch (Exception e) {\n  throw new GdxRuntimeException(\"Error closing socket.\",e);\n}\n\n517 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n518 FILE NAME : libgdx-master\\gdx\\src\\com\\badlogic\\gdx\\scenes\\scene2d\\ui\\Skin.java\n\n519 CATCH CLAUSE : catch (Exception ignored) {\n  return;\n}\n\n520 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n521 FILE NAME : libgdx-master\\gdx\\src\\com\\badlogic\\gdx\\scenes\\scene2d\\ui\\Skin.java\n\n522 CATCH CLAUSE : catch (Exception ignored) {\n}\n\n523 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n524 FILE NAME : libgdx-master\\gdx\\src\\com\\badlogic\\gdx\\scenes\\scene2d\\ui\\Skin.java\n\n525 CATCH CLAUSE : catch (Exception ex) {\n  throw new SerializationException(\"Error reading \" + ClassReflection.getSimpleName(type) + \": \"+ valueEntry.name(),ex);\n}\n\n526 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n527 FILE NAME : libgdx-master\\gdx\\src\\com\\badlogic\\gdx\\utils\\async\\AsyncExecutor.java\n\n528 METHOD NAME : call() throws Exception \n\n529 ANTI-PATTERN THGE : Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw\n\n---\n\n---\n\n530 FILE NAME : libgdx-master\\gdx\\src\\com\\badlogic\\gdx\\utils\\async\\AsyncResult.java\n\n531 CATCH CLAUSE : catch (InterruptedException ex) {\n  return null;\n}\n\n532 ANTI-PATTERN RNHR : just returns null instead of handling or re-throwing the exception, swallows the exception, losing the information forever\n\n---\n\n---\n\n533 FILE NAME : libgdx-master\\gdx\\src\\com\\badlogic\\gdx\\utils\\async\\AsyncTask.java\n\n---\n\n534 FILE NAME : libgdx-master\\gdx\\src\\com\\badlogic\\gdx\\utils\\GdxBuild.java\n\n535 METHOD NAME : main(String[] args) throws Exception \n\n536 ANTI-PATTERN THGE : Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw\n\n---\n\n---\n\n537 FILE NAME : libgdx-master\\gdx\\src\\com\\badlogic\\gdx\\utils\\Json.java\n\n538 CATCH CLAUSE : catch (Exception ex) {\n  throw new SerializationException(\"Error writing file: \" + file,ex);\n}\n\n539 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n540 FILE NAME : libgdx-master\\gdx\\src\\com\\badlogic\\gdx\\utils\\Json.java\n\n541 CATCH CLAUSE : catch (Exception runtimeEx) {\n  SerializationException ex=new SerializationException(runtimeEx);\n  ex.addTrace(field + \" (\" + type.getName()+ \")\");\n  throw ex;\n}\n\n542 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n543 FILE NAME : libgdx-master\\gdx\\src\\com\\badlogic\\gdx\\utils\\Json.java\n\n544 CATCH CLAUSE : catch (Exception ex) {\n  classToDefaultValues.put(type,null);\n  return null;\n}\n\n545 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n546 FILE NAME : libgdx-master\\gdx\\src\\com\\badlogic\\gdx\\utils\\Json.java\n\n547 CATCH CLAUSE : catch (Exception runtimeEx) {\n  SerializationException ex=new SerializationException(runtimeEx);\n  ex.addTrace(field + \" (\" + type.getName()+ \")\");\n  throw ex;\n}\n\n548 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n549 FILE NAME : libgdx-master\\gdx\\src\\com\\badlogic\\gdx\\utils\\Json.java\n\n550 CATCH CLAUSE : catch (Exception ex) {\n  throw new SerializationException(\"Error reading file: \" + file,ex);\n}\n\n551 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n552 FILE NAME : libgdx-master\\gdx\\src\\com\\badlogic\\gdx\\utils\\Json.java\n\n553 CATCH CLAUSE : catch (Exception ex) {\n  throw new SerializationException(\"Error reading file: \" + file,ex);\n}\n\n554 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n555 FILE NAME : libgdx-master\\gdx\\src\\com\\badlogic\\gdx\\utils\\Json.java\n\n556 CATCH CLAUSE : catch (Exception ex) {\n  try {\n    Constructor constructor=ClassReflection.getDeclaredConstructor(type);\n    constructor.setAccessible(true);\n    return constructor.newInstance();\n  }\n catch (  SecurityException ignored) {\n  }\ncatch (  ReflectionException ignored) {\n    if (ClassReflection.isAssignableFrom(Enum.class,type)) {\n      if (type.getEnumConstants() == null)       type=type.getSuperclass();\n      return type.getEnumConstants()[0];\n    }\n    if (type.isArray())     throw new SerializationException(\"Encountered JSON object when expected array of type: \" + type.getName(),ex);\n else     if (ClassReflection.isMemberClass(type) && !ClassReflection.isStaticClass(type))     throw new SerializationException(\"Class cannot be created (non-static member class): \" + type.getName(),ex);\n else     throw new SerializationException(\"Class cannot be created (missing no-arg constructor): \" + type.getName(),ex);\n  }\ncatch (  Exception privateConstructorException) {\n    ex=privateConstructorException;\n  }\n  throw new SerializationException(\"Error constructing instance of class: \" + type.getName(),ex);\n}\n\n557 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n558 FILE NAME : libgdx-master\\gdx\\src\\com\\badlogic\\gdx\\utils\\Json.java\n\n559 CATCH CLAUSE : catch (Exception privateConstructorException) {\n  ex=privateConstructorException;\n}\n\n560 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n561 FILE NAME : libgdx-master\\gdx\\src\\com\\badlogic\\gdx\\utils\\JsonReader.java\n\n562 CATCH CLAUSE : catch (Exception ex) {\n  throw new SerializationException(\"Error parsing file: \" + file,ex);\n}\n\n563 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n564 FILE NAME : libgdx-master\\gdx\\src\\com\\badlogic\\gdx\\utils\\ReflectionPool.java\n\n565 CATCH CLAUSE : catch (Exception ex1) {\n  try {\n    Constructor constructor=ClassReflection.getDeclaredConstructor(type,(Class[])null);\n    constructor.setAccessible(true);\n    return constructor;\n  }\n catch (  ReflectionException ex2) {\n    return null;\n  }\n}\n\n566 ANTI-PATTERN RNHR : just returns null instead of handling or re-throwing the exception, swallows the exception, losing the information forever\n\n---\n\n---\n\n567 FILE NAME : libgdx-master\\gdx\\src\\com\\badlogic\\gdx\\utils\\ReflectionPool.java\n\n568 CATCH CLAUSE : catch (Exception ex1) {\n  try {\n    Constructor constructor=ClassReflection.getDeclaredConstructor(type,(Class[])null);\n    constructor.setAccessible(true);\n    return constructor;\n  }\n catch (  ReflectionException ex2) {\n    return null;\n  }\n}\n\n569 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n570 FILE NAME : libgdx-master\\gdx\\src\\com\\badlogic\\gdx\\utils\\ReflectionPool.java\n\n571 CATCH CLAUSE : catch (ReflectionException ex2) {\n  return null;\n}\n\n572 ANTI-PATTERN RNHR : just returns null instead of handling or re-throwing the exception, swallows the exception, losing the information forever\n\n---\n\n---\n\n573 FILE NAME : libgdx-master\\gdx\\src\\com\\badlogic\\gdx\\utils\\ReflectionPool.java\n\n574 CATCH CLAUSE : catch (Exception ex) {\n  throw new GdxRuntimeException(\"Unable to create new instance: \" + constructor.getDeclaringClass().getName(),ex);\n}\n\n575 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n576 FILE NAME : libgdx-master\\gdx\\src\\com\\badlogic\\gdx\\utils\\SharedLibraryLoader.java\n\n577 CATCH CLAUSE : catch (Exception ex) {\n  StreamUtils.closeQuietly(input);\n}\n\n578 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n579 FILE NAME : libgdx-master\\gdx\\src\\com\\badlogic\\gdx\\utils\\SharedLibraryLoader.java\n\n580 CATCH CLAUSE : catch (Exception e) {\n  return false;\n}\n\n581 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n582 FILE NAME : libgdx-master\\gdx\\src\\com\\badlogic\\gdx\\utils\\StreamUtils.java\n\n583 CATCH CLAUSE : catch (Exception e) {\n}\n\n584 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n585 FILE NAME : libgdx-master\\gdx\\src\\com\\badlogic\\gdx\\utils\\UBJsonReader.java\n\n586 CATCH CLAUSE : catch (Exception ex) {\n  throw new SerializationException(\"Error parsing file: \" + file,ex);\n}\n\n587 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n588 FILE NAME : libgdx-master\\gdx\\src\\com\\badlogic\\gdx\\utils\\XmlReader.java\n\n589 CATCH CLAUSE : catch (Exception ex) {\n  throw new SerializationException(\"Error parsing file: \" + file,ex);\n}\n\n590 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n591 FILE NAME : libgdx-master\\tests\\gdx-tests\\src\\com\\badlogic\\gdx\\tests\\box2d\\ContactListenerTest.java\n\n592 CATCH CLAUSE : catch (Exception e) {\n  e.printStackTrace();\n  return 0;\n}\n\n593 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n594 FILE NAME : libgdx-master\\tests\\gdx-tests\\src\\com\\badlogic\\gdx\\tests\\box2d\\ContactListenerTest.java\n\n595 CATCH CLAUSE : catch (Exception e) {\n  e.printStackTrace();\n  return 0;\n}\n\n596 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n597 FILE NAME : libgdx-master\\tests\\gdx-tests\\src\\com\\badlogic\\gdx\\tests\\box2d\\ContactListenerTest.java\n\n598 CATCH CLAUSE : catch (Exception e) {\n  e.printStackTrace();\n  return 0;\n}\n\n599 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n600 FILE NAME : libgdx-master\\tests\\gdx-tests\\src\\com\\badlogic\\gdx\\tests\\FilesTest.java\n\n601 CATCH CLAUSE : catch (Exception expected) {\n}\n\n602 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n603 FILE NAME : libgdx-master\\tests\\gdx-tests\\src\\com\\badlogic\\gdx\\tests\\FilesTest.java\n\n604 CATCH CLAUSE : catch (Exception expected) {\n}\n\n605 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n606 FILE NAME : libgdx-master\\tests\\gdx-tests\\src\\com\\badlogic\\gdx\\tests\\FilesTest.java\n\n607 CATCH CLAUSE : catch (Exception ignored) {\n}\n\n608 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n609 FILE NAME : libgdx-master\\tests\\gdx-tests\\src\\com\\badlogic\\gdx\\tests\\FilesTest.java\n\n610 CATCH CLAUSE : catch (Exception expected) {\n}\n\n611 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n612 FILE NAME : libgdx-master\\tests\\gdx-tests\\src\\com\\badlogic\\gdx\\tests\\FilesTest.java\n\n613 CATCH CLAUSE : catch (Exception ignored) {\n}\n\n614 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n615 FILE NAME : libgdx-master\\tests\\gdx-tests\\src\\com\\badlogic\\gdx\\tests\\FilesTest.java\n\n616 CATCH CLAUSE : catch (Exception ignored) {\n}\n\n617 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n618 FILE NAME : libgdx-master\\tests\\gdx-tests\\src\\com\\badlogic\\gdx\\tests\\FilesTest.java\n\n619 CATCH CLAUSE : catch (Exception ignored) {\n}\n\n620 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n621 FILE NAME : libgdx-master\\tests\\gdx-tests\\src\\com\\badlogic\\gdx\\tests\\FilesTest.java\n\n622 CATCH CLAUSE : catch (Exception ignored) {\n}\n\n623 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n624 FILE NAME : libgdx-master\\tests\\gdx-tests\\src\\com\\badlogic\\gdx\\tests\\InterpolationTest.java\n\n625 CATCH CLAUSE : catch (Exception e) {\n  throw new RuntimeException(e);\n}\n\n626 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n627 FILE NAME : libgdx-master\\tests\\gdx-tests\\src\\com\\badlogic\\gdx\\tests\\ReflectionTest.java\n\n628 CATCH CLAUSE : catch (Exception e) {\n  message=\"FAILED: \" + e.getMessage() + \"\\n\";\n  message+=e.getClass();\n}\n\n629 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n630 FILE NAME : libgdx-master\\tests\\gdx-tests\\src\\com\\badlogic\\gdx\\tests\\TextureDownloadTest.java\n\n631 CATCH CLAUSE : catch (Exception ex) {\n  return 0;\n}\n\n632 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n633 FILE NAME : libgdx-master\\tests\\gdx-tests\\src\\com\\badlogic\\gdx\\tests\\UBJsonTest.java\n\n634 METHOD NAME : performanceTest() throws Exception \n\n635 ANTI-PATTERN THGE : Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw\n\n---\n\n---\n\n636 FILE NAME : libgdx-master\\tests\\gdx-tests\\src\\com\\badlogic\\gdx\\tests\\utils\\GdxTests.java\n\n637 CATCH CLAUSE : catch (Exception ex) {\n  System.out.println(\"GdxTests: Error reading mapping file: mapping.txt\");\n  ex.printStackTrace();\n}\n\n638 ANTI-PATTERN CTGE : catching generic Exception, catch the specific exception that can be thrown\n\n---\n\n---\n\n639 FILE NAME : libgdx-master\\tests\\gdx-tests-jglfw\\src\\com\\badlogic\\gdx\\jglfw\\tests\\JglfwTestStarter.java\n\n640 METHOD NAME : main(String[] argv) throws Exception \n\n641 ANTI-PATTERN THGE : Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw\n\n---\n\n---\n\n642 FILE NAME : libgdx-master\\tests\\gdx-tests-lwjgl\\src\\com\\badlogic\\gdx\\tests\\lwjgl\\LwjglTestStarter.java\n\n643 METHOD NAME : main(String[] argv) throws Exception \n\n644 ANTI-PATTERN THGE : Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw\n\n---\n\n645 EXPERIMENTAL RESULTS\n\n646 NUMBER OF JAVA FILES IN THE APPLICATION : 1894\n647 NUMBER OF CATCH CLAUSES IN THE APPLICATION :524\n648 NUMBER OF METHOD DECLARATIONS IN THE APPLICATION :35064\n\n649 NUMBER OF PSTE ANTIPATTERN : 2\n650 NUMBER OF LGTE ANTIPATTERN : 0\n651 NUMBER OF CTGE ANTIPATTERN : 149\n652 NUMBER OF RNHR ANTIPATTERN : 0\n653 NUMBER OF PSRN ANTIPATTERN : 0\n654 NUMBER OF MLLM ANTIPATTERN : 0\n655 NUMBER OF LGRN ANTIPATTERN : 10\n656 NUMBER OF THGE ANTIPATTERN : 44\n657 NUMBER OF WEPG ANTIPATTERN : 8\n658 NUMBER OF RRGC ANTIPATTERN : 0\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2047/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2046","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2046/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2046/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2046/events","html_url":"https://github.com/libgdx/libgdx/issues/2046","id":36734733,"number":2046,"title":"gdx.dll is automatically quarantined by Norton 360","user":{"login":"cdomville","id":1194767,"avatar_url":"https://avatars3.githubusercontent.com/u/1194767?v=4","gravatar_id":"","url":"https://api.github.com/users/cdomville","html_url":"https://github.com/cdomville","followers_url":"https://api.github.com/users/cdomville/followers","following_url":"https://api.github.com/users/cdomville/following{/other_user}","gists_url":"https://api.github.com/users/cdomville/gists{/gist_id}","starred_url":"https://api.github.com/users/cdomville/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cdomville/subscriptions","organizations_url":"https://api.github.com/users/cdomville/orgs","repos_url":"https://api.github.com/users/cdomville/repos","events_url":"https://api.github.com/users/cdomville/events{/privacy}","received_events_url":"https://api.github.com/users/cdomville/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2014-06-28T22:24:29Z","updated_at":"2014-07-02T14:14:33Z","closed_at":"2014-06-29T08:54:36Z","author_association":"CONTRIBUTOR","body":"When building my LibGDX projects, I have to keep an eye on Norton 360 to make sure that gdx.dll isn't deleted because Norton360  classifies it under \"WS.Reputation.1\" and removes it.\n\nCan someone try to work out what it would take to get this dll whitelisted?\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2046/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2045","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2045/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2045/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2045/events","html_url":"https://github.com/libgdx/libgdx/pull/2045","id":36734002,"number":2045,"title":"Updated Music.getPosition() doc and changed iOS backend to match. Fixes #1952","user":{"login":"purelogiq","id":7828780,"avatar_url":"https://avatars0.githubusercontent.com/u/7828780?v=4","gravatar_id":"","url":"https://api.github.com/users/purelogiq","html_url":"https://github.com/purelogiq","followers_url":"https://api.github.com/users/purelogiq/followers","following_url":"https://api.github.com/users/purelogiq/following{/other_user}","gists_url":"https://api.github.com/users/purelogiq/gists{/gist_id}","starred_url":"https://api.github.com/users/purelogiq/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/purelogiq/subscriptions","organizations_url":"https://api.github.com/users/purelogiq/orgs","repos_url":"https://api.github.com/users/purelogiq/repos","events_url":"https://api.github.com/users/purelogiq/events{/privacy}","received_events_url":"https://api.github.com/users/purelogiq/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-06-28T21:41:49Z","updated_at":"2014-06-29T08:55:17Z","closed_at":"2014-06-29T08:55:17Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2045","html_url":"https://github.com/libgdx/libgdx/pull/2045","diff_url":"https://github.com/libgdx/libgdx/pull/2045.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2045.patch"},"body":"Assuming that the fix to the doc and ios is the better choice. Please read my comment in #1952 about the other problem (issue #921 which was closed) that I referenced.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2045/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2044","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2044/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2044/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2044/events","html_url":"https://github.com/libgdx/libgdx/pull/2044","id":36730022,"number":2044,"title":"A new Path<Vector2> editor","user":{"login":"JesseTG","id":1175189,"avatar_url":"https://avatars0.githubusercontent.com/u/1175189?v=4","gravatar_id":"","url":"https://api.github.com/users/JesseTG","html_url":"https://github.com/JesseTG","followers_url":"https://api.github.com/users/JesseTG/followers","following_url":"https://api.github.com/users/JesseTG/following{/other_user}","gists_url":"https://api.github.com/users/JesseTG/gists{/gist_id}","starred_url":"https://api.github.com/users/JesseTG/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JesseTG/subscriptions","organizations_url":"https://api.github.com/users/JesseTG/orgs","repos_url":"https://api.github.com/users/JesseTG/repos","events_url":"https://api.github.com/users/JesseTG/events{/privacy}","received_events_url":"https://api.github.com/users/JesseTG/received_events","type":"User","site_admin":false},"labels":[{"id":11336982,"url":"https://api.github.com/repos/libgdx/libgdx/labels/enhancement","name":"enhancement","color":"84b6eb","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":11,"created_at":"2014-06-28T18:01:41Z","updated_at":"2014-09-07T17:09:05Z","closed_at":"2014-09-07T17:09:05Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2044","html_url":"https://github.com/libgdx/libgdx/pull/2044","diff_url":"https://github.com/libgdx/libgdx/pull/2044.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2044.patch"},"body":"I really need to develop better Git habits.\n\nAnyway, I needed a path editor for my game.  I found another one, but it's a pain to use.  So I made my own, and decided \"why not let others benefit?\"\n\nSo here's what Pathological can do.\n- Create paths for `Bezier`, `BSpline`, and `CatmullRomSpline` curves (2D only)\n- Save to a project and open it later\n- Use an image for a background (for overlaying the path over levels, etc.)\n- Overlay a grid on the background\n- Snap to grid (in theory--in practice, it kind of sucks)\n- Store multiple Paths per project\n- Export the currently-selected path to a JSON file\n- Select and delete multiple nodes simultaneously (though this could be a bit more intuitive)\n\nI've also included a `PathSerializer` and a `PathLoader` (though you may not need the former because of the latter).  The `PathLoader`'s `PathParameter` allows you to specify a `Matrix3` to transform a `Path` by when you load it.  Good for if you use different coordinate systems.\n\nHere's a screenshot.\n\n![screenshot from 2014-06-28 13 54 57](https://cloud.githubusercontent.com/assets/1175189/3421438/6e5a6d2a-feed-11e3-9959-ff4b13bd9c21.png)\n\nAny thoughts?\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2044/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2043","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2043/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2043/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2043/events","html_url":"https://github.com/libgdx/libgdx/pull/2043","id":36723133,"number":2043,"title":"Fix android:run task so it works when ANDROID_HOME isnt set","user":{"login":"Tom-Ski","id":4346114,"avatar_url":"https://avatars0.githubusercontent.com/u/4346114?v=4","gravatar_id":"","url":"https://api.github.com/users/Tom-Ski","html_url":"https://github.com/Tom-Ski","followers_url":"https://api.github.com/users/Tom-Ski/followers","following_url":"https://api.github.com/users/Tom-Ski/following{/other_user}","gists_url":"https://api.github.com/users/Tom-Ski/gists{/gist_id}","starred_url":"https://api.github.com/users/Tom-Ski/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Tom-Ski/subscriptions","organizations_url":"https://api.github.com/users/Tom-Ski/orgs","repos_url":"https://api.github.com/users/Tom-Ski/repos","events_url":"https://api.github.com/users/Tom-Ski/events{/privacy}","received_events_url":"https://api.github.com/users/Tom-Ski/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2014-06-28T11:04:42Z","updated_at":"2014-06-28T11:06:10Z","closed_at":"2014-06-28T11:06:10Z","author_association":"OWNER","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2043","html_url":"https://github.com/libgdx/libgdx/pull/2043","diff_url":"https://github.com/libgdx/libgdx/pull/2043.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2043.patch"},"body":"If a user runs android:run without ANDROID_HOME being set, it fail.\n\nThis checks local.properties for sdk.dir, if not found, use ANDROID_HOME variable.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2043/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2042","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2042/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2042/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2042/events","html_url":"https://github.com/libgdx/libgdx/issues/2042","id":36717871,"number":2042,"title":"XMLReader: Inexplicable SerializationException when using parse(FileHandle)","user":{"login":"GustSilverwidth","id":4921613,"avatar_url":"https://avatars0.githubusercontent.com/u/4921613?v=4","gravatar_id":"","url":"https://api.github.com/users/GustSilverwidth","html_url":"https://github.com/GustSilverwidth","followers_url":"https://api.github.com/users/GustSilverwidth/followers","following_url":"https://api.github.com/users/GustSilverwidth/following{/other_user}","gists_url":"https://api.github.com/users/GustSilverwidth/gists{/gist_id}","starred_url":"https://api.github.com/users/GustSilverwidth/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/GustSilverwidth/subscriptions","organizations_url":"https://api.github.com/users/GustSilverwidth/orgs","repos_url":"https://api.github.com/users/GustSilverwidth/repos","events_url":"https://api.github.com/users/GustSilverwidth/events{/privacy}","received_events_url":"https://api.github.com/users/GustSilverwidth/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-06-28T04:27:19Z","updated_at":"2014-06-28T05:14:45Z","closed_at":"2014-06-28T05:14:45Z","author_association":"NONE","body":"I tried parsing an XML file using XmlReader's parse(FileHandle) method, but it caused a SerializationException for no discernible reason. The XML file can be opened by other programs/checkers with no issues, and is encoded in UTF-8 without BOM. I'm using the Gradle-based setup.\n\nI ran two tests, one on the project I initially encountered the issue on and a separate, newly-created test project. The test project ran fine.\n\nOriginal project:\n\n``` xml\n<TextureAtlas>\n    <NinjaStar path=\"graphics/badlogic.jpg\" />\n</TextureAtlas>\n```\n\n``` java\npublic class DataFetcher extends XmlReader {\n    private String              xmlPath;\n    private FileHandle          xmlFile;\n    private XmlReader.Element   element;\n\n    //xmlPath is set somewhere else.\n\n    public void open()\n    {\n        try\n        {\n            xmlFile = Gdx.files.internal(xmlPath);\n            element = parse(xmlFile);\n        }\n        catch (RuntimeException | IOException e)\n        {\n            //TODO: Handle (log) errors.\n\n            Gdx.app.error(\"ZeroRange::Loader.open()\", \"Either \" + xmlPath + \" is an invalid path or the XML file is corrupt.\");\n            Gdx.app.error(\"ZeroRange::Loader.open()\", e.getLocalizedMessage(), e);//@DEBUG\n        }\n    }\n}\n```\n\n```\nZeroRange::Loader.open(): Either values/atlasPaths.xml is an invalid path or the XML file is corrupt.\nZeroRange::Loader.open(): Error parsing file: values/atlasPaths.xml\ncom.badlogic.gdx.utils.SerializationException: Error parsing file: values/atlasPaths.xml\n    at com.badlogic.gdx.utils.XmlReader.parse(XmlReader.java:83)\n    at com.rewind.zerorange.DataFetcher.open(DataFetcher.java:73)\n    at com.rewind.zerorange.ZeroRange.create(ZeroRange.java:25)\n    at com.badlogic.gdx.backends.lwjgl.LwjglApplication.mainLoop(LwjglApplication.java:136)\n    at com.badlogic.gdx.backends.lwjgl.LwjglApplication$1.run(LwjglApplication.java:114)\nCaused by: com.badlogic.gdx.utils.SerializationException: Error parsing XML, unclosed element: NinjaStar\n    at com.badlogic.gdx.utils.XmlReader.parse(XmlReader.java:334)\n    at com.badlogic.gdx.utils.XmlReader.parse(XmlReader.java:61)\n    at com.badlogic.gdx.utils.XmlReader.parse(XmlReader.java:81)\n    ... 4 more\nZeroRange::Loader.load(): null\njava.lang.NullPointerException\n    at com.rewind.zerorange.DataFetcher.getAttribute(DataFetcher.java:52)\n    at com.rewind.zerorange.ZeroRange.create(ZeroRange.java:26)\n    at com.badlogic.gdx.backends.lwjgl.LwjglApplication.mainLoop(LwjglApplication.java:136)\n    at com.badlogic.gdx.backends.lwjgl.LwjglApplication$1.run(LwjglApplication.java:114)\nException in thread \"LWJGL Application\" java.lang.NullPointerException\n    at com.badlogic.gdx.utils.ObjectMap.get(ObjectMap.java:289)\n    at com.badlogic.gdx.assets.AssetManager.load(AssetManager.java:323)\n    at com.badlogic.gdx.assets.AssetManager.load(AssetManager.java:285)\n    at com.rewind.zerorange.ZeroRange.create(ZeroRange.java:26)\n    at com.badlogic.gdx.backends.lwjgl.LwjglApplication.mainLoop(LwjglApplication.java:136)\n    at com.badlogic.gdx.backends.lwjgl.LwjglApplication$1.run(LwjglApplication.java:114)\n\n```\n\nWorking test project:\n\n``` xml\n<buildable id=\"2\">\n        <name>Orbital Shipyard</name>\n        <desc>By building in orbit it is possible to construct larger ships that would otherwise be unable to attain escape velocity.</desc>\n        <min-turns>1</min-turns>\n        <prod-cost>250</prod-cost>\n        <meters>\n            <meter key=\"MAX_SHIP_SIZE\" value=\"1\" />\n        </meters>\n        <persist>true</persist>\n    </buildable>\n```\n\n``` java\npublic void create () {\n        batch = new SpriteBatch();\n        img = new Texture(\"badlogic.jpg\");\n\n        /*XML TEST START*/\n        XmlReader reader = new XmlReader();\n        FileHandle file = Gdx.files.internal(\"test.xml\");\n        try\n        {\n            Element ele = reader.parse(file);\n            Gdx.app.log(\"Test::create()\", ele.getName());\n            ele = ele.getChildByName(\"persist\");\n            Gdx.app.log(\"Test::create()\", ele.getName());\n            Gdx.app.log(\"Test::create()\", ele.getText());\n        }\n        catch (IOException e)\n        {\n            Gdx.app.error(\"Test::create()\", e.getMessage());\n        }\n        /*XML TEST END*/\n    }\n```\n\nEDIT: Fixed my mistake where I switched to UTF-8 with BOM. Here's the original error message.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2042/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2041","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2041/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2041/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2041/events","html_url":"https://github.com/libgdx/libgdx/issues/2041","id":36717579,"number":2041,"title":"Desktop application occasionally crashes on quit","user":{"login":"JEphron","id":1817241,"avatar_url":"https://avatars2.githubusercontent.com/u/1817241?v=4","gravatar_id":"","url":"https://api.github.com/users/JEphron","html_url":"https://github.com/JEphron","followers_url":"https://api.github.com/users/JEphron/followers","following_url":"https://api.github.com/users/JEphron/following{/other_user}","gists_url":"https://api.github.com/users/JEphron/gists{/gist_id}","starred_url":"https://api.github.com/users/JEphron/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JEphron/subscriptions","organizations_url":"https://api.github.com/users/JEphron/orgs","repos_url":"https://api.github.com/users/JEphron/repos","events_url":"https://api.github.com/users/JEphron/events{/privacy}","received_events_url":"https://api.github.com/users/JEphron/received_events","type":"User","site_admin":false},"labels":[{"id":11336980,"url":"https://api.github.com/repos/libgdx/libgdx/labels/bug","name":"bug","color":"fc2929","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2014-06-28T04:09:56Z","updated_at":"2014-07-05T21:31:56Z","closed_at":"2014-07-05T21:31:56Z","author_association":"NONE","body":"It's fairly infrequent, but it definitely happens. I have no idea what might be causing it, or if it's even LibGDX's fault. I'm not using any other external libraries. Is there any other info I can provide?\nCore dump: https://gist.github.com/JEphron/322432030b5607379833\nThoughts?\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2041/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2040","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2040/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2040/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2040/events","html_url":"https://github.com/libgdx/libgdx/issues/2040","id":36668698,"number":2040,"title":"Images without alpha channel look corrupt on Android","user":{"login":"geertjan-apptornado","id":5756227,"avatar_url":"https://avatars2.githubusercontent.com/u/5756227?v=4","gravatar_id":"","url":"https://api.github.com/users/geertjan-apptornado","html_url":"https://github.com/geertjan-apptornado","followers_url":"https://api.github.com/users/geertjan-apptornado/followers","following_url":"https://api.github.com/users/geertjan-apptornado/following{/other_user}","gists_url":"https://api.github.com/users/geertjan-apptornado/gists{/gist_id}","starred_url":"https://api.github.com/users/geertjan-apptornado/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/geertjan-apptornado/subscriptions","organizations_url":"https://api.github.com/users/geertjan-apptornado/orgs","repos_url":"https://api.github.com/users/geertjan-apptornado/repos","events_url":"https://api.github.com/users/geertjan-apptornado/events{/privacy}","received_events_url":"https://api.github.com/users/geertjan-apptornado/received_events","type":"User","site_admin":false},"labels":[{"id":59604218,"url":"https://api.github.com/repos/libgdx/libgdx/labels/android","name":"android","color":"009800","default":false},{"id":11336980,"url":"https://api.github.com/repos/libgdx/libgdx/labels/bug","name":"bug","color":"fc2929","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2014-06-27T14:28:24Z","updated_at":"2014-07-18T11:50:12Z","closed_at":"2014-06-29T08:54:19Z","author_association":"NONE","body":"When I load a texture from an image file that has no alpha channel, it displays as random garbage when running on Android.\n- Happens with PNGs without alpha channel, and always with JPEGs, because JPEGs never have an alpha channel.\n- Can be solved by resaving the image as PNG with alpha channel.\n- The problem happens on Android, if I run my game on the Desktop (Linux) the texture looks fine. Haven't tested other platforms.\n- Doesn't matter if I load the texture through an AssetManager, directly, or through a Pixmap.\n- Doesn't matter what format I specify (ARGB8888, RGB888, etc.)\n- Doesn't matter if the image size is a power of 2 or not.\n- In the case of JPEG, I tried several export methods to save, made no difference.\n- EDIT: I tested it on a Nexus 5 with Android 4.4.4 and on emulators with Android 4.0.3 and 4.4.2.\n- EDIT: I also tried turning hardware acceleration on/off in the AndroidManifest.xml, but that also didn't make a difference.\n- EDIT: I tested on libGDX 1.2, and I'm pretty sure I have seen this bug too when I was still on libGDX 1.1.\n\nCan be reproduced with the attached file.\n![test](https://cloud.githubusercontent.com/assets/5756227/3413039/faf74bd2-fe06-11e3-9ef1-c6595165f827.png)\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2040/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2039","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2039/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2039/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2039/events","html_url":"https://github.com/libgdx/libgdx/issues/2039","id":36661029,"number":2039,"title":"Foreground Stage (HUD) draws Label below Model","user":{"login":"avianey","id":1625652,"avatar_url":"https://avatars3.githubusercontent.com/u/1625652?v=4","gravatar_id":"","url":"https://api.github.com/users/avianey","html_url":"https://github.com/avianey","followers_url":"https://api.github.com/users/avianey/followers","following_url":"https://api.github.com/users/avianey/following{/other_user}","gists_url":"https://api.github.com/users/avianey/gists{/gist_id}","starred_url":"https://api.github.com/users/avianey/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/avianey/subscriptions","organizations_url":"https://api.github.com/users/avianey/orgs","repos_url":"https://api.github.com/users/avianey/repos","events_url":"https://api.github.com/users/avianey/events{/privacy}","received_events_url":"https://api.github.com/users/avianey/received_events","type":"User","site_admin":false},"labels":[{"id":11336980,"url":"https://api.github.com/repos/libgdx/libgdx/labels/bug","name":"bug","color":"fc2929","default":true},{"id":89047068,"url":"https://api.github.com/repos/libgdx/libgdx/labels/scene2d","name":"scene2d","color":"ff00ff","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2014-06-27T12:56:38Z","updated_at":"2014-06-29T14:41:36Z","closed_at":"2014-06-29T14:41:36Z","author_association":"CONTRIBUTOR","body":"I have two Stage :\nbgStage = new Stage()\nfgStage = new Stage(bgStage.getViewPort(), bgStage.getBatch())\nAnd a ModelBatch using its own camera...\n\nThe fgStage has no background and `fillParent(true)` and contains only one Label (fgLabel) with no background...\n\nWhen I render :\n\n``` java\npublic void render() {\n        Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT | GL20.GL_DEPTH_BUFFER_BIT);\n\n        bgStage.draw();\n\n        Gdx.gl.glEnable(GL20.GL_DEPTH_TEST);\n        Gdx.gl.glEnable(GL20.GL_CULL_FACE);\n\n        modelBatch.begin(camera3D);\n        // .... drawing my 3D models\n        modelBatch.end();\n\n        Gdx.gl.glDisable(GL20.GL_DEPTH_TEST);\n        Gdx.gl.glDisable(GL20.GL_CULL_FACE);\n\n        // case 1\n        // the Label text is hidden behind ModelInstances\n        fgStage.draw();\n\n        // case 2\n        // the Label text is correctly rendered above ModelInstances\n        fgStage.getViewport().getCamera().update();\n        fgStage.getBatch().setProjectionMatrix(fgStage.getViewport().getCamera().combined);\n        fgStage.getBatch().begin();\n        fgLabel.draw(fgStage.getBatch(), 1);\n        fgStage.getBatch().end();\n}\n```\n\nAccording to me case 1 must behave the same as case 2. Is that true ?\nMoreover if I set fgStage background to white, the whole screen is white in both case 1 and case 2... \n\nWhat's the reason why fgStage.getRoot().draw(fgStage.getBatch(), 1); and  fgLabel.draw(fgStage.getBatch(), 1); are not producing the same rendering ?\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2039/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2038","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2038/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2038/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2038/events","html_url":"https://github.com/libgdx/libgdx/pull/2038","id":36620869,"number":2038,"title":"Fix perimeter in Rectangle, Area in Ellipse, closes #2035, closes #2036","user":{"login":"Tom-Ski","id":4346114,"avatar_url":"https://avatars0.githubusercontent.com/u/4346114?v=4","gravatar_id":"","url":"https://api.github.com/users/Tom-Ski","html_url":"https://github.com/Tom-Ski","followers_url":"https://api.github.com/users/Tom-Ski/followers","following_url":"https://api.github.com/users/Tom-Ski/following{/other_user}","gists_url":"https://api.github.com/users/Tom-Ski/gists{/gist_id}","starred_url":"https://api.github.com/users/Tom-Ski/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Tom-Ski/subscriptions","organizations_url":"https://api.github.com/users/Tom-Ski/orgs","repos_url":"https://api.github.com/users/Tom-Ski/repos","events_url":"https://api.github.com/users/Tom-Ski/events{/privacy}","received_events_url":"https://api.github.com/users/Tom-Ski/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-06-26T22:23:29Z","updated_at":"2014-06-27T00:27:21Z","closed_at":"2014-06-27T00:03:45Z","author_association":"OWNER","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2038","html_url":"https://github.com/libgdx/libgdx/pull/2038","diff_url":"https://github.com/libgdx/libgdx/pull/2038.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2038.patch"},"body":"","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2038/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2037","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2037/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2037/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2037/events","html_url":"https://github.com/libgdx/libgdx/issues/2037","id":36579162,"number":2037,"title":"Calling dispatchMessage with a delay of more than 0 will cause the message to never be received.","user":{"login":"TheDerek","id":2663542,"avatar_url":"https://avatars1.githubusercontent.com/u/2663542?v=4","gravatar_id":"","url":"https://api.github.com/users/TheDerek","html_url":"https://github.com/TheDerek","followers_url":"https://api.github.com/users/TheDerek/followers","following_url":"https://api.github.com/users/TheDerek/following{/other_user}","gists_url":"https://api.github.com/users/TheDerek/gists{/gist_id}","starred_url":"https://api.github.com/users/TheDerek/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/TheDerek/subscriptions","organizations_url":"https://api.github.com/users/TheDerek/orgs","repos_url":"https://api.github.com/users/TheDerek/repos","events_url":"https://api.github.com/users/TheDerek/events{/privacy}","received_events_url":"https://api.github.com/users/TheDerek/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-06-26T14:12:04Z","updated_at":"2014-06-26T14:22:30Z","closed_at":"2014-06-26T14:21:40Z","author_association":"NONE","body":"Messages called using `MessageDispatcher.getInstance().dispatchMessage` work fine if the delay is 0, but if you try to increase that, the receiving agents never actually receives the message, at the specified delay time or otherwise.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2037/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2036","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2036/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2036/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2036/events","html_url":"https://github.com/libgdx/libgdx/issues/2036","id":36569334,"number":2036,"title":"Wrong computation of the rectangle perimeter","user":{"login":"cortobass","id":5509329,"avatar_url":"https://avatars1.githubusercontent.com/u/5509329?v=4","gravatar_id":"","url":"https://api.github.com/users/cortobass","html_url":"https://github.com/cortobass","followers_url":"https://api.github.com/users/cortobass/followers","following_url":"https://api.github.com/users/cortobass/following{/other_user}","gists_url":"https://api.github.com/users/cortobass/gists{/gist_id}","starred_url":"https://api.github.com/users/cortobass/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cortobass/subscriptions","organizations_url":"https://api.github.com/users/cortobass/orgs","repos_url":"https://api.github.com/users/cortobass/repos","events_url":"https://api.github.com/users/cortobass/events{/privacy}","received_events_url":"https://api.github.com/users/cortobass/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2014-06-26T12:03:29Z","updated_at":"2014-06-27T00:03:51Z","closed_at":"2014-06-27T00:03:51Z","author_association":"CONTRIBUTOR","body":"The perimeter returned by the rectangle class should be:\n        return 2 \\* (this.width + this.height);\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2036/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2035","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2035/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2035/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2035/events","html_url":"https://github.com/libgdx/libgdx/issues/2035","id":36561923,"number":2035,"title":"Wrong computation of the ellipse area","user":{"login":"cortobass","id":5509329,"avatar_url":"https://avatars1.githubusercontent.com/u/5509329?v=4","gravatar_id":"","url":"https://api.github.com/users/cortobass","html_url":"https://github.com/cortobass","followers_url":"https://api.github.com/users/cortobass/followers","following_url":"https://api.github.com/users/cortobass/following{/other_user}","gists_url":"https://api.github.com/users/cortobass/gists{/gist_id}","starred_url":"https://api.github.com/users/cortobass/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cortobass/subscriptions","organizations_url":"https://api.github.com/users/cortobass/orgs","repos_url":"https://api.github.com/users/cortobass/repos","events_url":"https://api.github.com/users/cortobass/events{/privacy}","received_events_url":"https://api.github.com/users/cortobass/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2014-06-26T10:05:10Z","updated_at":"2014-06-27T00:03:50Z","closed_at":"2014-06-27T00:03:50Z","author_association":"CONTRIBUTOR","body":"It seems to me that this computation is wrong in the Ellipse class for the area:\n        return MathUtils.PI \\* (this.width \\* this.height) / 2;\nThat should be:\n        return MathUtils.PI \\* (this.width / 2) \\* (this.height / 2);\nor\n        return MathUtils.PI \\* (this.width \\* this.height) / 4;\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2035/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2034","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2034/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2034/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2034/events","html_url":"https://github.com/libgdx/libgdx/issues/2034","id":36538891,"number":2034,"title":"Crash during ModelBatch.flush/TimSort in app simultaneously running Live Wallpaper and Daydream","user":{"login":"cypherdare","id":1843131,"avatar_url":"https://avatars2.githubusercontent.com/u/1843131?v=4","gravatar_id":"","url":"https://api.github.com/users/cypherdare","html_url":"https://github.com/cypherdare","followers_url":"https://api.github.com/users/cypherdare/followers","following_url":"https://api.github.com/users/cypherdare/following{/other_user}","gists_url":"https://api.github.com/users/cypherdare/gists{/gist_id}","starred_url":"https://api.github.com/users/cypherdare/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cypherdare/subscriptions","organizations_url":"https://api.github.com/users/cypherdare/orgs","repos_url":"https://api.github.com/users/cypherdare/repos","events_url":"https://api.github.com/users/cypherdare/events{/privacy}","received_events_url":"https://api.github.com/users/cypherdare/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2014-06-26T02:02:59Z","updated_at":"2014-06-29T08:57:25Z","closed_at":"2014-06-29T08:57:25Z","author_association":"CONTRIBUTOR","body":"I don't think I'm doing anything at all out of the ordinary with my setup. This Live Wallpaper has been running fine on the market. I just started implementing Daydream functionality, and got this crash in the Live Wallpaper one time when I was starting the daydream. I have since been unable to reproduce it. \n\nI have not subclassed Model or ModelInstance so I don't think I've introduced some static variable that would affect this particular Array.\n\nRunning 1.2.0.\n\nE/AndroidRuntime﹕ FATAL EXCEPTION: GLThread 13174\n    java.lang.NullPointerException\n            at com.badlogic.gdx.utils.TimSort.mergeAt(TimSort.java:427)\n            at com.badlogic.gdx.utils.TimSort.mergeCollapse(TimSort.java:378)\n            at com.badlogic.gdx.utils.TimSort.doSort(TimSort.java:129)\n            at com.badlogic.gdx.utils.Sort.sort(Sort.java:57)\n            at com.badlogic.gdx.utils.Array.sort(Array.java:352)\n            at com.badlogic.gdx.graphics.g3d.utils.DefaultRenderableSorter.sort(DefaultRenderableSorter.java:36)\n            at com.badlogic.gdx.graphics.g3d.ModelBatch.flush(ModelBatch.java:204)\n            at com.badlogic.gdx.graphics.g3d.ModelBatch.end(ModelBatch.java:224)\n     ...\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2034/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2033","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2033/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2033/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2033/events","html_url":"https://github.com/libgdx/libgdx/pull/2033","id":36502571,"number":2033,"title":"Private constructors","user":{"login":"JesseTG","id":1175189,"avatar_url":"https://avatars0.githubusercontent.com/u/1175189?v=4","gravatar_id":"","url":"https://api.github.com/users/JesseTG","html_url":"https://github.com/JesseTG","followers_url":"https://api.github.com/users/JesseTG/followers","following_url":"https://api.github.com/users/JesseTG/following{/other_user}","gists_url":"https://api.github.com/users/JesseTG/gists{/gist_id}","starred_url":"https://api.github.com/users/JesseTG/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JesseTG/subscriptions","organizations_url":"https://api.github.com/users/JesseTG/orgs","repos_url":"https://api.github.com/users/JesseTG/repos","events_url":"https://api.github.com/users/JesseTG/events{/privacy}","received_events_url":"https://api.github.com/users/JesseTG/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2014-06-25T17:13:54Z","updated_at":"2014-06-29T08:58:41Z","closed_at":"2014-06-29T08:58:41Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2033","html_url":"https://github.com/libgdx/libgdx/pull/2033","diff_url":"https://github.com/libgdx/libgdx/pull/2033.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2033.patch"},"body":"Many of the `SomethingUtils` classes are able to be default-constructed.  Do we really need an instance of `GeometryUtils` floating around people's code?\n\nThis PR does not `static`-ify existing classes (e.g. classes like `ConvexHull` and `Sort` are left as is).  This just removes the default constructor for any class with no instance methods or instance fields.  Such classes are as follows:\n- `Utf8`\n- `BufferUtils`\n- `NumberUtils`\n- `TimeUtils`\n- `ThreadUtils`\n- `ArrayReflection`\n- `ClassReflection`\n- `Numbers`\n- `Box2DBuild`\n- `Controllers`\n- `FireTV`\n- `Ouya`\n- `FreetypeBuild`\n- `Gdx`\n- `Version`\n- `PixmapIO`\n- `ETC1`\n- `GeometryUtils`\n- `Intersector`\n- `MathUtils`\n- `HttpParametersUtils`\n- `Actions`\n- `Align`\n- `UIUtils`\n- `GdxBuild`\n- `GdxNativesLoader`\n- `ScreenUtils`\n- `StreamUtils`\n- `Lzma`\n- `Base`\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2033/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2032","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2032/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2032/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2032/events","html_url":"https://github.com/libgdx/libgdx/issues/2032","id":36490369,"number":2032,"title":"GWT: (De)serializing Object with 2d array field fails","user":{"login":"mots","id":26517,"avatar_url":"https://avatars1.githubusercontent.com/u/26517?v=4","gravatar_id":"","url":"https://api.github.com/users/mots","html_url":"https://github.com/mots","followers_url":"https://api.github.com/users/mots/followers","following_url":"https://api.github.com/users/mots/following{/other_user}","gists_url":"https://api.github.com/users/mots/gists{/gist_id}","starred_url":"https://api.github.com/users/mots/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mots/subscriptions","organizations_url":"https://api.github.com/users/mots/orgs","repos_url":"https://api.github.com/users/mots/repos","events_url":"https://api.github.com/users/mots/events{/privacy}","received_events_url":"https://api.github.com/users/mots/received_events","type":"User","site_admin":false},"labels":[{"id":11336980,"url":"https://api.github.com/repos/libgdx/libgdx/labels/bug","name":"bug","color":"fc2929","default":true},{"id":67383148,"url":"https://api.github.com/repos/libgdx/libgdx/labels/gwt","name":"gwt","color":"5319e7","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2014-06-25T15:19:18Z","updated_at":"2016-12-10T18:57:45Z","closed_at":"2016-12-10T18:57:45Z","author_association":"NONE","body":"Hey, I ran into an issue with the libGDX JSON (de)serializer: If i try to serialize a class that contains a 2d array of  objects (for example:     private Block[][] blocks = new Block[2][2];), everything works fine on desktop (and android). \n\nHowever, on GWT this causes an Exception:\n\nUncaught java.lang.RuntimeException: com.badlogic.gdx.utils.SerializationException: Serialization trace:\ncom.badlogic.gdx.utils.reflect.Field@10 (org.mots.crashtest.model.Container).\n\nI've added the correct gdx.reflect.include properties to the .gwt.xml files, but the error persists. Here's a simple project demonstrating the issue: https://dl.dropboxusercontent.com/u/20288789/crashtest.zip\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2032/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2031","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2031/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2031/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2031/events","html_url":"https://github.com/libgdx/libgdx/issues/2031","id":36474083,"number":2031,"title":"Container does not draw background when there is no widget","user":{"login":"vlaaad","id":732554,"avatar_url":"https://avatars2.githubusercontent.com/u/732554?v=4","gravatar_id":"","url":"https://api.github.com/users/vlaaad","html_url":"https://github.com/vlaaad","followers_url":"https://api.github.com/users/vlaaad/followers","following_url":"https://api.github.com/users/vlaaad/following{/other_user}","gists_url":"https://api.github.com/users/vlaaad/gists{/gist_id}","starred_url":"https://api.github.com/users/vlaaad/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vlaaad/subscriptions","organizations_url":"https://api.github.com/users/vlaaad/orgs","repos_url":"https://api.github.com/users/vlaaad/repos","events_url":"https://api.github.com/users/vlaaad/events{/privacy}","received_events_url":"https://api.github.com/users/vlaaad/received_events","type":"User","site_admin":false},"labels":[{"id":11336980,"url":"https://api.github.com/repos/libgdx/libgdx/labels/bug","name":"bug","color":"fc2929","default":true},{"id":89047068,"url":"https://api.github.com/repos/libgdx/libgdx/labels/scene2d","name":"scene2d","color":"ff00ff","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2014-06-25T12:25:45Z","updated_at":"2014-06-28T16:32:49Z","closed_at":"2014-06-28T16:32:49Z","author_association":"NONE","body":"It just returns from the `draw` method before drawing background when there is no actor. I think that's a bug, but not sure — may be it is desired to work this way? \n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2031/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2030","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2030/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2030/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2030/events","html_url":"https://github.com/libgdx/libgdx/issues/2030","id":36473721,"number":2030,"title":"Table::setBackground can cause crash","user":{"login":"vlaaad","id":732554,"avatar_url":"https://avatars2.githubusercontent.com/u/732554?v=4","gravatar_id":"","url":"https://api.github.com/users/vlaaad","html_url":"https://github.com/vlaaad","followers_url":"https://api.github.com/users/vlaaad/followers","following_url":"https://api.github.com/users/vlaaad/following{/other_user}","gists_url":"https://api.github.com/users/vlaaad/gists{/gist_id}","starred_url":"https://api.github.com/users/vlaaad/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vlaaad/subscriptions","organizations_url":"https://api.github.com/users/vlaaad/orgs","repos_url":"https://api.github.com/users/vlaaad/repos","events_url":"https://api.github.com/users/vlaaad/events{/privacy}","received_events_url":"https://api.github.com/users/vlaaad/received_events","type":"User","site_admin":false},"labels":[{"id":11336980,"url":"https://api.github.com/repos/libgdx/libgdx/labels/bug","name":"bug","color":"fc2929","default":true},{"id":89047068,"url":"https://api.github.com/repos/libgdx/libgdx/labels/scene2d","name":"scene2d","color":"ff00ff","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":17,"created_at":"2014-06-25T12:20:13Z","updated_at":"2014-07-21T17:55:51Z","closed_at":"2014-07-20T21:06:33Z","author_association":"NONE","body":"If you set table's background to some drawable and then set background to null, app will crash with NPE [here](https://github.com/libgdx/libgdx/blob/master/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Table.java#L876). That's because [here](https://github.com/libgdx/libgdx/blob/master/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Table.java#L157) padding is set to null instead of `Value.zero`\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2030/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2029","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2029/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2029/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2029/events","html_url":"https://github.com/libgdx/libgdx/issues/2029","id":36442131,"number":2029,"title":"amd aparapi support for opencl ios","user":{"login":"eix128","id":1905952,"avatar_url":"https://avatars1.githubusercontent.com/u/1905952?v=4","gravatar_id":"","url":"https://api.github.com/users/eix128","html_url":"https://github.com/eix128","followers_url":"https://api.github.com/users/eix128/followers","following_url":"https://api.github.com/users/eix128/following{/other_user}","gists_url":"https://api.github.com/users/eix128/gists{/gist_id}","starred_url":"https://api.github.com/users/eix128/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eix128/subscriptions","organizations_url":"https://api.github.com/users/eix128/orgs","repos_url":"https://api.github.com/users/eix128/repos","events_url":"https://api.github.com/users/eix128/events{/privacy}","received_events_url":"https://api.github.com/users/eix128/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-06-25T01:46:19Z","updated_at":"2014-06-25T14:16:55Z","closed_at":"2014-06-25T14:16:55Z","author_association":"NONE","body":"hello , it would be very good if you add opencl with aparapi on libgdx\nhttp://developer.amd.com/tools-and-sdks/opencl-zone/opencl-libraries/aparapi/\nand here:\nhttps://code.google.com/p/aopencl/\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2029/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2028","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2028/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2028/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2028/events","html_url":"https://github.com/libgdx/libgdx/issues/2028","id":36416266,"number":2028,"title":"GWT: Constructor.getParameterTypes returns null","user":{"login":"DanielJonesOpenCredo","id":4036389,"avatar_url":"https://avatars2.githubusercontent.com/u/4036389?v=4","gravatar_id":"","url":"https://api.github.com/users/DanielJonesOpenCredo","html_url":"https://github.com/DanielJonesOpenCredo","followers_url":"https://api.github.com/users/DanielJonesOpenCredo/followers","following_url":"https://api.github.com/users/DanielJonesOpenCredo/following{/other_user}","gists_url":"https://api.github.com/users/DanielJonesOpenCredo/gists{/gist_id}","starred_url":"https://api.github.com/users/DanielJonesOpenCredo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DanielJonesOpenCredo/subscriptions","organizations_url":"https://api.github.com/users/DanielJonesOpenCredo/orgs","repos_url":"https://api.github.com/users/DanielJonesOpenCredo/repos","events_url":"https://api.github.com/users/DanielJonesOpenCredo/events{/privacy}","received_events_url":"https://api.github.com/users/DanielJonesOpenCredo/received_events","type":"User","site_admin":false},"labels":[{"id":11336980,"url":"https://api.github.com/repos/libgdx/libgdx/labels/bug","name":"bug","color":"fc2929","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2014-06-24T19:15:50Z","updated_at":"2014-06-28T16:23:00Z","closed_at":"2014-06-28T16:23:00Z","author_association":"NONE","body":"The GWT implementation of `Constructor.getParameterTypes` returns null. Is this by necessity, or is there a workaround? `Method.getParameters` returns something meaningful, so perhaps this can be done for constructors too?\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2028/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2027","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2027/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2027/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2027/events","html_url":"https://github.com/libgdx/libgdx/issues/2027","id":36415914,"number":2027,"title":"Music has no setPosition() method","user":{"login":"Natman64","id":2584745,"avatar_url":"https://avatars0.githubusercontent.com/u/2584745?v=4","gravatar_id":"","url":"https://api.github.com/users/Natman64","html_url":"https://github.com/Natman64","followers_url":"https://api.github.com/users/Natman64/followers","following_url":"https://api.github.com/users/Natman64/following{/other_user}","gists_url":"https://api.github.com/users/Natman64/gists{/gist_id}","starred_url":"https://api.github.com/users/Natman64/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Natman64/subscriptions","organizations_url":"https://api.github.com/users/Natman64/orgs","repos_url":"https://api.github.com/users/Natman64/repos","events_url":"https://api.github.com/users/Natman64/events{/privacy}","received_events_url":"https://api.github.com/users/Natman64/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-06-24T19:11:45Z","updated_at":"2014-06-25T14:15:13Z","closed_at":"2014-06-25T14:15:13Z","author_association":"NONE","body":"http://libgdx.badlogicgames.com/nightlies/docs/api/com/badlogic/gdx/audio/Music.html\n\nThe documentation claims the Music interfaces supports setting the position of playback, but there is no setPosition() method in the interface. This method needs to be added, or if for some reason not all Music subclasses can support this method, the documentation needs to change to reflect this.\n\nThe AndroidMusic class appears to support a setPosition() method already, but I'm not sure about the others. In order to work around this issue I would need to cast my Music instance to the right subclass and invoke its specific setPosition() method. If all Music subclasses already support setPosition() it should be much simpler to just add it to the interface.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2027/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2026","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2026/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2026/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2026/events","html_url":"https://github.com/libgdx/libgdx/pull/2026","id":36391459,"number":2026,"title":"Add new Drawable class ColorDrawable","user":{"login":"NoelDeMartin","id":1517677,"avatar_url":"https://avatars3.githubusercontent.com/u/1517677?v=4","gravatar_id":"","url":"https://api.github.com/users/NoelDeMartin","html_url":"https://github.com/NoelDeMartin","followers_url":"https://api.github.com/users/NoelDeMartin/followers","following_url":"https://api.github.com/users/NoelDeMartin/following{/other_user}","gists_url":"https://api.github.com/users/NoelDeMartin/gists{/gist_id}","starred_url":"https://api.github.com/users/NoelDeMartin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NoelDeMartin/subscriptions","organizations_url":"https://api.github.com/users/NoelDeMartin/orgs","repos_url":"https://api.github.com/users/NoelDeMartin/repos","events_url":"https://api.github.com/users/NoelDeMartin/events{/privacy}","received_events_url":"https://api.github.com/users/NoelDeMartin/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2014-06-24T14:51:44Z","updated_at":"2014-06-28T14:49:22Z","closed_at":"2014-06-24T15:12:27Z","author_association":"NONE","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2026","html_url":"https://github.com/libgdx/libgdx/pull/2026","diff_url":"https://github.com/libgdx/libgdx/pull/2026.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2026.patch"},"body":"Hello,\n\nI started working on a project and I found it difficult to create a simple Drawable with a plain color (my case was for using a color in the background of a button, as seen in the image below).\n![buttons](https://cloud.githubusercontent.com/assets/1517677/3372863/b8209642-fbae-11e3-9236-5450b334c0af.png)\n\nFor that purpose I created this class, ColorDrawable. Later on I discovered android has a class with the exact same name, so I guess that's a good point for the correctness of this class (conceptually at least, not sure if the implementation of the ShapeRenderer usage could improve).\n\nI have tried to follow all the instructions for contributing, the only thing missing is the Contributor License Agreement. If this commit is ok and it will be merged, I will proceed to send that document.\n\nAn example usage of how I am using this new class is the following (in a skin json file):\n\n```\ncom.badlogic.gdx.graphics.Color: {\n    font-color: { r: 1, g: 1, b: 1, a: 1 },\n    main-strong: { r: 1, g: 0, b: 0, a: 1 },\n    main-soft: { r: 1, g: 1, b: 0, a: 1 }\n},\ncom.badlogic.gdx.scenes.scene2d.utils.ColorDrawable: {\n    main-strong-drawable: { color: main-strong }\n    main-soft-drawable: { color: main-soft }\n},\ncom.badlogic.gdx.graphics.g2d.BitmapFont: { default-font: { file: fonts/default.fnt } },\ncom.badlogic.gdx.scenes.scene2d.ui.TextButton$TextButtonStyle: {\n    call-to-action: {\n        font: default-font,\n        fontColor: font-color,\n        down: main-strong-drawable,\n        up: main-soft-drawable\n    }\n}\n```\n\nCheers\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2026/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}}],"meta":{"x-ratelimit-limit":"5000","x-ratelimit-remaining":"4903","x-ratelimit-reset":"1506844633","x-github-request-id":"BCE8:1109:13E11E1:286DFDF:59D0962E","x-github-media-type":"github.squirrel-girl-preview","link":"<https://api.github.com/repositories/5373551/issues?state=all&page=97>; rel=\"next\", <https://api.github.com/repositories/5373551/issues?state=all&page=164>; rel=\"last\", <https://api.github.com/repositories/5373551/issues?state=all&page=1>; rel=\"first\", <https://api.github.com/repositories/5373551/issues?state=all&page=95>; rel=\"prev\"","etag":"\"005f5129f7e8221ebf6ca4681da40e3f\"","status":"200 OK"}}
