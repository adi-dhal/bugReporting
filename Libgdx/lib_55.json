{"data":[{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3288","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3288/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3288/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3288/events","html_url":"https://github.com/libgdx/libgdx/issues/3288","id":95776999,"number":3288,"title":"Slow Decal Batching","user":{"login":"calanti","id":12170223,"avatar_url":"https://avatars3.githubusercontent.com/u/12170223?v=4","gravatar_id":"","url":"https://api.github.com/users/calanti","html_url":"https://github.com/calanti","followers_url":"https://api.github.com/users/calanti/followers","following_url":"https://api.github.com/users/calanti/following{/other_user}","gists_url":"https://api.github.com/users/calanti/gists{/gist_id}","starred_url":"https://api.github.com/users/calanti/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/calanti/subscriptions","organizations_url":"https://api.github.com/users/calanti/orgs","repos_url":"https://api.github.com/users/calanti/repos","events_url":"https://api.github.com/users/calanti/events{/privacy}","received_events_url":"https://api.github.com/users/calanti/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2015-07-18T01:55:38Z","updated_at":"2015-10-03T19:19:44Z","closed_at":"2015-10-03T19:19:44Z","author_association":"NONE","body":"As discussed in a previous issue, I am having some issues with batching lots of the decals that use the same TextureRegion, just different locations, colours and speeds.\n\nBelow is my class filtered just for the Decal setup and rendering. (I hope this is what you were after @xoppa ?) \n\nCurrently just testing on a Sony Xperia Z, I don't have access to my other testing devices at the moment. But after 30 seconds or so it settles at roughly 30fps. A strange thing I just noticed, if DB.add(d) and DB.flush() are removed, it settles at 60fps, so setting 2000x Decal.setPosition and Decal.lookAt every frame is speedy enough, but removing Decal.setPositon and Decal.lookAt (and only rendering the stationary Decals) seems to sit around 50fps. Combine the 2 and boom, 30fps. \n\n```\nimport com.badlogic.gdx.Gdx;\nimport com.badlogic.gdx.Screen;\nimport com.badlogic.gdx.graphics.Color;\nimport com.badlogic.gdx.graphics.GL20;\nimport com.badlogic.gdx.graphics.PerspectiveCamera;\nimport com.badlogic.gdx.graphics.Texture;\nimport com.badlogic.gdx.graphics.g2d.Sprite;\nimport com.badlogic.gdx.graphics.g2d.TextureRegion;\nimport com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy;\nimport com.badlogic.gdx.graphics.g3d.decals.Decal;\nimport com.badlogic.gdx.graphics.g3d.decals.DecalBatch;\nimport com.badlogic.gdx.math.MathUtils;\nimport com.badlogic.gdx.math.Vector3;\nimport com.badlogic.gdx.utils.Array;\nimport com.badlogic.gdx.utils.viewport.FitViewport;\nimport com.badlogic.gdx.utils.viewport.Viewport;\n\npublic class DecalTest implements Screen {\n\n    int APP_WIDTH = 1080;\n    int APP_HEIGHT = 1080*Gdx.graphics.getHeight()/Gdx.graphics.getWidth();\n    int scrWidth = Gdx.graphics.getWidth();\n    int scrHeight = Gdx.graphics.getHeight();\n\n    PerspectiveCamera cam3D;\n    CameraGroupStrategy cam_strategy;\n    Viewport viewport3D;\n\n    DecalBatch DB;\n\n    int noOfGasParticles = 2000;\n    float[] initial_gas_angles = new float[noOfGasParticles];\n    float[] gas_z_angles = new float[noOfGasParticles];\n    float[] gas_x_angles = new float[noOfGasParticles];\n    float[] gas_radii = new float[noOfGasParticles];\n    float[] gas_speeds = new float[noOfGasParticles];\n    Vector3[] gas_positions = new Vector3[noOfGasParticles];\n    Vector3[] gas_axis = new Vector3[noOfGasParticles];\n\n    Array<Decal> gas_decals = new Array<Decal>();\n\n    public DecalTest() {\n\n        cam3D = new PerspectiveCamera(60, 1, APP_HEIGHT / APP_WIDTH);\n        viewport3D = new FitViewport(APP_WIDTH,APP_HEIGHT, cam3D);\n        cam3D.near = 10.0f;\n        cam3D.far = 6000.0f;\n        cam3D.position.set(500,500,500);\n        cam3D.lookAt(0,0,0);\n        cam3D.up.set(0,1,0.2f);\n        viewport3D.apply();\n        cam3D.update();\n\n        cam_strategy = new CameraGroupStrategy(cam3D);\n\n        Gdx.gl.glEnable(GL20.GL_BLEND);\n\n        DB = new DecalBatch(noOfGasParticles, cam_strategy);\n\n        initialiseGas();\n\n    }\n\n    private void initialiseGas(){\n\n        for(int i = 0; i < noOfGasParticles;i++){\n            initial_gas_angles[i] = MathUtils.random(0f,360f);\n            gas_z_angles[i] = MathUtils.random(-0.1f,0.1f);\n            gas_x_angles[i] = MathUtils.random(-0.1f,0.1f);\n            gas_axis[i] = new Vector3(gas_x_angles[i],1, gas_z_angles[i]);\n            gas_radii[i] = MathUtils.random(250f,350f);\n            gas_speeds[i] = ((50-Math.abs(300f- gas_radii[i]))/50f)*2+0.1f;\n            gas_positions[i] = new Vector3(gas_radii[i]*MathUtils.sinDeg(initial_gas_angles[i]),0, gas_radii[i]*MathUtils.cosDeg(initial_gas_angles[i]));\n        }\n\n        Texture gas_t = new Texture(Gdx.files.internal(\"gas.png\"));\n        gas_t.setFilter(Texture.TextureFilter.Linear, Texture.TextureFilter.Linear);\n\n        Sprite gas_spr = new Sprite(gas_t);\n\n        for(int i = 0; i < noOfGasParticles;i++){\n            Decal gas = Decal.newDecal(2,2,new TextureRegion(gas_spr),true);\n            float col = (70-Math.abs(300f- gas_radii[i]))/70f;\n            Color tint = new Color(1.0f,0.3f,col,0.3f);\n            gas.setColor(tint);\n            gas.setScale(MathUtils.random(1.0f,2.0f));\n            gas.setBlending(GL20.GL_SRC_ALPHA, GL20.GL_ONE);\n            gas.setPosition(gas_positions[i]);\n            gas.lookAt(cam3D.position, cam3D.up);\n            gas_decals.add(gas);\n        }\n    }\n\n\n    @Override\n    public void render(float delta) {\n\n        Gdx.gl.glClearColor(0f, 0f, 0f, 1f);\n        Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT | GL20.GL_DEPTH_BUFFER_BIT);\n\n        int k = 0;\n\n        for(Decal d: gas_decals) {\n            d.setPosition(gas_positions[k]);\n            d.lookAt(cam3D.position, cam3D.up);\n            DB.add(d);\n            k++;\n        }\n\n        DB.flush();\n\n        for(int i = 0; i < noOfGasParticles;i++){\n            gas_positions[i].rotate(gas_axis[i], gas_speeds[i]);\n        }\n\n        out(\"FPS \" + Gdx.graphics.getFramesPerSecond());\n\n    }\n\n    private void out(Object msg) {\n        Gdx.app.debug(\"info\", msg.toString());\n    }\n\n    @Override\n    public void resize(int width, int height) {\n        viewport3D.update(width, height);\n        cam3D.position.set(500,500,500);\n        cam3D.lookAt(0,0,0);\n        cam3D.up.set(0,1,0.2f);\n        cam3D.update();\n    }\n\n    @Override\n    public void pause() {\n\n    }\n\n    @Override\n    public void resume() {\n\n    }\n\n    @Override\n    public void dispose() {\n        DB.dispose();\n    }\n\n    @Override\n    public void show() {\n\n    }\n    @Override\n    public void hide() {\n\n    }\n\n}\n```\n\n⇩ gas.png is actually right here\n![gas](https://cloud.githubusercontent.com/assets/12170223/8759878/75ad1822-2cf8-11e5-947e-e0d0ab0e20fd.png)\n⇧\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3288/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3287","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3287/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3287/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3287/events","html_url":"https://github.com/libgdx/libgdx/issues/3287","id":95620218,"number":3287,"title":"FreeType doesn't render incremental characters [New bug].","user":{"login":"9Livees","id":7490949,"avatar_url":"https://avatars1.githubusercontent.com/u/7490949?v=4","gravatar_id":"","url":"https://api.github.com/users/9Livees","html_url":"https://github.com/9Livees","followers_url":"https://api.github.com/users/9Livees/followers","following_url":"https://api.github.com/users/9Livees/following{/other_user}","gists_url":"https://api.github.com/users/9Livees/gists{/gist_id}","starred_url":"https://api.github.com/users/9Livees/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/9Livees/subscriptions","organizations_url":"https://api.github.com/users/9Livees/orgs","repos_url":"https://api.github.com/users/9Livees/repos","events_url":"https://api.github.com/users/9Livees/events{/privacy}","received_events_url":"https://api.github.com/users/9Livees/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2015-07-17T09:17:41Z","updated_at":"2015-07-23T23:36:35Z","closed_at":"2015-07-17T15:06:34Z","author_association":"NONE","body":"Last week I wrote about the [bug in FreeTypeFontGenerator](https://github.com/libgdx/libgdx/issues/3270). It was fixed but now (in 1.6.5-SNAPSHOT) incremental characters just not drawn.\nHere is example:\n\n``` java\nimport com.badlogic.gdx.ApplicationAdapter;\nimport com.badlogic.gdx.Gdx;\nimport com.badlogic.gdx.backends.lwjgl.LwjglApplication;\nimport com.badlogic.gdx.graphics.Color;\nimport com.badlogic.gdx.graphics.GL20;\nimport com.badlogic.gdx.graphics.OrthographicCamera;\nimport com.badlogic.gdx.graphics.g2d.BitmapFont;\nimport com.badlogic.gdx.graphics.g2d.GlyphLayout;\nimport com.badlogic.gdx.graphics.g2d.SpriteBatch;\nimport com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator;\nimport com.badlogic.gdx.utils.Align;\n\npublic class Example extends ApplicationAdapter {\n\n    private OrthographicCamera camera;\n    private SpriteBatch spriteBatch;\n    private FreeTypeFontGenerator generator;\n    private BitmapFont font;\n\n    private GlyphLayout text;\n\n    public void create () {\n        camera = new OrthographicCamera();\n        camera.setToOrtho(false, Gdx.graphics.getWidth(), Gdx.graphics.getHeight());\n        spriteBatch = new SpriteBatch();\n        spriteBatch.setProjectionMatrix(camera.combined);\n\n        generator = new FreeTypeFontGenerator(Gdx.files.internal(\"font/Ubuntu-B.ttf\"));\n        FreeTypeFontGenerator.FreeTypeFontParameter parameter = new FreeTypeFontGenerator.FreeTypeFontParameter();\n        parameter.size = 20;\n        parameter.incremental = true;\n        font = generator.generateFont(parameter); \n\n        text = new GlyphLayout(font, \"Latin characters | Кириллические символы\", Color.BLACK, Gdx.graphics.getWidth(), Align.center, true);\n    }\n\n    public void render() {\n        Gdx.gl.glClearColor(1.0f, 1.0f, 1.0f, 1);\n        Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);\n        camera.update();\n\n        spriteBatch.begin();\n        font.draw(spriteBatch, text, 0, Gdx.graphics.getHeight()/2);\n        spriteBatch.end();\n    }\n\n    public void dispose() {\n        font.dispose();\n        generator.dispose();\n    }\n\n    public static void main (String[] args) throws Exception {\n        new LwjglApplication(new Example());\n    }\n}\n```\n\nAnd the result:\n![ps1](https://cloud.githubusercontent.com/assets/7490949/8744052/e0aa85f0-2c7c-11e5-85b1-fef0ad029f81.jpg)\nIn 1.6.2 it works properly:\n![ps2](https://cloud.githubusercontent.com/assets/7490949/8744088/216de1b8-2c7d-11e5-89b8-38b41d9f5605.jpg)\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3287/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3286","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3286/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3286/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3286/events","html_url":"https://github.com/libgdx/libgdx/pull/3286","id":95556392,"number":3286,"title":"Make Android preferences unblocking","user":{"login":"tavomaciel","id":1661000,"avatar_url":"https://avatars0.githubusercontent.com/u/1661000?v=4","gravatar_id":"","url":"https://api.github.com/users/tavomaciel","html_url":"https://github.com/tavomaciel","followers_url":"https://api.github.com/users/tavomaciel/followers","following_url":"https://api.github.com/users/tavomaciel/following{/other_user}","gists_url":"https://api.github.com/users/tavomaciel/gists{/gist_id}","starred_url":"https://api.github.com/users/tavomaciel/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tavomaciel/subscriptions","organizations_url":"https://api.github.com/users/tavomaciel/orgs","repos_url":"https://api.github.com/users/tavomaciel/repos","events_url":"https://api.github.com/users/tavomaciel/events{/privacy}","received_events_url":"https://api.github.com/users/tavomaciel/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2015-07-17T00:08:08Z","updated_at":"2015-07-20T00:19:14Z","closed_at":"2015-07-19T23:03:50Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3286","html_url":"https://github.com/libgdx/libgdx/pull/3286","diff_url":"https://github.com/libgdx/libgdx/pull/3286.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3286.patch"},"body":"Accordingly to [Android ref](http://developer.android.com/reference/android/content/SharedPreferences.Editor.html), we should prefer `apply()` over `commit()`. `apply()` will save the state to the object synchronously, but will start an async task to save the object to the disk, while `commit()` will do both synchronously, where it can block if done in the main thread.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3286/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3285","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3285/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3285/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3285/events","html_url":"https://github.com/libgdx/libgdx/issues/3285","id":95325014,"number":3285,"title":"Eclipse formatter doesn't work for Mars","user":{"login":"StrongJoshua","id":6654606,"avatar_url":"https://avatars0.githubusercontent.com/u/6654606?v=4","gravatar_id":"","url":"https://api.github.com/users/StrongJoshua","html_url":"https://github.com/StrongJoshua","followers_url":"https://api.github.com/users/StrongJoshua/followers","following_url":"https://api.github.com/users/StrongJoshua/following{/other_user}","gists_url":"https://api.github.com/users/StrongJoshua/gists{/gist_id}","starred_url":"https://api.github.com/users/StrongJoshua/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/StrongJoshua/subscriptions","organizations_url":"https://api.github.com/users/StrongJoshua/orgs","repos_url":"https://api.github.com/users/StrongJoshua/repos","events_url":"https://api.github.com/users/StrongJoshua/events{/privacy}","received_events_url":"https://api.github.com/users/StrongJoshua/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":10,"created_at":"2015-07-16T01:16:07Z","updated_at":"2015-08-18T18:31:21Z","closed_at":"2015-08-18T18:31:21Z","author_association":"CONTRIBUTOR","body":"Not that you can't import it, but it behaves differently from Luna. The major aspect that I have noticed is that while in Luna the following code looks like this:\n\n```\n    removeButton.addListener(new ClickListener() {\n        @Override\n        public void clicked (InputEvent event, float x, float y) {\n            editor.remove();\n        }\n    });\n```\n\nin Mars it looks like this:\n\n```\n    removeButton.addListener(new ClickListener() {\n        @Override\n        public void clicked (InputEvent event, float x, float y) {\n        editor.remove();\n        }\n    });\n```\n\nAlthough this might seem minor just looking at it like this, the difference ruins commits because of how many places this change occurs. I haven't been able to find the setting to change it back, in Mars, to the way it works in Luna. Just for extra clarification, I am importing the exact same formatter to Luna and Mars, getting those respective results.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3285/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3284","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3284/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3284/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3284/events","html_url":"https://github.com/libgdx/libgdx/issues/3284","id":95298247,"number":3284,"title":"TextureMapObject loaded with incorrect y value?","user":{"login":"p-brz","id":1710573,"avatar_url":"https://avatars2.githubusercontent.com/u/1710573?v=4","gravatar_id":"","url":"https://api.github.com/users/p-brz","html_url":"https://github.com/p-brz","followers_url":"https://api.github.com/users/p-brz/followers","following_url":"https://api.github.com/users/p-brz/following{/other_user}","gists_url":"https://api.github.com/users/p-brz/gists{/gist_id}","starred_url":"https://api.github.com/users/p-brz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/p-brz/subscriptions","organizations_url":"https://api.github.com/users/p-brz/orgs","repos_url":"https://api.github.com/users/p-brz/repos","events_url":"https://api.github.com/users/p-brz/events{/privacy}","received_events_url":"https://api.github.com/users/p-brz/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2015-07-15T21:49:44Z","updated_at":"2015-07-19T21:34:02Z","closed_at":"2015-07-19T21:25:36Z","author_association":"NONE","body":"I am have some problems to position correctly an TextureMapObject loaded from an tiled map.\n\nThe objects are loaded with an negative offset on y axis (equals to the size of the tile).\nThat is, the object is positionated below the expected position (viewed on tiled editor).\n\nIt seems that the problem is due to the fact that the x,y positions returned from tiled corresponds\nto the bottom left point of the image, instead of the top-left point (like an rectangle object).\nThis can be checked on tiled, positioning an rectangle object and an image object on same position.\nThe rectangle should be drawed below the image.\n\nThe fix seems to be simple. Changing the line correspondent to the 243 line on BaseTmxMapLoader (on method loadObject).\nChanging this:\n\n```\n     object.getProperties().put(\"y\", (flipY ? y - height : y) * scaleY);\n```\n\nto this:\n\n```\n      object.getProperties().put(\"y\", y * scaleY);\n```\n\n I had tested quickly the change by extending the TmxMapLoader and copying the loadObject method.\nBut i have not tested this with an not flipped map.\n\nTo know, i am using the 0.12.3 version of tiled and i am rendering these objects with the following code (i had extended the OrthogonalTiledMapRenderer):\n\n```\n   @Override\npublic void renderObject(MapObject object) {\n    if(object instanceof TextureMapObject){\n        TextureMapObject textObj = (TextureMapObject)object;\n        TextureRegion texRegion = textObj.getTextureRegion();\n\n        getBatch().draw(texRegion\n                        , textObj.getX() \n                        , textObj.getY() \n                        , textObj.getOriginX() \n                        , textObj.getOriginY()\n                        , texRegion.getRegionWidth()\n                        , texRegion.getRegionHeight()\n                        , textObj.getScaleX() \n                        , textObj.getScaleY()\n                        , textObj.getRotation()\n                        );\n    }\n}\n```\n\nI hope have been clear. If you want, i can make a pull request with those little changes.\n\nThanks! \n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3284/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3283","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3283/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3283/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3283/events","html_url":"https://github.com/libgdx/libgdx/issues/3283","id":95195171,"number":3283,"title":"Bug in wheelJoint.getLocalAxis()?","user":{"login":"Deftwun","id":1771998,"avatar_url":"https://avatars3.githubusercontent.com/u/1771998?v=4","gravatar_id":"","url":"https://api.github.com/users/Deftwun","html_url":"https://github.com/Deftwun","followers_url":"https://api.github.com/users/Deftwun/followers","following_url":"https://api.github.com/users/Deftwun/following{/other_user}","gists_url":"https://api.github.com/users/Deftwun/gists{/gist_id}","starred_url":"https://api.github.com/users/Deftwun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Deftwun/subscriptions","organizations_url":"https://api.github.com/users/Deftwun/orgs","repos_url":"https://api.github.com/users/Deftwun/repos","events_url":"https://api.github.com/users/Deftwun/events{/privacy}","received_events_url":"https://api.github.com/users/Deftwun/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2015-07-15T13:31:19Z","updated_at":"2015-07-15T14:52:31Z","closed_at":"2015-07-15T14:52:31Z","author_association":"NONE","body":"Pretty sure this is a bug though I may be missing something,  but whenever I try and get the local axis of a wheel joint I end up with what looks like a local anchor. After looking at the source it looks like getLocalAxisA is calling a native function jniGetLocalAnchorA instead of jniGetLocalAxisA. Relevant function is on line 66 in WheelJoint.java:\n\n[link to WheelJoint.java](https://github.com/libgdx/libgdx/blob/master/extensions/gdx-box2d/gdx-box2d/src/com/badlogic/gdx/physics/box2d/joints/WheelJoint.java)\n\n```\npublic Vector2 getLocalAxisA(){\n    jniGetLocalAnchorA(addr, tmp);    //<< Shouldn't this be jniGetLocalAxisA(addr,tmp) ?\n    localAxisA.set(tmp[0], tmp[1]);\n    return localAxisA;\n}\n```\n\nHeres a code snippet to show what I'm talking about: \n\n```\nWorld world = App.engine.systems.physics.world;\nBodyDef bd = new BodyDef();\nbd.type = BodyType.DynamicBody;\n\nBody body = world.createBody(bd),\n     wheel = world.createBody(bd);\n\nPolygonShape rect = new PolygonShape();\nrect.setAsBox(2, 1);\nCircleShape circle = new CircleShape();\ncircle.setRadius(1);\n\nbody.createFixture(rect,1);\nwheel.createFixture(circle,1);\n\nVector2 localAnchor = new Vector2(0,0),\n        localAxis = new Vector2(0,1);\n\nWheelJointDef jd = new WheelJointDef();\njd.initialize(body, wheel, localAnchor , localAxis);\nWheelJoint joint = (WheelJoint)world.createJoint(jd);\n\nSystem.out.println(\"Local Axis = \" + joint.getLocalAxisA());\nSystem.out.println(\"Local Anchor A = \" + joint.getLocalAnchorA());\n\n//output: \n//Local Axis = [0.0:0.0]         <<< This should be outputting [0.0:1.0]\n//Local Anchor A = [0.0:0.0]\n```\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3283/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3282","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3282/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3282/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3282/events","html_url":"https://github.com/libgdx/libgdx/issues/3282","id":95194956,"number":3282,"title":"Changes to JsonValue.toString break JSON nested class parsing.","user":{"login":"yogeto","id":5148214,"avatar_url":"https://avatars2.githubusercontent.com/u/5148214?v=4","gravatar_id":"","url":"https://api.github.com/users/yogeto","html_url":"https://github.com/yogeto","followers_url":"https://api.github.com/users/yogeto/followers","following_url":"https://api.github.com/users/yogeto/following{/other_user}","gists_url":"https://api.github.com/users/yogeto/gists{/gist_id}","starred_url":"https://api.github.com/users/yogeto/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yogeto/subscriptions","organizations_url":"https://api.github.com/users/yogeto/orgs","repos_url":"https://api.github.com/users/yogeto/repos","events_url":"https://api.github.com/users/yogeto/events{/privacy}","received_events_url":"https://api.github.com/users/yogeto/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2015-07-15T13:30:15Z","updated_at":"2015-07-16T01:56:08Z","closed_at":"2015-07-15T13:36:03Z","author_association":"NONE","body":"In commits to JsonValue.java from Dec 18, 2014, the toString() method is changed to pre-pend its name to the contents. As a result the following JSON fails to parse:\n{\n\"base\" : [\n    {\n        \"type\" : \"com.badlogic.gdx.graphics.Texture\",\n        \"path\" : \"data/bg_2048.png\",\n        \"parameters\" : {\n            class: com.badlogic.gdx.assets.loaders.TextureLoader$TextureParameter,\n            \"minFilter\": \"MipMap\",\n            \"magFilter\": \"Linear\",\n            \"genMipMaps\": \"true\"\n        }\n    }\n]\n}\n\nThe call \"String paramStr = jsonData.get(\"parameters\").toString();\" will result in:\nBefore the change: \"{\\nclass: com.badlogic.gdx.assets.loa.......\"\nAfter the change: \"parameters : {\\nclass: com.badlogic.gdx.assets.loa.......\"\n\nSubsequent call to json.fromJson(null, paramStr); fails to parse the string with exception: Error parsing JSON on line 2 near: class: \"com.badlogic.gdx.assets.loaders.TextureLoader$TextureParameter\"\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3282/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3281","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3281/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3281/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3281/events","html_url":"https://github.com/libgdx/libgdx/issues/3281","id":94888200,"number":3281,"title":"IndexOutofBoundsException in AndroidInput","user":{"login":"s565288909","id":9605286,"avatar_url":"https://avatars1.githubusercontent.com/u/9605286?v=4","gravatar_id":"","url":"https://api.github.com/users/s565288909","html_url":"https://github.com/s565288909","followers_url":"https://api.github.com/users/s565288909/followers","following_url":"https://api.github.com/users/s565288909/following{/other_user}","gists_url":"https://api.github.com/users/s565288909/gists{/gist_id}","starred_url":"https://api.github.com/users/s565288909/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s565288909/subscriptions","organizations_url":"https://api.github.com/users/s565288909/orgs","repos_url":"https://api.github.com/users/s565288909/repos","events_url":"https://api.github.com/users/s565288909/events{/privacy}","received_events_url":"https://api.github.com/users/s565288909/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2015-07-14T07:52:56Z","updated_at":"2015-07-14T12:33:48Z","closed_at":"2015-07-14T12:33:48Z","author_association":"NONE","body":"Hi,I have used libGDX for Android TV games,thank you for libGDX.\nNow there having a issue about **Key Value**.\nOn Android TV telecontroller,some key's **Key Value** is unusually.When you press them,program will crash.\nError log:\n\n```\nFATAL EXCEPTION: main\njava.lang.ArrayIndexOutOfBoundsException: length=256; index=389\nat com.badlogic.gdx.backends.android.AndroidInput.onKey(AndroidInput.java:496)\nat android.view.View.dispatchKeyEvent(View.java:7208)\nat android.view.ViewGroup.dispatchKeyEvent(ViewGroup.java:1362)\nat android.view.ViewGroup.dispatchKeyEvent(ViewGroup.java:1362)\nat android.view.ViewGroup.dispatchKeyEvent(ViewGroup.java:1362)\nat com.android.internal.policy.impl.PhoneWindow$DecorView.superDispatchKeyEvent(PhoneWindow.java:1920)\nat com.android.internal.policy.impl.PhoneWindow.superDispatchKeyEvent(PhoneWindow.java:1395)\nat android.app.Activity.dispatchKeyEvent(Activity.java:2392)\n...\n```\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3281/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3280","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3280/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3280/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3280/events","html_url":"https://github.com/libgdx/libgdx/pull/3280","id":94725065,"number":3280,"title":"TextField's cursor doesn't blink in GWT backend","user":{"login":"anserran","id":1515738,"avatar_url":"https://avatars1.githubusercontent.com/u/1515738?v=4","gravatar_id":"","url":"https://api.github.com/users/anserran","html_url":"https://github.com/anserran","followers_url":"https://api.github.com/users/anserran/followers","following_url":"https://api.github.com/users/anserran/following{/other_user}","gists_url":"https://api.github.com/users/anserran/gists{/gist_id}","starred_url":"https://api.github.com/users/anserran/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/anserran/subscriptions","organizations_url":"https://api.github.com/users/anserran/orgs","repos_url":"https://api.github.com/users/anserran/repos","events_url":"https://api.github.com/users/anserran/events{/privacy}","received_events_url":"https://api.github.com/users/anserran/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2015-07-13T13:48:34Z","updated_at":"2015-07-13T13:57:33Z","closed_at":"2015-07-13T13:56:12Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3280","html_url":"https://github.com/libgdx/libgdx/pull/3280","diff_url":"https://github.com/libgdx/libgdx/pull/3280.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3280.patch"},"body":"TextField and TextArea cursor doesn't blink in GWT due to this:\nhttps://github.com/libgdx/libgdx/blob/master/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextField.java#L397\n\n``` java\n        if (!Gdx.graphics.isContinuousRendering()) {\n            cursorOn = true;\n            return;\n        }\n```\n\nand `Gdx.graphics.isContinuousRendering()` returning always `false` in GWT backend, so I changed it to return true, which solves this problem and also makes more sense, since other backends starts with continuous rendering set to true.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3280/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3279","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3279/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3279/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3279/events","html_url":"https://github.com/libgdx/libgdx/pull/3279","id":94690717,"number":3279,"title":"setVolume without ID for Sound","user":{"login":"PojahnM","id":5539893,"avatar_url":"https://avatars0.githubusercontent.com/u/5539893?v=4","gravatar_id":"","url":"https://api.github.com/users/PojahnM","html_url":"https://github.com/PojahnM","followers_url":"https://api.github.com/users/PojahnM/followers","following_url":"https://api.github.com/users/PojahnM/following{/other_user}","gists_url":"https://api.github.com/users/PojahnM/gists{/gist_id}","starred_url":"https://api.github.com/users/PojahnM/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/PojahnM/subscriptions","organizations_url":"https://api.github.com/users/PojahnM/orgs","repos_url":"https://api.github.com/users/PojahnM/repos","events_url":"https://api.github.com/users/PojahnM/events{/privacy}","received_events_url":"https://api.github.com/users/PojahnM/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":15,"created_at":"2015-07-13T10:28:29Z","updated_at":"2015-08-03T07:12:50Z","closed_at":"2015-08-03T07:12:50Z","author_association":"NONE","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3279","html_url":"https://github.com/libgdx/libgdx/pull/3279","diff_url":"https://github.com/libgdx/libgdx/pull/3279.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3279.patch"},"body":"One limitation I had with LibGDX sound interface is the lack of the ability to set volume without specifying an ID. Default volume.\n\nIn my game for example, there are utility classes that handle sound fall off. These need to alter the volume of sounds without playing it, which is done by the entities. So these small changes would be nice.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3279/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3278","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3278/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3278/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3278/events","html_url":"https://github.com/libgdx/libgdx/issues/3278","id":94682690,"number":3278,"title":"Screen issue (Robovm) ","user":{"login":"Yayo-Arellano","id":3458265,"avatar_url":"https://avatars2.githubusercontent.com/u/3458265?v=4","gravatar_id":"","url":"https://api.github.com/users/Yayo-Arellano","html_url":"https://github.com/Yayo-Arellano","followers_url":"https://api.github.com/users/Yayo-Arellano/followers","following_url":"https://api.github.com/users/Yayo-Arellano/following{/other_user}","gists_url":"https://api.github.com/users/Yayo-Arellano/gists{/gist_id}","starred_url":"https://api.github.com/users/Yayo-Arellano/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Yayo-Arellano/subscriptions","organizations_url":"https://api.github.com/users/Yayo-Arellano/orgs","repos_url":"https://api.github.com/users/Yayo-Arellano/repos","events_url":"https://api.github.com/users/Yayo-Arellano/events{/privacy}","received_events_url":"https://api.github.com/users/Yayo-Arellano/received_events","type":"User","site_admin":false},"labels":[{"id":11336980,"url":"https://api.github.com/repos/libgdx/libgdx/labels/bug","name":"bug","color":"fc2929","default":true},{"id":59604199,"url":"https://api.github.com/repos/libgdx/libgdx/labels/ios","name":"ios","color":"207de5","default":false}],"state":"closed","locked":false,"assignee":{"login":"badlogic","id":514052,"avatar_url":"https://avatars1.githubusercontent.com/u/514052?v=4","gravatar_id":"","url":"https://api.github.com/users/badlogic","html_url":"https://github.com/badlogic","followers_url":"https://api.github.com/users/badlogic/followers","following_url":"https://api.github.com/users/badlogic/following{/other_user}","gists_url":"https://api.github.com/users/badlogic/gists{/gist_id}","starred_url":"https://api.github.com/users/badlogic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/badlogic/subscriptions","organizations_url":"https://api.github.com/users/badlogic/orgs","repos_url":"https://api.github.com/users/badlogic/repos","events_url":"https://api.github.com/users/badlogic/events{/privacy}","received_events_url":"https://api.github.com/users/badlogic/received_events","type":"User","site_admin":false},"assignees":[{"login":"badlogic","id":514052,"avatar_url":"https://avatars1.githubusercontent.com/u/514052?v=4","gravatar_id":"","url":"https://api.github.com/users/badlogic","html_url":"https://github.com/badlogic","followers_url":"https://api.github.com/users/badlogic/followers","following_url":"https://api.github.com/users/badlogic/following{/other_user}","gists_url":"https://api.github.com/users/badlogic/gists{/gist_id}","starred_url":"https://api.github.com/users/badlogic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/badlogic/subscriptions","organizations_url":"https://api.github.com/users/badlogic/orgs","repos_url":"https://api.github.com/users/badlogic/repos","events_url":"https://api.github.com/users/badlogic/events{/privacy}","received_events_url":"https://api.github.com/users/badlogic/received_events","type":"User","site_admin":false}],"milestone":null,"comments":2,"created_at":"2015-07-13T09:45:21Z","updated_at":"2016-01-05T17:05:40Z","closed_at":"2016-01-05T17:05:40Z","author_association":"NONE","body":"I add a banner subview in top of the libgdx view just like this->\n\n![Image of libgdx](https://dl.dropboxusercontent.com/u/78073642/ImagenesPosteadasEnForos/2014-01-02%2017.10.46.jpg)\n\nAll my buttons are set with scene2d, but i notice that i have to press below the buttons to get the changed event. \nif i do not add the banner view there is no problem about pressing the buttons.\n\nI was looking the source code in the robovm back-end and i think the problem is the function getBounds, cause you are getting the size of all the screen, and not the view that is using libgx\n\nAs mario said in this comment its an issue with Libgdx. http://robovm.com/robovm-1-5-released-cross-platform-development-robopods/#comment-2128199229\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3278/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3277","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3277/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3277/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3277/events","html_url":"https://github.com/libgdx/libgdx/pull/3277","id":94664326,"number":3277,"title":"Avoid IllegalStateException if called on empty selection set.","user":{"login":"code-disaster","id":4644167,"avatar_url":"https://avatars1.githubusercontent.com/u/4644167?v=4","gravatar_id":"","url":"https://api.github.com/users/code-disaster","html_url":"https://github.com/code-disaster","followers_url":"https://api.github.com/users/code-disaster/followers","following_url":"https://api.github.com/users/code-disaster/following{/other_user}","gists_url":"https://api.github.com/users/code-disaster/gists{/gist_id}","starred_url":"https://api.github.com/users/code-disaster/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/code-disaster/subscriptions","organizations_url":"https://api.github.com/users/code-disaster/orgs","repos_url":"https://api.github.com/users/code-disaster/repos","events_url":"https://api.github.com/users/code-disaster/events{/privacy}","received_events_url":"https://api.github.com/users/code-disaster/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2015-07-13T08:18:40Z","updated_at":"2015-11-02T12:26:40Z","closed_at":"2015-07-13T08:27:08Z","author_association":"MEMBER","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3277","html_url":"https://github.com/libgdx/libgdx/pull/3277","diff_url":"https://github.com/libgdx/libgdx/pull/3277.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3277.patch"},"body":"Selection.getLastSelected() throws an exception in selection.first(), when called on an empty selection set.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3277/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3276","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3276/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3276/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3276/events","html_url":"https://github.com/libgdx/libgdx/pull/3276","id":94604541,"number":3276,"title":"ClassReflection: added getAnnotation(), getAnnotations().","user":{"login":"code-disaster","id":4644167,"avatar_url":"https://avatars1.githubusercontent.com/u/4644167?v=4","gravatar_id":"","url":"https://api.github.com/users/code-disaster","html_url":"https://github.com/code-disaster","followers_url":"https://api.github.com/users/code-disaster/followers","following_url":"https://api.github.com/users/code-disaster/following{/other_user}","gists_url":"https://api.github.com/users/code-disaster/gists{/gist_id}","starred_url":"https://api.github.com/users/code-disaster/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/code-disaster/subscriptions","organizations_url":"https://api.github.com/users/code-disaster/orgs","repos_url":"https://api.github.com/users/code-disaster/repos","events_url":"https://api.github.com/users/code-disaster/events{/privacy}","received_events_url":"https://api.github.com/users/code-disaster/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2015-07-12T22:18:44Z","updated_at":"2016-02-24T22:41:51Z","closed_at":"2015-07-14T14:10:27Z","author_association":"MEMBER","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3276","html_url":"https://github.com/libgdx/libgdx/pull/3276","diff_url":"https://github.com/libgdx/libgdx/pull/3276.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3276.patch"},"body":"This PR adds support for getAnnotation() / getAnnotations() which take into account @Inherited annotations in super classes.\n\nNote: The GWT backend collects this information at call time, which means this is a relatively costly operation. It might be possible to do this during construction of the reflection cache, but I'm not sure if this is worth the overhead (it would increase size of the cache even more).\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3276/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3275","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3275/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3275/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3275/events","html_url":"https://github.com/libgdx/libgdx/issues/3275","id":94561625,"number":3275,"title":"New tooltips","user":{"login":"nooone","id":5896510,"avatar_url":"https://avatars3.githubusercontent.com/u/5896510?v=4","gravatar_id":"","url":"https://api.github.com/users/nooone","html_url":"https://github.com/nooone","followers_url":"https://api.github.com/users/nooone/followers","following_url":"https://api.github.com/users/nooone/following{/other_user}","gists_url":"https://api.github.com/users/nooone/gists{/gist_id}","starred_url":"https://api.github.com/users/nooone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nooone/subscriptions","organizations_url":"https://api.github.com/users/nooone/orgs","repos_url":"https://api.github.com/users/nooone/repos","events_url":"https://api.github.com/users/nooone/events{/privacy}","received_events_url":"https://api.github.com/users/nooone/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2015-07-12T12:25:42Z","updated_at":"2015-07-13T04:10:29Z","closed_at":"2015-07-13T04:10:29Z","author_association":"CONTRIBUTOR","body":"In case there was a PR prior to adding the new scene2d.ui `Tooltip`s, I've missed that. However now after trying them out I'd like to add my 2 cents and discuss them here a bit.\n\nI have tooltips in nearly every game (prototype) of mine and I think they were really missing in libgdx, although I've never thought about contributing my own implementation. I'm happy they were added by @NathanSweet, but I personally find them to be too limited to really use them.\n\nThe `Tooltip` is actually no new widget (`Actor`), but instead an `EventListener`. That is nice, because it makes adding tooltips to actors very easy, but on the other hand it makes it harder to change what it is displaying.\n\nCurrently it assumes to display only a single text `Label` and nothing else. That might be enough for the most simple usecase of tooltip, but games these days usually display [a lot more information](https://www.google.de/search?q=game+tooltip&source=lnms&tbm=isch).\n\nI suggest changing the current implementation while not many people are using it yet. I suggest making `Tooltip` a subclass of `Window` and having a seperate `TooltipListener`, which is responsible for adding the tooltip to the stage, removing it, triggering an animation, moving it with the pointer/finger etc. Maybe something similar to the following (+the extra stuff that the current implementation does, like disabling all of them, animations etc):\n\n```\npublic abstract class Tooltip extends Window {\n\n    protected Actor targetActor;\n    protected TooltipListener listener;\n\n    public Tooltip(String title, Skin skin, final Actor targetActor) {\n        super(title, skin, \"tooltip\");\n        this.targetActor = targetActor;\n\n        setTransform(true);\n        setTouchable(Touchable.disabled);\n\n        listener = new TooltipListener(this, true);\n        targetActor.addListener(listener);\n    }\n\n    @Override\n    public void act(float delta) {\n        super.act(delta);\n        if (targetActor != null && targetActor.getStage() == null) remove();\n    }\n}\n```\n\nAnd the listener:\n\n```\npublic class TooltipListener extends InputListener {\n\n    private boolean inside;\n\n    private Actor tooltip;\n    private boolean followCursor;\n\n    private Vector2 position = new Vector2();\n    private Vector2 tmp = new Vector2();\n    private Vector2 offset = new Vector2(10, 10);\n\n    public TooltipListener(Actor tooltip, boolean followCursor) {\n        this.tooltip = tooltip;\n        this.followCursor = followCursor;\n    }\n\n    @Override\n    public boolean mouseMoved(InputEvent event, float x, float y) {\n        if (inside && followCursor) {\n            updateTooltipPosition(event, x, y);\n        }\n        return false;\n    }\n\n    @Override\n    public void enter(InputEvent event, float x, float y, int pointer, Actor fromActor) {\n        inside = true;\n        event.getStage().addActor(tooltip);\n        tooltip.setVisible(true);\n        tooltip.toFront();\n        updateTooltipPosition(event, x, y);\n    }\n\n    private void updateTooltipPosition(InputEvent event, float x, float y) {\n        event.getListenerActor().localToStageCoordinates(tmp.set(x, y));\n        tooltip.setPosition(tmp.x + position.x + offset.x, tmp.y + position.y + offset.y);\n    }\n\n    @Override\n    public void exit(InputEvent event, float x, float y, int pointer, Actor toActor) {\n        inside = false;\n        tooltip.setVisible(false);\n        tooltip.remove();\n    }\n\n    /**\n     * The offset of the tooltip from the touch position.\n     */\n    public void setOffset(float offsetX, float offsetY) {\n        offset.set(offsetX, offsetY);\n    }\n}\n```\n\nThe title should probably be optional though. For the most simple usecase we can add another `LabelTooltip` with a single label added to the window.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3275/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3274","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3274/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3274/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3274/events","html_url":"https://github.com/libgdx/libgdx/issues/3274","id":94554170,"number":3274,"title":"FreeTypeFontGenerator is broken in >=1.6.3","user":{"login":"StanDem","id":12011951,"avatar_url":"https://avatars3.githubusercontent.com/u/12011951?v=4","gravatar_id":"","url":"https://api.github.com/users/StanDem","html_url":"https://github.com/StanDem","followers_url":"https://api.github.com/users/StanDem/followers","following_url":"https://api.github.com/users/StanDem/following{/other_user}","gists_url":"https://api.github.com/users/StanDem/gists{/gist_id}","starred_url":"https://api.github.com/users/StanDem/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/StanDem/subscriptions","organizations_url":"https://api.github.com/users/StanDem/orgs","repos_url":"https://api.github.com/users/StanDem/repos","events_url":"https://api.github.com/users/StanDem/events{/privacy}","received_events_url":"https://api.github.com/users/StanDem/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2015-07-12T10:32:37Z","updated_at":"2015-07-12T20:30:27Z","closed_at":"2015-07-12T20:30:27Z","author_association":"NONE","body":"I think something is broken in FreeTypeFontGenerator and libgdx >=1.6.3 when using \n`param.incremental = true`\nOn previous version (1.6.2) I didn't get this error on the generateFont(param) line.\n\n```\nException in thread \"LWJGL Application\" java.lang.NullPointerException\n    at com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeBitmapFontData.getGlyph(FreeTypeFontGenerator.java:613)\n    at com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator.generateData(FreeTypeFontGenerator.java:410)\n    at com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator.generateFont(FreeTypeFontGenerator.java:163)\n```\n\nMy code:\n\n```\n    FreeTypeFontGenerator generator = new FreeTypeFontGenerator(Gdx.files.internal(\"fonts/liberation.ttf\"));\n        FreeTypeFontParameter param = new FreeTypeFontParameter();\n        param.incremental = true;\n        param.size = 36;\n        font = generator.generateFont(param);\n```\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3274/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3273","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3273/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3273/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3273/events","html_url":"https://github.com/libgdx/libgdx/issues/3273","id":94464702,"number":3273,"title":"Implicit version number 110 not supported by GL3 forward compatible context","user":{"login":"Codimale","id":8879000,"avatar_url":"https://avatars0.githubusercontent.com/u/8879000?v=4","gravatar_id":"","url":"https://api.github.com/users/Codimale","html_url":"https://github.com/Codimale","followers_url":"https://api.github.com/users/Codimale/followers","following_url":"https://api.github.com/users/Codimale/following{/other_user}","gists_url":"https://api.github.com/users/Codimale/gists{/gist_id}","starred_url":"https://api.github.com/users/Codimale/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Codimale/subscriptions","organizations_url":"https://api.github.com/users/Codimale/orgs","repos_url":"https://api.github.com/users/Codimale/repos","events_url":"https://api.github.com/users/Codimale/events{/privacy}","received_events_url":"https://api.github.com/users/Codimale/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2015-07-11T11:42:09Z","updated_at":"2015-10-03T19:28:57Z","closed_at":"2015-10-03T19:28:57Z","author_association":"NONE","body":"On some ATI graphics card you get the above error, the only work around is using this as the shader:\n    static public ShaderProgram createDefaultShader () {\n       String vertexShader = \"#version 330 core\\n\"\n          + \"in vec4 \" + ShaderProgram.POSITION_ATTRIBUTE + \";\\n\" //\n          + \"in vec4 \" + ShaderProgram.COLOR_ATTRIBUTE + \";\\n\" //\n          + \"in vec2 \" + ShaderProgram.TEXCOORD_ATTRIBUTE + \"0;\\n\" //\n          + \"uniform mat4 u_projTrans;\\n\" //\n          + \"out vec4 v_color;\\n\" //\n          + \"out vec2 v_texCoords;\\n\" //\n          + \"\\n\" //\n          + \"void main()\\n\" //\n          + \"{\\n\" //\n          + \"   v_color = \" + ShaderProgram.COLOR_ATTRIBUTE + \";\\n\" //\n          + \"   v_color.a = v_color.a \\* (255.0/254.0);\\n\" //\n          + \"   v_texCoords = \" + ShaderProgram.TEXCOORD_ATTRIBUTE + \"0;\\n\" //\n          + \"   gl_Position =  u_projTrans \\* \" + ShaderProgram.POSITION_ATTRIBUTE + \";\\n\" //\n          + \"}\\n\";\n       String fragmentShader = \"#version 330 core\\n\"\n          + \"#ifdef GL_ES\\n\" //\n          + \"#define LOWP lowp\\n\" //\n          + \"precision mediump float;\\n\" //\n          + \"#else\\n\" //\n          + \"#define LOWP \\n\" //\n          + \"#endif\\n\" //\n          + \"in LOWP vec4 v_color;\\n\" //\n          + \"in vec2 v_texCoords;\\n\" //\n          + \"out vec4 fragColor;\\n\" //\n          + \"uniform sampler2D u_texture;\\n\" //\n          + \"void main()\\n\"//\n          + \"{\\n\" //\n          + \"  fragColor = v_color \\* texture(u_texture, v_texCoords);\\n\" //\n          + \"}\";\n\nI was wondering why this wasn't the shader that comes with Libgdx by default.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3273/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3272","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3272/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3272/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3272/events","html_url":"https://github.com/libgdx/libgdx/issues/3272","id":94428460,"number":3272,"title":"Inconsistent behavior between setSize and setScale regarding origin","user":{"login":"kaltinril","id":4995472,"avatar_url":"https://avatars3.githubusercontent.com/u/4995472?v=4","gravatar_id":"","url":"https://api.github.com/users/kaltinril","html_url":"https://github.com/kaltinril","followers_url":"https://api.github.com/users/kaltinril/followers","following_url":"https://api.github.com/users/kaltinril/following{/other_user}","gists_url":"https://api.github.com/users/kaltinril/gists{/gist_id}","starred_url":"https://api.github.com/users/kaltinril/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kaltinril/subscriptions","organizations_url":"https://api.github.com/users/kaltinril/orgs","repos_url":"https://api.github.com/users/kaltinril/repos","events_url":"https://api.github.com/users/kaltinril/events{/privacy}","received_events_url":"https://api.github.com/users/kaltinril/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2015-07-11T02:50:32Z","updated_at":"2015-07-12T04:51:45Z","closed_at":"2015-07-12T04:51:45Z","author_association":"NONE","body":"I've been having some issues trying to get an image to rotate around a point and I've found part of my issue is that inconsistent behavior of setSize and setScale.\n\nIf the origin is set, then the size, then rotated, then drawn, the image is pivoted at the origin, which is not adjusted or corrected for after a resize.\n\nIf the sprite is instead scaled, the origin does not affect it.\n\nTo me calling setSize should somehow \"adjust\" the origin based on where it previously was.\n\nAlso, side note, what is the difference between setSize and setScale to a user of the sprite class?\n\nEssentially to get setSize to work correctly the order of calling methods must be:\n\n``` Java\nsprite.setSize(w,h);\nsprite.setOriginCenter(); //This must be called AFTER a resize when using setSize.\nsprite.setRotation(180);\n```\n\nSee below full code example using assets from the [gdx-tests-android](https://github.com/libgdx/libgdx/tree/master/tests/gdx-tests-android/assets/data) project:\n\n``` Java\n\nimport com.badlogic.gdx.ApplicationAdapter;\nimport com.badlogic.gdx.backends.lwjgl.LwjglApplication;\nimport com.badlogic.gdx.Gdx;\nimport com.badlogic.gdx.graphics.GL20;\nimport com.badlogic.gdx.graphics.g2d.Sprite;\nimport com.badlogic.gdx.graphics.g2d.SpriteBatch;\nimport com.badlogic.gdx.graphics.Texture;\n\npublic class DesktopLauncher extends ApplicationAdapter{\n    public static void main (String[] arg) throws Exception {\n        new LwjglApplication(new DesktopLauncher());\n    }\n\n    SpriteBatch batch;\n    Texture img;\n\n    //Setup some sprite tests\n    Sprite spriteNoRotation;\n    Sprite spriteCenterThenSetSizeThenRotate;\n    Sprite spriteSetSizeThenCenterThenRotate;\n\n    @Override\n    public void create () {\n        batch = new SpriteBatch();\n        img = new Texture(Gdx.files.internal(\"data/black_marked_0.png\"));\n\n        //Resize the image and move it up\n        spriteNoRotation = new Sprite(img);\n        spriteNoRotation.setOrigin(5, 5);\n        spriteNoRotation.setSize(img.getWidth() / 2, img.getHeight() / 2);\n        spriteNoRotation.setCenter(img.getWidth(), img.getHeight() + (img.getHeight() / 2) + (img.getHeight() / 4)); // setCenter puts the image at the location, centered at the middle of the image (Width/height)\n\n        //Resize the image and move it up\n        //Then this rotates around the origin BEFORE the size was adjusted\n        //This causes the image to be rotated at the top right of the image, instead of the center.\n        spriteCenterThenSetSizeThenRotate = new Sprite(img);\n        spriteCenterThenSetSizeThenRotate.setOriginCenter();          //This is the key, setOriginCenter() is run first, when the image is 64 by 64\n        spriteCenterThenSetSizeThenRotate.setSize(img.getWidth() / 2, img.getHeight() / 2);\n        spriteCenterThenSetSizeThenRotate.setCenter(img.getWidth(), img.getHeight() + (img.getHeight() / 2) + (img.getHeight() / 4));\n        spriteCenterThenSetSizeThenRotate.setRotation(180);           //This should just be turned upside down, but instead this rotates around the top right point\n\n        spriteSetSizeThenCenterThenRotate = new Sprite(img);\n        spriteSetSizeThenCenterThenRotate.setSize(img.getWidth() / 2, img.getHeight() / 2);              //Move this so that it happens BEFORE we set the center\n        spriteSetSizeThenCenterThenRotate.setOriginCenter();\n        spriteSetSizeThenCenterThenRotate.setCenter(img.getWidth(), img.getHeight() + (img.getHeight() / 2) + (img.getHeight() / 4));\n        spriteSetSizeThenCenterThenRotate.setRotation(45);\n    }\n\n    @Override\n    public void render() {\n        Gdx.gl.glClearColor(1, 0.5f, 0.5f, 1);\n        Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);\n        batch.begin();\n\n        spriteNoRotation.draw(batch);\n        spriteCenterThenSetSizeThenRotate.draw(batch);  //Does not work, image rotation point is left at 32x32, which is now the top right of the image, so it pivots\n        spriteSetSizeThenCenterThenRotate.draw(batch);  //Works correctly\n\n        batch.end();\n    }\n}\n```\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3272/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3271","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3271/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3271/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3271/events","html_url":"https://github.com/libgdx/libgdx/pull/3271","id":94416207,"number":3271,"title":"More flexible way to manage Box2d contacts","user":{"login":"jberberick","id":1994382,"avatar_url":"https://avatars0.githubusercontent.com/u/1994382?v=4","gravatar_id":"","url":"https://api.github.com/users/jberberick","html_url":"https://github.com/jberberick","followers_url":"https://api.github.com/users/jberberick/followers","following_url":"https://api.github.com/users/jberberick/following{/other_user}","gists_url":"https://api.github.com/users/jberberick/gists{/gist_id}","starred_url":"https://api.github.com/users/jberberick/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jberberick/subscriptions","organizations_url":"https://api.github.com/users/jberberick/orgs","repos_url":"https://api.github.com/users/jberberick/repos","events_url":"https://api.github.com/users/jberberick/events{/privacy}","received_events_url":"https://api.github.com/users/jberberick/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2015-07-11T00:02:50Z","updated_at":"2015-07-11T00:20:36Z","closed_at":"2015-07-11T00:20:36Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3271","html_url":"https://github.com/libgdx/libgdx/pull/3271","diff_url":"https://github.com/libgdx/libgdx/pull/3271.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3271.patch"},"body":"Currently, there is no way to save a contact object from a beginContact() or endContact() callback because all parameter contacts are the same instance.  I would like the ability to save the contact object and be able to use it's methods beyond the callback.\n\nUse case: ability to keep track of all the contacts on a Body without having to search for them via World.getContactList().\n\nSolution:\nAdd a constructor to create a contact from a contact object.\nAdd an equals() method to check if a two contacts are representing the same.\nRemoved some allocation for getWorldManifold() to lighten the impact of creating many contact objects\n\nThere may be a good reason for not allowing this kind of functionality that I am unaware of.  This just seemed like the most logical fix.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3271/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3270","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3270/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3270/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3270/events","html_url":"https://github.com/libgdx/libgdx/issues/3270","id":94289558,"number":3270,"title":"FreeType throws exception when parameter \"incremental\" is true.","user":{"login":"9Livees","id":7490949,"avatar_url":"https://avatars1.githubusercontent.com/u/7490949?v=4","gravatar_id":"","url":"https://api.github.com/users/9Livees","html_url":"https://github.com/9Livees","followers_url":"https://api.github.com/users/9Livees/followers","following_url":"https://api.github.com/users/9Livees/following{/other_user}","gists_url":"https://api.github.com/users/9Livees/gists{/gist_id}","starred_url":"https://api.github.com/users/9Livees/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/9Livees/subscriptions","organizations_url":"https://api.github.com/users/9Livees/orgs","repos_url":"https://api.github.com/users/9Livees/repos","events_url":"https://api.github.com/users/9Livees/events{/privacy}","received_events_url":"https://api.github.com/users/9Livees/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2015-07-10T11:31:48Z","updated_at":"2015-07-12T20:30:10Z","closed_at":"2015-07-12T20:30:10Z","author_association":"NONE","body":"After updating libgdx from version 1.6.1 to 1.6.3 such code:\n\n```\nimport com.badlogic.gdx.ApplicationAdapter;\nimport com.badlogic.gdx.Gdx;\nimport com.badlogic.gdx.backends.lwjgl.LwjglApplication;\nimport com.badlogic.gdx.graphics.g2d.BitmapFont;\nimport com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator;\n\npublic class Example extends ApplicationAdapter {\n    public void create () {\n        FreeTypeFontGenerator generator = new FreeTypeFontGenerator(Gdx.files.internal(\"font.ttf\"));\n        FreeTypeFontGenerator.FreeTypeFontParameter parameter = new FreeTypeFontGenerator.FreeTypeFontParameter();\n        parameter.incremental = true;\n        BitmapFont font = generator.generateFont(parameter); \n        generator.dispose();\n    }\n\n    public static void main (String[] args) throws Exception {\n        new LwjglApplication(new Example());\n    }\n}\n```\n\nthrows exception:\n\n```\nException in thread \"LWJGL Application\" java.lang.NullPointerException\n    at com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeBitmapFontData.getGlyph(FreeTypeFontGenerator.java:610)\n    at com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator.generateData(FreeTypeFontGenerator.java:410)\n    at com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator.generateFont(FreeTypeFontGenerator.java:163)\n    at com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator.generateFont(FreeTypeFontGenerator.java:156)\n    at Example.create(Example.java:12)\n    at com.badlogic.gdx.backends.lwjgl.LwjglApplication.mainLoop(LwjglApplication.java:143)\n    at com.badlogic.gdx.backends.lwjgl.LwjglApplication$1.run(LwjglApplication.java:120)\n```\n\nI tried to use different TTF fonts, but in all cases it throws NullPointerException.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3270/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3269","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3269/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3269/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3269/events","html_url":"https://github.com/libgdx/libgdx/pull/3269","id":94240603,"number":3269,"title":"Remove unnecessary check for boolean","user":{"login":"htynkn","id":659135,"avatar_url":"https://avatars2.githubusercontent.com/u/659135?v=4","gravatar_id":"","url":"https://api.github.com/users/htynkn","html_url":"https://github.com/htynkn","followers_url":"https://api.github.com/users/htynkn/followers","following_url":"https://api.github.com/users/htynkn/following{/other_user}","gists_url":"https://api.github.com/users/htynkn/gists{/gist_id}","starred_url":"https://api.github.com/users/htynkn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/htynkn/subscriptions","organizations_url":"https://api.github.com/users/htynkn/orgs","repos_url":"https://api.github.com/users/htynkn/repos","events_url":"https://api.github.com/users/htynkn/events{/privacy}","received_events_url":"https://api.github.com/users/htynkn/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2015-07-10T07:44:56Z","updated_at":"2015-07-10T19:56:35Z","closed_at":"2015-07-10T19:08:58Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3269","html_url":"https://github.com/libgdx/libgdx/pull/3269","diff_url":"https://github.com/libgdx/libgdx/pull/3269.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3269.patch"},"body":"`musics.get(i).wasPlaying` is a boolean value, no need to use `== true` to check it.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3269/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3268","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3268/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3268/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3268/events","html_url":"https://github.com/libgdx/libgdx/issues/3268","id":94236935,"number":3268,"title":"Weird behavior with LwjglCanvas inside of a JSplitPane with java 8 on OSX","user":{"login":"jonbonazza","id":1424843,"avatar_url":"https://avatars0.githubusercontent.com/u/1424843?v=4","gravatar_id":"","url":"https://api.github.com/users/jonbonazza","html_url":"https://github.com/jonbonazza","followers_url":"https://api.github.com/users/jonbonazza/followers","following_url":"https://api.github.com/users/jonbonazza/following{/other_user}","gists_url":"https://api.github.com/users/jonbonazza/gists{/gist_id}","starred_url":"https://api.github.com/users/jonbonazza/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jonbonazza/subscriptions","organizations_url":"https://api.github.com/users/jonbonazza/orgs","repos_url":"https://api.github.com/users/jonbonazza/repos","events_url":"https://api.github.com/users/jonbonazza/events{/privacy}","received_events_url":"https://api.github.com/users/jonbonazza/received_events","type":"User","site_admin":false},"labels":[{"id":119244972,"url":"https://api.github.com/repos/libgdx/libgdx/labels/desktop","name":"desktop","color":"eb6420","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2015-07-10T07:25:00Z","updated_at":"2015-11-17T00:14:44Z","closed_at":"2015-11-17T00:14:44Z","author_association":"NONE","body":"When using Java 8, the following code produces improper layout when application starts:\n\n``` java\npackage com.test;\n\nimport com.badlogic.gdx.ApplicationAdapter;\nimport com.badlogic.gdx.backends.lwjgl.LwjglCanvas;\n\nimport javax.swing.JFrame;\nimport javax.swing.JPanel;\nimport javax.swing.JScrollPane;\nimport javax.swing.JSplitPane;\nimport javax.swing.SwingUtilities;\nimport javax.swing.WindowConstants;\nimport java.awt.BorderLayout;\nimport java.awt.Dimension;\nimport java.awt.TextArea;\n\npublic class Main extends JFrame {\n\n\n    public Main() {\n        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);\n        JScrollPane sp = new JScrollPane(new TextArea());\n        sp.setPreferredSize(new Dimension(300, 600));\n        JPanel canvasPanel = new JPanel(new BorderLayout());\n        LwjglCanvas renderCanvas = new LwjglCanvas(new ApplicationAdapter() {});\n        canvasPanel.add(renderCanvas.getCanvas());\n\n        JSplitPane splitPane = new JSplitPane(JSplitPane.HORIZONTAL_SPLIT, sp, canvasPanel);\n        getContentPane().add(splitPane);\n\n        setVisible(true);\n        pack();\n        setSize(1200, 768);\n        setLocationRelativeTo(null);\n    }\n\n    public static void main(String[] args) {\n        SwingUtilities.invokeLater(new Runnable() {\n            @Override\n            public void run() {\n                new Main();\n            }\n        });\n    }\n}\n```\n\nBasically, the canvas is not layed out properly and the JSplitPane divider is non-functional. If you resize the window (causing a redraw), then things go to normal.\n\nI noticed three things:\n\n1) this issue doesn't exist with java 7, so it may be a bug in java 8 itself.\n\n2) the issue does not occur on windows... I haven't tried on linux, but it **does** occur on mac osx.\n\n3) if I call `new Main()` directly, instead of via `SwingUtilities.invokeLater()`, things work as intended, even on java 8.\n\nI am not really sure what is causing this, and like I said, may very well be a bug in java8, but I thought I would bring it to your attention.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3268/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3267","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3267/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3267/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3267/events","html_url":"https://github.com/libgdx/libgdx/issues/3267","id":94163741,"number":3267,"title":"LibGDX setup tool comes with older (crashing) box2dlight","user":{"login":"orangepascal","id":11682717,"avatar_url":"https://avatars2.githubusercontent.com/u/11682717?v=4","gravatar_id":"","url":"https://api.github.com/users/orangepascal","html_url":"https://github.com/orangepascal","followers_url":"https://api.github.com/users/orangepascal/followers","following_url":"https://api.github.com/users/orangepascal/following{/other_user}","gists_url":"https://api.github.com/users/orangepascal/gists{/gist_id}","starred_url":"https://api.github.com/users/orangepascal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/orangepascal/subscriptions","organizations_url":"https://api.github.com/users/orangepascal/orgs","repos_url":"https://api.github.com/users/orangepascal/repos","events_url":"https://api.github.com/users/orangepascal/events{/privacy}","received_events_url":"https://api.github.com/users/orangepascal/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2015-07-09T22:08:32Z","updated_at":"2015-07-09T22:11:12Z","closed_at":"2015-07-09T22:11:12Z","author_association":"NONE","body":"box2dlight v1.3 is included in libgdx setup tool, but it doesn't work correctly\nnewer v1.5 snapshot version does ;)\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3267/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3266","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3266/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3266/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3266/events","html_url":"https://github.com/libgdx/libgdx/issues/3266","id":94094808,"number":3266,"title":"Stage.hit generated drag-events","user":{"login":"ar-","id":6048894,"avatar_url":"https://avatars2.githubusercontent.com/u/6048894?v=4","gravatar_id":"","url":"https://api.github.com/users/ar-","html_url":"https://github.com/ar-","followers_url":"https://api.github.com/users/ar-/followers","following_url":"https://api.github.com/users/ar-/following{/other_user}","gists_url":"https://api.github.com/users/ar-/gists{/gist_id}","starred_url":"https://api.github.com/users/ar-/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ar-/subscriptions","organizations_url":"https://api.github.com/users/ar-/orgs","repos_url":"https://api.github.com/users/ar-/repos","events_url":"https://api.github.com/users/ar-/events{/privacy}","received_events_url":"https://api.github.com/users/ar-/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2015-07-09T16:29:59Z","updated_at":"2015-08-09T21:18:07Z","closed_at":"2015-08-09T21:18:07Z","author_association":"NONE","body":"I'm using Stage2D. I have an Actor that implements all 3 touch events in a listener (touchDown, touchDrag, touchUp). It is used to move this actor on the screen.\n\nIn another part of the program I am using Stage.hit() to see which actor is at that position.\n\nAfter a long time trying to find the cause for a weird error I found, that the hit()-method generates Drag events, so the Actor above starts moving suddenly weirdly.\n\nAm I not supposed to use hit() by myself? Is it only meant to be used by the internal touchEvent stuff?\n\nExample: I'm calling stage.hit(1,1,false) to check for a collision/overlap\n\nthen my Actor receives the InputEvent with event.getStageX() == event.getStageY() == 1\n\nIf that is the supposed behaviour, the documentation should be updated, because it doesn't say that I shouldn't use it.\n\nCan anyone supply a quick patch?\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3266/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3265","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3265/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3265/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3265/events","html_url":"https://github.com/libgdx/libgdx/issues/3265","id":94079944,"number":3265,"title":"Faster batching of Array<Decal>","user":{"login":"calanti","id":12170223,"avatar_url":"https://avatars3.githubusercontent.com/u/12170223?v=4","gravatar_id":"","url":"https://api.github.com/users/calanti","html_url":"https://github.com/calanti","followers_url":"https://api.github.com/users/calanti/followers","following_url":"https://api.github.com/users/calanti/following{/other_user}","gists_url":"https://api.github.com/users/calanti/gists{/gist_id}","starred_url":"https://api.github.com/users/calanti/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/calanti/subscriptions","organizations_url":"https://api.github.com/users/calanti/orgs","repos_url":"https://api.github.com/users/calanti/repos","events_url":"https://api.github.com/users/calanti/events{/privacy}","received_events_url":"https://api.github.com/users/calanti/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2015-07-09T15:31:31Z","updated_at":"2015-07-17T21:36:21Z","closed_at":"2015-07-17T21:36:21Z","author_association":"NONE","body":"Been experimenting and having some performance issues with DecalBatch as mentioned [on the forum](http://www.badlogicgames.com/forum/viewtopic.php?f=11&t=19910). I modified the render() method of DecalBatch to directly draw an Array<Decal> to avoid add() and flush() methods. It does not solve my issue (still have poor performance with as little as 800 identical decals) but it does offer 5-15fps increase when benchmarking across 4 Android devices, so it could be useful for those wanting to batch a single Decal Array. \n\nCode as follows, it was just a very quick cut and paste of existing code so I am sure it is still open to some modification and optimisation. \n\n```\npublic void renderDecalArray (Array<Decal> decals) {\n\n    groupStrategy.beforeGroups();\n    groupStrategy.beforeGroup(1, decals);\n    ShaderProgram shader = groupStrategy.getGroupShader(1);\n    // batch vertices\n    DecalMaterial lastMaterial = null;\n    int idx = 0;\n    for (Decal decal : decals) {\n        if (lastMaterial == null || !lastMaterial.equals(decal.getMaterial())) {\n            if (idx > 0) {\n                flush(shader, idx);\n                idx = 0;\n            }\n            decal.material.set();\n            lastMaterial = decal.material;\n        }\n        decal.update();\n        System.arraycopy(decal.vertices, 0, vertices, idx, decal.vertices.length);\n        idx += decal.vertices.length;\n        // if our batch is full we have to flush it\n        if (idx == vertices.length) {\n            flush(shader, idx);\n            idx = 0;\n        }\n    }\n    // at the end if there is stuff left in the batch we render that\n    if (idx > 0) {\n        flush(shader, idx);\n    }\n\n    groupStrategy.afterGroup(1);\n    groupStrategy.afterGroups();\n}\n```\n\nSo where one would have;\n\n```\nfor(Decal d:decals){\n    dBatcher.add(d);\n}\ndBatcher.flush();\n```\n\nIt cans simply be replaced with;\n\n   dBatcher.renderDecalArray (decals);\n\nHope this can be of some use!\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3265/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3264","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3264/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3264/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3264/events","html_url":"https://github.com/libgdx/libgdx/issues/3264","id":93707871,"number":3264,"title":"Possibility for dynamic influencers to respect 3D particle effect's rotation","user":{"login":"mikolak-net","id":1729900,"avatar_url":"https://avatars0.githubusercontent.com/u/1729900?v=4","gravatar_id":"","url":"https://api.github.com/users/mikolak-net","html_url":"https://github.com/mikolak-net","followers_url":"https://api.github.com/users/mikolak-net/followers","following_url":"https://api.github.com/users/mikolak-net/following{/other_user}","gists_url":"https://api.github.com/users/mikolak-net/gists{/gist_id}","starred_url":"https://api.github.com/users/mikolak-net/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikolak-net/subscriptions","organizations_url":"https://api.github.com/users/mikolak-net/orgs","repos_url":"https://api.github.com/users/mikolak-net/repos","events_url":"https://api.github.com/users/mikolak-net/events{/privacy}","received_events_url":"https://api.github.com/users/mikolak-net/received_events","type":"User","site_admin":false},"labels":[{"id":11336982,"url":"https://api.github.com/repos/libgdx/libgdx/labels/enhancement","name":"enhancement","color":"84b6eb","default":true}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2015-07-08T06:27:13Z","updated_at":"2015-11-08T23:57:21Z","closed_at":null,"author_association":"NONE","body":"Currently, changing a 3D `ParticleEffect`'s rotation (via `setRotation` or otherwise), only changes the rotation of the emitter - the dynamic influencers remain fixed.\n\nWhile that may be fine for some cases, for a lot of effects - nozzles, thrusters, things like comets, basically anything that needs a changing directional displacement of the **whole** effect - this is not sufficient.\n\nThe only way to emulate the rotation of the influencers appears to be manually recalculating their theta and phi values, as [described here](http://stackoverflow.com/a/29181347/724361) - not really intuitive.\n\nA good solution would probably be to introduce an additional attribute for the influencers (at least those subclassing `Angular`) that would toggle between respecting the entire effect's rotation.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3264/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3263","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3263/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3263/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3263/events","html_url":"https://github.com/libgdx/libgdx/issues/3263","id":93617290,"number":3263,"title":"Improve loading performance of TMX maps","user":{"login":"Loffe","id":107585,"avatar_url":"https://avatars2.githubusercontent.com/u/107585?v=4","gravatar_id":"","url":"https://api.github.com/users/Loffe","html_url":"https://github.com/Loffe","followers_url":"https://api.github.com/users/Loffe/followers","following_url":"https://api.github.com/users/Loffe/following{/other_user}","gists_url":"https://api.github.com/users/Loffe/gists{/gist_id}","starred_url":"https://api.github.com/users/Loffe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Loffe/subscriptions","organizations_url":"https://api.github.com/users/Loffe/orgs","repos_url":"https://api.github.com/users/Loffe/repos","events_url":"https://api.github.com/users/Loffe/events{/privacy}","received_events_url":"https://api.github.com/users/Loffe/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2015-07-07T20:10:15Z","updated_at":"2015-07-19T23:08:08Z","closed_at":"2015-07-19T22:51:07Z","author_association":"NONE","body":"Loading of tmx-files would be faster if the `GZIPInputStream` is wrapped in a `BufferedInputStream` in `BaseTmxMapLoader.java`. This improved performance even though the source is a `ByteArrayInputStream`.\n\n``` java\n    if (compression == null)\n        is = new ByteArrayInputStream(bytes);\n    else if (compression.equals(\"gzip\"))\n        is = new BufferedInputStream(new GZIPInputStream(new ByteArrayInputStream(bytes), bytes.length));\n    else if (compression.equals(\"zlib\"))\n        is = new BufferedInputStream(new InflaterInputStream(new ByteArrayInputStream(bytes)));\n```\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3263/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3262","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3262/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3262/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3262/events","html_url":"https://github.com/libgdx/libgdx/pull/3262","id":93493418,"number":3262,"title":"Base64: added char 63/64 selection and minor refactoring","user":{"login":"FyiurAmron","id":11016998,"avatar_url":"https://avatars1.githubusercontent.com/u/11016998?v=4","gravatar_id":"","url":"https://api.github.com/users/FyiurAmron","html_url":"https://github.com/FyiurAmron","followers_url":"https://api.github.com/users/FyiurAmron/followers","following_url":"https://api.github.com/users/FyiurAmron/following{/other_user}","gists_url":"https://api.github.com/users/FyiurAmron/gists{/gist_id}","starred_url":"https://api.github.com/users/FyiurAmron/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/FyiurAmron/subscriptions","organizations_url":"https://api.github.com/users/FyiurAmron/orgs","repos_url":"https://api.github.com/users/FyiurAmron/repos","events_url":"https://api.github.com/users/FyiurAmron/events{/privacy}","received_events_url":"https://api.github.com/users/FyiurAmron/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2015-07-07T10:08:16Z","updated_at":"2015-08-18T19:50:18Z","closed_at":"2015-08-10T19:40:40Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3262","html_url":"https://github.com/libgdx/libgdx/pull/3262","diff_url":"https://github.com/libgdx/libgdx/pull/3262.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3262.patch"},"body":"","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3262/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3261","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3261/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3261/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3261/events","html_url":"https://github.com/libgdx/libgdx/pull/3261","id":93491867,"number":3261,"title":"Base64: added char 63/64 changing support + minor refactoring","user":{"login":"FyiurAmron","id":11016998,"avatar_url":"https://avatars1.githubusercontent.com/u/11016998?v=4","gravatar_id":"","url":"https://api.github.com/users/FyiurAmron","html_url":"https://github.com/FyiurAmron","followers_url":"https://api.github.com/users/FyiurAmron/followers","following_url":"https://api.github.com/users/FyiurAmron/following{/other_user}","gists_url":"https://api.github.com/users/FyiurAmron/gists{/gist_id}","starred_url":"https://api.github.com/users/FyiurAmron/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/FyiurAmron/subscriptions","organizations_url":"https://api.github.com/users/FyiurAmron/orgs","repos_url":"https://api.github.com/users/FyiurAmron/repos","events_url":"https://api.github.com/users/FyiurAmron/events{/privacy}","received_events_url":"https://api.github.com/users/FyiurAmron/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2015-07-07T09:59:06Z","updated_at":"2015-07-07T10:05:46Z","closed_at":"2015-07-07T10:05:46Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/3261","html_url":"https://github.com/libgdx/libgdx/pull/3261","diff_url":"https://github.com/libgdx/libgdx/pull/3261.diff","patch_url":"https://github.com/libgdx/libgdx/pull/3261.patch"},"body":"as per https://github.com/libgdx/libgdx/issues/3255#issuecomment-119075276\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3261/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3260","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3260/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3260/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3260/events","html_url":"https://github.com/libgdx/libgdx/issues/3260","id":93350345,"number":3260,"title":"BitmapFont constructor doesn't set integer field before creating BitmapFontCache","user":{"login":"dan-fitzgerald-av","id":3443800,"avatar_url":"https://avatars0.githubusercontent.com/u/3443800?v=4","gravatar_id":"","url":"https://api.github.com/users/dan-fitzgerald-av","html_url":"https://github.com/dan-fitzgerald-av","followers_url":"https://api.github.com/users/dan-fitzgerald-av/followers","following_url":"https://api.github.com/users/dan-fitzgerald-av/following{/other_user}","gists_url":"https://api.github.com/users/dan-fitzgerald-av/gists{/gist_id}","starred_url":"https://api.github.com/users/dan-fitzgerald-av/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dan-fitzgerald-av/subscriptions","organizations_url":"https://api.github.com/users/dan-fitzgerald-av/orgs","repos_url":"https://api.github.com/users/dan-fitzgerald-av/repos","events_url":"https://api.github.com/users/dan-fitzgerald-av/events{/privacy}","received_events_url":"https://api.github.com/users/dan-fitzgerald-av/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2015-07-06T18:57:03Z","updated_at":"2015-07-07T22:15:03Z","closed_at":"2015-07-07T22:15:03Z","author_association":"NONE","body":"Well, I should've debugged better because I just found the actual cause of my previous issue with BitmapFont integer filtering: https://github.com/libgdx/libgdx/issues/3254\n\nIn the constructor for BitmapFont, the method `newFontCache()` uses the boolean field `integer` but that field is set after `newFontCache()` is called, so the BitmapFontCache constructor's integer parameter is always false.\n\nRight now I'm working around it by calling `setUseIntegerPositions()` after the constructor. Thanks for your help!\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3260/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3259","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/3259/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/3259/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/3259/events","html_url":"https://github.com/libgdx/libgdx/issues/3259","id":93321856,"number":3259,"title":"keyUp called when key is still pressed","user":{"login":"bachtrong43","id":6166994,"avatar_url":"https://avatars0.githubusercontent.com/u/6166994?v=4","gravatar_id":"","url":"https://api.github.com/users/bachtrong43","html_url":"https://github.com/bachtrong43","followers_url":"https://api.github.com/users/bachtrong43/followers","following_url":"https://api.github.com/users/bachtrong43/following{/other_user}","gists_url":"https://api.github.com/users/bachtrong43/gists{/gist_id}","starred_url":"https://api.github.com/users/bachtrong43/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bachtrong43/subscriptions","organizations_url":"https://api.github.com/users/bachtrong43/orgs","repos_url":"https://api.github.com/users/bachtrong43/repos","events_url":"https://api.github.com/users/bachtrong43/events{/privacy}","received_events_url":"https://api.github.com/users/bachtrong43/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2015-07-06T16:33:02Z","updated_at":"2015-07-13T13:14:56Z","closed_at":"2015-07-13T13:14:56Z","author_association":"NONE","body":"``` javascript\npublic class DesktopLauncher {\n    public static void main(String[] arg) {\n        LwjglApplicationConfiguration config = new LwjglApplicationConfiguration();\n        config.width = 480;\n        config.height = 320;\n        new LwjglApplication(new ApplicationListener() {\n            public void resume() {\n\n            }\n\n            @Override\n            public void resize(int width, int height) {\n\n            }\n\n            @Override\n            public void render() {\n                Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);\n            }\n\n            @Override\n            public void pause() {\n\n            }\n\n            @Override\n            public void dispose() {\n\n            }\n\n            @Override\n            public void create() {\n                Gdx.input.setInputProcessor(new InputProcessor() {\n\n                    @Override\n                    public boolean touchUp(int screenX, int screenY,\n                            int pointer, int button) {\n                        return false;\n                    }\n\n                    @Override\n                    public boolean touchDragged(int screenX, int screenY,\n                            int pointer) {\n                        return false;\n                    }\n\n                    @Override\n                    public boolean touchDown(int screenX, int screenY,\n                            int pointer, int button) {\n                        return false;\n                    }\n\n                    @Override\n                    public boolean scrolled(int amount) {\n                        return false;\n                    }\n\n                    @Override\n                    public boolean mouseMoved(int screenX, int screenY) {\n                        return false;\n                    }\n\n                    @Override\n                    public boolean keyUp(int keycode) {\n                        System.out.println(\"keyup\");\n                        return false;\n                    }\n\n                    @Override\n                    public boolean keyTyped(char character) {\n                        System.out.println(\"keytyped\");\n                        return false;\n                    }\n\n                    @Override\n                    public boolean keyDown(int keycode) {\n                        System.out.println(\"keydown\");\n                        return false;\n                    }\n                });\n            }\n        }, config);\n    }\n}\n```\n\nWhen a key is pressed (not release yet):\n\n``` javascript\nkeydown\nkeytyped\nkeyup\nkeydown\nkeytyped\nkeyup\nkeydown\nkeytyped\nkeyup\nkeydown\nkeytyped\nkeyup\nkeydown\nkeytyped\nkeyup\n....\n```\n\nTested on iMac 2012, libgdx version 1.6.3\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/3259/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}}],"meta":{"x-ratelimit-limit":"5000","x-ratelimit-remaining":"4945","x-ratelimit-reset":"1506844633","x-github-request-id":"E758:110A:24854A3:40CA637:59D094C2","x-github-media-type":"github.squirrel-girl-preview","link":"<https://api.github.com/repositories/5373551/issues?state=all&page=56>; rel=\"next\", <https://api.github.com/repositories/5373551/issues?state=all&page=164>; rel=\"last\", <https://api.github.com/repositories/5373551/issues?state=all&page=1>; rel=\"first\", <https://api.github.com/repositories/5373551/issues?state=all&page=54>; rel=\"prev\"","etag":"\"72e0e325e15c09a72c2fe76db21694d4\"","status":"200 OK"}}
