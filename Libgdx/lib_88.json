{"data":[{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2295","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2295/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2295/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2295/events","html_url":"https://github.com/libgdx/libgdx/pull/2295","id":41830207,"number":2295,"title":"Expose useHardwareIfAvailable to resolve #2136","user":{"login":"Tom-Ski","id":4346114,"avatar_url":"https://avatars0.githubusercontent.com/u/4346114?v=4","gravatar_id":"","url":"https://api.github.com/users/Tom-Ski","html_url":"https://github.com/Tom-Ski","followers_url":"https://api.github.com/users/Tom-Ski/followers","following_url":"https://api.github.com/users/Tom-Ski/following{/other_user}","gists_url":"https://api.github.com/users/Tom-Ski/gists{/gist_id}","starred_url":"https://api.github.com/users/Tom-Ski/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Tom-Ski/subscriptions","organizations_url":"https://api.github.com/users/Tom-Ski/orgs","repos_url":"https://api.github.com/users/Tom-Ski/repos","events_url":"https://api.github.com/users/Tom-Ski/events{/privacy}","received_events_url":"https://api.github.com/users/Tom-Ski/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2014-09-03T15:36:49Z","updated_at":"2014-09-03T19:15:13Z","closed_at":"2014-09-03T19:15:13Z","author_association":"OWNER","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2295","html_url":"https://github.com/libgdx/libgdx/pull/2295","diff_url":"https://github.com/libgdx/libgdx/pull/2295.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2295.patch"},"body":"**Note:** This is not tested, I haven't the hardware to do so. \n\nRequired control when using allowIpod setting.\n\nFrom the documentation:\n\n``` java\n/** Determines what to do if no other application is playing audio and allowIpod = YES\n* (NOT SUPPORTED ON THE SIMULATOR). <br>\n*\n* If NO, the application will ALWAYS use software decoding. The advantage to this is that\n* the user can background your application and then start audio playing from another\n* application. If useHardwareIfAvailable = YES, the user won't be able to do this. <br>\n*\n* If this is set to YES, the application will use hardware decoding if no other application\n* is currently playing audio. However, no other application will be able to start playing\n* audio if it wasn't playing already. <br>\n*\n* Note: This switch has no effect if allowIpod = NO. <br>\n*\n* iOS Only. <br>\n*\n* @see allowIpod\n*\n* Default value: YES\n*/\n@property(nonatomic,readwrite,assign) bool useHardwareIfAvailable;\n```\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2295/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2294","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2294/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2294/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2294/events","html_url":"https://github.com/libgdx/libgdx/issues/2294","id":41826534,"number":2294,"title":"DefaultGroupStrategy doesn't allow rendering Decals","user":{"login":"mrgame64","id":5879873,"avatar_url":"https://avatars0.githubusercontent.com/u/5879873?v=4","gravatar_id":"","url":"https://api.github.com/users/mrgame64","html_url":"https://github.com/mrgame64","followers_url":"https://api.github.com/users/mrgame64/followers","following_url":"https://api.github.com/users/mrgame64/following{/other_user}","gists_url":"https://api.github.com/users/mrgame64/gists{/gist_id}","starred_url":"https://api.github.com/users/mrgame64/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mrgame64/subscriptions","organizations_url":"https://api.github.com/users/mrgame64/orgs","repos_url":"https://api.github.com/users/mrgame64/repos","events_url":"https://api.github.com/users/mrgame64/events{/privacy}","received_events_url":"https://api.github.com/users/mrgame64/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2014-09-03T15:04:00Z","updated_at":"2014-09-27T14:44:26Z","closed_at":"2014-09-27T14:44:26Z","author_association":"CONTRIBUTOR","body":"What is the point of having https://github.com/libgdx/libgdx/blob/master/gdx/src/com/badlogic/gdx/graphics/g3d/decals/DecalBatch.java#L65 using DefaultGroupStrategy if it isn't capable of returning a shader necessary for Decal rendering?\n\nWouldn't it be a better idea to remove that constructor, forcing the user to provide a \"working\" GroupStrategy implementation?\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2294/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2293","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2293/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2293/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2293/events","html_url":"https://github.com/libgdx/libgdx/issues/2293","id":41815229,"number":2293,"title":"IOSInput.getRotationMatrix() etc not implemented","user":{"login":"xinaesthete","id":674834,"avatar_url":"https://avatars2.githubusercontent.com/u/674834?v=4","gravatar_id":"","url":"https://api.github.com/users/xinaesthete","html_url":"https://github.com/xinaesthete","followers_url":"https://api.github.com/users/xinaesthete/followers","following_url":"https://api.github.com/users/xinaesthete/following{/other_user}","gists_url":"https://api.github.com/users/xinaesthete/gists{/gist_id}","starred_url":"https://api.github.com/users/xinaesthete/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xinaesthete/subscriptions","organizations_url":"https://api.github.com/users/xinaesthete/orgs","repos_url":"https://api.github.com/users/xinaesthete/repos","events_url":"https://api.github.com/users/xinaesthete/events{/privacy}","received_events_url":"https://api.github.com/users/xinaesthete/received_events","type":"User","site_admin":false},"labels":[{"id":11336982,"url":"https://api.github.com/repos/libgdx/libgdx/labels/enhancement","name":"enhancement","color":"84b6eb","default":true},{"id":59604199,"url":"https://api.github.com/repos/libgdx/libgdx/labels/ios","name":"ios","color":"207de5","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2014-09-03T13:21:34Z","updated_at":"2016-01-05T17:13:27Z","closed_at":"2016-01-05T17:13:27Z","author_association":"NONE","body":"I realise that this is already mentioned in a todos.txt file, but couldn't see an active issue.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2293/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2292","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2292/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2292/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2292/events","html_url":"https://github.com/libgdx/libgdx/pull/2292","id":41670657,"number":2292,"title":"Change IOSSound default panning to center","user":{"login":"garsue","id":814284,"avatar_url":"https://avatars2.githubusercontent.com/u/814284?v=4","gravatar_id":"","url":"https://api.github.com/users/garsue","html_url":"https://github.com/garsue","followers_url":"https://api.github.com/users/garsue/followers","following_url":"https://api.github.com/users/garsue/following{/other_user}","gists_url":"https://api.github.com/users/garsue/gists{/gist_id}","starred_url":"https://api.github.com/users/garsue/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/garsue/subscriptions","organizations_url":"https://api.github.com/users/garsue/orgs","repos_url":"https://api.github.com/users/garsue/repos","events_url":"https://api.github.com/users/garsue/events{/privacy}","received_events_url":"https://api.github.com/users/garsue/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-09-02T02:30:01Z","updated_at":"2014-10-29T01:54:16Z","closed_at":"2014-09-03T13:34:17Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2292","html_url":"https://github.com/libgdx/libgdx/pull/2292","diff_url":"https://github.com/libgdx/libgdx/pull/2292.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2292.patch"},"body":"Sets default panning 0 (center) not 1 (full right) in IOSSound.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2292/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2291","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2291/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2291/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2291/events","html_url":"https://github.com/libgdx/libgdx/pull/2291","id":41641998,"number":2291,"title":"Use source.properties file for versions","user":{"login":"Tom-Ski","id":4346114,"avatar_url":"https://avatars0.githubusercontent.com/u/4346114?v=4","gravatar_id":"","url":"https://api.github.com/users/Tom-Ski","html_url":"https://github.com/Tom-Ski","followers_url":"https://api.github.com/users/Tom-Ski/followers","following_url":"https://api.github.com/users/Tom-Ski/following{/other_user}","gists_url":"https://api.github.com/users/Tom-Ski/gists{/gist_id}","starred_url":"https://api.github.com/users/Tom-Ski/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Tom-Ski/subscriptions","organizations_url":"https://api.github.com/users/Tom-Ski/orgs","repos_url":"https://api.github.com/users/Tom-Ski/repos","events_url":"https://api.github.com/users/Tom-Ski/events{/privacy}","received_events_url":"https://api.github.com/users/Tom-Ski/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-09-01T14:28:41Z","updated_at":"2014-09-03T19:39:16Z","closed_at":"2014-09-03T19:39:16Z","author_association":"OWNER","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2291","html_url":"https://github.com/libgdx/libgdx/pull/2291","diff_url":"https://github.com/libgdx/libgdx/pull/2291.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2291.patch"},"body":"Grab API level and build tools version from the respective source.properties file.\n\nMore robust than using folder names, that is until the naming convention changes :)\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2291/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2290","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2290/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2290/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2290/events","html_url":"https://github.com/libgdx/libgdx/pull/2290","id":41608579,"number":2290,"title":"Added AnimationScheduler for gameloop.","user":{"login":"Kjos","id":6412041,"avatar_url":"https://avatars2.githubusercontent.com/u/6412041?v=4","gravatar_id":"","url":"https://api.github.com/users/Kjos","html_url":"https://github.com/Kjos","followers_url":"https://api.github.com/users/Kjos/followers","following_url":"https://api.github.com/users/Kjos/following{/other_user}","gists_url":"https://api.github.com/users/Kjos/gists{/gist_id}","starred_url":"https://api.github.com/users/Kjos/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Kjos/subscriptions","organizations_url":"https://api.github.com/users/Kjos/orgs","repos_url":"https://api.github.com/users/Kjos/repos","events_url":"https://api.github.com/users/Kjos/events{/privacy}","received_events_url":"https://api.github.com/users/Kjos/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":17,"created_at":"2014-09-01T05:47:45Z","updated_at":"2014-12-15T13:17:56Z","closed_at":"2014-12-15T13:17:56Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2290","html_url":"https://github.com/libgdx/libgdx/pull/2290","diff_url":"https://github.com/libgdx/libgdx/pull/2290.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2290.patch"},"body":"Haven't tested it yet, but should work fine.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2290/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2289","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2289/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2289/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2289/events","html_url":"https://github.com/libgdx/libgdx/issues/2289","id":41596554,"number":2289,"title":"Timer in GWT backend stacks up events","user":{"login":"Kjos","id":6412041,"avatar_url":"https://avatars2.githubusercontent.com/u/6412041?v=4","gravatar_id":"","url":"https://api.github.com/users/Kjos","html_url":"https://github.com/Kjos","followers_url":"https://api.github.com/users/Kjos/followers","following_url":"https://api.github.com/users/Kjos/following{/other_user}","gists_url":"https://api.github.com/users/Kjos/gists{/gist_id}","starred_url":"https://api.github.com/users/Kjos/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Kjos/subscriptions","organizations_url":"https://api.github.com/users/Kjos/orgs","repos_url":"https://api.github.com/users/Kjos/repos","events_url":"https://api.github.com/users/Kjos/events{/privacy}","received_events_url":"https://api.github.com/users/Kjos/received_events","type":"User","site_admin":false},"labels":[{"id":11336980,"url":"https://api.github.com/repos/libgdx/libgdx/labels/bug","name":"bug","color":"fc2929","default":true},{"id":67383148,"url":"https://api.github.com/repos/libgdx/libgdx/labels/gwt","name":"gwt","color":"5319e7","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2014-08-31T21:30:23Z","updated_at":"2014-12-15T13:17:30Z","closed_at":"2014-12-15T13:17:30Z","author_association":"CONTRIBUTOR","body":"I believe the Timer is incorrect at the moment.\nWhat will reproduce the issue is setting the FPS very high, causing an increasing framedrop.\n\nThe scheduleRepeating basically is a setInterval, and it seems that can stack up according to:\nhttps://stackoverflow.com/questions/13349576/prevent-javascript-setinterval-function-stacking-up\nSome confirmation on this would be nice.\nThere is also a fix written for setInterval there, I'm not sure it works.\nEither way there's some documentation here as well:\nhttps://stackoverflow.com/questions/1955687/best-way-for-simple-game-loop-in-javascript\n\nrequestFrame seems the new way to go, and if WebGL is supported, that should probably work as well. There's also ways to have it fallback to setInterval.\n\nIs there a specific reason a setInterval is used?\n\nIn GWTApplication:\n\nI\n\n```\n    new Timer() {\n        @Override\n        public void run () {\n            try {\n                mainLoop();\n            } catch (Throwable t) {\n                error(\"GwtApplication\", \"exception: \" + t.getMessage(), t);\n                throw new RuntimeException(t);\n            }\n        }\n    }.scheduleRepeating((int)((1f / config.fps) * 1000)); //setInterval\n```\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2289/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2288","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2288/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2288/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2288/events","html_url":"https://github.com/libgdx/libgdx/pull/2288","id":41595122,"number":2288,"title":"Extended use of Buffers in GwtGL20","user":{"login":"Kjos","id":6412041,"avatar_url":"https://avatars2.githubusercontent.com/u/6412041?v=4","gravatar_id":"","url":"https://api.github.com/users/Kjos","html_url":"https://github.com/Kjos","followers_url":"https://api.github.com/users/Kjos/followers","following_url":"https://api.github.com/users/Kjos/following{/other_user}","gists_url":"https://api.github.com/users/Kjos/gists{/gist_id}","starred_url":"https://api.github.com/users/Kjos/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Kjos/subscriptions","organizations_url":"https://api.github.com/users/Kjos/orgs","repos_url":"https://api.github.com/users/Kjos/repos","events_url":"https://api.github.com/users/Kjos/events{/privacy}","received_events_url":"https://api.github.com/users/Kjos/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-08-31T20:21:49Z","updated_at":"2014-08-31T20:50:22Z","closed_at":"2014-08-31T20:48:22Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2288","html_url":"https://github.com/libgdx/libgdx/pull/2288","diff_url":"https://github.com/libgdx/libgdx/pull/2288.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2288.patch"},"body":"It only works with 4 byte sized Buffers at the moment.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2288/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2287","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2287/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2287/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2287/events","html_url":"https://github.com/libgdx/libgdx/issues/2287","id":41592829,"number":2287,"title":"Color leaks","user":{"login":"Shorttail","id":1752065,"avatar_url":"https://avatars1.githubusercontent.com/u/1752065?v=4","gravatar_id":"","url":"https://api.github.com/users/Shorttail","html_url":"https://github.com/Shorttail","followers_url":"https://api.github.com/users/Shorttail/followers","following_url":"https://api.github.com/users/Shorttail/following{/other_user}","gists_url":"https://api.github.com/users/Shorttail/gists{/gist_id}","starred_url":"https://api.github.com/users/Shorttail/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Shorttail/subscriptions","organizations_url":"https://api.github.com/users/Shorttail/orgs","repos_url":"https://api.github.com/users/Shorttail/repos","events_url":"https://api.github.com/users/Shorttail/events{/privacy}","received_events_url":"https://api.github.com/users/Shorttail/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2014-08-31T18:35:51Z","updated_at":"2014-09-01T06:53:44Z","closed_at":"2014-08-31T19:01:11Z","author_association":"NONE","body":"With a Stage used to draw an overlay, setting the last added Actor's color to something non-white spills the color onto the entire background. Workaround was to not let the actors with non-white color be last.\n\n```\nTextButton last = new TextButton(\"last\", skin);\nlast.setColor(Color.GREEN);\nstage.add(last);\n```\n\nThis removes all but green colors from the background in my app. The items in the Stage are drawn normally.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2287/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2286","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2286/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2286/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2286/events","html_url":"https://github.com/libgdx/libgdx/issues/2286","id":41588354,"number":2286,"title":"Installer does not appear to recognise ADK versions higher than the recommended version","user":{"login":"NotAFile","id":5447747,"avatar_url":"https://avatars2.githubusercontent.com/u/5447747?v=4","gravatar_id":"","url":"https://api.github.com/users/NotAFile","html_url":"https://github.com/NotAFile","followers_url":"https://api.github.com/users/NotAFile/followers","following_url":"https://api.github.com/users/NotAFile/following{/other_user}","gists_url":"https://api.github.com/users/NotAFile/gists{/gist_id}","starred_url":"https://api.github.com/users/NotAFile/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NotAFile/subscriptions","organizations_url":"https://api.github.com/users/NotAFile/orgs","repos_url":"https://api.github.com/users/NotAFile/repos","events_url":"https://api.github.com/users/NotAFile/events{/privacy}","received_events_url":"https://api.github.com/users/NotAFile/received_events","type":"User","site_admin":false},"labels":[{"id":11336980,"url":"https://api.github.com/repos/libgdx/libgdx/labels/bug","name":"bug","color":"fc2929","default":true},{"id":93478991,"url":"https://api.github.com/repos/libgdx/libgdx/labels/build","name":"build","color":"fbca04","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2014-08-31T15:06:08Z","updated_at":"2014-09-03T19:39:19Z","closed_at":"2014-09-03T19:39:19Z","author_association":"NONE","body":"steps to replicate:\n1. open Setup with only ADK version 20 installed\n2. Error along the lines of \"gdx requires at least 19.1\"\n3. Install version 19.1\n4. \"ADK version is higher than recommended\"\n\nwhat I expected: Gdx uses the best version > 19.1\nwhat happened: Gdx used version 20 if version 19.1 is installed\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2286/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2285","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2285/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2285/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2285/events","html_url":"https://github.com/libgdx/libgdx/issues/2285","id":41582181,"number":2285,"title":"Button class","user":{"login":"alexzk1","id":4589845,"avatar_url":"https://avatars3.githubusercontent.com/u/4589845?v=4","gravatar_id":"","url":"https://api.github.com/users/alexzk1","html_url":"https://github.com/alexzk1","followers_url":"https://api.github.com/users/alexzk1/followers","following_url":"https://api.github.com/users/alexzk1/following{/other_user}","gists_url":"https://api.github.com/users/alexzk1/gists{/gist_id}","starred_url":"https://api.github.com/users/alexzk1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexzk1/subscriptions","organizations_url":"https://api.github.com/users/alexzk1/orgs","repos_url":"https://api.github.com/users/alexzk1/repos","events_url":"https://api.github.com/users/alexzk1/events{/privacy}","received_events_url":"https://api.github.com/users/alexzk1/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2014-08-31T09:17:34Z","updated_at":"2014-08-31T10:19:19Z","closed_at":"2014-08-31T10:19:19Z","author_association":"NONE","body":"Possibly affects other classes and other variables as well.\n\nThere is variable \"isDisabled\" there and getter/setter for it. If I override getter as\n\n@Override\n    public boolean isDisabled()\n    {\n        return super.isDisabled() || (subMenu == null && clickHandler == null);\n    }\n\nThat does not work because Button class uses directly variable. Which breaks inheritance idea. I bet other class/variables are affected too.\n\nSo to workaround I must go as:\n boolean dis = super.isDisabled();\n            setDisabled(isDisabled());\n            super.draw(batch, parentAlpha);\n            setDisabled(dis);\n\nAny way, such things must be fixed. Class should not read variables directly if getter is exposed because it can be overrided Or mark it final.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2285/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2284","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2284/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2284/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2284/events","html_url":"https://github.com/libgdx/libgdx/pull/2284","id":41562032,"number":2284,"title":"Added a getter for the Color in Decal.","user":{"login":"nooone","id":5896510,"avatar_url":"https://avatars3.githubusercontent.com/u/5896510?v=4","gravatar_id":"","url":"https://api.github.com/users/nooone","html_url":"https://github.com/nooone","followers_url":"https://api.github.com/users/nooone/followers","following_url":"https://api.github.com/users/nooone/following{/other_user}","gists_url":"https://api.github.com/users/nooone/gists{/gist_id}","starred_url":"https://api.github.com/users/nooone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nooone/subscriptions","organizations_url":"https://api.github.com/users/nooone/orgs","repos_url":"https://api.github.com/users/nooone/repos","events_url":"https://api.github.com/users/nooone/events{/privacy}","received_events_url":"https://api.github.com/users/nooone/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2014-08-30T12:08:20Z","updated_at":"2014-08-30T12:19:30Z","closed_at":"2014-08-30T12:13:35Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2284","html_url":"https://github.com/libgdx/libgdx/pull/2284","diff_url":"https://github.com/libgdx/libgdx/pull/2284.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2284.patch"},"body":"Decal has getters for all properties of the decal, like position, rotation, scale. However, there is no way to access the current color, which is necessary sometimes, for example when one wants to tween the decal from fully opaque to completely transparent.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2284/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2283","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2283/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2283/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2283/events","html_url":"https://github.com/libgdx/libgdx/issues/2283","id":41560531,"number":2283,"title":"btBroadphasePairArray.at(...) causes a crash","user":{"login":"nooone","id":5896510,"avatar_url":"https://avatars3.githubusercontent.com/u/5896510?v=4","gravatar_id":"","url":"https://api.github.com/users/nooone","html_url":"https://github.com/nooone","followers_url":"https://api.github.com/users/nooone/followers","following_url":"https://api.github.com/users/nooone/following{/other_user}","gists_url":"https://api.github.com/users/nooone/gists{/gist_id}","starred_url":"https://api.github.com/users/nooone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nooone/subscriptions","organizations_url":"https://api.github.com/users/nooone/orgs","repos_url":"https://api.github.com/users/nooone/repos","events_url":"https://api.github.com/users/nooone/events{/privacy}","received_events_url":"https://api.github.com/users/nooone/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-08-30T10:27:30Z","updated_at":"2014-08-30T15:27:36Z","closed_at":"2014-08-30T15:27:11Z","author_association":"CONTRIBUTOR","body":"@xoppa I filed this issue because the behaviour I have discovered yesterday seems wrong. A single class example is not easy to create. That's why I have tried it in the bullet test collection. I have changed the `BulletWorld.update()` method like this:\n\n```\n@Override\npublic void update () {\n    if (performanceCounter != null) {\n        performanceCounter.tick();\n        performanceCounter.start();\n    }\n    if (collisionWorld instanceof btDynamicsWorld) {\n        ((btDynamicsWorld)collisionWorld).stepSimulation(Gdx.graphics.getDeltaTime(), maxSubSteps, fixedTimeStep);\n        btBroadphasePairArray pairArray = ((btDynamicsWorld)collisionWorld).getBroadphase().getOverlappingPairCache().getOverlappingPairArray();\n        for (int i = 0; i < pairArray.size(); i++) {\n            System.out.println(\"Overlapping pairs: \" + pairArray.size());\n            pairArray.at(i);\n        }\n    }\n    if (performanceCounter != null) performanceCounter.stop();\n}\n```\n\nAny bullet test using this will crash. For example the first one (ShootTest) will print `77` and then crash at `pairArray(0)`.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2283/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2282","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2282/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2282/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2282/events","html_url":"https://github.com/libgdx/libgdx/issues/2282","id":41559257,"number":2282,"title":"glTexImage2D and glTexSubImage2D in GwtGL20","user":{"login":"Kjos","id":6412041,"avatar_url":"https://avatars2.githubusercontent.com/u/6412041?v=4","gravatar_id":"","url":"https://api.github.com/users/Kjos","html_url":"https://github.com/Kjos","followers_url":"https://api.github.com/users/Kjos/followers","following_url":"https://api.github.com/users/Kjos/following{/other_user}","gists_url":"https://api.github.com/users/Kjos/gists{/gist_id}","starred_url":"https://api.github.com/users/Kjos/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Kjos/subscriptions","organizations_url":"https://api.github.com/users/Kjos/orgs","repos_url":"https://api.github.com/users/Kjos/repos","events_url":"https://api.github.com/users/Kjos/events{/privacy}","received_events_url":"https://api.github.com/users/Kjos/received_events","type":"User","site_admin":false},"labels":[{"id":11336982,"url":"https://api.github.com/repos/libgdx/libgdx/labels/enhancement","name":"enhancement","color":"84b6eb","default":true},{"id":67383148,"url":"https://api.github.com/repos/libgdx/libgdx/labels/gwt","name":"gwt","color":"5319e7","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2014-08-30T08:57:49Z","updated_at":"2015-07-29T04:57:42Z","closed_at":"2015-07-29T04:57:42Z","author_association":"CONTRIBUTOR","body":"At the moment glTexImage2D and glTexSubImage2D work by fetching a Pixmap by the id found in the given IntBuffer (by parameter). I was wondering if it is possible, and if so I'd like to propose it, to make it use the IntBuffer in a similar manner as with glReadPixels.\n\nThere could be a check that if the IntBuffer is bigger than one, the actual contents of the IntBuffer is read to WebGL, instead of fetching the Pixmap and using the backing Canvas.\n\nThis allows to upload larger quantities of pixel data much faster than with the backing Canvas, while still having the option to use the backing Canvas if needed (by using Pixmap).\n\nIf I'm not mistaken this should be possible, but I'm hoping I'm not off on this one, as it would be a huge benefit for me.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2282/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2281","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2281/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2281/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2281/events","html_url":"https://github.com/libgdx/libgdx/issues/2281","id":41546085,"number":2281,"title":"When building an HTML component the build fails, unable to resolve validation-api artifact","user":{"login":"swquinn","id":153358,"avatar_url":"https://avatars2.githubusercontent.com/u/153358?v=4","gravatar_id":"","url":"https://api.github.com/users/swquinn","html_url":"https://github.com/swquinn","followers_url":"https://api.github.com/users/swquinn/followers","following_url":"https://api.github.com/users/swquinn/following{/other_user}","gists_url":"https://api.github.com/users/swquinn/gists{/gist_id}","starred_url":"https://api.github.com/users/swquinn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/swquinn/subscriptions","organizations_url":"https://api.github.com/users/swquinn/orgs","repos_url":"https://api.github.com/users/swquinn/repos","events_url":"https://api.github.com/users/swquinn/events{/privacy}","received_events_url":"https://api.github.com/users/swquinn/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2014-08-29T22:45:54Z","updated_at":"2014-08-30T17:44:22Z","closed_at":"2014-08-30T16:56:20Z","author_association":"NONE","body":"I've been noticing the following lately when working with a LibGDX project--I thought it might have been some changes I was making to the gradle files, so I decided to try and define a new project, but I run into the same issue:\n\n```\n...\n:html:compileJava\n\nFAILURE: Build failed with an exception.\n\n* What went wrong:\nCould not resolve all dependencies for configuration ':html:compile'.\n> Could not download artifact 'javax.validation:validation-api:1.0.0.GA:validation-api-sources.jar'\n   > Artifact 'javax.validation:validation-api:1.0.0.GA:validation-api-sources.jar' not found.\n\n* Try:\nRun with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output.\n\nBUILD FAILED\n```\n\nI've used Maven with other projects before and looking in my `.m2` local cache I see that I have that exact version of of `javax.validation:validation-api`, without the sources (so, pretty much exactly what the error is complaining about).\n\nWhen I remove it from my `m2` local cache, the build works fine without failing on the above. The HTML component doesn't seem to download that javax component at all. Since there doesn't seem to be a dependency on this library, why is the gradle build falling over on it?\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2281/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2280","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2280/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2280/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2280/events","html_url":"https://github.com/libgdx/libgdx/issues/2280","id":41506920,"number":2280,"title":"Flipping rotated sprites from TextureAtlas","user":{"login":"nfantone","id":476069,"avatar_url":"https://avatars3.githubusercontent.com/u/476069?v=4","gravatar_id":"","url":"https://api.github.com/users/nfantone","html_url":"https://github.com/nfantone","followers_url":"https://api.github.com/users/nfantone/followers","following_url":"https://api.github.com/users/nfantone/following{/other_user}","gists_url":"https://api.github.com/users/nfantone/gists{/gist_id}","starred_url":"https://api.github.com/users/nfantone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nfantone/subscriptions","organizations_url":"https://api.github.com/users/nfantone/orgs","repos_url":"https://api.github.com/users/nfantone/repos","events_url":"https://api.github.com/users/nfantone/events{/privacy}","received_events_url":"https://api.github.com/users/nfantone/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2014-08-29T14:40:31Z","updated_at":"2014-08-29T21:08:45Z","closed_at":"2014-08-29T19:27:12Z","author_association":"CONTRIBUTOR","body":"Not entirely sure if this is the intended behavior, but trying to call `flip()` on a Sprite created from a `TextureAtlas` that has `rotate: true` set, does not seem to work correctly. See my scenario below.\n## Steps to reproduce the problem\n- Create or download some spritesheet with rotated frames. This is the one I'm currently working on, along with a snippet of its atlas/pack descriptor file. The snippet defines the last two frames of a given `walking` animation. One is rotated, whereas the other is not.\n\n![zero](https://cloud.githubusercontent.com/assets/476069/4090982/d662515a-2f83-11e4-962b-85baccfbd8f5.png)\n\n```\nzero.png\nformat: RGBA8888\nfilter: Linear,Linear\nrepeat: none\n...\nwalking\n  rotate: false\n  xy: 2, 2\n  size: 47, 46\n  orig: 47, 46\n  offset: 0, 0\n  index: 8\nwalking\n  rotate: true\n  xy: 97, 2\n  size: 46, 43\n  orig: 46, 43\n  offset: 0, 0\n  index: 9\n```\n- Run this simple `ApplicationAdapter` (tested on Desktop and Android projects). The spritesheet should be called `zero.png`; the atlas file should be `zero.pack`. \n\n``` java\npublic class FlippedSpriteApplicationAdapter extends ApplicationAdapter {\n    private TextureAtlas zeroAtlas;\n    private SpriteBatch batch;\n    private Sprite regularSprite;\n    private Sprite rotatedSprite;\n\n    @Override\n    public void create() {\n        batch = new SpriteBatch();\n        zeroAtlas = new TextureAtlas(\"zero.pack\");\n        regularSprite = zeroAtlas.createSprite(\"walking\", 8);\n        rotatedSprite = zeroAtlas.createSprite(\"walking\", 9);\n        regularSprite.setPosition(50.0f, 50.0f);\n        rotatedSprite.setPosition(100.0f, 50.0f);\n\n        regularSprite.flip(true, false);\n        rotatedSprite.flip(true, false);\n    }\n\n    @Override\n    public void render() {\n        Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);\n        batch.begin();\n        regularSprite.draw(batch);\n        rotatedSprite.draw(batch);\n        batch.end();\n\n    }\n\n    @Override\n    public void dispose() {\n        batch.dispose();\n        zeroAtlas.dispose();\n    }\n}\n```\n\nThis just creates the two sprites from the `TextureAtlas`, sets their position so they can be drawn along side one another, and _flips their x coordinate_.\n## Expected output\n\nIf I you comment out both calls to `flip()` in the previous piece of code, you can see that the sprites are drawn correctly (facing right). So, _libgdx_ handles the `rotate: true` internally, instantiating an `AtlasSprite` instead of a regular `Sprite`. This is abstracted away from the client as the `TextureAtlas#createSprite()` returns just a `Sprite`.\n\nIf you run the code as is (leaving the calls to `flip()`), the logically expected output should be two sprites facing left (mirrored from their original position)\n## What happens instead\n\nWhen running the code above, you'll see the `regularSprite` being drawn appropriately (that is, now facing left). But the `rotatedSprite` will be flipped as is the y axis is the one being rotated (facing up).\n\nI understand that `AtlasSprite` overrides the `flip()` method in `Sprite`. But they do not seem to follow the same contract, as calling it with its `x` parameter set to `true` _flips the values along the y axis_.\n\nIf it is, indeed, the expected behavior, then it's, at least, very confusing and should be clarified somewhere in the wiki. Moreover, it is rather cumbersome to handle if using a collection of sprites to, say, create an `Animation`. If you call `createSprites(\"walking\")` on a `TextureAtlas`, you end up with an `Array` of `Sprite`. Some of them are instances of `Sprite`, while some may be `AtlasSprite`. Those two _do not behave equally_ and you have no clear way of discerning between them (other tan calling `instance of`, of course).\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2280/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2279","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2279/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2279/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2279/events","html_url":"https://github.com/libgdx/libgdx/issues/2279","id":41486871,"number":2279,"title":"Wrong keyboard focus after Dialog hide","user":{"login":"bachtrong43","id":6166994,"avatar_url":"https://avatars0.githubusercontent.com/u/6166994?v=4","gravatar_id":"","url":"https://api.github.com/users/bachtrong43","html_url":"https://github.com/bachtrong43","followers_url":"https://api.github.com/users/bachtrong43/followers","following_url":"https://api.github.com/users/bachtrong43/following{/other_user}","gists_url":"https://api.github.com/users/bachtrong43/gists{/gist_id}","starred_url":"https://api.github.com/users/bachtrong43/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bachtrong43/subscriptions","organizations_url":"https://api.github.com/users/bachtrong43/orgs","repos_url":"https://api.github.com/users/bachtrong43/repos","events_url":"https://api.github.com/users/bachtrong43/events{/privacy}","received_events_url":"https://api.github.com/users/bachtrong43/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2014-08-29T10:05:09Z","updated_at":"2014-08-29T19:35:52Z","closed_at":"2014-08-29T19:35:52Z","author_association":"NONE","body":"In the code of Dialog, method initialize:\naddListener(new FocusListener() {\npublic void keyboardFocusChanged (FocusEvent event, Actor actor, boolean focused) {\nif (!focused) focusChanged(event);\n}\npublic void scrollFocusChanged (FocusEvent event, Actor actor, boolean focused) {\nif (!focused) focusChanged(event);\n}\nprivate void focusChanged (FocusEvent event) {\nStage stage = getStage();\nif (isModal && stage != null && stage.getRoot().getChildren().size > 0\n&& stage.getRoot().getChildren().peek() == Dialog.this) { // Dialog is top most actor.\nActor newFocusedActor = event.getRelatedActor();\nif (newFocusedActor != null && !newFocusedActor.isDescendantOf(Dialog.this)) event.cancel();\n}\n}\n});\n\nand in hide method:\nif (stage != null) {\nif (previousKeyboardFocus != null && previousKeyboardFocus.getStage() == null) previousKeyboardFocus = null;\nActor actor = stage.getKeyboardFocus();\nif (actor == null || actor.isDescendantOf(this)) stage.setKeyboardFocus(previousKeyboardFocus);\nif (previousScrollFocus != null && previousScrollFocus.getStage() == null) previousScrollFocus = null;\nactor = stage.getScrollFocus();\nif (actor == null || actor.isDescendantOf(this)) stage.setScrollFocus(previousScrollFocus);\n}\nif (action != null) {\naddCaptureListener(ignoreTouchDown);\naddAction(sequence(action, Actions.removeListener(ignoreTouchDown, true), Actions.removeActor()));\n\nThe hide method set the keyboard focus of stage to previous keyboard focus actor, but the above FocusListener cancel this action.So the previous keyboard focus is never re-set. I think we need add focuslistener in the show method and remove it before setting the keyboard focus of the stage to previous actor.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2279/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2278","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2278/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2278/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2278/events","html_url":"https://github.com/libgdx/libgdx/pull/2278","id":41438550,"number":2278,"title":"FSM changeState possible with null.","user":{"login":"nooone","id":5896510,"avatar_url":"https://avatars3.githubusercontent.com/u/5896510?v=4","gravatar_id":"","url":"https://api.github.com/users/nooone","html_url":"https://github.com/nooone","followers_url":"https://api.github.com/users/nooone/followers","following_url":"https://api.github.com/users/nooone/following{/other_user}","gists_url":"https://api.github.com/users/nooone/gists{/gist_id}","starred_url":"https://api.github.com/users/nooone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nooone/subscriptions","organizations_url":"https://api.github.com/users/nooone/orgs","repos_url":"https://api.github.com/users/nooone/repos","events_url":"https://api.github.com/users/nooone/events{/privacy}","received_events_url":"https://api.github.com/users/nooone/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2014-08-28T20:28:22Z","updated_at":"2014-08-30T12:03:07Z","closed_at":"2014-08-28T22:19:52Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2278","html_url":"https://github.com/libgdx/libgdx/pull/2278","diff_url":"https://github.com/libgdx/libgdx/pull/2278.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2278.patch"},"body":"I have added a `null` check to `DefaultStateMachine.changeState(...)`. It is the only place where this check is not performed yet. That way it is possible to exit the \"last\" state via a state change to `null`.\n\nIn my case I have an enemy class that switches from `CombatState` to `DieState`. After the dying animation is completed, I switch to `DeadState`. Now the enemy is lying on the ground. I want it to \"rot\" and disappear after a few seconds. So I got a counter that starts in `DeadState.enter()`. In `DeadState.exit()` I call `enemy.dispose()` to completely remove it from the game. There isn't really a `State` I could switch to at this point. That's why I want to perform a `changeState(null)` which results in an `exit()`.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2278/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2277","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2277/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2277/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2277/events","html_url":"https://github.com/libgdx/libgdx/pull/2277","id":41435878,"number":2277,"title":"Made StateMachine an Agent.","user":{"login":"nooone","id":5896510,"avatar_url":"https://avatars3.githubusercontent.com/u/5896510?v=4","gravatar_id":"","url":"https://api.github.com/users/nooone","html_url":"https://github.com/nooone","followers_url":"https://api.github.com/users/nooone/followers","following_url":"https://api.github.com/users/nooone/following{/other_user}","gists_url":"https://api.github.com/users/nooone/gists{/gist_id}","starred_url":"https://api.github.com/users/nooone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nooone/subscriptions","organizations_url":"https://api.github.com/users/nooone/orgs","repos_url":"https://api.github.com/users/nooone/repos","events_url":"https://api.github.com/users/nooone/events{/privacy}","received_events_url":"https://api.github.com/users/nooone/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":11,"created_at":"2014-08-28T20:02:57Z","updated_at":"2014-08-29T21:11:25Z","closed_at":"2014-08-29T21:01:34Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2277","html_url":"https://github.com/libgdx/libgdx/pull/2277","diff_url":"https://github.com/libgdx/libgdx/pull/2277.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2277.patch"},"body":"I don't see why the `Agent` actually needs an `update` method. It seems a bit misplaced, because the `MessageDispatcher` needs to be updated, not the `Agent`s. By removing that it is possible to make `StateMachine` directly an `Agent` as well, so one can send telegrams directly to the state machine and does not necessarily need another agent to delegate to it.(see `Bob` and `Elsa`).\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2277/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2276","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2276/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2276/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2276/events","html_url":"https://github.com/libgdx/libgdx/issues/2276","id":41425303,"number":2276,"title":"Looping Music","user":{"login":"Badazdz","id":1550507,"avatar_url":"https://avatars3.githubusercontent.com/u/1550507?v=4","gravatar_id":"","url":"https://api.github.com/users/Badazdz","html_url":"https://github.com/Badazdz","followers_url":"https://api.github.com/users/Badazdz/followers","following_url":"https://api.github.com/users/Badazdz/following{/other_user}","gists_url":"https://api.github.com/users/Badazdz/gists{/gist_id}","starred_url":"https://api.github.com/users/Badazdz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Badazdz/subscriptions","organizations_url":"https://api.github.com/users/Badazdz/orgs","repos_url":"https://api.github.com/users/Badazdz/repos","events_url":"https://api.github.com/users/Badazdz/events{/privacy}","received_events_url":"https://api.github.com/users/Badazdz/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2014-08-28T18:28:02Z","updated_at":"2014-08-31T19:51:34Z","closed_at":"2014-08-31T19:09:40Z","author_association":"CONTRIBUTOR","body":"When I am looping [this](https://mistygames.org/madbobo/ANUBIS_DRUM_LOOP_PUZZLE.ogg) song it loops great on desktop, but on Android it always stucks little bit in the end so it's not smooth. \nI don't know on where is the problem, is the song looping bad, or is there a problem on Andoird?\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2276/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2275","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2275/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2275/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2275/events","html_url":"https://github.com/libgdx/libgdx/pull/2275","id":41420929,"number":2275,"title":"fixes isTouched() false if first of two fingers removed from screen","user":{"login":"GerritK","id":1891558,"avatar_url":"https://avatars3.githubusercontent.com/u/1891558?v=4","gravatar_id":"","url":"https://api.github.com/users/GerritK","html_url":"https://github.com/GerritK","followers_url":"https://api.github.com/users/GerritK/followers","following_url":"https://api.github.com/users/GerritK/following{/other_user}","gists_url":"https://api.github.com/users/GerritK/gists{/gist_id}","starred_url":"https://api.github.com/users/GerritK/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/GerritK/subscriptions","organizations_url":"https://api.github.com/users/GerritK/orgs","repos_url":"https://api.github.com/users/GerritK/repos","events_url":"https://api.github.com/users/GerritK/events{/privacy}","received_events_url":"https://api.github.com/users/GerritK/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2014-08-28T17:54:34Z","updated_at":"2014-08-31T14:59:40Z","closed_at":"2014-08-31T14:59:40Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2275","html_url":"https://github.com/libgdx/libgdx/pull/2275","diff_url":"https://github.com/libgdx/libgdx/pull/2275.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2275.patch"},"body":"This fixes a problem we have to check if a finger is left on screen.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2275/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2274","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2274/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2274/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2274/events","html_url":"https://github.com/libgdx/libgdx/issues/2274","id":41403823,"number":2274,"title":"Timers can be wiped out when using GestureDetector","user":{"login":"oakes","id":216147,"avatar_url":"https://avatars0.githubusercontent.com/u/216147?v=4","gravatar_id":"","url":"https://api.github.com/users/oakes","html_url":"https://github.com/oakes","followers_url":"https://api.github.com/users/oakes/followers","following_url":"https://api.github.com/users/oakes/following{/other_user}","gists_url":"https://api.github.com/users/oakes/gists{/gist_id}","starred_url":"https://api.github.com/users/oakes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/oakes/subscriptions","organizations_url":"https://api.github.com/users/oakes/orgs","repos_url":"https://api.github.com/users/oakes/repos","events_url":"https://api.github.com/users/oakes/events{/privacy}","received_events_url":"https://api.github.com/users/oakes/received_events","type":"User","site_admin":false},"labels":[{"id":11336980,"url":"https://api.github.com/repos/libgdx/libgdx/labels/bug","name":"bug","color":"fc2929","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2014-08-28T15:35:32Z","updated_at":"2014-10-23T15:28:09Z","closed_at":"2014-10-23T15:28:09Z","author_association":"CONTRIBUTOR","body":"Due to the [introduction](https://github.com/libgdx/libgdx/commit/da8fb9e108abdf593f02258f0b3f52093124c937) of [checkStatics](https://github.com/libgdx/libgdx/blob/1.3.1/gdx/src/com/badlogic/gdx/utils/Timer.java#L262), if any Timer is created within libGDX, it runs the risk of wiping out user-created timers. Specifically, if one is created after a pause event, and before a resume event, the Timer constructor will call checkStatics and will clear existing Timer instances.\n\nSince GestureDetector creates a new Timer instance every time the touchDown event occurs, it could do this if it happens to run before resume. The following code demonstrates the issue by manually calling touchDown on the pause event. Simply run it, then switch to another window to pause it, then switch back and the timer will not resume.\n\n``` java\nimport com.badlogic.gdx.Game;\nimport com.badlogic.gdx.Gdx;\nimport com.badlogic.gdx.input.GestureDetector;\nimport com.badlogic.gdx.utils.Timer;\n\npublic class Main extends Game {\n    GestureDetector gd;\n\n    public void create() {\n        gd = new GestureDetector(\n            new GestureDetector.GestureAdapter() {\n                public boolean touchDown (float x, float y, int pointer, int button) {\n                    return true;\n                }\n            }\n        );\n        Gdx.input.setInputProcessor(gd);\n\n        new Timer().scheduleTask(new Timer.Task() {\n            public void run() {\n                System.out.println(\"timer\");\n            }\n        }, 0, 1);\n    }\n\n    public void pause() {\n        System.out.println(\"pause\");\n        gd.touchDown(0, 0, 0, 0);\n    }\n\n    public void resume() {\n        System.out.println(\"resume\");\n    }\n}\n```\n\nThis issue was [previously reported](https://github.com/libgdx/libgdx/issues/1930), but it was closed because it did not have a test case.\n\nIt looks like checkStatics was introduced to solve an [issue](https://github.com/libgdx/libgdx/issues/1548) that occurred on mobile where the game's create event is called when the game is resumed, preventing old Timers from running again. Perhaps a better solution would be to call checkStatics when this event occurs, rather than every time a Timer is initialized.\n\nAdditionally, I suggest that checkStatics use thread.dispose() because it currently isn't cleaning up everything (it isn't calling removeLifecycleListener for example).\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2274/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2273","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2273/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2273/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2273/events","html_url":"https://github.com/libgdx/libgdx/issues/2273","id":41364982,"number":2273,"title":"Nested Color Markup","user":{"login":"mk1x86","id":4849383,"avatar_url":"https://avatars2.githubusercontent.com/u/4849383?v=4","gravatar_id":"","url":"https://api.github.com/users/mk1x86","html_url":"https://github.com/mk1x86","followers_url":"https://api.github.com/users/mk1x86/followers","following_url":"https://api.github.com/users/mk1x86/following{/other_user}","gists_url":"https://api.github.com/users/mk1x86/gists{/gist_id}","starred_url":"https://api.github.com/users/mk1x86/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mk1x86/subscriptions","organizations_url":"https://api.github.com/users/mk1x86/orgs","repos_url":"https://api.github.com/users/mk1x86/repos","events_url":"https://api.github.com/users/mk1x86/events{/privacy}","received_events_url":"https://api.github.com/users/mk1x86/received_events","type":"User","site_admin":false},"labels":[{"id":11336982,"url":"https://api.github.com/repos/libgdx/libgdx/labels/enhancement","name":"enhancement","color":"84b6eb","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2014-08-28T08:10:07Z","updated_at":"2014-09-30T23:48:44Z","closed_at":"2014-09-30T23:48:44Z","author_association":"NONE","body":"Using \"This is [RED]red with [YELLOW]yellow[] text[] inside\" colors everything except for \"yellow\" in red. It seems like this is because only the previous color is stored. This could be solved by adding a color stack, which pops the top value when a \"[]\" is found.\n\n![bug](https://cloud.githubusercontent.com/assets/4849383/4072741/aba696c8-2e8a-11e4-86f9-c1c03d91bdfc.png)\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2273/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2272","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2272/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2272/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2272/events","html_url":"https://github.com/libgdx/libgdx/pull/2272","id":41255123,"number":2272,"title":"Update MathUtils.java","user":{"login":"boldijar","id":7826299,"avatar_url":"https://avatars1.githubusercontent.com/u/7826299?v=4","gravatar_id":"","url":"https://api.github.com/users/boldijar","html_url":"https://github.com/boldijar","followers_url":"https://api.github.com/users/boldijar/followers","following_url":"https://api.github.com/users/boldijar/following{/other_user}","gists_url":"https://api.github.com/users/boldijar/gists{/gist_id}","starred_url":"https://api.github.com/users/boldijar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/boldijar/subscriptions","organizations_url":"https://api.github.com/users/boldijar/orgs","repos_url":"https://api.github.com/users/boldijar/repos","events_url":"https://api.github.com/users/boldijar/events{/privacy}","received_events_url":"https://api.github.com/users/boldijar/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2014-08-27T07:17:32Z","updated_at":"2014-08-27T11:23:28Z","closed_at":"2014-08-27T11:19:03Z","author_association":"NONE","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2272","html_url":"https://github.com/libgdx/libgdx/pull/2272","diff_url":"https://github.com/libgdx/libgdx/pull/2272.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2272.patch"},"body":"Added randomSign() function, that returns -1 or 1.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2272/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2271","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2271/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2271/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2271/events","html_url":"https://github.com/libgdx/libgdx/issues/2271","id":41253744,"number":2271,"title":"Tools should support I18N","user":{"login":"panli32811","id":8217836,"avatar_url":"https://avatars0.githubusercontent.com/u/8217836?v=4","gravatar_id":"","url":"https://api.github.com/users/panli32811","html_url":"https://github.com/panli32811","followers_url":"https://api.github.com/users/panli32811/followers","following_url":"https://api.github.com/users/panli32811/following{/other_user}","gists_url":"https://api.github.com/users/panli32811/gists{/gist_id}","starred_url":"https://api.github.com/users/panli32811/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/panli32811/subscriptions","organizations_url":"https://api.github.com/users/panli32811/orgs","repos_url":"https://api.github.com/users/panli32811/repos","events_url":"https://api.github.com/users/panli32811/events{/privacy}","received_events_url":"https://api.github.com/users/panli32811/received_events","type":"User","site_admin":false},"labels":[{"id":11336982,"url":"https://api.github.com/repos/libgdx/libgdx/labels/enhancement","name":"enhancement","color":"84b6eb","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-08-27T06:52:06Z","updated_at":"2014-08-31T19:06:08Z","closed_at":"2014-08-31T19:06:08Z","author_association":"NONE","body":"I find it hard to translate the tools, as their showing strings were all written in the source.Could you change it?I'm sorry for my weak English!\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2271/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2270","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2270/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2270/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2270/events","html_url":"https://github.com/libgdx/libgdx/pull/2270","id":41197783,"number":2270,"title":"ResolutionFileResolver documented.","user":{"login":"nooone","id":5896510,"avatar_url":"https://avatars3.githubusercontent.com/u/5896510?v=4","gravatar_id":"","url":"https://api.github.com/users/nooone","html_url":"https://github.com/nooone","followers_url":"https://api.github.com/users/nooone/followers","following_url":"https://api.github.com/users/nooone/following{/other_user}","gists_url":"https://api.github.com/users/nooone/gists{/gist_id}","starred_url":"https://api.github.com/users/nooone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nooone/subscriptions","organizations_url":"https://api.github.com/users/nooone/orgs","repos_url":"https://api.github.com/users/nooone/repos","events_url":"https://api.github.com/users/nooone/events{/privacy}","received_events_url":"https://api.github.com/users/nooone/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2014-08-26T17:15:57Z","updated_at":"2014-09-07T16:37:32Z","closed_at":"2014-09-07T16:37:32Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/2270","html_url":"https://github.com/libgdx/libgdx/pull/2270","diff_url":"https://github.com/libgdx/libgdx/pull/2270.diff","patch_url":"https://github.com/libgdx/libgdx/pull/2270.patch"},"body":"Whenever someone wants to use the `ResolutionFileResolver`, there's a lot of confusion. The implementation has changed over time and there is 0 documentation as to how it works in the JavaDoc. That is why I have added some docs to the class.\n\nI have also fixed an invalid argument check (`if (descriptors == null)` became `if (descriptors.length == 0)`) and moved it to the correct place.\n\nFurthermore, this is actually an API breaking change, because I have renamed a public field from `suffix` to `folder`, because it is not used as a suffix anymore. I think in the past it was used to search for `textures/brick.png.<suffix>`, nowadays this behaviour has changed to `textures/<folder>/brick.png`.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2270/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2269","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2269/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2269/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2269/events","html_url":"https://github.com/libgdx/libgdx/issues/2269","id":41157039,"number":2269,"title":"Json parser error (Error accessing field)","user":{"login":"urrri","id":1422691,"avatar_url":"https://avatars0.githubusercontent.com/u/1422691?v=4","gravatar_id":"","url":"https://api.github.com/users/urrri","html_url":"https://github.com/urrri","followers_url":"https://api.github.com/users/urrri/followers","following_url":"https://api.github.com/users/urrri/following{/other_user}","gists_url":"https://api.github.com/users/urrri/gists{/gist_id}","starred_url":"https://api.github.com/users/urrri/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/urrri/subscriptions","organizations_url":"https://api.github.com/users/urrri/orgs","repos_url":"https://api.github.com/users/urrri/repos","events_url":"https://api.github.com/users/urrri/events{/privacy}","received_events_url":"https://api.github.com/users/urrri/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2014-08-26T10:23:15Z","updated_at":"2014-08-26T19:31:23Z","closed_at":"2014-08-26T19:31:23Z","author_association":"NONE","body":"libgdx 1.1 gwt 2.6.0\n\nI have following code:\n\n```\npublic class Events {\n\n    public static abstract class Event {\n        @Override\n        public String toString() {\n            return new Json(OutputType.json).toJson(this);\n        }\n    }\n\n    public static abstract class CardEvent extends Event {\n        protected CardEvent() {\n            cardId = \"\";\n        }\n\n        protected CardEvent(String id) {\n            cardId = id;\n        }\n\n        public final String cardId;\n    }\n\n    public static class CardSelected extends CardEvent {\n        public CardSelected() {\n        }\n\n        public CardSelected(String id) {\n            super(id);\n        }\n    }\n}\n\nnew Json().fromJson(json, CardSelected.class)\n```\n\nit causes exception:\n\n12:55:14.570 [ERROR] [html] Uncaught exception escaped\ncom.badlogic.gdx.utils.SerializationException: Error accessing field: cardId (com.reflected.Events$CardSelected)\n    at com.badlogic.gdx.utils.Json.readFields(Json.java:757)\n    at com.badlogic.gdx.utils.Json.readValue(Json.java:865)\n    at com.badlogic.gdx.utils.Json.fromJson(Json.java:693)\n......\nCaused by: com.badlogic.gdx.utils.reflect.ReflectionException: Could not set class com.reflected.Events$CardEvent#cardId: Missing setter-stub 1296 for field cardId\n    at com.badlogic.gdx.utils.reflect.Field.set(Field.java:123)\n    at com.badlogic.gdx.utils.Json.readFields(Json.java:755)\n    at com.badlogic.gdx.utils.Json.readValue(Json.java:865)\n    at com.badlogic.gdx.utils.Json.fromJson(Json.java:693)\n.......\n\nCaused by: java.lang.IllegalArgumentException: Missing setter-stub 1296 for field cardId\n    at com.badlogic.gwtref.client.IReflectionCacheGenerated.set(IReflectionCacheGenerated.java:25369)\n    at com.badlogic.gwtref.client.ReflectionCache.setFieldValue(ReflectionCache.java:90)\n    at com.badlogic.gwtref.client.Field.set(Field.java:69)\n......\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2269/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2268","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2268/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2268/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2268/events","html_url":"https://github.com/libgdx/libgdx/issues/2268","id":41121113,"number":2268,"title":"Music restarting from onCompletion listener.","user":{"login":"przemyslawlis","id":6590627,"avatar_url":"https://avatars2.githubusercontent.com/u/6590627?v=4","gravatar_id":"","url":"https://api.github.com/users/przemyslawlis","html_url":"https://github.com/przemyslawlis","followers_url":"https://api.github.com/users/przemyslawlis/followers","following_url":"https://api.github.com/users/przemyslawlis/following{/other_user}","gists_url":"https://api.github.com/users/przemyslawlis/gists{/gist_id}","starred_url":"https://api.github.com/users/przemyslawlis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/przemyslawlis/subscriptions","organizations_url":"https://api.github.com/users/przemyslawlis/orgs","repos_url":"https://api.github.com/users/przemyslawlis/repos","events_url":"https://api.github.com/users/przemyslawlis/events{/privacy}","received_events_url":"https://api.github.com/users/przemyslawlis/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2014-08-25T23:34:16Z","updated_at":"2014-08-27T05:01:44Z","closed_at":"2014-08-27T05:01:44Z","author_association":"NONE","body":"Can't restart music. Using latest v1.3.2. Only checked on desktop.\n\nSteps to reproduce the problem:\n\n1) set music's listener\n2) play music\n3) inside onCompletion listener try to play the music again\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2268/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2267","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2267/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2267/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2267/events","html_url":"https://github.com/libgdx/libgdx/issues/2267","id":41069709,"number":2267,"title":"gdx-setup creates a build.gradle with an outdated version of ashley","user":{"login":"TheDerek","id":2663542,"avatar_url":"https://avatars1.githubusercontent.com/u/2663542?v=4","gravatar_id":"","url":"https://api.github.com/users/TheDerek","html_url":"https://github.com/TheDerek","followers_url":"https://api.github.com/users/TheDerek/followers","following_url":"https://api.github.com/users/TheDerek/following{/other_user}","gists_url":"https://api.github.com/users/TheDerek/gists{/gist_id}","starred_url":"https://api.github.com/users/TheDerek/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/TheDerek/subscriptions","organizations_url":"https://api.github.com/users/TheDerek/orgs","repos_url":"https://api.github.com/users/TheDerek/repos","events_url":"https://api.github.com/users/TheDerek/events{/privacy}","received_events_url":"https://api.github.com/users/TheDerek/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2014-08-25T15:00:30Z","updated_at":"2014-08-26T04:17:51Z","closed_at":"2014-08-26T04:17:51Z","author_association":"NONE","body":"The version it gives you should be 1.1.0.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2267/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2266","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/2266/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/2266/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/2266/events","html_url":"https://github.com/libgdx/libgdx/issues/2266","id":41055639,"number":2266,"title":"ScreenUtils.getFrameBufferTexture memory leak","user":{"login":"scientistnm","id":933456,"avatar_url":"https://avatars3.githubusercontent.com/u/933456?v=4","gravatar_id":"","url":"https://api.github.com/users/scientistnm","html_url":"https://github.com/scientistnm","followers_url":"https://api.github.com/users/scientistnm/followers","following_url":"https://api.github.com/users/scientistnm/following{/other_user}","gists_url":"https://api.github.com/users/scientistnm/gists{/gist_id}","starred_url":"https://api.github.com/users/scientistnm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/scientistnm/subscriptions","organizations_url":"https://api.github.com/users/scientistnm/orgs","repos_url":"https://api.github.com/users/scientistnm/repos","events_url":"https://api.github.com/users/scientistnm/events{/privacy}","received_events_url":"https://api.github.com/users/scientistnm/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2014-08-25T12:15:48Z","updated_at":"2014-08-26T04:28:45Z","closed_at":"2014-08-26T04:28:45Z","author_association":"NONE","body":"public static TextureRegion getFrameBufferTexture (int x, int y, int w, int h) has a memory leak.\n\nfinal Pixmap potPixmap  is never disposed.\n\nThis was leading my app to crash after few minutes of using.\nSo I have looked for the problem, and found the solution.\n\nI'm new with this, so I don't really know how, and where should I commit this, and I'm not sure I have permissions for this.\n\nSo somebody with more expirience should commit this, and merge with the head.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/2266/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}}],"meta":{"x-ratelimit-limit":"5000","x-ratelimit-remaining":"4911","x-ratelimit-reset":"1506844633","x-github-request-id":"AEC8:028A:1ABAEA8:2ED78B0:59D095ED","x-github-media-type":"github.squirrel-girl-preview","link":"<https://api.github.com/repositories/5373551/issues?state=all&page=89>; rel=\"next\", <https://api.github.com/repositories/5373551/issues?state=all&page=164>; rel=\"last\", <https://api.github.com/repositories/5373551/issues?state=all&page=1>; rel=\"first\", <https://api.github.com/repositories/5373551/issues?state=all&page=87>; rel=\"prev\"","etag":"\"760959f404c4e829047b71672a5be8a2\"","status":"200 OK"}}
