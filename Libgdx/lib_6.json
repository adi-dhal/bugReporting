{"data":[{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4759","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4759/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4759/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4759/events","html_url":"https://github.com/libgdx/libgdx/issues/4759","id":230960924,"number":4759,"title":"Preference Bug by calling get() method - iOS MOE","user":{"login":"Kromzem","id":6073096,"avatar_url":"https://avatars2.githubusercontent.com/u/6073096?v=4","gravatar_id":"","url":"https://api.github.com/users/Kromzem","html_url":"https://github.com/Kromzem","followers_url":"https://api.github.com/users/Kromzem/followers","following_url":"https://api.github.com/users/Kromzem/following{/other_user}","gists_url":"https://api.github.com/users/Kromzem/gists{/gist_id}","starred_url":"https://api.github.com/users/Kromzem/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Kromzem/subscriptions","organizations_url":"https://api.github.com/users/Kromzem/orgs","repos_url":"https://api.github.com/users/Kromzem/repos","events_url":"https://api.github.com/users/Kromzem/events{/privacy}","received_events_url":"https://api.github.com/users/Kromzem/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2017-05-24T08:34:29Z","updated_at":"2017-06-29T09:57:44Z","closed_at":"2017-06-29T09:57:44Z","author_association":"NONE","body":"#### Issue details\r\nI've got an exception at trying to get the whole preference map on iOS MOE.\r\nThis happens to me all the time, no matter where in my core code I try to call the 'get()' method.\r\n\r\n#### Reproduction steps/code\r\nJust call myPreference.get();\r\nThen the error occurs.\r\n\r\n#### Version of LibGDX and/or relevant dependencies\r\n1.9.6\r\n\r\n#### Stacktrace\r\njava.lang.ClassCastException: java.lang.String cannot be cast to apple.foundation.NSString\r\n\tat com.badlogic.gdx.backends.iosmoe.IOSPreferences.get(IOSPreferences.java:160)\r\n\r\n#### Please select the affected platforms\r\n- [ ] Android\r\n- [ ] iOS (robovm)\r\n- [x] iOS (MOE)\r\n- [ ] HTML/GWT\r\n- [ ] Windows\r\n- [ ] Linux\r\n- [ ] MacOS\r\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4759/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4758","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4758/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4758/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4758/events","html_url":"https://github.com/libgdx/libgdx/issues/4758","id":230712553,"number":4758,"title":"Key events not firing on games within Facebook","user":{"login":"WillCalderwood","id":6973062,"avatar_url":"https://avatars1.githubusercontent.com/u/6973062?v=4","gravatar_id":"","url":"https://api.github.com/users/WillCalderwood","html_url":"https://github.com/WillCalderwood","followers_url":"https://api.github.com/users/WillCalderwood/followers","following_url":"https://api.github.com/users/WillCalderwood/following{/other_user}","gists_url":"https://api.github.com/users/WillCalderwood/gists{/gist_id}","starred_url":"https://api.github.com/users/WillCalderwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/WillCalderwood/subscriptions","organizations_url":"https://api.github.com/users/WillCalderwood/orgs","repos_url":"https://api.github.com/users/WillCalderwood/repos","events_url":"https://api.github.com/users/WillCalderwood/events{/privacy}","received_events_url":"https://api.github.com/users/WillCalderwood/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2017-05-23T13:46:32Z","updated_at":"2017-06-25T14:47:18Z","closed_at":"2017-06-25T14:47:18Z","author_association":"CONTRIBUTOR","body":"#### Issue details\r\n`keyDown`, `keyUp` and `keyTyped` are not being fired when a game in played within Facebook. The certainly worked in the past but I'm not sure if something has changed Facebook side or the libgdx side.\r\n\r\nI've added logging on the keypress events on the menu screen.\r\n\r\nOpen a game outside of Facebook here and display the console within the browser and press some keys and you'll see logging.\r\nhttps://wordburst-html5.appspot.com/build/index.jsp\r\n\r\nOpen a game within Facebook (Facebook points to the above URL, so it's the same code) here and display the console within the browser. Press keys and you'll see no logging.\r\nhttps://apps.facebook.com/scribble-wordburst/\r\n\r\n(Tested in Chrome and Firefox)\r\n\r\n#### Reproduction steps/code\r\n```\r\nimport com.badlogic.gdx.ApplicationAdapter;\r\nimport com.badlogic.gdx.Gdx;\r\nimport com.badlogic.gdx.InputProcessor;\r\nimport com.badlogic.gdx.graphics.GL20;\r\nimport com.badlogic.gdx.graphics.Texture;\r\nimport com.badlogic.gdx.graphics.g2d.SpriteBatch;\r\n\r\npublic class MyGdxGame extends ApplicationAdapter implements InputProcessor {\r\n    SpriteBatch batch;\r\n    Texture img;\r\n    private int x = 0;\r\n    private int y = 0;\r\n\r\n    @Override\r\n    public void create() {\r\n        batch = new SpriteBatch();\r\n        img = new Texture(\"badlogic.jpg\");\r\n        Gdx.input.setInputProcessor(this);\r\n    }\r\n\r\n    @Override\r\n    public void render() {\r\n        Gdx.gl.glClearColor(1, 0, 0, 1);\r\n        Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);\r\n        batch.begin();\r\n        batch.draw(img, x, y);\r\n        batch.end();\r\n    }\r\n\r\n    @Override\r\n    public void dispose() {\r\n        batch.dispose();\r\n        img.dispose();\r\n    }\r\n\r\n    @Override\r\n    public boolean keyDown(int keycode) {\r\n        x += 10;\r\n        return false;\r\n    }\r\n\r\n    @Override\r\n    public boolean keyUp(int keycode) {\r\n        y += 10;\r\n        return false;\r\n    }\r\n\r\n    @Override\r\n    public boolean keyTyped(char character) {\r\n        if (character == 'x') {\r\n            x = 0;\r\n            y = 0;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    @Override\r\n    public boolean touchDown(int screenX, int screenY, int pointer, int button) {\r\n        return false;\r\n    }\r\n\r\n    @Override\r\n    public boolean touchUp(int screenX, int screenY, int pointer, int button) {\r\n        return false;\r\n    }\r\n\r\n    @Override\r\n    public boolean touchDragged(int screenX, int screenY, int pointer) {\r\n        return false;\r\n    }\r\n\r\n    @Override\r\n    public boolean mouseMoved(int screenX, int screenY) {\r\n        return false;\r\n    }\r\n\r\n    @Override\r\n    public boolean scrolled(int amount) {\r\n        return false;\r\n    }\r\n}\r\n```\r\n\r\n\r\n#### Version of LibGDX and/or relevant dependencies\r\n1.9.6\r\n\r\n#### Please select the affected platforms\r\n- [ ] Android\r\n- [ ] iOS (robovm)\r\n- [ ] iOS (MOE)\r\n- [x] HTML/GWT\r\n- [ ] Windows\r\n- [ ] Linux\r\n- [ ] MacOS\r\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4758/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4757","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4757/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4757/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4757/events","html_url":"https://github.com/libgdx/libgdx/issues/4757","id":230550659,"number":4757,"title":"Add way to obtain raw \"magneticField\" values in Gdx.input","user":{"login":"rincewindcz","id":11617862,"avatar_url":"https://avatars0.githubusercontent.com/u/11617862?v=4","gravatar_id":"","url":"https://api.github.com/users/rincewindcz","html_url":"https://github.com/rincewindcz","followers_url":"https://api.github.com/users/rincewindcz/followers","following_url":"https://api.github.com/users/rincewindcz/following{/other_user}","gists_url":"https://api.github.com/users/rincewindcz/gists{/gist_id}","starred_url":"https://api.github.com/users/rincewindcz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rincewindcz/subscriptions","organizations_url":"https://api.github.com/users/rincewindcz/orgs","repos_url":"https://api.github.com/users/rincewindcz/repos","events_url":"https://api.github.com/users/rincewindcz/events{/privacy}","received_events_url":"https://api.github.com/users/rincewindcz/received_events","type":"User","site_admin":false},"labels":[{"id":11336982,"url":"https://api.github.com/repos/libgdx/libgdx/labels/enhancement","name":"enhancement","color":"84b6eb","default":true}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2017-05-22T23:56:55Z","updated_at":"2017-06-25T14:46:22Z","closed_at":null,"author_association":"NONE","body":"\r\n#### Issue details\r\nIt seems that currently there is no way how to obtain \"raw\" values from compass. (i.e. the values registered on Android platform with type == Sensor.TYPE_MAGNETIC_FIELD) other than write custom Input implementation for various platforms, or convert them back from degrees (precision lost, orientation). My question is why these values should be \"hidden\" when accelerometer and gyroscope values are \"visible\" on every platform?\r\n\r\n#### Version of LibGDX and/or relevant dependencies\r\nup until latest nightlies\r\n\r\n#### Please select the affected platforms\r\nGdx.input\r\nall\r\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4757/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4756","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4756/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4756/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4756/events","html_url":"https://github.com/libgdx/libgdx/issues/4756","id":230521715,"number":4756,"title":"BaseTmxMapLoader: Add Support for Color type","user":{"login":"jwillp","id":5913483,"avatar_url":"https://avatars1.githubusercontent.com/u/5913483?v=4","gravatar_id":"","url":"https://api.github.com/users/jwillp","html_url":"https://github.com/jwillp","followers_url":"https://api.github.com/users/jwillp/followers","following_url":"https://api.github.com/users/jwillp/following{/other_user}","gists_url":"https://api.github.com/users/jwillp/gists{/gist_id}","starred_url":"https://api.github.com/users/jwillp/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jwillp/subscriptions","organizations_url":"https://api.github.com/users/jwillp/orgs","repos_url":"https://api.github.com/users/jwillp/repos","events_url":"https://api.github.com/users/jwillp/events{/privacy}","received_events_url":"https://api.github.com/users/jwillp/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2017-05-22T21:15:00Z","updated_at":"2017-06-25T14:46:54Z","closed_at":"2017-06-25T14:46:54Z","author_association":"NONE","body":"#### Issue details\r\nTiled has now a new type of custom properties for Colors, which causes the Loader crash.\r\nThe code responsible for this is at line 283:\r\n```java\r\n\t\tif (type == null) {\r\n\t\t\treturn value;\r\n\t\t} else if (type.equals(\"int\")) {\r\n\t\t\treturn Integer.valueOf(value);\r\n\t\t} else if (type.equals(\"float\")) {\r\n\t\t\treturn Float.valueOf(value);\r\n\t\t} else if (type.equals(\"bool\")) {\r\n\t\t\treturn Boolean.valueOf(value);\r\n\t\t} else {\r\n\t\t\tthrow new GdxRuntimeException(\"Wrong type given for property \" + name + \", given : \" + type\r\n\t\t\t\t+ \", supported : string, bool, int, float\");\r\n\t\t}\r\n```\r\n\r\nI think a simple fix would be to do this (not tested):\r\n```java \r\nelse if (type.equals(\"color\")) {\r\n   return Color.valueOf(value);\r\n}\r\n```\r\n\r\n#### Reproduction steps\r\n1. Create a map with a custom map property of type color. \r\n1. Load that map with TmxMapLoader.\r\n\r\n#### Version of LibGDX and/or relevant dependencies\r\nlatest on branch master\r\n\r\n#### Stacktrace\r\n```java\r\n[17:00:49][FATAL]: Wrong type given for property ambiant_color, given : color, supported : string, bool, int, float\r\n[17:00:49][FATAL]: com.badlogic.gdx.maps.tiled.BaseTmxMapLoader.castProperty(BaseTmxMapLoader.java:289)\r\ncom.badlogic.gdx.maps.tiled.BaseTmxMapLoader.loadProperties(BaseTmxMapLoader.java:273)\r\ncom.badlogic.gdx.maps.tiled.TmxMapLoader.loadTilemap(TmxMapLoader.java:202)\r\ncom.badlogic.gdx.maps.tiled.TmxMapLoader.load(TmxMapLoader.java:90)\r\ncom.badlogic.gdx.maps.tiled.TmxMapLoader.load(TmxMapLoader.java:65)\r\ncom.goatgames.ogruntime.OGRTGameScene.loadConfig(OGRTGameScene.java:98)\r\n```\r\n\r\n#### Please select the affected platforms\r\nLibgdx core\r\n\r\n#### Additionnal note\r\nI guess this issue would also apply to object properties since they seem to share the MapProperties class,.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4756/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4755","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4755/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4755/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4755/events","html_url":"https://github.com/libgdx/libgdx/issues/4755","id":230458892,"number":4755,"title":"Wrong ppi on iOS-MOE","user":{"login":"FlorentMasson","id":9975455,"avatar_url":"https://avatars1.githubusercontent.com/u/9975455?v=4","gravatar_id":"","url":"https://api.github.com/users/FlorentMasson","html_url":"https://github.com/FlorentMasson","followers_url":"https://api.github.com/users/FlorentMasson/followers","following_url":"https://api.github.com/users/FlorentMasson/following{/other_user}","gists_url":"https://api.github.com/users/FlorentMasson/gists{/gist_id}","starred_url":"https://api.github.com/users/FlorentMasson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/FlorentMasson/subscriptions","organizations_url":"https://api.github.com/users/FlorentMasson/orgs","repos_url":"https://api.github.com/users/FlorentMasson/repos","events_url":"https://api.github.com/users/FlorentMasson/events{/privacy}","received_events_url":"https://api.github.com/users/FlorentMasson/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2017-05-22T17:00:05Z","updated_at":"2017-06-29T08:53:36Z","closed_at":"2017-06-29T08:52:09Z","author_association":"NONE","body":"#### Issue details\r\nthe ppi of display is not calculated from the machine string, the lines are commented out... is there any reason ?\r\nhttps://github.com/libgdx/libgdx/blob/master/backends/gdx-backend-moe/src/com/badlogic/gdx/backends/iosmoe/IOSGraphics.java#L163\r\n\r\n#### Version of LibGDX and/or relevant dependencies\r\n1.9.6\r\n\r\n#### Please select the affected platforms\r\n- [ ] Android\r\n- [ ] iOS (robovm)\r\n- [X] iOS (MOE)\r\n- [ ] HTML/GWT\r\n- [ ] Windows\r\n- [ ] Linux\r\n- [ ] MacOS\r\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4755/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4754","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4754/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4754/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4754/events","html_url":"https://github.com/libgdx/libgdx/issues/4754","id":230266473,"number":4754,"title":"AndroidInput NullPointerException","user":{"login":"jovezhougang","id":1983805,"avatar_url":"https://avatars1.githubusercontent.com/u/1983805?v=4","gravatar_id":"","url":"https://api.github.com/users/jovezhougang","html_url":"https://github.com/jovezhougang","followers_url":"https://api.github.com/users/jovezhougang/followers","following_url":"https://api.github.com/users/jovezhougang/following{/other_user}","gists_url":"https://api.github.com/users/jovezhougang/gists{/gist_id}","starred_url":"https://api.github.com/users/jovezhougang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jovezhougang/subscriptions","organizations_url":"https://api.github.com/users/jovezhougang/orgs","repos_url":"https://api.github.com/users/jovezhougang/repos","events_url":"https://api.github.com/users/jovezhougang/events{/privacy}","received_events_url":"https://api.github.com/users/jovezhougang/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2017-05-22T01:56:38Z","updated_at":"2017-05-22T16:46:45Z","closed_at":"2017-05-22T16:46:45Z","author_association":"NONE","body":"java.lang.NullPointerException: Attempt to write to field 'boolean com.badlogic.gdx.backends.android.AndroidInput.keyboardAvailable' on a null object reference\r\n\tat com.badlogic.gdx.backends.android.AndroidApplication.onConfigurationChanged(AndroidApplication.java)\r\n\tat android.app.ActivityThread.performConfigurationChanged(ActivityThread.java:4909)\r\n\tat android.app.ActivityThread.performConfigurationChangedForActivity(ActivityThread.java:4814)\r\n\tat android.app.ActivityThread.handleActivityConfigurationChanged(ActivityThread.java:5045)\r\n\tat android.app.ActivityThread$H.handleMessage(ActivityThread.java:1706)\r\n\tat android.os.Handler.dispatchMessage(Handler.java:102)\r\n\tat android.os.Looper.loop(Looper.java:156)\r\n\tat android.app.ActivityThread.main(ActivityThread.java:6524)\r\n\tat java.lang.reflect.Method.invoke(Method.java)\r\n\tat com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:941)\r\n\tat com.android.internal.os.ZygoteInit.main(ZygoteInit.java:831)","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4754/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4753","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4753/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4753/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4753/events","html_url":"https://github.com/libgdx/libgdx/pull/4753","id":230239334,"number":4753,"title":"Recognize X-Box 360 controller as Xbox controller","user":{"login":"winniehell","id":1652293,"avatar_url":"https://avatars3.githubusercontent.com/u/1652293?v=4","gravatar_id":"","url":"https://api.github.com/users/winniehell","html_url":"https://github.com/winniehell","followers_url":"https://api.github.com/users/winniehell/followers","following_url":"https://api.github.com/users/winniehell/following{/other_user}","gists_url":"https://api.github.com/users/winniehell/gists{/gist_id}","starred_url":"https://api.github.com/users/winniehell/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/winniehell/subscriptions","organizations_url":"https://api.github.com/users/winniehell/orgs","repos_url":"https://api.github.com/users/winniehell/repos","events_url":"https://api.github.com/users/winniehell/events{/privacy}","received_events_url":"https://api.github.com/users/winniehell/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2017-05-21T18:40:38Z","updated_at":"2017-08-06T17:36:28Z","closed_at":"2017-08-06T17:36:28Z","author_association":"NONE","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4753","html_url":"https://github.com/libgdx/libgdx/pull/4753","diff_url":"https://github.com/libgdx/libgdx/pull/4753.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4753.patch"},"body":"On Linux I get `Microsoft X-Box 360 pad` as `controller.getName()`, so currently `isXboxController()` returns `false` for me.\r\n\r\ncc @WilliamHayward","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4753/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4752","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4752/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4752/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4752/events","html_url":"https://github.com/libgdx/libgdx/pull/4752","id":230168394,"number":4752,"title":"Add rotation vector sensor","user":{"login":"cypherdare","id":1843131,"avatar_url":"https://avatars2.githubusercontent.com/u/1843131?v=4","gravatar_id":"","url":"https://api.github.com/users/cypherdare","html_url":"https://github.com/cypherdare","followers_url":"https://api.github.com/users/cypherdare/followers","following_url":"https://api.github.com/users/cypherdare/following{/other_user}","gists_url":"https://api.github.com/users/cypherdare/gists{/gist_id}","starred_url":"https://api.github.com/users/cypherdare/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cypherdare/subscriptions","organizations_url":"https://api.github.com/users/cypherdare/orgs","repos_url":"https://api.github.com/users/cypherdare/repos","events_url":"https://api.github.com/users/cypherdare/events{/privacy}","received_events_url":"https://api.github.com/users/cypherdare/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2017-05-20T17:42:57Z","updated_at":"2017-06-25T11:28:10Z","closed_at":"2017-06-25T11:28:10Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4752","html_url":"https://github.com/libgdx/libgdx/pull/4752","diff_url":"https://github.com/libgdx/libgdx/pull/4752.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4752.patch"},"body":"The rotation vector sensor is a software sensor provided by Android that combines inputs from among the gyroscope, accelerometer, compass, and tilt sensor, and performs smoothing under the hood. It enables the use of `Input.getAzimuth()`, `pitch`, and `roll`, but the motion is very smooth as compared to the pure compass that we currently provide. It is far easier to use than the compass or gyroscope because the smoothing and merging of various sensors data is done for you.\r\n\r\nThe new SensorTest works correctly for the compass or the rotation vector sensor if the manifest sets the GdxTestActivity to `Portrait`. But the Euler angles are mixed up if the activity is in landscape. I haven't debugged this yet, but as provided, the new rotation vector sensor behaves exactly as when using `config.useCompass`.\r\n\r\nI set it to disable the compass if the `config.useRotationVectorSensor` is true and the sensor is available, because it provides all the information we were previously using the compass for. It's explained in the docs.\r\n\r\nI also made the sensor rate configurable.","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4752/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4751","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4751/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4751/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4751/events","html_url":"https://github.com/libgdx/libgdx/issues/4751","id":230163401,"number":4751,"title":"Not able to render BitmapFont properly, I've generated font by gdx-freetype","user":{"login":"itsabhiaryan","id":7019724,"avatar_url":"https://avatars1.githubusercontent.com/u/7019724?v=4","gravatar_id":"","url":"https://api.github.com/users/itsabhiaryan","html_url":"https://github.com/itsabhiaryan","followers_url":"https://api.github.com/users/itsabhiaryan/followers","following_url":"https://api.github.com/users/itsabhiaryan/following{/other_user}","gists_url":"https://api.github.com/users/itsabhiaryan/gists{/gist_id}","starred_url":"https://api.github.com/users/itsabhiaryan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/itsabhiaryan/subscriptions","organizations_url":"https://api.github.com/users/itsabhiaryan/orgs","repos_url":"https://api.github.com/users/itsabhiaryan/repos","events_url":"https://api.github.com/users/itsabhiaryan/events{/privacy}","received_events_url":"https://api.github.com/users/itsabhiaryan/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2017-05-20T16:18:20Z","updated_at":"2017-09-06T21:03:12Z","closed_at":"2017-09-06T21:03:12Z","author_association":"NONE","body":"When I render BitmapFont, it's not properly render. I am using latest version **1.9.6**. When I tried with version **1.5.5**, it's works fine. \r\n\r\nI tried many different `.ttf`, Result are almost same for all files.\r\n\r\nThis is my Test Code :\r\n\r\n```\r\npublic class MyGdxGame extends ApplicationAdapter {\r\n\r\n\tSpriteBatch batch;\r\n\tTexture img;\r\n\r\n\tBitmapFont font;\r\n\tOrthographicCamera camera;\r\n\r\n\t@Override\r\n\tpublic void create () {\r\n\t\tbatch = new SpriteBatch();\r\n\t\timg = new Texture(\"badlogic.jpg\");\r\n\r\n\t\tfloat w=Gdx.graphics.getWidth();\r\n\t\tfloat h=Gdx.graphics.getHeight();\r\n\r\n\t\tfloat worldWidth=400;\r\n\t\tfloat worldHeight=h / (w / worldWidth);\r\n\r\n\t\tcamera=new OrthographicCamera();\r\n\t\tcamera.setToOrtho(false,worldWidth,worldHeight);\r\n\r\n\t\tFreeTypeFontGenerator freeTypeFontGenerator=new FreeTypeFontGenerator(Gdx.files.internal(\"ariblk.ttf\"));\r\n\t\tFreeTypeFontGenerator.FreeTypeFontParameter ftp=new FreeTypeFontGenerator.FreeTypeFontParameter();\r\n\t\tftp.size=400;\r\n\t\tfont=freeTypeFontGenerator.generateFont(ftp);\r\n\r\n\t\tfont.setScale(0.04f);  // when I use version 1.5.5\r\n               //font.getData().setScale(0.04f);    // when I use version 1.9.6\r\n\t}\r\n\r\n\t@Override\r\n\tpublic void render () {\r\n\r\n\t\tGdx.gl.glClearColor(1, 0, 0, 1);\r\n\t\tGdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);\r\n\r\n\t\tbatch.setProjectionMatrix(camera.combined);\r\n\r\n\t\tbatch.begin();\r\n\t\tfont.draw(batch,\"LEADERBOARD\",10,200);\r\n\t\tbatch.end();\r\n\t}\r\n}\r\n```\r\n\r\nAnd Result with both version \r\n\r\n<img width=\"425\" alt=\"screen shot 2017-05-20 at 9 08 07 pm\" src=\"https://cloud.githubusercontent.com/assets/7019724/26277017/48ee7752-3da1-11e7-80ae-344da81e0fd2.png\">\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4751/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4750","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4750/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4750/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4750/events","html_url":"https://github.com/libgdx/libgdx/issues/4750","id":230145877,"number":4750,"title":"Couldn't load shared library 'gdx' for target: Linux, 32-bit","user":{"login":"dherediat97","id":17063135,"avatar_url":"https://avatars3.githubusercontent.com/u/17063135?v=4","gravatar_id":"","url":"https://api.github.com/users/dherediat97","html_url":"https://github.com/dherediat97","followers_url":"https://api.github.com/users/dherediat97/followers","following_url":"https://api.github.com/users/dherediat97/following{/other_user}","gists_url":"https://api.github.com/users/dherediat97/gists{/gist_id}","starred_url":"https://api.github.com/users/dherediat97/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dherediat97/subscriptions","organizations_url":"https://api.github.com/users/dherediat97/orgs","repos_url":"https://api.github.com/users/dherediat97/repos","events_url":"https://api.github.com/users/dherediat97/events{/privacy}","received_events_url":"https://api.github.com/users/dherediat97/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2017-05-20T10:49:35Z","updated_at":"2017-05-21T16:06:14Z","closed_at":"2017-05-21T16:06:14Z","author_association":"NONE","body":"#### Issue details\r\nWhen GameFragment is created throw exception. I am using Android Studio with libgdx dependencies in gradle project.\r\n```\r\nsuper.onCreate(savedInstanceState);\r\nGameFragment fragment = new GameFragment(); //Here Break the App\r\nFragmentTransaction trans = getSupportFragmentManager().beginTransaction();\r\ntrans.replace(android.R.id.content, fragment);\r\ntrans.commit();\r\n```\r\n\r\n#### Version of LibGDX and/or relevant dependencies\r\n1.9.6\r\n\r\n#### Stacktrace\r\n```java\r\njava.lang.ExceptionInInitializerError  at breaktherules.dherediat97.musiclegends.vista.AndroidLauncher.onCreate(AndroidLauncher.java:19)\r\n                                                                                            at android.app.Activity.performCreate(Activity.java:5241)      at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1087)\r\n                                                                                            at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2194)\r\n                                                                                            at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2279)\r\n                                                                                            at android.app.ActivityThread.access$800(ActivityThread.java:143)\r\n                                                                                            at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1242)\r\n                                                                                            at android.os.Handler.dispatchMessage(Handler.java:102)\r\n                                                                                            at android.os.Looper.loop(Looper.java:136)\r\n                                                                                            at android.app.ActivityThread.main(ActivityThread.java:5124)\r\n                                                                                            at java.lang.reflect.Method.invokeNative(Native Method)\r\n                                                                                            at java.lang.reflect.Method.invoke(Method.java:515)\r\n                                                                                            at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:797)\r\n                                                                                            at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:613)\r\n                                                                                            at dalvik.system.NativeStart.main(Native Method)\r\n                                                                                         Caused by: com.badlogic.gdx.utils.GdxRuntimeException: Couldn't load shared library 'gdx' for target: Linux, 32-bit\r\n                                                                                            at com.badlogic.gdx.utils.SharedLibraryLoader.load(SharedLibraryLoader.java:124)\r\n                                                                                            at com.badlogic.gdx.utils.GdxNativesLoader.load(GdxNativesLoader.java:33)\r\n                                                                                            at com.badlogic.gdx.backends.android.AndroidFragmentApplication.<clinit>(AndroidFragmentApplication.java:54)\r\n                                                                                            at breaktherules.dherediat97.musiclegends.vista.AndroidLauncher.onCreate(AndroidLauncher.java:19) \r\n                                                                                            at android.app.Activity.performCreate(Activity.java:5241) \r\n                                                                                            at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1087) \r\n                                                                                            at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2194) \r\n                                                                                            at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2279) \r\n                                                                                            at android.app.ActivityThread.access$800(ActivityThread.java:143) \r\n                                                                                            at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1242) \r\n                                                                                            at android.os.Handler.dispatchMessage(Handler.java:102) \r\n                                                                                            at android.os.Looper.loop(Looper.java:136) \r\n                                                                                            at android.app.ActivityThread.main(ActivityThread.java:5124) \r\n                                                                                            at java.lang.reflect.Method.invokeNative(Native Method) \r\n                                                                                            at java.lang.reflect.Method.invoke(Method.java:515) \r\n                                                                                            at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:797) \r\n                                                                                            at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:613) \r\n                                                                                            at dalvik.system.NativeStart.main(Native Method) \r\n                                                                                         Caused by: java.lang.UnsatisfiedLinkError: Couldn't load gdx from loader dalvik.system.PathClassLoader[DexPathList[[zip file \"/data/app/breaktherules.dherediat97.musiclegends-1.apk\", zip file \"/data/data/breaktherules.dherediat97.musiclegends/code_cache/secondary-dexes/breaktherules.dherediat97.musiclegends-1.apk.classes2.zip\"],nativeLibraryDirectories=[/data/app-lib/breaktherules.dherediat97.musiclegends-1, /vendor/lib, /system/lib]]]: findLibrary returned null\r\n                                                                                            at java.lang.Runtime.loadLibrary(Runtime.java:358)\r\n                                                                                            at java.lang.System.loadLibrary(System.java:526)\r\n                                                                                            at com.badlogic.gdx.utils.SharedLibraryLoader.load(SharedLibraryLoader.java:118)\r\n                                                                                            at com.badlogic.gdx.utils.GdxNativesLoader.load(GdxNativesLoader.java:33) \r\n                                                                                            at com.badlogic.gdx.backends.android.AndroidFragmentApplication.<clinit>(AndroidFragmentApplication.java:54) \r\n                                                                                            at breaktherules.dherediat97.musiclegends.vista.AndroidLauncher.onCreate(AndroidLauncher.java:19) \r\n                                                                                            at android.app.Activity.performCreate(Activity.java:5241) \r\n                                                                                            at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1087) \r\n                                                                                            at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2194) \r\n                                                                                            at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2279) \r\n                                                                                            at android.app.ActivityThread.access$800(ActivityThread.java:143) \r\n                                                                                            at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1242) \r\n                                                                                            at android.os.Handler.dispatchMessage(Handler.java:102) \r\n                                                                                            at android.os.Looper.loop(Looper.java:136) \r\n                                                                                            at android.app.ActivityThread.main(ActivityThread.java:5124) \r\n                                                                                            at java.lang.reflect.Method.invokeNative(Native Method) \r\n                                                                                            at java.lang.reflect.Method.invoke(Method.java:515)\r\n```\r\n\r\n#### Please select the affected platforms\r\n- [x] Android\r\n- [ ] iOS (robovm)\r\n- [ ] HTML/GWT\r\n- [ ] iOS (MOE)\r\n- [ ] Windows\r\n- [ ] Linux\r\n- [ ] MacOS\r\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4750/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4749","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4749/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4749/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4749/events","html_url":"https://github.com/libgdx/libgdx/issues/4749","id":229931593,"number":4749,"title":"[Feature Request] Provide wrapping for btSerializer, btDefaultSerializer","user":{"login":"spirritus","id":1154316,"avatar_url":"https://avatars0.githubusercontent.com/u/1154316?v=4","gravatar_id":"","url":"https://api.github.com/users/spirritus","html_url":"https://github.com/spirritus","followers_url":"https://api.github.com/users/spirritus/followers","following_url":"https://api.github.com/users/spirritus/following{/other_user}","gists_url":"https://api.github.com/users/spirritus/gists{/gist_id}","starred_url":"https://api.github.com/users/spirritus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/spirritus/subscriptions","organizations_url":"https://api.github.com/users/spirritus/orgs","repos_url":"https://api.github.com/users/spirritus/repos","events_url":"https://api.github.com/users/spirritus/events{/privacy}","received_events_url":"https://api.github.com/users/spirritus/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2017-05-19T10:14:38Z","updated_at":"2017-05-19T10:14:38Z","closed_at":null,"author_association":"NONE","body":"Hi there,\r\n\r\nright now it is possible to import collision worlds, awesome. However, it is not possible to generate some of the input data. Bullet allready comes with a serializer for this purpose but it is not wrapped yet. So a wrapping of btSerializer, btDefaultSerializer would improve libgdx even more.\r\n\r\nCheers Jens","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4749/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4748","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4748/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4748/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4748/events","html_url":"https://github.com/libgdx/libgdx/issues/4748","id":229764945,"number":4748,"title":"Libgdx internals conflict with JLayer?","user":{"login":"01HD","id":11904216,"avatar_url":"https://avatars3.githubusercontent.com/u/11904216?v=4","gravatar_id":"","url":"https://api.github.com/users/01HD","html_url":"https://github.com/01HD","followers_url":"https://api.github.com/users/01HD/followers","following_url":"https://api.github.com/users/01HD/following{/other_user}","gists_url":"https://api.github.com/users/01HD/gists{/gist_id}","starred_url":"https://api.github.com/users/01HD/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/01HD/subscriptions","organizations_url":"https://api.github.com/users/01HD/orgs","repos_url":"https://api.github.com/users/01HD/repos","events_url":"https://api.github.com/users/01HD/events{/privacy}","received_events_url":"https://api.github.com/users/01HD/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2017-05-18T18:30:57Z","updated_at":"2017-08-23T06:00:42Z","closed_at":"2017-08-23T06:00:42Z","author_association":"NONE","body":"#### Issue details\r\nI'm trying to get PCM data from a MP3 file and Jlayer seems to be the main way of doing so (at least in java).\r\nWhenever I call the decodeFrame method of Jlayer, I get an error saying it can't find the method. I used gradle to add the Jlayer dependency. This only occurs when it's a LibGDX project as I created a non LibGDX gradle project and added MP3SPI and everything worked fine.\r\n\r\nAnother thing to note is that Jlayer also works when I moved the dependency in the build.gradle to the top (LibGDX dependencies are below Jlayer's) and make sure gradle is loading in the order ```build.gradle``` is in (gradle classpath sorting strategy set to \"As returned by build script\" in Eclipse). However doing this broke the MP3 music playback from LibGDX.\r\n\r\nThis seems to be an issue of java reflection. \r\n\r\nPS: I was originally using Mp3SPI alongside Jlayer but noticed the error. I realized it was an issue with Jlayer and LibGDX.\r\n\r\n#### Reproduction steps/code\r\n1. create new LibGDX project (Desktop and Android selected, Freetype is the only tool)\r\n2. Use example code from MP3SPI documentation: http://www.javazoom.net/mp3spi/documents.html\r\n3. Added MP3SPI dependency to ```build.gradle```\r\n4. launch (make sure to specify path to music (mp3).\r\n\r\nThe code below is copy and paste ready and will show the same error as long as the project is set up following the previously mentioned steps.\r\n```java\r\n//The following only works if MP3SPI's dependency in build.gradle is above all other dependencies and gradle's classpath order system is following the build script.\r\n\r\npublic class MyGdxGame extends ApplicationAdapter {\r\n\tSpriteBatch batch;\r\n\tTexture img;\r\n\r\n\t@Override\r\n\tpublic void create() {\r\n\t\tbatch = new SpriteBatch();\r\n\t\timg = new Texture(\"badlogic.jpg\");\r\n\t\t\r\n\t\ttestPlay(\"PATH TO MUSIC\");\r\n\t}\r\n\r\n\t@Override\r\n\tpublic void render() {\r\n\t\tGdx.gl.glClearColor(1, 0, 0, 1);\r\n\t\tGdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);\r\n\t\tbatch.begin();\r\n\t\tbatch.draw(img, 0, 0);\r\n\t\tbatch.end();\r\n\t}\r\n\r\n\t@Override\r\n\tpublic void dispose() {\r\n\t\tbatch.dispose();\r\n\t\timg.dispose();\r\n\t}\r\n\r\n\tpublic void testPlay(String filename) {\r\n\t\ttry {\r\n\t\t\tFile file = new File(filename);\r\n\t\t\tAudioInputStream in = AudioSystem.getAudioInputStream(file);\r\n\t\t\tAudioInputStream din = null;\r\n\t\t\tAudioFormat baseFormat = in.getFormat();\r\n\t\t\tAudioFormat decodedFormat = new AudioFormat(AudioFormat.Encoding.PCM_SIGNED, baseFormat.getSampleRate(), 16,\r\n\t\t\t\t\tbaseFormat.getChannels(), baseFormat.getChannels() * 2, baseFormat.getSampleRate(), false);\r\n\t\t\tdin = AudioSystem.getAudioInputStream(decodedFormat, in);\r\n\t\t\t// Play now.\r\n\t\t\trawplay(decodedFormat, din);\r\n\t\t\tin.close();\r\n\t\t} catch (Exception e) {\r\n\t\t\t// Handle exception.\r\n\t\t}\r\n\t}\r\n\r\n\tprivate void rawplay(AudioFormat targetFormat, AudioInputStream din) throws IOException, LineUnavailableException {\r\n\t\tbyte[] data = new byte[4096];\r\n\t\tSourceDataLine line = getLine(targetFormat);\r\n\t\tif (line != null) {\r\n\t\t\t// Start\r\n\t\t\tline.start();\r\n\t\t\tint nBytesRead = 0, nBytesWritten = 0;\r\n\t\t\twhile (nBytesRead != -1) {\r\n\t\t\t\tnBytesRead = din.read(data, 0, data.length);\r\n\t\t\t\tif (nBytesRead != -1)\r\n\t\t\t\t\tnBytesWritten = line.write(data, 0, nBytesRead);\r\n\t\t\t}\r\n\t\t\t// Stop\r\n\t\t\tline.drain();\r\n\t\t\tline.stop();\r\n\t\t\tline.close();\r\n\t\t\tdin.close();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate SourceDataLine getLine(AudioFormat audioFormat) throws LineUnavailableException {\r\n\t\tSourceDataLine res = null;\r\n\t\tDataLine.Info info = new DataLine.Info(SourceDataLine.class, audioFormat);\r\n\t\tres = (SourceDataLine) AudioSystem.getLine(info);\r\n\t\tres.open(audioFormat);\r\n\t\treturn res;\r\n\t}\r\n}\r\n```\r\n\r\n#### Version of LibGDX and/or relevant dependencies\r\nLibGDX 1.9.6\r\nMP3SPI 1.9.5\r\nJLayer 1.0.1\r\nTritonus 0.3.7\r\n\r\n#### Stacktrace\r\n```java\r\nException in thread \"LWJGL Application\" com.badlogic.gdx.utils.GdxRuntimeException: java.lang.NoSuchMethodError: javazoom.jl.decoder.LayerIIIDecoder.<init>(Ljavazoom/jl/decoder/Bitstream;Ljavazoom/jl/decoder/Header;Ljavazoom/jl/decoder/SynthesisFilter;Ljavazoom/jl/decoder/SynthesisFilter;Ljavazoom/jl/decoder/Obuffer;I)V\r\n\tat com.badlogic.gdx.backends.lwjgl.LwjglApplication$1.run(LwjglApplication.java:133)\r\nCaused by: java.lang.NoSuchMethodError: javazoom.jl.decoder.LayerIIIDecoder.<init>(Ljavazoom/jl/decoder/Bitstream;Ljavazoom/jl/decoder/Header;Ljavazoom/jl/decoder/SynthesisFilter;Ljavazoom/jl/decoder/SynthesisFilter;Ljavazoom/jl/decoder/Obuffer;I)V\r\n\tat javazoom.jl.decoder.Decoder.retrieveDecoder(Decoder.java:229)\r\n\tat javazoom.jl.decoder.Decoder.decodeFrame(Decoder.java:145)\r\n\tat javazoom.spi.mpeg.sampled.convert.DecodedMpegAudioInputStream.execute(DecodedMpegAudioInputStream.java:185)\r\n\tat org.tritonus.share.TCircularBuffer.read(TCircularBuffer.java:138)\r\n\tat org.tritonus.share.sampled.convert.TAsynchronousFilteredAudioInputStream.read(TAsynchronousFilteredAudioInputStream.java:197)\r\n\tat com.mygdx.game.MyGdxGame.rawplay(MyGdxGame.java:71)\r\n\tat com.mygdx.game.MyGdxGame.testPlay(MyGdxGame.java:56)\r\n\tat com.mygdx.game.MyGdxGame.create(MyGdxGame.java:28)\r\n\tat com.badlogic.gdx.backends.lwjgl.LwjglApplication.mainLoop(LwjglApplication.java:149)\r\n\tat com.badlogic.gdx.backends.lwjgl.LwjglApplication$1.run(LwjglApplication.java:126)\r\n\r\n```\r\n\r\n#### Please select the affected platforms\r\nIm just going to assume that its not going to work on all platforms because this error doesn't seem very relevant to platform. I am using **Windows** though, and have not tried running on android.","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4748/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4747","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4747/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4747/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4747/events","html_url":"https://github.com/libgdx/libgdx/issues/4747","id":229612189,"number":4747,"title":"BitmapFont after 1.5.5 update: scale with no good letter pacing","user":{"login":"buzzo123","id":2952183,"avatar_url":"https://avatars3.githubusercontent.com/u/2952183?v=4","gravatar_id":"","url":"https://api.github.com/users/buzzo123","html_url":"https://github.com/buzzo123","followers_url":"https://api.github.com/users/buzzo123/followers","following_url":"https://api.github.com/users/buzzo123/following{/other_user}","gists_url":"https://api.github.com/users/buzzo123/gists{/gist_id}","starred_url":"https://api.github.com/users/buzzo123/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/buzzo123/subscriptions","organizations_url":"https://api.github.com/users/buzzo123/orgs","repos_url":"https://api.github.com/users/buzzo123/repos","events_url":"https://api.github.com/users/buzzo123/events{/privacy}","received_events_url":"https://api.github.com/users/buzzo123/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2017-05-18T09:43:48Z","updated_at":"2017-09-06T21:02:55Z","closed_at":"2017-09-06T21:02:55Z","author_association":"NONE","body":"I had a game with the old version of FreeType lib. For some reason, I update the lib but there was some change to do, so I did. But after I have a problem with the letter spacing.\r\ni change\r\nbitmapFont.SetScale();\r\nwith\r\nbitmapFont.getData().SetScale();\r\n\r\nbut the letter spacing between letter is not correct\r\n\r\nthis is a link from my question on StackOverflow:\r\nhttp://stackoverflow.com/questions/44018970/libgdx-freetype-new-lib-issue-with-letter-spacing/44022243?noredirect=1#comment75090417_44022243","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4747/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4746","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4746/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4746/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4746/events","html_url":"https://github.com/libgdx/libgdx/issues/4746","id":229277220,"number":4746,"title":"Add a way to convert TextureRegion to Texture or more advanced SpriteBatch calls","user":{"login":"egordorichev","id":7851390,"avatar_url":"https://avatars0.githubusercontent.com/u/7851390?v=4","gravatar_id":"","url":"https://api.github.com/users/egordorichev","html_url":"https://github.com/egordorichev","followers_url":"https://api.github.com/users/egordorichev/followers","following_url":"https://api.github.com/users/egordorichev/following{/other_user}","gists_url":"https://api.github.com/users/egordorichev/gists{/gist_id}","starred_url":"https://api.github.com/users/egordorichev/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/egordorichev/subscriptions","organizations_url":"https://api.github.com/users/egordorichev/orgs","repos_url":"https://api.github.com/users/egordorichev/repos","events_url":"https://api.github.com/users/egordorichev/events{/privacy}","received_events_url":"https://api.github.com/users/egordorichev/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2017-05-17T08:38:42Z","updated_at":"2017-05-17T10:05:45Z","closed_at":"2017-05-17T09:59:45Z","author_association":"NONE","body":"I've just swiched from assets manager to texture atlas. \r\nHere is my code before:\r\n\r\n```java\r\nGraphics.batch.draw(this.tiles, x * Block.SIZE,\r\n\t\t\ty * Block.SIZE, Block.SIZE, Block.SIZE,\r\n\t\t\tBlock.SIZE * (binary), variant * Block.SIZE, Block.SIZE,\r\n\t\t\tBlock.SIZE, false, false);\r\n```\r\n\r\nBut now, because I can't convert TextureRegion (with is produced by TextureAtlas), I've switched to TextureRegions.\r\n\r\nBut the thing is, that I can't render it with the same code! There is not SpriteBatch call,  for drawing TextureRegion with custom src!\r\n\r\n**Please, add a way to convert TextureRegion to Texture or more advanced SpriteBatch calls !**\r\nThanks.","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4746/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4745","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4745/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4745/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4745/events","html_url":"https://github.com/libgdx/libgdx/issues/4745","id":229024716,"number":4745,"title":"OrthogonalTiledMapRenderer does not render TiledMapTileMapObject.","user":{"login":"nathanielbrown","id":19429743,"avatar_url":"https://avatars1.githubusercontent.com/u/19429743?v=4","gravatar_id":"","url":"https://api.github.com/users/nathanielbrown","html_url":"https://github.com/nathanielbrown","followers_url":"https://api.github.com/users/nathanielbrown/followers","following_url":"https://api.github.com/users/nathanielbrown/following{/other_user}","gists_url":"https://api.github.com/users/nathanielbrown/gists{/gist_id}","starred_url":"https://api.github.com/users/nathanielbrown/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nathanielbrown/subscriptions","organizations_url":"https://api.github.com/users/nathanielbrown/orgs","repos_url":"https://api.github.com/users/nathanielbrown/repos","events_url":"https://api.github.com/users/nathanielbrown/events{/privacy}","received_events_url":"https://api.github.com/users/nathanielbrown/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2017-05-16T13:01:48Z","updated_at":"2017-09-06T21:05:47Z","closed_at":"2017-09-06T21:05:47Z","author_association":"NONE","body":"Please ensure you have given all the following requested information in your report.\r\n\r\n#### Issue details\r\nOrthogonalTiledMapRenderer does not render TiledMapTileMapObject. The test in the test suite does render them.\r\n\r\nI'm not sure if it should be part of the base Renderer or a seperate one. Here is my \"easy\" solution.\r\n\r\n#### Reproduction steps/code\r\nMake a tiled map with a with objects instead of tiles.\r\n\r\nhttps://www.youtube.com/watch?v=ORhC48773bw \r\n\r\nLoad the map using the code from the tutorial. https://github.com/libgdx/libgdx/wiki/Tile-maps\r\n\r\n#### Version of LibGDX and/or relevant dependencies\r\n1.9.5\r\n\r\n#### Stacktrace\r\nN/A\r\n\r\n#### Please select the affected platforms\r\n- [ X ] Android\r\n- [ X ] iOS (robovm)\r\n- [ X ] iOS (MOE)\r\n- [ X ] HTML/GWT\r\n- [ X ] Windows\r\n- [ X ] Linux\r\n- [ X ] MacOS\r\n\r\n[ObjectTiledMapRenderer.zip](https://github.com/libgdx/libgdx/files/1004406/ObjectTiledMapRenderer.zip)","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4745/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4744","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4744/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4744/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4744/events","html_url":"https://github.com/libgdx/libgdx/pull/4744","id":228885207,"number":4744,"title":"Add POV support to LWJGL3 controller backend","user":{"login":"Zomby2D","id":5513720,"avatar_url":"https://avatars0.githubusercontent.com/u/5513720?v=4","gravatar_id":"","url":"https://api.github.com/users/Zomby2D","html_url":"https://github.com/Zomby2D","followers_url":"https://api.github.com/users/Zomby2D/followers","following_url":"https://api.github.com/users/Zomby2D/following{/other_user}","gists_url":"https://api.github.com/users/Zomby2D/gists{/gist_id}","starred_url":"https://api.github.com/users/Zomby2D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Zomby2D/subscriptions","organizations_url":"https://api.github.com/users/Zomby2D/orgs","repos_url":"https://api.github.com/users/Zomby2D/repos","events_url":"https://api.github.com/users/Zomby2D/events{/privacy}","received_events_url":"https://api.github.com/users/Zomby2D/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2017-05-16T00:47:29Z","updated_at":"2017-06-26T03:55:31Z","closed_at":"2017-06-17T10:56:57Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4744","html_url":"https://github.com/libgdx/libgdx/pull/4744","diff_url":"https://github.com/libgdx/libgdx/pull/4744.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4744.patch"},"body":"LWGJL 3.1.2 was released and it introduces the GLFW update that contains support for controllers POV hats.\r\n (Linux is not yet supported as the required PR is still pending in the GLFW repository.)\r\n\r\nThis bumps LWJGL to version 3.1.2 along with the required updates to the controller backend.","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4744/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4743","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4743/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4743/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4743/events","html_url":"https://github.com/libgdx/libgdx/pull/4743","id":228584800,"number":4743,"title":"Preserve individual OIS controllers listeners on lost window handle","user":{"login":"Zomby2D","id":5513720,"avatar_url":"https://avatars0.githubusercontent.com/u/5513720?v=4","gravatar_id":"","url":"https://api.github.com/users/Zomby2D","html_url":"https://github.com/Zomby2D","followers_url":"https://api.github.com/users/Zomby2D/followers","following_url":"https://api.github.com/users/Zomby2D/following{/other_user}","gists_url":"https://api.github.com/users/Zomby2D/gists{/gist_id}","starred_url":"https://api.github.com/users/Zomby2D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Zomby2D/subscriptions","organizations_url":"https://api.github.com/users/Zomby2D/orgs","repos_url":"https://api.github.com/users/Zomby2D/repos","events_url":"https://api.github.com/users/Zomby2D/events{/privacy}","received_events_url":"https://api.github.com/users/Zomby2D/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2017-05-15T01:13:21Z","updated_at":"2017-06-26T03:55:40Z","closed_at":"2017-06-25T13:23:32Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4743","html_url":"https://github.com/libgdx/libgdx/pull/4743","diff_url":"https://github.com/libgdx/libgdx/pull/4743.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4743.patch"},"body":"When the window handle is lost, for example when going from windowed to full screen, a new instance of OIS is created and the controllers are cleared and re-added. Listeners added to the individual controllers were lost in the process.\r\n\r\nThis fixes issue #4723 by matching the newly added controllers to the ones being removed and transferring the listeners over.","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4743/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4742","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4742/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4742/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4742/events","html_url":"https://github.com/libgdx/libgdx/issues/4742","id":228501127,"number":4742,"title":"Headless Application Updates Faster than specified interval","user":{"login":"ckcornflake","id":7545096,"avatar_url":"https://avatars0.githubusercontent.com/u/7545096?v=4","gravatar_id":"","url":"https://api.github.com/users/ckcornflake","html_url":"https://github.com/ckcornflake","followers_url":"https://api.github.com/users/ckcornflake/followers","following_url":"https://api.github.com/users/ckcornflake/following{/other_user}","gists_url":"https://api.github.com/users/ckcornflake/gists{/gist_id}","starred_url":"https://api.github.com/users/ckcornflake/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ckcornflake/subscriptions","organizations_url":"https://api.github.com/users/ckcornflake/orgs","repos_url":"https://api.github.com/users/ckcornflake/repos","events_url":"https://api.github.com/users/ckcornflake/events{/privacy}","received_events_url":"https://api.github.com/users/ckcornflake/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2017-05-13T21:17:58Z","updated_at":"2017-05-13T21:17:58Z","closed_at":null,"author_association":"NONE","body":"Please ensure you have given all the following requested information in your report.\r\n\r\n#### Issue details\r\nHeadlessApplication updates at a rate faster than the specified interval.  For example, I've taken the average delta time for a headless application for the default interval (60 frames per second).   Expected average is around 16.666 ms, but I get around 16.3 ms on average.\r\n\r\n#### Reproduction steps/code\r\nImplement an Application Listener and record the delta times of each frame.  Take a sample of a few dozen (or any number) deltaTimes and average them.   Replacing this line: \r\n\r\nt = TimeUtils.nanoTime() + interval\r\n\r\nwith this\r\n\r\nt += interval;\r\n\r\nCorrected the issue.\r\n\r\n#### Version of LibGDX and/or relevant dependencies\r\nMaster branch.\r\n\r\n#### Stacktrace\r\nNot necessary.\r\n\r\n\r\n#### Please select the affected platforms\r\n- [x ] Android\r\n- [ x] iOS (robovm)\r\n- [x ] iOS (MOE)\r\n- [x ] HTML/GWT\r\n- [ x] Windows\r\n- [x ] Linux\r\n- [ x] MacOS\r\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4742/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4741","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4741/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4741/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4741/events","html_url":"https://github.com/libgdx/libgdx/pull/4741","id":228490631,"number":4741,"title":"Better ignore un-needed files for iOS platform - gdx-setup","user":{"login":"haxpor","id":673757,"avatar_url":"https://avatars3.githubusercontent.com/u/673757?v=4","gravatar_id":"","url":"https://api.github.com/users/haxpor","html_url":"https://github.com/haxpor","followers_url":"https://api.github.com/users/haxpor/followers","following_url":"https://api.github.com/users/haxpor/following{/other_user}","gists_url":"https://api.github.com/users/haxpor/gists{/gist_id}","starred_url":"https://api.github.com/users/haxpor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/haxpor/subscriptions","organizations_url":"https://api.github.com/users/haxpor/orgs","repos_url":"https://api.github.com/users/haxpor/repos","events_url":"https://api.github.com/users/haxpor/events{/privacy}","received_events_url":"https://api.github.com/users/haxpor/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2017-05-13T18:19:55Z","updated_at":"2017-06-25T11:28:38Z","closed_at":"2017-06-25T11:28:37Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4741","html_url":"https://github.com/libgdx/libgdx/pull/4741","diff_url":"https://github.com/libgdx/libgdx/pull/4741.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4741.patch"},"body":"This will improve `.gitignore` file generated by `gdx-setup.jar` tool.\r\n\r\nIn detail, inside `.xcodeproj` there are also unnecessary files which are\r\nnot needed to be included into git source tree. Those files include\r\nlocal user's data (unique for each local user opening Xcode), but\r\nparticular folders are still need i.e. `xcshareddata` (for shared scheme\r\nin case for more complex build process of executing build command\r\nagainst shared scheme for project from external tool), and of course\r\n`project.pbxproj` project file itself.\r\n\r\nAlso ignored artifacts as they are built dynamically in `native/` folder\r\nof `ios/xcode/` and `ios-moe/xcode/`. Each built file (`.a`) has a several MBs in\r\nsize, and would be much better to exclude it. In tested, for project\r\nthat includes only Box2d, `native/` directory alone would be ~13MB in\r\nsize. This will make git user smoothly and effectively clone the\r\nproject without much waiting, and also no need to put it back in as it's\r\nignored.","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4741/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4740","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4740/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4740/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4740/events","html_url":"https://github.com/libgdx/libgdx/pull/4740","id":228011028,"number":4740,"title":"Removed unnecessary clamp in Interpolation.smoother","user":{"login":"CreamyCookie","id":3063858,"avatar_url":"https://avatars2.githubusercontent.com/u/3063858?v=4","gravatar_id":"","url":"https://api.github.com/users/CreamyCookie","html_url":"https://github.com/CreamyCookie","followers_url":"https://api.github.com/users/CreamyCookie/followers","following_url":"https://api.github.com/users/CreamyCookie/following{/other_user}","gists_url":"https://api.github.com/users/CreamyCookie/gists{/gist_id}","starred_url":"https://api.github.com/users/CreamyCookie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CreamyCookie/subscriptions","organizations_url":"https://api.github.com/users/CreamyCookie/orgs","repos_url":"https://api.github.com/users/CreamyCookie/repos","events_url":"https://api.github.com/users/CreamyCookie/events{/privacy}","received_events_url":"https://api.github.com/users/CreamyCookie/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2017-05-11T14:28:37Z","updated_at":"2017-06-25T11:36:18Z","closed_at":"2017-06-25T11:36:18Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4740","html_url":"https://github.com/libgdx/libgdx/pull/4740","diff_url":"https://github.com/libgdx/libgdx/pull/4740.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4740.patch"},"body":"The `clamp` isn't required here, because `a` is expected to be in `[0, 1]` for all `Interpolation` objects anyway. For example, `Interpolation.linear.apply(3)` would return `3` not `1`.\r\n\r\nKen Perlin [clamped only a version](https://en.wikipedia.org/wiki/Smoothstep#Variations) where you interpolate between an `edge0` and `edge1` argument","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4740/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4739","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4739/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4739/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4739/events","html_url":"https://github.com/libgdx/libgdx/issues/4739","id":227922959,"number":4739,"title":"Input.Keys class is missing PrintScreen button/key code","user":{"login":"JFixby","id":1580663,"avatar_url":"https://avatars0.githubusercontent.com/u/1580663?v=4","gravatar_id":"","url":"https://api.github.com/users/JFixby","html_url":"https://github.com/JFixby","followers_url":"https://api.github.com/users/JFixby/followers","following_url":"https://api.github.com/users/JFixby/following{/other_user}","gists_url":"https://api.github.com/users/JFixby/gists{/gist_id}","starred_url":"https://api.github.com/users/JFixby/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JFixby/subscriptions","organizations_url":"https://api.github.com/users/JFixby/orgs","repos_url":"https://api.github.com/users/JFixby/repos","events_url":"https://api.github.com/users/JFixby/events{/privacy}","received_events_url":"https://api.github.com/users/JFixby/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2017-05-11T08:59:21Z","updated_at":"2017-05-11T08:59:21Z","closed_at":null,"author_association":"CONTRIBUTOR","body":"#### Issue details\r\nSee https://github.com/libgdx/libgdx/blob/master/gdx/src/com/badlogic/gdx/Input.java\r\n\r\nPushing PrintScreen on a keyboard produces keyCode = 0\r\n\r\n#### Please select the affected platforms\r\n- [x] Desktop\r\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4739/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4738","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4738/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4738/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4738/events","html_url":"https://github.com/libgdx/libgdx/issues/4738","id":227847165,"number":4738,"title":"Inaccurate Collisions when using Bullet.obtainStaticNodeShape()","user":{"login":"iMackshun","id":16765921,"avatar_url":"https://avatars3.githubusercontent.com/u/16765921?v=4","gravatar_id":"","url":"https://api.github.com/users/iMackshun","html_url":"https://github.com/iMackshun","followers_url":"https://api.github.com/users/iMackshun/followers","following_url":"https://api.github.com/users/iMackshun/following{/other_user}","gists_url":"https://api.github.com/users/iMackshun/gists{/gist_id}","starred_url":"https://api.github.com/users/iMackshun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/iMackshun/subscriptions","organizations_url":"https://api.github.com/users/iMackshun/orgs","repos_url":"https://api.github.com/users/iMackshun/repos","events_url":"https://api.github.com/users/iMackshun/events{/privacy}","received_events_url":"https://api.github.com/users/iMackshun/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2017-05-11T00:32:54Z","updated_at":"2017-05-11T02:26:55Z","closed_at":"2017-05-11T02:26:55Z","author_association":"NONE","body":"Ok, so I've recently been trying to create collision shapes using models that I've exported from Blender. I am using the Bullet Physics engine and libGDX 1.9.2. Whenever I run this test with a collision shape that is created as a btBoxShape, everything works as it should. Whenever I use the Bullet.obtainStaticNodeShape() with the nodes of my model, which is a cube, I can see that the shape is generated properly through the Debug Drawer. The physics of the object only seem to work in a small area located in the center of the shape, everywhere else, objects simply fall through. The model is Blender's default cube with a scale of 24 on the X and Y axes, and a scale of 0.3 on the Z axis. I export as a fbx with a scale of .01 and -Z being Forward and Y Being Up in the export settings. I then use fbx-conv to generate a .g3db file.\r\n\r\nHere is the class for the simple test that I've created that shows the issue.\r\n\r\n```\r\npackage com.imackshun.tests.customcollisionshape;\r\n\r\nimport com.badlogic.gdx.ApplicationAdapter;\r\nimport com.badlogic.gdx.Gdx;\r\nimport com.badlogic.gdx.graphics.GL20;\r\nimport com.badlogic.gdx.graphics.PerspectiveCamera;\r\nimport com.badlogic.gdx.graphics.g3d.Model;\r\nimport com.badlogic.gdx.graphics.g3d.loader.G3dModelLoader;\r\nimport com.badlogic.gdx.graphics.g3d.utils.CameraInputController;\r\nimport com.badlogic.gdx.math.Vector3;\r\nimport com.badlogic.gdx.physics.bullet.Bullet;\r\nimport com.badlogic.gdx.physics.bullet.DebugDrawer;\r\nimport com.badlogic.gdx.physics.bullet.collision.btBoxShape;\r\nimport com.badlogic.gdx.physics.bullet.collision.btBroadphaseInterface;\r\nimport com.badlogic.gdx.physics.bullet.collision.btCollisionConfiguration;\r\nimport com.badlogic.gdx.physics.bullet.collision.btCollisionDispatcher;\r\nimport com.badlogic.gdx.physics.bullet.collision.btCollisionObject;\r\nimport com.badlogic.gdx.physics.bullet.collision.btCollisionShape;\r\nimport com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase;\r\nimport com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConfiguration;\r\nimport com.badlogic.gdx.physics.bullet.collision.btDispatcher;\r\nimport com.badlogic.gdx.physics.bullet.dynamics.btConstraintSolver;\r\nimport com.badlogic.gdx.physics.bullet.dynamics.btDiscreteDynamicsWorld;\r\nimport com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld;\r\nimport com.badlogic.gdx.physics.bullet.dynamics.btSequentialImpulseConstraintSolver;\r\nimport com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw;\r\nimport com.badlogic.gdx.utils.UBJsonReader;\r\n\r\npublic class CustomCollisionShape extends ApplicationAdapter {\r\n\tpublic PerspectiveCamera cam;\r\n\t// For the ground collision... The player shouldn't fall through the ground.\r\n\tprivate btCollisionShape groundShape;\r\n\tprivate btCollisionObject groundCollision;\r\n\tprivate Model collisionModel;\r\n\t//Objects to fall\r\n\tprivate btCollisionShape boxShape;\r\n\tprivate Object boxCollision1;\r\n\tprivate Object boxCollision2;\r\n\tprivate Object boxCollision3;\r\n\tprivate Object boxCollision4;\r\n\tprivate Object boxCollision5;\r\n\t// Used for collisions.\r\n\tprivate btCollisionConfiguration collisionConfig;\r\n\tprivate btDispatcher dispatcher;\r\n\tprivate btBroadphaseInterface broadphase;\r\n\tprivate btDynamicsWorld dynamicsWorld;\r\n\tprivate btConstraintSolver constraintSolver;\r\n\tprivate DebugDrawer debugDrawer;\r\n\t//For controlling the camera.\r\n\tpublic CameraInputController camController;\r\n\t@Override\r\n\tpublic void create() {\r\n\t\t//Initialize the camera...\r\n\t\tcam = new PerspectiveCamera(67, Gdx.graphics.getWidth(), Gdx.graphics.getHeight());\r\n\t\tcam.position.set(0f, 25f, 30f);\r\n\t\tcam.lookAt(0, 0, 0);\r\n\t\tcam.near = 1f;\r\n\t\tcam.far = 300f;\r\n\t\tcam.update();\r\n\t\t//Camera controller.\r\n\t\tcamController = new CameraInputController(cam);\r\n        Gdx.input.setInputProcessor(camController);\r\n\t\t// Initialize the physics engine!\r\n\t\tBullet.init();\r\n\t\t//Physics Stuff\r\n\t\tcollisionConfig = new btDefaultCollisionConfiguration();\r\n\t\tdispatcher = new btCollisionDispatcher(collisionConfig);\r\n\t\tbroadphase = new btDbvtBroadphase();\r\n\t\tconstraintSolver = new btSequentialImpulseConstraintSolver();\r\n\t\tdynamicsWorld = new btDiscreteDynamicsWorld(dispatcher, broadphase, constraintSolver, collisionConfig);\r\n\t\tdynamicsWorld.setGravity(new Vector3(0, -30f, 0));\r\n\t\tdebugDrawer = new DebugDrawer();\r\n\t\tdebugDrawer.setDebugMode(btIDebugDraw.DebugDrawModes.DBG_MAX_DEBUG_DRAW_MODE);\r\n\t\tdynamicsWorld.setDebugDrawer(debugDrawer);\r\n\t\t//Load the model.\r\n        UBJsonReader jsonReader = new UBJsonReader();\r\n        G3dModelLoader modelLoader = new G3dModelLoader(jsonReader);\r\n        //collisionModel = modelLoader.loadModel(Gdx.files.internal(\"ArenaCollisionCube.g3db\"));\r\n        //This works just fine.\r\n        groundShape = new btBoxShape(new Vector3(20f, 1f, 20f));\r\n        //This is inaccurate everywhere but the center.\r\n\t\t//groundShape = Bullet.obtainStaticNodeShape(collisionModel.nodes);\r\n\t\tgroundCollision = new btCollisionObject();\r\n\t\tgroundCollision.setCollisionShape(groundShape);\r\n\t\tgroundCollision.setUserValue(0);\r\n\t\tgroundCollision.setCollisionFlags(groundCollision.getCollisionFlags() | btCollisionObject.CollisionFlags.CF_CUSTOM_MATERIAL_CALLBACK);\r\n\t\tdynamicsWorld.addCollisionObject(groundCollision);\r\n\t\t//Boxes\r\n\t\tboxShape = new btBoxShape(new Vector3(2f, 2f, 2f));\r\n\t\t// Initialize the Rigidbodies.\r\n\t\tboxCollision1 = new Object(new Vector3(0f, 10f, 0f), boxShape, dynamicsWorld, 1);\r\n\t\tboxCollision2 = new Object(new Vector3(-18f, 10f, 0f), boxShape, dynamicsWorld, 2);\r\n\t\tboxCollision3 = new Object(new Vector3(18f, 10f, 0f), boxShape, dynamicsWorld, 3);\r\n\t\tboxCollision4 = new Object(new Vector3(0f, 10f, -18f), boxShape, dynamicsWorld, 4);\r\n\t\tboxCollision5 = new Object(new Vector3(0f, 10f, 18f), boxShape, dynamicsWorld, 5);\r\n\t}\r\n\r\n\t@Override\r\n\tpublic void render() {\r\n\t\tGdx.gl.glViewport(0, 0, Gdx.graphics.getWidth(), Gdx.graphics.getHeight());\r\n\t\tGdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT | GL20.GL_DEPTH_BUFFER_BIT);\r\n\t\t//Update the camera controller!\r\n        camController.update();\r\n\t\t// Update the physics engine!\r\n\t\tfinal float delta2 = Math.min(1f / 30f, Gdx.graphics.getDeltaTime());\r\n\t\tdynamicsWorld.stepSimulation(delta2, 5, 1f / 60f);\r\n\t\t// Physics debugging.\r\n\t\tdebugDrawer.begin(cam);\r\n\t\tdynamicsWorld.debugDrawWorld();\r\n\t\tdebugDrawer.end();\r\n\t}\r\n}\r\n```\r\n\r\nHere is the Object.class file. Just to make it easier to create the rigidbodies.\r\n\r\n```\r\npackage com.imackshun.tests.customcollisionshape;\r\n\r\nimport com.badlogic.gdx.math.Vector3;\r\nimport com.badlogic.gdx.physics.bullet.collision.btCollisionObject;\r\nimport com.badlogic.gdx.physics.bullet.collision.btCollisionShape;\r\nimport com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld;\r\nimport com.badlogic.gdx.physics.bullet.dynamics.btRigidBody;\r\n\r\npublic class Object {\r\n\tprivate float Mass;\r\n\t// The actual collision objects...\r\n\tpublic btRigidBody rbody;\r\n\t// Used to construct a rigidbody.\r\n\tpublic btRigidBody.btRigidBodyConstructionInfo constructionInfo;\r\n\t// Uh...Hmmm. IDK lol? Takes in mass... Like...Resistance?\r\n\tprivate static Vector3 localInertia = new Vector3();\r\n\r\n\t// Constructor\r\n\tpublic Object(Vector3 Position, btCollisionShape CollisionShape, btDynamicsWorld dynamicsWorld, int userValue) {\r\n\t\tMass = 10;\r\n\t\tif (Mass > 0f) {\r\n\t\t\tCollisionShape.calculateLocalInertia(Mass, localInertia);\r\n\t\t} else {\r\n\t\t\tlocalInertia.set(0, 0, 0);\r\n\t\t}\r\n\t\tthis.constructionInfo = new btRigidBody.btRigidBodyConstructionInfo(Mass, null, CollisionShape, localInertia);\r\n\t\tconstructionInfo.setFriction(10f);\r\n\t\trbody = new btRigidBody(constructionInfo);\r\n\t\trbody.setCollisionShape(CollisionShape);\r\n\t\trbody.setLinearFactor(new Vector3(1f, 1f, 0f));\r\n\t\trbody.setUserValue(userValue);\r\n\t\t// Determines how this object ineracts with other objects.\r\n\t\trbody.setCollisionFlags(rbody.getCollisionFlags() | btCollisionObject.CollisionFlags.CF_CUSTOM_MATERIAL_CALLBACK);\r\n\t\t// Add the collision objects to za warudo.\r\n\t\trbody.translate(new Vector3(Position.x, Position.y, Position.z));\r\n\t\tdynamicsWorld.addRigidBody(rbody);\r\n\t}\r\n}\r\n```\r\n\r\nHere is a link to the exact model that I am using.\r\n\r\nhttps://www.dropbox.com/s/696dk3gk2etge4t/ArenaCollisionCube.blend?dl=0\r\n\r\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4738/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4737","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4737/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4737/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4737/events","html_url":"https://github.com/libgdx/libgdx/pull/4737","id":227683172,"number":4737,"title":"Fix bug with recreate window in lwjgl3 integration","user":{"login":"nocotom","id":4118364,"avatar_url":"https://avatars1.githubusercontent.com/u/4118364?v=4","gravatar_id":"","url":"https://api.github.com/users/nocotom","html_url":"https://github.com/nocotom","followers_url":"https://api.github.com/users/nocotom/followers","following_url":"https://api.github.com/users/nocotom/following{/other_user}","gists_url":"https://api.github.com/users/nocotom/gists{/gist_id}","starred_url":"https://api.github.com/users/nocotom/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nocotom/subscriptions","organizations_url":"https://api.github.com/users/nocotom/orgs","repos_url":"https://api.github.com/users/nocotom/repos","events_url":"https://api.github.com/users/nocotom/events{/privacy}","received_events_url":"https://api.github.com/users/nocotom/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2017-05-10T13:39:01Z","updated_at":"2017-06-17T09:30:34Z","closed_at":"2017-06-17T09:30:34Z","author_association":"NONE","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4737","html_url":"https://github.com/libgdx/libgdx/pull/4737","diff_url":"https://github.com/libgdx/libgdx/pull/4737.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4737.patch"},"body":"I noticed a fatal error during recreate window (second `Lwjgl3Application` instantiation in the same process). \r\n\r\nBug reproduction:\r\n```java\r\nScanner reader = new Scanner(System.in);\r\nLwjgl3ApplicationConfiguration conf = new Lwjgl3ApplicationConfiguration();\r\nThread t = new Thread(() -> new Lwjgl3Application(new AppListener(),  conf));\r\nt.start();\r\nreader.nextLine();  // press enter\r\nGdx.app.exit();\r\nt.join();\r\nreader.nextLine(); // press enter\r\nt = new Thread(() -> new Lwjgl3Application(new AppListener(),  conf));\r\nt.start();\r\nreader.nextLine(); // press enter\r\nGdx.app.exit();\r\n```\r\n\r\nError description:\r\n```\r\n#\r\n# A fatal error has been detected by the Java Runtime Environment:\r\n#\r\n#  EXCEPTION_ACCESS_VIOLATION (0xc0000005) at pc=0x000000001ca50000, pid=18440, tid=0x00000000000076b4\r\n#\r\n# JRE version: Java(TM) SE Runtime Environment (8.0_111-b14) (build 1.8.0_111-b14)\r\n# Java VM: Java HotSpot(TM) 64-Bit Server VM (25.111-b14 mixed mode windows-amd64 compressed oops)\r\n# Problematic frame:\r\n# C  0x000000001ca50000\r\n#\r\n# Failed to write core dump. Minidumps are not enabled by default on client versions of Windows\r\n#\r\n# An error report file with more information is saved as:\r\n# C:\\Development\\karaf\\hs_err_pid18440.log\r\nCompiled method (nm)  194567 7362     n 0       org.lwjgl.system.JNI::invokeV (native)\r\n total in heap  [0x0000000002c99510,0x0000000002c99870] = 864\r\n relocation     [0x0000000002c99630,0x0000000002c99678] = 72\r\n main code      [0x0000000002c99680,0x0000000002c99868] = 488\r\n oops           [0x0000000002c99868,0x0000000002c99870] = 8\r\n#\r\n# If you would like to submit a bug report, please visit:\r\n#   http://bugreport.java.com/bugreport/crash.jsp\r\n# The crash happened outside the Java Virtual Machine in native code.\r\n# See problematic frame for where to report the bug.\r\n#\r\nAL lib: (EE) alc_cleanup: 1 device not closed\r\n```\r\n\r\nCause:\r\nThere are static fields in the `Lwjgl3Application` class that are not set to null when it is disposing.  Therefore, during second instationation, the static method `GLFW.glfwInit()` is not called (the `GLFW` libraray is not loaded).","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4737/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4736","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4736/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4736/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4736/events","html_url":"https://github.com/libgdx/libgdx/pull/4736","id":227544349,"number":4736,"title":"Fix Ellipse docs","user":{"login":"cypherdare","id":1843131,"avatar_url":"https://avatars2.githubusercontent.com/u/1843131?v=4","gravatar_id":"","url":"https://api.github.com/users/cypherdare","html_url":"https://github.com/cypherdare","followers_url":"https://api.github.com/users/cypherdare/followers","following_url":"https://api.github.com/users/cypherdare/following{/other_user}","gists_url":"https://api.github.com/users/cypherdare/gists{/gist_id}","starred_url":"https://api.github.com/users/cypherdare/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cypherdare/subscriptions","organizations_url":"https://api.github.com/users/cypherdare/orgs","repos_url":"https://api.github.com/users/cypherdare/repos","events_url":"https://api.github.com/users/cypherdare/events{/privacy}","received_events_url":"https://api.github.com/users/cypherdare/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2017-05-10T01:39:40Z","updated_at":"2017-05-10T17:28:23Z","closed_at":"2017-05-10T05:28:27Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4736","html_url":"https://github.com/libgdx/libgdx/pull/4736","diff_url":"https://github.com/libgdx/libgdx/pull/4736.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4736.patch"},"body":"Minor nitpick, but the units should be considered arbitrary. World size is confusing enough as it is for newcomers.","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4736/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4735","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4735/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4735/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4735/events","html_url":"https://github.com/libgdx/libgdx/pull/4735","id":227538813,"number":4735,"title":"Fix WindowedMean, part 2","user":{"login":"cypherdare","id":1843131,"avatar_url":"https://avatars2.githubusercontent.com/u/1843131?v=4","gravatar_id":"","url":"https://api.github.com/users/cypherdare","html_url":"https://github.com/cypherdare","followers_url":"https://api.github.com/users/cypherdare/followers","following_url":"https://api.github.com/users/cypherdare/following{/other_user}","gists_url":"https://api.github.com/users/cypherdare/gists{/gist_id}","starred_url":"https://api.github.com/users/cypherdare/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cypherdare/subscriptions","organizations_url":"https://api.github.com/users/cypherdare/orgs","repos_url":"https://api.github.com/users/cypherdare/repos","events_url":"https://api.github.com/users/cypherdare/events{/privacy}","received_events_url":"https://api.github.com/users/cypherdare/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2017-05-10T00:55:26Z","updated_at":"2017-06-25T11:38:18Z","closed_at":"2017-06-25T11:38:18Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4735","html_url":"https://github.com/libgdx/libgdx/pull/4735","diff_url":"https://github.com/libgdx/libgdx/pull/4735.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4735.patch"},"body":"Oops, `WindowedMean.getOldest()` is still wrong in some cases. I blame the field name for confusion. :) This fixes it for all cases.\r\n\r\nSimple test to prove it:\r\n>     WindowedMean wm = new WindowedMean(5);\r\n>     for (int i=0; i<50; i++){\r\n>         float newValue = MathUtils.random();\r\n>         wm.addValue(newValue);\r\n>         System.out.println(String.format(\"Added new value %f. Oldest: %f. Latest: %f.\",\r\n>                newValue, wm.getOldest(), wm.getLatest()));\r\n>     }","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4735/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4734","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4734/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4734/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4734/events","html_url":"https://github.com/libgdx/libgdx/pull/4734","id":227480950,"number":4734,"title":"Fix issue with ambient cubemap out of bounds","user":{"login":"amcolash","id":8282413,"avatar_url":"https://avatars0.githubusercontent.com/u/8282413?v=4","gravatar_id":"","url":"https://api.github.com/users/amcolash","html_url":"https://github.com/amcolash","followers_url":"https://api.github.com/users/amcolash/followers","following_url":"https://api.github.com/users/amcolash/following{/other_user}","gists_url":"https://api.github.com/users/amcolash/gists{/gist_id}","starred_url":"https://api.github.com/users/amcolash/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/amcolash/subscriptions","organizations_url":"https://api.github.com/users/amcolash/orgs","repos_url":"https://api.github.com/users/amcolash/repos","events_url":"https://api.github.com/users/amcolash/events{/privacy}","received_events_url":"https://api.github.com/users/amcolash/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2017-05-09T20:02:21Z","updated_at":"2017-05-14T18:23:46Z","closed_at":"2017-05-09T20:24:39Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4734","html_url":"https://github.com/libgdx/libgdx/pull/4734","diff_url":"https://github.com/libgdx/libgdx/pull/4734.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4734.patch"},"body":"I was running into an issue where sometimes on some versions of android (6.0) there was a crash with the ambient cube map. This issue has been mentioned by the community and looks like it might be an issue with pro guarding the file `AmbientCubemap.java`. I have patched the file and it looks like the crashes have gone away for me.\r\n\r\nSince the cube map needs to always be sized with 18 elements anyways, I made a constant for the size as well.\r\n\r\nNo changes have been made to the actual functionality of the CubeMaps.\r\n\r\nLibgdx forum [discussion](http://www.badlogicgames.com/forum/viewtopic.php?t=23411)\r\n\r\nSample Stack Trace:\r\n`java.lang.ArrayIndexOutOfBoundsException: length=18; index=18 at com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap.set(AmbientCubemap.java:60) at com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap.set(AmbientCubemap.java:55) at com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$ACubemap.set(DefaultShader.java:357) at com.badlogic.gdx.graphics.g3d.shaders.BaseShader.render(BaseShader.java:237) at com.badlogic.gdx.graphics.g3d.shaders.DefaultShader.render(DefaultShader.java:761) at com.badlogic.gdx.graphics.g3d.shaders.BaseShader.render(BaseShader.java:232) at com.perblue.voxelgo.g3d.VGOShader3D.render(VGOShader3D.java:130) at com.badlogic.gdx.graphics.g3d.ModelBatch.flush(ModelBatch.java:206) at com.badlogic.gdx.graphics.g3d.ModelBatch.end(ModelBatch.java:217) at com.perblue.voxelgo.g3d.RepresentationManager.render(RepresentationManager.java:341) at com.perblue.voxelgo.go_ui.screens.BaseSceneScreen.render(BaseSceneScreen.java:65)`\r\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4734/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4733","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4733/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4733/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4733/events","html_url":"https://github.com/libgdx/libgdx/issues/4733","id":227117421,"number":4733,"title":"html libgdx load the game twice ?","user":{"login":"alaaodeh95","id":17199877,"avatar_url":"https://avatars1.githubusercontent.com/u/17199877?v=4","gravatar_id":"","url":"https://api.github.com/users/alaaodeh95","html_url":"https://github.com/alaaodeh95","followers_url":"https://api.github.com/users/alaaodeh95/followers","following_url":"https://api.github.com/users/alaaodeh95/following{/other_user}","gists_url":"https://api.github.com/users/alaaodeh95/gists{/gist_id}","starred_url":"https://api.github.com/users/alaaodeh95/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alaaodeh95/subscriptions","organizations_url":"https://api.github.com/users/alaaodeh95/orgs","repos_url":"https://api.github.com/users/alaaodeh95/repos","events_url":"https://api.github.com/users/alaaodeh95/events{/privacy}","received_events_url":"https://api.github.com/users/alaaodeh95/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2017-05-08T17:31:00Z","updated_at":"2017-05-12T11:05:49Z","closed_at":"2017-05-12T11:05:49Z","author_association":"NONE","body":"Hello \r\ni just deployed my libgdx project into html5 ,working perfect\r\nits loaded into this\r\n`<div  id=\"embed-html\"></div>\r\n`what i want is to load the game twice ,,not just one time\r\ni need this too much \r\nanyway to fix this ?\r\ni cant access any thing about \"embed-html\"\r\ncan i access the game with another div with another id\r\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4733/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4732","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4732/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4732/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4732/events","html_url":"https://github.com/libgdx/libgdx/issues/4732","id":226669814,"number":4732,"title":"[Feature request]Multiple textures of the same usage in gdx.graphics.g3d.Model","user":{"login":"Daedronus","id":28395455,"avatar_url":"https://avatars2.githubusercontent.com/u/28395455?v=4","gravatar_id":"","url":"https://api.github.com/users/Daedronus","html_url":"https://github.com/Daedronus","followers_url":"https://api.github.com/users/Daedronus/followers","following_url":"https://api.github.com/users/Daedronus/following{/other_user}","gists_url":"https://api.github.com/users/Daedronus/gists{/gist_id}","starred_url":"https://api.github.com/users/Daedronus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Daedronus/subscriptions","organizations_url":"https://api.github.com/users/Daedronus/orgs","repos_url":"https://api.github.com/users/Daedronus/repos","events_url":"https://api.github.com/users/Daedronus/events{/privacy}","received_events_url":"https://api.github.com/users/Daedronus/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2017-05-05T19:29:55Z","updated_at":"2017-05-09T21:33:59Z","closed_at":null,"author_association":"NONE","body":"It would be nice if we could have more then one texture of a specific usage, something like:\r\nTextureAttribute.Diffuse\r\nTextureAttribute.Diffuse1\r\nTextureAttribute.Diffuse2\r\n...etc....\r\nsimilar to how UV maps are handled.\r\n\r\nIt's kinda wird to export a baked light map from blender as things are right now.\r\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4732/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4731","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4731/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4731/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4731/events","html_url":"https://github.com/libgdx/libgdx/issues/4731","id":226469346,"number":4731,"title":"[Feature request] Music methods","user":{"login":"w0615","id":28076720,"avatar_url":"https://avatars1.githubusercontent.com/u/28076720?v=4","gravatar_id":"","url":"https://api.github.com/users/w0615","html_url":"https://github.com/w0615","followers_url":"https://api.github.com/users/w0615/followers","following_url":"https://api.github.com/users/w0615/following{/other_user}","gists_url":"https://api.github.com/users/w0615/gists{/gist_id}","starred_url":"https://api.github.com/users/w0615/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/w0615/subscriptions","organizations_url":"https://api.github.com/users/w0615/orgs","repos_url":"https://api.github.com/users/w0615/repos","events_url":"https://api.github.com/users/w0615/events{/privacy}","received_events_url":"https://api.github.com/users/w0615/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2017-05-05T04:14:43Z","updated_at":"2017-07-16T13:46:34Z","closed_at":null,"author_association":"NONE","body":"Hello.\r\nI am not sure if this is a correct way to post someting like this but i seen that some other people makes posts like this.\r\n\r\nMy feature request is about looping a music file\r\ni know that there is a Music.setLooping(boolean) method but i think that something like that could be useful\r\n\r\nMusic.setLooping(float startTime, float endTimePosition);\r\nin the firts time music will end at endTime then will loop frem startTimePosition to endTimePosition\r\n\r\nMusic.setLooping(int times)\r\nMusic will loop <times> number of times\r\n\r\nMusic..setEnd(float position)\r\nif Looping = false music will end at position\r\n\r\nbefore using libgdx i was using directx xaudio2 and i really miss this features\r\nThanks a lot libgdx team, for bring us this awesome framework.\r\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4731/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4730","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4730/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4730/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4730/events","html_url":"https://github.com/libgdx/libgdx/issues/4730","id":226368479,"number":4730,"title":"It turns out that there is no possibility to determine the visibility of the wallpaper or to recognize an event the device enters sleep mode?","user":{"login":"angorow","id":28403900,"avatar_url":"https://avatars0.githubusercontent.com/u/28403900?v=4","gravatar_id":"","url":"https://api.github.com/users/angorow","html_url":"https://github.com/angorow","followers_url":"https://api.github.com/users/angorow/followers","following_url":"https://api.github.com/users/angorow/following{/other_user}","gists_url":"https://api.github.com/users/angorow/gists{/gist_id}","starred_url":"https://api.github.com/users/angorow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/angorow/subscriptions","organizations_url":"https://api.github.com/users/angorow/orgs","repos_url":"https://api.github.com/users/angorow/repos","events_url":"https://api.github.com/users/angorow/events{/privacy}","received_events_url":"https://api.github.com/users/angorow/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2017-05-04T18:26:41Z","updated_at":"2017-05-08T21:42:19Z","closed_at":"2017-05-08T21:42:19Z","author_association":"NONE","body":"Do not understand the behavior. AndroidWallpaperEngine.onVisibilityChanged (final boolean visible) invoked only when connected to a PC tablet?\r\n\r\nIt turns out that there is no possibility to determine the visibility of the wallpaper or to recognize an event the device enters sleep mode?\r\n\r\nThere is at least one real example how to achieve this?\r\n\r\n#### Issue details\r\nHave a LWP implemented on the basis of libGdx, respectively, there is a need to track the visibility of the wallpaper. Everything works fine until the test device is connected via USB to the PC with this IDE is not running. When you disconnect from the PC ceases to be called AndroidWallpaperEngine.onVisibilityChanged (final boolean visible).\r\n\r\n#### Version of LibGDX and/or relevant dependencies\r\n1.9.x\r\n\r\n#### Please select the affected platforms\r\n+[ ] Android","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4730/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}}],"meta":{"x-ratelimit-limit":"5000","x-ratelimit-remaining":"4994","x-ratelimit-reset":"1506844633","x-github-request-id":"91D8:1108:851820:12BFD71:59D0920C","x-github-media-type":"github.squirrel-girl-preview","link":"<https://api.github.com/repositories/5373551/issues?state=all&page=7>; rel=\"next\", <https://api.github.com/repositories/5373551/issues?state=all&page=164>; rel=\"last\", <https://api.github.com/repositories/5373551/issues?state=all&page=1>; rel=\"first\", <https://api.github.com/repositories/5373551/issues?state=all&page=5>; rel=\"prev\"","etag":"\"392b08b6e07d612bbbcad8fffe87ce2a\"","status":"200 OK"}}
