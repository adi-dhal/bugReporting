{"data":[{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1635","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1635/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1635/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1635/events","html_url":"https://github.com/libgdx/libgdx/issues/1635","id":30913667,"number":1635,"title":"Polygons collision miscalculated","user":{"login":"carloshenrique153","id":4680595,"avatar_url":"https://avatars1.githubusercontent.com/u/4680595?v=4","gravatar_id":"","url":"https://api.github.com/users/carloshenrique153","html_url":"https://github.com/carloshenrique153","followers_url":"https://api.github.com/users/carloshenrique153/followers","following_url":"https://api.github.com/users/carloshenrique153/following{/other_user}","gists_url":"https://api.github.com/users/carloshenrique153/gists{/gist_id}","starred_url":"https://api.github.com/users/carloshenrique153/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/carloshenrique153/subscriptions","organizations_url":"https://api.github.com/users/carloshenrique153/orgs","repos_url":"https://api.github.com/users/carloshenrique153/repos","events_url":"https://api.github.com/users/carloshenrique153/events{/privacy}","received_events_url":"https://api.github.com/users/carloshenrique153/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-04-05T11:25:14Z","updated_at":"2014-04-05T11:39:03Z","closed_at":"2014-04-05T11:39:03Z","author_association":"NONE","body":"These 2 polygons are not overlapping, though this returns true:\n\n```\n    Intersector.overlapConvexPolygons(\n            new float[]{100.0f, 750.0f, 200.0f, 750.0f, 100.0f, 150.0f, 200.0f, 150.0f},\n            new float[]{77.0f, 695.0f, 91.0f, 695.0f, 84.0f, 681.0f},\n            null);\n```\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1635/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1634","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1634/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1634/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1634/events","html_url":"https://github.com/libgdx/libgdx/pull/1634","id":30906635,"number":1634,"title":"implement support for iOS software keyboard","user":{"login":"jrenner","id":1393288,"avatar_url":"https://avatars1.githubusercontent.com/u/1393288?v=4","gravatar_id":"","url":"https://api.github.com/users/jrenner","html_url":"https://github.com/jrenner","followers_url":"https://api.github.com/users/jrenner/followers","following_url":"https://api.github.com/users/jrenner/following{/other_user}","gists_url":"https://api.github.com/users/jrenner/gists{/gist_id}","starred_url":"https://api.github.com/users/jrenner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jrenner/subscriptions","organizations_url":"https://api.github.com/users/jrenner/orgs","repos_url":"https://api.github.com/users/jrenner/repos","events_url":"https://api.github.com/users/jrenner/events{/privacy}","received_events_url":"https://api.github.com/users/jrenner/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2014-04-05T02:03:56Z","updated_at":"2014-06-20T12:14:01Z","closed_at":"2014-04-05T16:15:13Z","author_association":"OWNER","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/1634","html_url":"https://github.com/libgdx/libgdx/pull/1634","diff_url":"https://github.com/libgdx/libgdx/pull/1634.diff","patch_url":"https://github.com/libgdx/libgdx/pull/1634.patch"},"body":"","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1634/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1633","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1633/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1633/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1633/events","html_url":"https://github.com/libgdx/libgdx/issues/1633","id":30888002,"number":1633,"title":"GWT doesn't respect gdx.assetoutputpath","user":{"login":"DanielCloudCredo","id":5970158,"avatar_url":"https://avatars0.githubusercontent.com/u/5970158?v=4","gravatar_id":"","url":"https://api.github.com/users/DanielCloudCredo","html_url":"https://github.com/DanielCloudCredo","followers_url":"https://api.github.com/users/DanielCloudCredo/followers","following_url":"https://api.github.com/users/DanielCloudCredo/following{/other_user}","gists_url":"https://api.github.com/users/DanielCloudCredo/gists{/gist_id}","starred_url":"https://api.github.com/users/DanielCloudCredo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DanielCloudCredo/subscriptions","organizations_url":"https://api.github.com/users/DanielCloudCredo/orgs","repos_url":"https://api.github.com/users/DanielCloudCredo/repos","events_url":"https://api.github.com/users/DanielCloudCredo/events{/privacy}","received_events_url":"https://api.github.com/users/DanielCloudCredo/received_events","type":"User","site_admin":false},"labels":[{"id":11336980,"url":"https://api.github.com/repos/libgdx/libgdx/labels/bug","name":"bug","color":"fc2929","default":true},{"id":67383148,"url":"https://api.github.com/repos/libgdx/libgdx/labels/gwt","name":"gwt","color":"5319e7","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2014-04-04T19:33:09Z","updated_at":"2014-06-28T21:23:25Z","closed_at":"2014-06-28T21:23:25Z","author_association":"NONE","body":"Settings `gdx.assetoutputpath` doesn't seem to have any effect - assets end up in in `war/` instead.\n\nMaven output snippet:\n\n```\nINFO] --- gwt-maven-plugin:2.6.0:compile (default) @ f2pmsoppa-libgdx-html ---\n[INFO] Compiling module com.binarytweed.F2pMsoPpa\n[INFO] /Users/danieljones/git/f2pmsoppa-libgdx/html/.\n[INFO] assets\n[INFO] Copying resources from assets to war/\n```\n\nGWT XML snippet:\n\n```\n...\n\n    <set-configuration-property name=\"gdx.assetpath\" value=\"assets\" />\n    <set-configuration-property name=\"gdx.assetoutputpath\" value=\"foo\" />\n...\n```\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1633/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1632","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1632/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1632/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1632/events","html_url":"https://github.com/libgdx/libgdx/issues/1632","id":30879244,"number":1632,"title":"LwjglFileHandle.parent() acts differently than the GWT equivalent","user":{"login":"spiderpug","id":2295856,"avatar_url":"https://avatars0.githubusercontent.com/u/2295856?v=4","gravatar_id":"","url":"https://api.github.com/users/spiderpug","html_url":"https://github.com/spiderpug","followers_url":"https://api.github.com/users/spiderpug/followers","following_url":"https://api.github.com/users/spiderpug/following{/other_user}","gists_url":"https://api.github.com/users/spiderpug/gists{/gist_id}","starred_url":"https://api.github.com/users/spiderpug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/spiderpug/subscriptions","organizations_url":"https://api.github.com/users/spiderpug/orgs","repos_url":"https://api.github.com/users/spiderpug/repos","events_url":"https://api.github.com/users/spiderpug/events{/privacy}","received_events_url":"https://api.github.com/users/spiderpug/received_events","type":"User","site_admin":false},"labels":[{"id":11336980,"url":"https://api.github.com/repos/libgdx/libgdx/labels/bug","name":"bug","color":"fc2929","default":true},{"id":67383148,"url":"https://api.github.com/repos/libgdx/libgdx/labels/gwt","name":"gwt","color":"5319e7","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2014-04-04T17:30:33Z","updated_at":"2014-05-02T22:51:34Z","closed_at":"2014-05-02T22:51:34Z","author_association":"NONE","body":"Im using the TmxMapLoader to load my maps, that contain relative paths to the tileset.\n\nExample:\n\n`data/maps/level01.tmx`\n\n```\n<tileset firstgid=\"1\" name=\"tiles-1\" tilewidth=\"16\" tileheight=\"16\" spacing=\"2\" margin=\"2\">\n  <image source=\"../tiles/tiles-1.png\" width=\"256\" height=\"32\"/>\n</tileset>\n```\n\nThe `TmxMapLoader.getRelativeFileHandle` method already processes the relative path  correctly, and calls `file.parent()` on `data/maps/level01.tmx`.\nUsing Lwjgl, it correctly returns `data/maps` - but the GwtFileHandle returns `data/maps/`, so it keeps the last dash. Calling `parent()` on the result returns the same directory again, because the `lastIndexOf(\"/\")` still equals the end of the string.\n\nI think the issue is the `index + 1` in [GwtFileHandle#L319](https://github.com/libgdx/libgdx/blob/master/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/GwtFileHandle.java#L319)\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1632/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1631","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1631/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1631/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1631/events","html_url":"https://github.com/libgdx/libgdx/pull/1631","id":30868968,"number":1631,"title":"Fixed overflow","user":{"login":"davebaol","id":2366334,"avatar_url":"https://avatars3.githubusercontent.com/u/2366334?v=4","gravatar_id":"","url":"https://api.github.com/users/davebaol","html_url":"https://github.com/davebaol","followers_url":"https://api.github.com/users/davebaol/followers","following_url":"https://api.github.com/users/davebaol/following{/other_user}","gists_url":"https://api.github.com/users/davebaol/gists{/gist_id}","starred_url":"https://api.github.com/users/davebaol/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davebaol/subscriptions","organizations_url":"https://api.github.com/users/davebaol/orgs","repos_url":"https://api.github.com/users/davebaol/repos","events_url":"https://api.github.com/users/davebaol/events{/privacy}","received_events_url":"https://api.github.com/users/davebaol/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2014-04-04T15:17:05Z","updated_at":"2014-06-20T12:14:02Z","closed_at":"2014-04-06T23:12:43Z","author_association":"MEMBER","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/1631","html_url":"https://github.com/libgdx/libgdx/pull/1631","diff_url":"https://github.com/libgdx/libgdx/pull/1631.diff","patch_url":"https://github.com/libgdx/libgdx/pull/1631.patch"},"body":"If you add more than 2^31 values to the windowed mean you get an overflow and the mean will be 0 for the next 2^31 values you add.\nActually this cannot be considered an issue for the windowed deltaTime between frames because you have to spend more than 1 year to get the overflow (assuming 60 FPS).\nHowever, WindowedMean is a generic math util that you can use for your own stuff making it possible to trigger the overflow.\nTest program:\n\n``` java\npublic class WindowedMeanTest {\n    public static void main(String args[]) {\n        WindowedMean wm = new WindowedMean(5);\n        long t = (1L << 31) - 10;\n        long n = t + 20;\n        for(long i = 0; i < n; i++) {\n            wm.addValue(i%10);\n            if (i > t || i < 10)\n                System.out.println(i+\": \"+wm.getMean());\n        }\n    }\n}\n```\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1631/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1630","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1630/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1630/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1630/events","html_url":"https://github.com/libgdx/libgdx/issues/1630","id":30852648,"number":1630,"title":"ObjLoader doesn't use materials with '.' in names","user":{"login":"Kirrrilka","id":7164122,"avatar_url":"https://avatars1.githubusercontent.com/u/7164122?v=4","gravatar_id":"","url":"https://api.github.com/users/Kirrrilka","html_url":"https://github.com/Kirrrilka","followers_url":"https://api.github.com/users/Kirrrilka/followers","following_url":"https://api.github.com/users/Kirrrilka/following{/other_user}","gists_url":"https://api.github.com/users/Kirrrilka/gists{/gist_id}","starred_url":"https://api.github.com/users/Kirrrilka/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Kirrrilka/subscriptions","organizations_url":"https://api.github.com/users/Kirrrilka/orgs","repos_url":"https://api.github.com/users/Kirrrilka/repos","events_url":"https://api.github.com/users/Kirrrilka/events{/privacy}","received_events_url":"https://api.github.com/users/Kirrrilka/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-04-04T11:28:49Z","updated_at":"2014-04-06T23:12:32Z","closed_at":"2014-04-06T23:12:32Z","author_association":"NONE","body":"I found that MtlLoader changes all '.' symbols in material names with '_'.\n\nBut ObjLoader when use MtlLoader.getMaterial method passes original material names with '.' in it. \nSo materials with '.' is not found in MtlLoader (since dorts where replaced with underscores) and model becomes white.\n\nSee ObjLoader.java\nCommit 724dbf0b5b2783021c6ca1648738987e531fe48f\n\n395 if (tokens.length > 1) {\n396     curMatName = tokens[1];\n397     curMatName = curMatName.replace('.', '_');\n398 } else\n\nBut \n\n197 } else if (tokens[0].equals(\"usemtl\")) {\n198 if (tokens.length == 1)\n199 activeGroup.materialName = \"default\";\n200 else\n201 activeGroup.materialName = tokens[1];\n202}\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1630/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1629","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1629/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1629/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1629/events","html_url":"https://github.com/libgdx/libgdx/pull/1629","id":30842736,"number":1629,"title":"Javadoc minor typos.","user":{"login":"davebaol","id":2366334,"avatar_url":"https://avatars3.githubusercontent.com/u/2366334?v=4","gravatar_id":"","url":"https://api.github.com/users/davebaol","html_url":"https://github.com/davebaol","followers_url":"https://api.github.com/users/davebaol/followers","following_url":"https://api.github.com/users/davebaol/following{/other_user}","gists_url":"https://api.github.com/users/davebaol/gists{/gist_id}","starred_url":"https://api.github.com/users/davebaol/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davebaol/subscriptions","organizations_url":"https://api.github.com/users/davebaol/orgs","repos_url":"https://api.github.com/users/davebaol/repos","events_url":"https://api.github.com/users/davebaol/events{/privacy}","received_events_url":"https://api.github.com/users/davebaol/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-04-04T08:38:32Z","updated_at":"2014-06-20T12:14:02Z","closed_at":"2014-04-04T09:09:36Z","author_association":"MEMBER","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/1629","html_url":"https://github.com/libgdx/libgdx/pull/1629","diff_url":"https://github.com/libgdx/libgdx/pull/1629.diff","patch_url":"https://github.com/libgdx/libgdx/pull/1629.patch"},"body":"","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1629/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1628","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1628/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1628/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1628/events","html_url":"https://github.com/libgdx/libgdx/issues/1628","id":30815715,"number":1628,"title":"AssetManager unload fails for g3db file with two refs to same image","user":{"login":"batesj","id":4131456,"avatar_url":"https://avatars0.githubusercontent.com/u/4131456?v=4","gravatar_id":"","url":"https://api.github.com/users/batesj","html_url":"https://github.com/batesj","followers_url":"https://api.github.com/users/batesj/followers","following_url":"https://api.github.com/users/batesj/following{/other_user}","gists_url":"https://api.github.com/users/batesj/gists{/gist_id}","starred_url":"https://api.github.com/users/batesj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/batesj/subscriptions","organizations_url":"https://api.github.com/users/batesj/orgs","repos_url":"https://api.github.com/users/batesj/repos","events_url":"https://api.github.com/users/batesj/events{/privacy}","received_events_url":"https://api.github.com/users/batesj/received_events","type":"User","site_admin":false},"labels":[{"id":11336980,"url":"https://api.github.com/repos/libgdx/libgdx/labels/bug","name":"bug","color":"fc2929","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2014-04-03T21:30:35Z","updated_at":"2014-05-03T17:44:35Z","closed_at":"2014-05-03T17:44:35Z","author_association":"NONE","body":"I have a g3db file that references the same texture twice. When it's loaded, the AssetManager.injectDependency method gets called twice with the same texture. Both times, the texture is added as a load task. But in the end, the texture has a ref count of only 1 (should be 2).\n\nSo, during unload, the second texture unload throws here in AssetManager.java:161:\n        // get the asset and its type\n        Class type = assetTypes.get(fileName);\n        if (type == null) throw new GdxRuntimeException(\"Asset not loaded: \" + fileName);\n\nShould the duplicate texture reference be handled gracefully and result in loading the texture once with a ref count of 2?\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1628/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1627","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1627/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1627/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1627/events","html_url":"https://github.com/libgdx/libgdx/issues/1627","id":30800565,"number":1627,"title":"TextureData refactoring and mipmap generation","user":{"login":"lordjone","id":6410722,"avatar_url":"https://avatars0.githubusercontent.com/u/6410722?v=4","gravatar_id":"","url":"https://api.github.com/users/lordjone","html_url":"https://github.com/lordjone","followers_url":"https://api.github.com/users/lordjone/followers","following_url":"https://api.github.com/users/lordjone/following{/other_user}","gists_url":"https://api.github.com/users/lordjone/gists{/gist_id}","starred_url":"https://api.github.com/users/lordjone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lordjone/subscriptions","organizations_url":"https://api.github.com/users/lordjone/orgs","repos_url":"https://api.github.com/users/lordjone/repos","events_url":"https://api.github.com/users/lordjone/events{/privacy}","received_events_url":"https://api.github.com/users/lordjone/received_events","type":"User","site_admin":false},"labels":[{"id":11336982,"url":"https://api.github.com/repos/libgdx/libgdx/labels/enhancement","name":"enhancement","color":"84b6eb","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2014-04-03T18:27:52Z","updated_at":"2014-04-09T21:21:27Z","closed_at":"2014-04-09T21:21:27Z","author_association":"CONTRIBUTOR","body":"Issues:\n- It's not possible with the current apis to let the TextureData know which mipmap level\n  should use to upload the buffered image to the texture.\n- Uploading image data to gpu doesn't imply the mipmap generation at all and it's not always possible: for example to generate the mipmap for a cubemap all the images at mipmap 0 have to be set.\n- Pixmap hasn't an empty constructor, subclassing it requires to specify one of the available constructors, which automatically try to load the image in memory which again is not always the case, It should be a bit more flexible probably.  \n\nWhat do you think ? What could be the best way to fix these problems ?\nLet me know cause i'm working on this kind of things (cubemap, reflections, mipmaps etc) and can help :) .\n\nThanks\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1627/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1626","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1626/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1626/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1626/events","html_url":"https://github.com/libgdx/libgdx/pull/1626","id":30771353,"number":1626,"title":"ScrollPane edge listener","user":{"login":"Senth","id":2499370,"avatar_url":"https://avatars1.githubusercontent.com/u/2499370?v=4","gravatar_id":"","url":"https://api.github.com/users/Senth","html_url":"https://github.com/Senth","followers_url":"https://api.github.com/users/Senth/followers","following_url":"https://api.github.com/users/Senth/following{/other_user}","gists_url":"https://api.github.com/users/Senth/gists{/gist_id}","starred_url":"https://api.github.com/users/Senth/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Senth/subscriptions","organizations_url":"https://api.github.com/users/Senth/orgs","repos_url":"https://api.github.com/users/Senth/repos","events_url":"https://api.github.com/users/Senth/events{/privacy}","received_events_url":"https://api.github.com/users/Senth/received_events","type":"User","site_admin":false},"labels":[{"id":11336982,"url":"https://api.github.com/repos/libgdx/libgdx/labels/enhancement","name":"enhancement","color":"84b6eb","default":true},{"id":89047068,"url":"https://api.github.com/repos/libgdx/libgdx/labels/scene2d","name":"scene2d","color":"ff00ff","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2014-04-03T12:40:28Z","updated_at":"2014-09-07T17:07:00Z","closed_at":"2014-09-07T17:07:00Z","author_association":"NONE","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/1626","html_url":"https://github.com/libgdx/libgdx/pull/1626","diff_url":"https://github.com/libgdx/libgdx/pull/1626.diff","patch_url":"https://github.com/libgdx/libgdx/pull/1626.patch"},"body":"### Problem\n\nIn my game I wanted to update a list dynamically if the user scrolled down to the bottom of the ScrollPane (as content is loaded from the web). At the same time have the content be fully refreshed if the user scrolls to the top. I tried to implement this behavior through a listener but the internal ScrollPane listeners hijacked the events which made it impossible unless I extended the ScrollPane and change the act() method. \n### Suggested solution\n\nFor this I created a new ScrollPaneEdgeListener (not sure about naming). ScrollPane now allows these to be added via addScrollPaneEdgeListener(listener). The ScrollPaneEdgeListener has a single method hitEdge(ScrollPane,Edges) where Edges is an enum in ScrollPaneEdgeListener.\n### Behavior\n\nEvents are not spammed\n**Pan:** event fires when the edge is hit, if overextending it will fire again once it has gone back to the edge and extend beyond the edge again. E.g. overextended -> release -> pan and overextend again -> event fired\n**Flick:** Works as pan.\n**Scroll (mouse):** Every scroll that will move to or beyond the edge, i.e. the user will be able to spam here.\n**Scrollbar:** Once the scrollbar hits the edge the event is fired, the user has to move back the scrollbar and to the edge again for the event to be fired.\n### Testing\n\nI have tested and this seems to work. I've tested scrolling using mouse, during pan, flick, and manually moving scroll bars and events are fired accordingly. But I've probably missed some combinations.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1626/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1625","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1625/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1625/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1625/events","html_url":"https://github.com/libgdx/libgdx/issues/1625","id":30769691,"number":1625,"title":"NSUserdefaults","user":{"login":"Trurl101","id":1546629,"avatar_url":"https://avatars0.githubusercontent.com/u/1546629?v=4","gravatar_id":"","url":"https://api.github.com/users/Trurl101","html_url":"https://github.com/Trurl101","followers_url":"https://api.github.com/users/Trurl101/followers","following_url":"https://api.github.com/users/Trurl101/following{/other_user}","gists_url":"https://api.github.com/users/Trurl101/gists{/gist_id}","starred_url":"https://api.github.com/users/Trurl101/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Trurl101/subscriptions","organizations_url":"https://api.github.com/users/Trurl101/orgs","repos_url":"https://api.github.com/users/Trurl101/repos","events_url":"https://api.github.com/users/Trurl101/events{/privacy}","received_events_url":"https://api.github.com/users/Trurl101/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2014-04-03T12:13:38Z","updated_at":"2014-04-04T11:09:58Z","closed_at":"2014-04-04T11:09:39Z","author_association":"CONTRIBUTOR","body":"Robovms \"NSUserdefaults\" don't work with libgdx. Both nightlies.\n\nAn error messaqge appears when you use NSUserdefaults and want to assign them to a normal String:\n\nString prefs = NSUserDefaults.standardUserDefaults().stringForKey$(\"some prefs\") ;\n\nCaused by: java.lang.ClassCastException: org.robovm.apple.foundation.NSString cannot be cast to org.robovm.cocoatouch.foundation.NSString.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1625/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1624","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1624/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1624/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1624/events","html_url":"https://github.com/libgdx/libgdx/issues/1624","id":30747438,"number":1624,"title":"Linear Velocity resets/behaves erratics when Vertical Velocity reaches 2 x time_step","user":{"login":"sharath-kumar","id":5579315,"avatar_url":"https://avatars3.githubusercontent.com/u/5579315?v=4","gravatar_id":"","url":"https://api.github.com/users/sharath-kumar","html_url":"https://github.com/sharath-kumar","followers_url":"https://api.github.com/users/sharath-kumar/followers","following_url":"https://api.github.com/users/sharath-kumar/following{/other_user}","gists_url":"https://api.github.com/users/sharath-kumar/gists{/gist_id}","starred_url":"https://api.github.com/users/sharath-kumar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sharath-kumar/subscriptions","organizations_url":"https://api.github.com/users/sharath-kumar/orgs","repos_url":"https://api.github.com/users/sharath-kumar/repos","events_url":"https://api.github.com/users/sharath-kumar/events{/privacy}","received_events_url":"https://api.github.com/users/sharath-kumar/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2014-04-03T05:22:37Z","updated_at":"2014-04-03T22:34:19Z","closed_at":"2014-04-03T22:34:19Z","author_association":"NONE","body":"Created a Box2d World with a falling body (dynamic) that lands on the ground (static)\n\nWorld has a gravity of -9.8f.\nThe ground has 0.0f friction\nThe falling body has 0.0f angular velocity, angular damping and linear damping.\nThe falling body has a starting linear velocity of 20.0f\nThe oddball \"issue\" I'm noticing is that as the body falls down, it looses linear velocity.\n\nThe higher the starting point for the player - the lower his linear velocity by the time he gets to the ground.\n\nI'm using libgdx 0.9.9 (stable) in my project. \n\nThis is the code:\n\n```\nimport com.badlogic.gdx.ApplicationListener;\nimport com.badlogic.gdx.Gdx;\nimport com.badlogic.gdx.Input.Keys;\nimport com.badlogic.gdx.graphics.GL20;\nimport com.badlogic.gdx.graphics.OrthographicCamera;\nimport com.badlogic.gdx.graphics.Texture;\nimport com.badlogic.gdx.math.Vector2;\nimport com.badlogic.gdx.physics.box2d.Body;\nimport com.badlogic.gdx.physics.box2d.BodyDef;\nimport com.badlogic.gdx.physics.box2d.BodyDef.BodyType;\nimport com.badlogic.gdx.physics.box2d.Box2DDebugRenderer;\nimport com.badlogic.gdx.physics.box2d.FixtureDef;\nimport com.badlogic.gdx.physics.box2d.PolygonShape;\nimport com.badlogic.gdx.physics.box2d.World;\n\npublic class TestGame implements ApplicationListener {\n    private OrthographicCamera camera;\n    private int GAME_WIDTH = 1024 ;\n    private int GAME_HEIGHT = 768 ;\n\n\n    Box2DDebugRenderer renderer;\n    World world ;\n\n    BodyDef bdefPlayer;\n    FixtureDef fdefPlayer;\n    PolygonShape shapePlayer;\n    Body fallingObject;\n    int fallingObjectHeight = 64;\n    int fallingObjectWidth = 64;\n\n    BodyDef bdefGround;\n    FixtureDef fdefGround;\n    PolygonShape shapeGround;\n    int numberOfGroundUnitsToCreate = 100;\n    int groundUnitHeight = 64;\n    int groundUnitWidth = 64;\n    Body groundUnitsList[] = new Body[numberOfGroundUnitsToCreate];\n\n    boolean isDebugMode = true;\n\n    @Override\n    public void create() {\n        Texture.setEnforcePotImages(false);\n\n        // Create World\n        world = new World(new Vector2(0.0f, -9.8f), false);\n\n        // Create debug render\n        renderer = new Box2DDebugRenderer();\n\n        // Initiate camera\n        camera = new OrthographicCamera(GAME_WIDTH, GAME_HEIGHT);\n        camera.setToOrtho(false);\n        camera.position.set(GAME_WIDTH/2, GAME_HEIGHT/2, 0);\n\n        // Create Player\n        createPlayer();\n\n        // Create Ground\n        createGround();\n\n    }\n\n    public void render() {              \n        Gdx.gl.glClearColor(0, 0, 0, 0);\n        Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);\n\n        // Setup camera to follow Player\n        camera.position.x = fallingObject.getPosition().x + 50; \n        camera.update();    \n\n        // Update and render the world\n        world.step(1/12f, 6, 2);\n        if(isDebugMode) {\n            renderer.render(world, camera.combined);            \n        }\n\n        System.out.println(\n                            \"Linear Velocity: \" + fallingObject.getLinearVelocity() +\n                            \" Linear Damping: \" + fallingObject.getLinearDamping() +\n                            \" Angular Velocity: \" + fallingObject.getAngularVelocity() +\n                            \" Angular Damping: \" + fallingObject.getAngularDamping() +\n                            \" World Gravity: \" + world.getGravity() +\n                            \" Density: \" + fallingObject.getMass() \n                          );\n\n        handleInput();\n    }\n\n    private void createPlayer() { \n        bdefPlayer = new BodyDef();\n        fdefPlayer = new FixtureDef();\n        shapePlayer = new PolygonShape();\n\n        // create player\n        bdefPlayer.type = BodyType.DynamicBody;\n        bdefPlayer.linearVelocity.x = 20.0f;\n        bdefPlayer.linearDamping = 0.00f;\n        bdefPlayer.angularDamping = 0.0f;\n        bdefPlayer.angularVelocity = 0.0f;\n        bdefPlayer.position.set(50,  250);\n        fallingObject = world.createBody(bdefPlayer);\n\n        shapePlayer.setAsBox(fallingObjectHeight/2 , fallingObjectWidth/2);\n        fdefPlayer.shape = shapePlayer;\n        fallingObject.createFixture(fdefPlayer);\n\n        // create foot sensor\n        shapePlayer.setAsBox(fallingObjectWidth/2 , 10); \n        fdefPlayer.shape = shapePlayer;\n        fdefPlayer.isSensor = true;\n        fallingObject.createFixture(fdefPlayer);\n    }\n\n    private void createGround() {\n        bdefGround = new BodyDef();\n        fdefGround = new FixtureDef();\n        shapeGround = new PolygonShape();\n\n        for (int i=0; i<numberOfGroundUnitsToCreate; i++) {\n            bdefGround.type = BodyType.StaticBody;\n            bdefGround.position.set((float) ((groundUnitWidth + 0.5) *i )  , 0);\n            shapeGround.setAsBox(groundUnitWidth/2 , groundUnitHeight/2);\n            fdefGround.shape = shapeGround;\n            fdefGround.friction = 0.0f;\n            Body grassTileBodyTemp = world.createBody(bdefGround);\n            grassTileBodyTemp.createFixture(fdefGround);\n\n            groundUnitsList[i]= grassTileBodyTemp;\n        }\n    }\n\n    public void handleInput() {\n        if(Gdx.input.isKeyPressed(Keys.SPACE)) \n            fallingObject.applyForceToCenter(0, 20.0f, true);\n\n        if(Gdx.input.isKeyPressed(Keys.RIGHT)) \n            fallingObject.applyForceToCenter(20.0f, 0, true);\n    }\n\n    @Override\n    public void dispose() {\n        // TODO Auto-generated method stub\n\n    }\n\n    @Override\n    public void pause() {\n        // TODO Auto-generated method stub\n\n    }\n\n    @Override\n    public void resize(int arg0, int arg1) {\n        // TODO Auto-generated method stub\n\n    }\n\n    @Override\n    public void resume() {\n        // TODO Auto-generated method stub\n\n    }\n}\n```\n\nOutput of running the above as a desktop application can be seen here - dropbox.com/s/9rani7e6xy52c9c/Sample_Run_SO_22799601.txt \n\nAdditional Observations:\nAs the body falls, it accelerates dues to gravity. When the vertical velocity approaches 2 x time_step defined for the world - the linear velocity field does one of two things:\n(a) It decreases rapidly \n(b) It instantly resets to zero.\n\nI have not yet been able to isolate what specific conditions trigger (a) v/s (b)\n\nPlease do let me know if you have any further questions and/or I can be of any further assistance.\n\nCheers,\nSharath\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1624/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1623","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1623/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1623/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1623/events","html_url":"https://github.com/libgdx/libgdx/issues/1623","id":30712591,"number":1623,"title":"LWJGL renders incorrect size/resolution on Retina displays in Fullscreen","user":{"login":"matteblair","id":3371850,"avatar_url":"https://avatars2.githubusercontent.com/u/3371850?v=4","gravatar_id":"","url":"https://api.github.com/users/matteblair","html_url":"https://github.com/matteblair","followers_url":"https://api.github.com/users/matteblair/followers","following_url":"https://api.github.com/users/matteblair/following{/other_user}","gists_url":"https://api.github.com/users/matteblair/gists{/gist_id}","starred_url":"https://api.github.com/users/matteblair/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/matteblair/subscriptions","organizations_url":"https://api.github.com/users/matteblair/orgs","repos_url":"https://api.github.com/users/matteblair/repos","events_url":"https://api.github.com/users/matteblair/events{/privacy}","received_events_url":"https://api.github.com/users/matteblair/received_events","type":"User","site_admin":false},"labels":[{"id":11336980,"url":"https://api.github.com/repos/libgdx/libgdx/labels/bug","name":"bug","color":"fc2929","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":37,"created_at":"2014-04-02T18:28:01Z","updated_at":"2017-01-16T14:52:09Z","closed_at":"2014-12-31T09:37:21Z","author_association":"NONE","body":"When running a project with the LWJGL backend on a Retina Macbook Pro and using fullscreen mode, the lower left-hand quarter of the correct viewing area fills the entire screen. \n\nI am unable to confirm whether this is a general issue for all Hi-DPI displays or just the RMBP.\n\nTo reproduce the issue, run the default LWJGL application with the following Main method on a Retina Macbook Pro:\n\n``` java\nimport com.badlogic.gdx.Graphics.DisplayMode;\nimport com.badlogic.gdx.backends.lwjgl.LwjglApplication;\nimport com.badlogic.gdx.backends.lwjgl.LwjglApplicationConfiguration;\n\npublic class Main {\n    public static void main(String[] args) {\n        LwjglApplicationConfiguration cfg = new LwjglApplicationConfiguration();\n        DisplayMode dm = LwjglApplicationConfiguration.getDesktopDisplayMode();\n        cfg.title = \"my-gdx-game\";\n        cfg.width = dm.width;\n        cfg.height = dm.height;\n        cfg.fullscreen = true;\n\n        new LwjglApplication(new MyGdxGame(), cfg);\n    }\n}\n```\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1623/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1622","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1622/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1622/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1622/events","html_url":"https://github.com/libgdx/libgdx/pull/1622","id":30708889,"number":1622,"title":"Adds super dev compile button into the default index.html","user":{"login":"Tom-Ski","id":4346114,"avatar_url":"https://avatars0.githubusercontent.com/u/4346114?v=4","gravatar_id":"","url":"https://api.github.com/users/Tom-Ski","html_url":"https://github.com/Tom-Ski","followers_url":"https://api.github.com/users/Tom-Ski/followers","following_url":"https://api.github.com/users/Tom-Ski/following{/other_user}","gists_url":"https://api.github.com/users/Tom-Ski/gists{/gist_id}","starred_url":"https://api.github.com/users/Tom-Ski/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Tom-Ski/subscriptions","organizations_url":"https://api.github.com/users/Tom-Ski/orgs","repos_url":"https://api.github.com/users/Tom-Ski/repos","events_url":"https://api.github.com/users/Tom-Ski/events{/privacy}","received_events_url":"https://api.github.com/users/Tom-Ski/received_events","type":"User","site_admin":false},"labels":[{"id":89046741,"url":"https://api.github.com/repos/libgdx/libgdx/labels/gradle","name":"gradle","color":"006b75","default":false},{"id":67383148,"url":"https://api.github.com/repos/libgdx/libgdx/labels/gwt","name":"gwt","color":"5319e7","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2014-04-02T17:40:58Z","updated_at":"2014-06-20T11:43:15Z","closed_at":"2014-04-04T11:15:14Z","author_association":"OWNER","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/1622","html_url":"https://github.com/libgdx/libgdx/pull/1622","diff_url":"https://github.com/libgdx/libgdx/pull/1622.diff","patch_url":"https://github.com/libgdx/libgdx/pull/1622.patch"},"body":"Also adds a default stylesheet for next gen graphics.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1622/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1621","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1621/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1621/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1621/events","html_url":"https://github.com/libgdx/libgdx/issues/1621","id":30701985,"number":1621,"title":"Move compile bookmarklet to index.html","user":{"login":"badlogic","id":514052,"avatar_url":"https://avatars1.githubusercontent.com/u/514052?v=4","gravatar_id":"","url":"https://api.github.com/users/badlogic","html_url":"https://github.com/badlogic","followers_url":"https://api.github.com/users/badlogic/followers","following_url":"https://api.github.com/users/badlogic/following{/other_user}","gists_url":"https://api.github.com/users/badlogic/gists{/gist_id}","starred_url":"https://api.github.com/users/badlogic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/badlogic/subscriptions","organizations_url":"https://api.github.com/users/badlogic/orgs","repos_url":"https://api.github.com/users/badlogic/repos","events_url":"https://api.github.com/users/badlogic/events{/privacy}","received_events_url":"https://api.github.com/users/badlogic/received_events","type":"User","site_admin":false},"labels":[{"id":89046741,"url":"https://api.github.com/repos/libgdx/libgdx/labels/gradle","name":"gradle","color":"006b75","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2014-04-02T16:12:55Z","updated_at":"2014-04-04T11:15:14Z","closed_at":"2014-04-04T11:15:14Z","author_association":"OWNER","body":"User doesn't have to visit code server page anymore that way.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1621/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1620","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1620/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1620/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1620/events","html_url":"https://github.com/libgdx/libgdx/issues/1620","id":30685187,"number":1620,"title":"Viewport bug with iOS","user":{"login":"JustGez","id":7126011,"avatar_url":"https://avatars2.githubusercontent.com/u/7126011?v=4","gravatar_id":"","url":"https://api.github.com/users/JustGez","html_url":"https://github.com/JustGez","followers_url":"https://api.github.com/users/JustGez/followers","following_url":"https://api.github.com/users/JustGez/following{/other_user}","gists_url":"https://api.github.com/users/JustGez/gists{/gist_id}","starred_url":"https://api.github.com/users/JustGez/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JustGez/subscriptions","organizations_url":"https://api.github.com/users/JustGez/orgs","repos_url":"https://api.github.com/users/JustGez/repos","events_url":"https://api.github.com/users/JustGez/events{/privacy}","received_events_url":"https://api.github.com/users/JustGez/received_events","type":"User","site_admin":false},"labels":[{"id":11336980,"url":"https://api.github.com/repos/libgdx/libgdx/labels/bug","name":"bug","color":"fc2929","default":true},{"id":59604199,"url":"https://api.github.com/repos/libgdx/libgdx/labels/ios","name":"ios","color":"207de5","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2014-04-02T13:00:31Z","updated_at":"2014-04-09T21:51:32Z","closed_at":"2014-04-09T21:20:22Z","author_association":"NONE","body":"I posted a problem I found with FitViewport under iOS in the forums (http://badlogicgames.com/forum/viewtopic.php?f=11&t=13398&sid=4c9794361f2b36542876e62d3d6c7761) and NateS suggested I raise an issue here.\n\nNateS asked me to do another example using glViewport/SpriteBatch, but I'm afraid my newb'ness knowledge is not sure how to go about this. Instead, I have created a simple example using OrthographicCamera/SpriteBatch below. Same stretching issues as detailed in the forum post under iOS, Desktop/Android are letterboxed as expected.\n\nEDIT : After browsing through the other issues on the tracker, this issue is a duplicate of #1415. I can confirm adding the below to the render method fixes the stretching on iOS.\n\n```\n        Gdx.gl.glViewport(viewport.getViewportX(), viewport.getViewportY(), viewport.getViewportWidth(), viewport.getViewportHeight()); \n```\n\n```\npublic class MyGdxGame implements ApplicationListener {\n    private SpriteBatch batch;\n    private Texture texture;\n    private OrthographicCamera guiCam;\n//      Image is 256x256px\n    private static final int VIRTUAL_WIDTH = 256;\n        private static final int VIRTUAL_HEIGHT = 256;\n        private FitViewport viewport;\n\n    @Override\n    public void create() {      \n        batch = new SpriteBatch();\n        guiCam = new OrthographicCamera(VIRTUAL_WIDTH, VIRTUAL_HEIGHT);\n        guiCam.position.set(Gdx.graphics.getWidth() / 2, Gdx.graphics.getHeight() / 2, 0);\n        viewport = new FitViewport(VIRTUAL_WIDTH, VIRTUAL_HEIGHT, guiCam);\n        texture = new Texture(Gdx.files.internal(\"data/badlogic.jpg\"));\n        texture.setFilter(TextureFilter.Linear, TextureFilter.Linear);\n    }\n\n    @Override\n    public void dispose() {\n        batch.dispose();\n        texture.dispose();\n    }\n\n    @Override\n    public void render() {\n        Gdx.gl20.glClearColor(0, 0, 0, 1);\n        Gdx.gl20.glClear(GL20.GL_COLOR_BUFFER_BIT | GL20.GL_DEPTH_BUFFER_BIT);\n        guiCam.update();\n        batch.setProjectionMatrix(guiCam.combined);\n        batch.begin();\n        batch.draw(texture, 0, 0);\n        batch.end();\n    }\n\n    @Override\n    public void resize(int width, int height) {\n        viewport.update(width, height, true);\n    }\n\n    @Override\n    public void pause() {\n    }\n\n    @Override\n    public void resume() {\n    }\n}\n```\n\nAndroid capture - ![image](https://cloud.githubusercontent.com/assets/7126011/2591001/a7c7d8f8-ba65-11e3-977c-f688d7914c4b.png)\n\niOS capture - \n![image](https://cloud.githubusercontent.com/assets/7126011/2591041/434eb864-ba66-11e3-9404-64d00223a83c.png)\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1620/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1619","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1619/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1619/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1619/events","html_url":"https://github.com/libgdx/libgdx/issues/1619","id":30674023,"number":1619,"title":"NullPointerException by calling Gdx.audio....","user":{"login":"kutoman","id":5825645,"avatar_url":"https://avatars3.githubusercontent.com/u/5825645?v=4","gravatar_id":"","url":"https://api.github.com/users/kutoman","html_url":"https://github.com/kutoman","followers_url":"https://api.github.com/users/kutoman/followers","following_url":"https://api.github.com/users/kutoman/following{/other_user}","gists_url":"https://api.github.com/users/kutoman/gists{/gist_id}","starred_url":"https://api.github.com/users/kutoman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kutoman/subscriptions","organizations_url":"https://api.github.com/users/kutoman/orgs","repos_url":"https://api.github.com/users/kutoman/repos","events_url":"https://api.github.com/users/kutoman/events{/privacy}","received_events_url":"https://api.github.com/users/kutoman/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2014-04-02T09:55:12Z","updated_at":"2014-04-03T08:54:01Z","closed_at":"2014-04-03T08:54:01Z","author_association":"NONE","body":"Hi,\nI'm applying the gradle based project management system to my game. Everything was working fine before but now I need to fix some minor issues before I can continue developing the game. \n\nI'm getting NullPointerExceptions when calling any methods on Gdx.audio. (even for the Gdx.audio.toString() )\nWhy??\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1619/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1618","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1618/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1618/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1618/events","html_url":"https://github.com/libgdx/libgdx/pull/1618","id":30667994,"number":1618,"title":"Update CHANGES","user":{"login":"davebaol","id":2366334,"avatar_url":"https://avatars3.githubusercontent.com/u/2366334?v=4","gravatar_id":"","url":"https://api.github.com/users/davebaol","html_url":"https://github.com/davebaol","followers_url":"https://api.github.com/users/davebaol/followers","following_url":"https://api.github.com/users/davebaol/following{/other_user}","gists_url":"https://api.github.com/users/davebaol/gists{/gist_id}","starred_url":"https://api.github.com/users/davebaol/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davebaol/subscriptions","organizations_url":"https://api.github.com/users/davebaol/orgs","repos_url":"https://api.github.com/users/davebaol/repos","events_url":"https://api.github.com/users/davebaol/events{/privacy}","received_events_url":"https://api.github.com/users/davebaol/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2014-04-02T08:28:42Z","updated_at":"2014-06-20T12:14:03Z","closed_at":"2014-04-02T09:29:54Z","author_association":"MEMBER","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/1618","html_url":"https://github.com/libgdx/libgdx/pull/1618","diff_url":"https://github.com/libgdx/libgdx/pull/1618.diff","patch_url":"https://github.com/libgdx/libgdx/pull/1618.patch"},"body":"Added missing recent changes.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1618/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1617","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1617/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1617/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1617/events","html_url":"https://github.com/libgdx/libgdx/issues/1617","id":30644799,"number":1617,"title":"assets folder linking for Eclipse doesn't work","user":{"login":"badlogic","id":514052,"avatar_url":"https://avatars1.githubusercontent.com/u/514052?v=4","gravatar_id":"","url":"https://api.github.com/users/badlogic","html_url":"https://github.com/badlogic","followers_url":"https://api.github.com/users/badlogic/followers","following_url":"https://api.github.com/users/badlogic/following{/other_user}","gists_url":"https://api.github.com/users/badlogic/gists{/gist_id}","starred_url":"https://api.github.com/users/badlogic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/badlogic/subscriptions","organizations_url":"https://api.github.com/users/badlogic/orgs","repos_url":"https://api.github.com/users/badlogic/repos","events_url":"https://api.github.com/users/badlogic/events{/privacy}","received_events_url":"https://api.github.com/users/badlogic/received_events","type":"User","site_admin":false},"labels":[{"id":89046741,"url":"https://api.github.com/repos/libgdx/libgdx/labels/gradle","name":"gradle","color":"006b75","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2014-04-01T22:31:32Z","updated_at":"2014-04-05T17:28:54Z","closed_at":"2014-04-05T17:28:54Z","author_association":"OWNER","body":"cause i also have to write an entry into .classpath. Silly me...\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1617/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1616","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1616/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1616/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1616/events","html_url":"https://github.com/libgdx/libgdx/pull/1616","id":30634280,"number":1616,"title":"Migrated the RoboVM backend to use the new CocoaTouch bindings","user":{"login":"ntherning","id":135765,"avatar_url":"https://avatars3.githubusercontent.com/u/135765?v=4","gravatar_id":"","url":"https://api.github.com/users/ntherning","html_url":"https://github.com/ntherning","followers_url":"https://api.github.com/users/ntherning/followers","following_url":"https://api.github.com/users/ntherning/following{/other_user}","gists_url":"https://api.github.com/users/ntherning/gists{/gist_id}","starred_url":"https://api.github.com/users/ntherning/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ntherning/subscriptions","organizations_url":"https://api.github.com/users/ntherning/orgs","repos_url":"https://api.github.com/users/ntherning/repos","events_url":"https://api.github.com/users/ntherning/events{/privacy}","received_events_url":"https://api.github.com/users/ntherning/received_events","type":"User","site_admin":false},"labels":[{"id":11336982,"url":"https://api.github.com/repos/libgdx/libgdx/labels/enhancement","name":"enhancement","color":"84b6eb","default":true},{"id":59604199,"url":"https://api.github.com/repos/libgdx/libgdx/labels/ios","name":"ios","color":"207de5","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2014-04-01T20:22:29Z","updated_at":"2014-06-12T10:07:00Z","closed_at":"2014-04-04T22:24:45Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/1616","html_url":"https://github.com/libgdx/libgdx/pull/1616","diff_url":"https://github.com/libgdx/libgdx/pull/1616.diff","patch_url":"https://github.com/libgdx/libgdx/pull/1616.patch"},"body":"The new CocoaTouch bindings will be introduced in the next release of RoboVM which will be out later this week. The old bindings will still be included as well for a couple of releases. This PR updates the backend and the iOS versions of all demos to use the new bindings.\n\nBTW, did I sign the libgdx CLA? Can't remember. :-)\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1616/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1615","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1615/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1615/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1615/events","html_url":"https://github.com/libgdx/libgdx/issues/1615","id":30631457,"number":1615,"title":"GWT GL20#glReadPixel is Unpossible","user":{"login":"DanielCloudCredo","id":5970158,"avatar_url":"https://avatars0.githubusercontent.com/u/5970158?v=4","gravatar_id":"","url":"https://api.github.com/users/DanielCloudCredo","html_url":"https://github.com/DanielCloudCredo","followers_url":"https://api.github.com/users/DanielCloudCredo/followers","following_url":"https://api.github.com/users/DanielCloudCredo/following{/other_user}","gists_url":"https://api.github.com/users/DanielCloudCredo/gists{/gist_id}","starred_url":"https://api.github.com/users/DanielCloudCredo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DanielCloudCredo/subscriptions","organizations_url":"https://api.github.com/users/DanielCloudCredo/orgs","repos_url":"https://api.github.com/users/DanielCloudCredo/repos","events_url":"https://api.github.com/users/DanielCloudCredo/events{/privacy}","received_events_url":"https://api.github.com/users/DanielCloudCredo/received_events","type":"User","site_admin":false},"labels":[{"id":11336985,"url":"https://api.github.com/repos/libgdx/libgdx/labels/wontfix","name":"wontfix","color":"ffffff","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":15,"created_at":"2014-04-01T19:45:35Z","updated_at":"2014-04-07T15:59:42Z","closed_at":"2014-04-01T22:22:21Z","author_association":"NONE","body":"GWT doesn't implement `ByteBuffer`.\n\nThe GWT implementation of `Pixmap#getPixels` returns an `IntBuffer`.\n\nThe GWT implementation of `GL20#glReadPixels` specifies its argument type as `Buffer`, and then does an explicit check to make sure that the buffer is a `ByteBuffer`, which it can't ever be.\n\n```\n    @Override\n    public void glReadPixels (int x, int y, int width, int height, int format, int type, Buffer pixels) {\n        // verify request\n        if ((format != WebGLRenderingContext.RGBA) || (type != WebGLRenderingContext.UNSIGNED_BYTE)) {\n            throw new GdxRuntimeException(\"Only format RGBA and type UNSIGNED_BYTE are currently supported for glReadPixels(...).\");\n        }\n        if (!(pixels instanceof ByteBuffer)) {\n            throw new GdxRuntimeException(\"Inputed pixels buffer needs to be of type ByteBuffer for glReadPixels(...).\");\n        }\n\n        // create new ArrayBufferView (4 bytes per pixel)\n        int size = 4 * width * height;\n        Uint8Array buffer = Uint8ArrayNative.create(size);\n\n        // read bytes to ArrayBufferView\n        gl.readPixels(x, y, width, height, format, type, buffer);\n\n        // copy ArrayBufferView to our pixels array\n        ByteBuffer pixelsByte = (ByteBuffer)pixels;\n        for (int i = 0; i < size; i++) {\n            pixelsByte.put((byte)(buffer.get(i) & 0x000000ff));\n        }\n    }\n```\n\nCode that will expose the b0rk:\n\n```\nfinal Pixmap pixmap = new Pixmap(w, h, Format.RGBA8888);\nIntBuffer pixels = (IntBuffer) (Buffer) pixmap.getPixels();\nGdx.gl.glReadPixels(x, y, w, h, GL20.GL_RGBA, GL20.GL_UNSIGNED_BYTE, pixels);\n```\n\nWould it be possible to have the GWT implementation of `glReadPixels` expect an `IntBuffer`, and then convert each `int` to a `byte` using `Integer#byteValue`?\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1615/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1614","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1614/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1614/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1614/events","html_url":"https://github.com/libgdx/libgdx/issues/1614","id":30626885,"number":1614,"title":"Isometric TiledMap Renderers don't properly support y-down","user":{"login":"MobiDevelop","id":1095464,"avatar_url":"https://avatars2.githubusercontent.com/u/1095464?v=4","gravatar_id":"","url":"https://api.github.com/users/MobiDevelop","html_url":"https://github.com/MobiDevelop","followers_url":"https://api.github.com/users/MobiDevelop/followers","following_url":"https://api.github.com/users/MobiDevelop/following{/other_user}","gists_url":"https://api.github.com/users/MobiDevelop/gists{/gist_id}","starred_url":"https://api.github.com/users/MobiDevelop/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MobiDevelop/subscriptions","organizations_url":"https://api.github.com/users/MobiDevelop/orgs","repos_url":"https://api.github.com/users/MobiDevelop/repos","events_url":"https://api.github.com/users/MobiDevelop/events{/privacy}","received_events_url":"https://api.github.com/users/MobiDevelop/received_events","type":"User","site_admin":false},"labels":[{"id":11336980,"url":"https://api.github.com/repos/libgdx/libgdx/labels/bug","name":"bug","color":"fc2929","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2014-04-01T18:55:16Z","updated_at":"2014-05-03T18:02:27Z","closed_at":"2014-05-03T18:02:27Z","author_association":"OWNER","body":"Row order is flipped. Boo.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1614/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1613","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1613/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1613/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1613/events","html_url":"https://github.com/libgdx/libgdx/pull/1613","id":30614747,"number":1613,"title":"Lwjgl backend is too fast","user":{"login":"semtiko","id":496349,"avatar_url":"https://avatars3.githubusercontent.com/u/496349?v=4","gravatar_id":"","url":"https://api.github.com/users/semtiko","html_url":"https://github.com/semtiko","followers_url":"https://api.github.com/users/semtiko/followers","following_url":"https://api.github.com/users/semtiko/following{/other_user}","gists_url":"https://api.github.com/users/semtiko/gists{/gist_id}","starred_url":"https://api.github.com/users/semtiko/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/semtiko/subscriptions","organizations_url":"https://api.github.com/users/semtiko/orgs","repos_url":"https://api.github.com/users/semtiko/repos","events_url":"https://api.github.com/users/semtiko/events{/privacy}","received_events_url":"https://api.github.com/users/semtiko/received_events","type":"User","site_admin":false},"labels":[{"id":67383148,"url":"https://api.github.com/repos/libgdx/libgdx/labels/gwt","name":"gwt","color":"5319e7","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2014-04-01T16:28:07Z","updated_at":"2014-06-16T05:41:52Z","closed_at":"2014-04-01T22:19:01Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/1613","html_url":"https://github.com/libgdx/libgdx/pull/1613","diff_url":"https://github.com/libgdx/libgdx/pull/1613.diff","patch_url":"https://github.com/libgdx/libgdx/pull/1613.patch"},"body":"Let's slow down it again\n![6532_142032129571_5169619_n](https://cloud.githubusercontent.com/assets/496349/2581632/c839c61a-b9ba-11e3-8030-854495ad8ec2.jpg)\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1613/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1612","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1612/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1612/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1612/events","html_url":"https://github.com/libgdx/libgdx/issues/1612","id":30614392,"number":1612,"title":"Button delay is noticeable","user":{"login":"alex55i","id":3694019,"avatar_url":"https://avatars0.githubusercontent.com/u/3694019?v=4","gravatar_id":"","url":"https://api.github.com/users/alex55i","html_url":"https://github.com/alex55i","followers_url":"https://api.github.com/users/alex55i/followers","following_url":"https://api.github.com/users/alex55i/following{/other_user}","gists_url":"https://api.github.com/users/alex55i/gists{/gist_id}","starred_url":"https://api.github.com/users/alex55i/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alex55i/subscriptions","organizations_url":"https://api.github.com/users/alex55i/orgs","repos_url":"https://api.github.com/users/alex55i/repos","events_url":"https://api.github.com/users/alex55i/events{/privacy}","received_events_url":"https://api.github.com/users/alex55i/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2014-04-01T16:23:58Z","updated_at":"2014-04-01T16:53:50Z","closed_at":"2014-04-01T16:53:45Z","author_association":"CONTRIBUTOR","body":"d7690422338bf29bc5129bbcffb881a9902ae4be introduces a 1/10 sec visual delay that might be noticeable in some games and look like a lag.\nSo there must be another solution without delaying things so much.\nAlso calling `button.getClickListener().isPressed()` instead of `button.isPressed()` to get proper state isn't right I guess.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1612/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1611","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1611/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1611/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1611/events","html_url":"https://github.com/libgdx/libgdx/pull/1611","id":30608911,"number":1611,"title":"Set key event timestamp","user":{"login":"davebaol","id":2366334,"avatar_url":"https://avatars3.githubusercontent.com/u/2366334?v=4","gravatar_id":"","url":"https://api.github.com/users/davebaol","html_url":"https://github.com/davebaol","followers_url":"https://api.github.com/users/davebaol/followers","following_url":"https://api.github.com/users/davebaol/following{/other_user}","gists_url":"https://api.github.com/users/davebaol/gists{/gist_id}","starred_url":"https://api.github.com/users/davebaol/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davebaol/subscriptions","organizations_url":"https://api.github.com/users/davebaol/orgs","repos_url":"https://api.github.com/users/davebaol/repos","events_url":"https://api.github.com/users/davebaol/events{/privacy}","received_events_url":"https://api.github.com/users/davebaol/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":13,"created_at":"2014-04-01T15:24:06Z","updated_at":"2014-06-20T12:14:05Z","closed_at":"2014-04-01T22:21:10Z","author_association":"MEMBER","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/1611","html_url":"https://github.com/libgdx/libgdx/pull/1611","diff_url":"https://github.com/libgdx/libgdx/pull/1611.diff","patch_url":"https://github.com/libgdx/libgdx/pull/1611.patch"},"body":"This is a fix for the issue mentioned here: https://github.com/libgdx/libgdx/issues/1576#issuecomment-38982627\n\nFurthermore, the request to add a Input#clearEvents() method is quite recurrent and the answer is always a won't fix  (for good reasons though).\nSo do you think that the InputConsumer proposed at the link above might deserve its place in gdx ?\nIf so I'll make a PR soon.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1611/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1610","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1610/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1610/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1610/events","html_url":"https://github.com/libgdx/libgdx/issues/1610","id":30605455,"number":1610,"title":"isometric renderers with images larger than tile size / tile sets with different sizes","user":{"login":"tricid","id":806162,"avatar_url":"https://avatars1.githubusercontent.com/u/806162?v=4","gravatar_id":"","url":"https://api.github.com/users/tricid","html_url":"https://github.com/tricid","followers_url":"https://api.github.com/users/tricid/followers","following_url":"https://api.github.com/users/tricid/following{/other_user}","gists_url":"https://api.github.com/users/tricid/gists{/gist_id}","starred_url":"https://api.github.com/users/tricid/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tricid/subscriptions","organizations_url":"https://api.github.com/users/tricid/orgs","repos_url":"https://api.github.com/users/tricid/repos","events_url":"https://api.github.com/users/tricid/events{/privacy}","received_events_url":"https://api.github.com/users/tricid/received_events","type":"User","site_admin":false},"labels":[{"id":11336980,"url":"https://api.github.com/repos/libgdx/libgdx/labels/bug","name":"bug","color":"fc2929","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2014-04-01T14:48:14Z","updated_at":"2014-05-03T20:48:12Z","closed_at":"2014-05-03T20:48:12Z","author_association":"NONE","body":"Both isometric renderers seem to have (alignment?) issues rendering when you use images larger than tile sizes or when using tile sets that have different sizes, not sure which. \n\nUsing two tile sets (from flare).  \n\nThe grass is 64x128\nThe water, which also includes the cliff edges, uses 64x64\nThe map tiles are 64x32\n\n![withtiled2](https://cloud.githubusercontent.com/assets/806162/2580167/8ef3be20-b9aa-11e3-84e8-4f8b3fe1bf40.png)\n![withgdx3](https://cloud.githubusercontent.com/assets/806162/2580268/b0e4c212-b9ab-11e3-8e96-0cf21cd1624d.png)\n\nlink to simple map file used for the above images: https://dl.dropboxusercontent.com/u/14075939/maps2.tar\ncan also load maps from flare to see the same effect\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1610/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1609","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1609/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1609/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1609/events","html_url":"https://github.com/libgdx/libgdx/pull/1609","id":30604485,"number":1609,"title":"More control over preferred size in TextField and TextArea","user":{"login":"anserran","id":1515738,"avatar_url":"https://avatars1.githubusercontent.com/u/1515738?v=4","gravatar_id":"","url":"https://api.github.com/users/anserran","html_url":"https://github.com/anserran","followers_url":"https://api.github.com/users/anserran/followers","following_url":"https://api.github.com/users/anserran/following{/other_user}","gists_url":"https://api.github.com/users/anserran/gists{/gist_id}","starred_url":"https://api.github.com/users/anserran/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/anserran/subscriptions","organizations_url":"https://api.github.com/users/anserran/orgs","repos_url":"https://api.github.com/users/anserran/repos","events_url":"https://api.github.com/users/anserran/events{/privacy}","received_events_url":"https://api.github.com/users/anserran/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2014-04-01T14:38:18Z","updated_at":"2014-06-20T12:14:07Z","closed_at":"2014-04-01T16:53:38Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/1609","html_url":"https://github.com/libgdx/libgdx/pull/1609","diff_url":"https://github.com/libgdx/libgdx/pull/1609.diff","patch_url":"https://github.com/libgdx/libgdx/pull/1609.patch"},"body":"I added some attributes to TextField and TextArea to have more control over their preferredWidth and preferredHeight, which comes handy when using them in complex layouts.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1609/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1608","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1608/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1608/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1608/events","html_url":"https://github.com/libgdx/libgdx/issues/1608","id":30571355,"number":1608,"title":"Json with null decoded as string","user":{"login":"joshmmo","id":3966984,"avatar_url":"https://avatars3.githubusercontent.com/u/3966984?v=4","gravatar_id":"","url":"https://api.github.com/users/joshmmo","html_url":"https://github.com/joshmmo","followers_url":"https://api.github.com/users/joshmmo/followers","following_url":"https://api.github.com/users/joshmmo/following{/other_user}","gists_url":"https://api.github.com/users/joshmmo/gists{/gist_id}","starred_url":"https://api.github.com/users/joshmmo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/joshmmo/subscriptions","organizations_url":"https://api.github.com/users/joshmmo/orgs","repos_url":"https://api.github.com/users/joshmmo/repos","events_url":"https://api.github.com/users/joshmmo/events{/privacy}","received_events_url":"https://api.github.com/users/joshmmo/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-04-01T04:52:32Z","updated_at":"2014-04-01T09:43:22Z","closed_at":"2014-04-01T09:43:11Z","author_association":"NONE","body":"Problem context:\nI want to decode a json string that has an array of null values.\n\nProblem statement:\nThe problem I have is I get an error when I try and decode the json object. My code to do this was working just fine yesterday so one of the recent nightly builds broke it.\n\nHere is some example code:\n\nTest Class:\n\npublic class jsonNullTest {\n    jsonNullTest() {\n\n```\n}\n```\n\n}\n\nMethod creating an array of this test class, adding one value of the array as null, and another is the object of the test class. This then converts my array to json, then I am decoding it and I get the error.\n\npublic static void jsonTest()\n    {\n        jsonNullTest[] testArray = new jsonNullTest[2];\n\n```\n    jsonNullTest testClass = new jsonNullTest();\n    testArray[0] = testClass;\n    testArray[1] = null;\n    Json json = new Json();\n    String testClassData = json.toJson(testArray);\n\n    jsonNullTest test = json.fromJson(jsonNullTest.class, testClassData);\n    Gdx.app.log(TAG, \n```\n\n}\n\nRunning the above will produce the following error:\n\nException in thread \"LWJGL Application\" com.badlogic.gdx.utils.SerializationException: Unable to convert value to required type: [\n{},\n\"null\"\n](com.tucson.mygame.utils.jsonNullTest)\n    at com.badlogic.gdx.utils.Json.readValue(Json.java:896)\n    at com.badlogic.gdx.utils.Json.fromJson(Json.java:693)\n    at com.tucson.mygame.utils.LevelSerializer.jsonTest(LevelSerializer.java:167)\n    at com.tucson.mygame.screens.MenuScreen.<init>(MenuScreen.java:46)\n    at com.tucson.mygame.mygameGame.create(mygameGame.java:25)\n    at com.badlogic.gdx.backends.lwjgl.LwjglApplication.mainLoop(LwjglApplication.java:136)\n    at com.badlogic.gdx.backends.lwjgl.LwjglApplication$1.run(LwjglApplication.java:114)\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1608/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1607","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1607/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1607/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1607/events","html_url":"https://github.com/libgdx/libgdx/pull/1607","id":30571313,"number":1607,"title":"add software keyboard support to iOS","user":{"login":"jrenner","id":1393288,"avatar_url":"https://avatars1.githubusercontent.com/u/1393288?v=4","gravatar_id":"","url":"https://api.github.com/users/jrenner","html_url":"https://github.com/jrenner","followers_url":"https://api.github.com/users/jrenner/followers","following_url":"https://api.github.com/users/jrenner/following{/other_user}","gists_url":"https://api.github.com/users/jrenner/gists{/gist_id}","starred_url":"https://api.github.com/users/jrenner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jrenner/subscriptions","organizations_url":"https://api.github.com/users/jrenner/orgs","repos_url":"https://api.github.com/users/jrenner/repos","events_url":"https://api.github.com/users/jrenner/events{/privacy}","received_events_url":"https://api.github.com/users/jrenner/received_events","type":"User","site_admin":false},"labels":[{"id":11336982,"url":"https://api.github.com/repos/libgdx/libgdx/labels/enhancement","name":"enhancement","color":"84b6eb","default":true},{"id":59604199,"url":"https://api.github.com/repos/libgdx/libgdx/labels/ios","name":"ios","color":"207de5","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2014-04-01T04:50:28Z","updated_at":"2014-06-20T11:45:21Z","closed_at":"2014-04-02T03:28:19Z","author_association":"OWNER","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/1607","html_url":"https://github.com/libgdx/libgdx/pull/1607","diff_url":"https://github.com/libgdx/libgdx/pull/1607.diff","patch_url":"https://github.com/libgdx/libgdx/pull/1607.patch"},"body":"Code is not mine, taken from:\nhttp://www.badlogicgames.com/forum/viewtopic.php?f=17&t=11788\n\nand reformatted\n\nit works nicely though:\n![ios_keyboard](https://cloud.githubusercontent.com/assets/1393288/2575690/19d7f5a8-b959-11e3-8564-0001ef47bf43.jpg)\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1607/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1606","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/1606/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/1606/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/1606/events","html_url":"https://github.com/libgdx/libgdx/pull/1606","id":30570471,"number":1606,"title":"Added resource removal from Skin object","user":{"login":"cobolfoo","id":7122729,"avatar_url":"https://avatars1.githubusercontent.com/u/7122729?v=4","gravatar_id":"","url":"https://api.github.com/users/cobolfoo","html_url":"https://github.com/cobolfoo","followers_url":"https://api.github.com/users/cobolfoo/followers","following_url":"https://api.github.com/users/cobolfoo/following{/other_user}","gists_url":"https://api.github.com/users/cobolfoo/gists{/gist_id}","starred_url":"https://api.github.com/users/cobolfoo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cobolfoo/subscriptions","organizations_url":"https://api.github.com/users/cobolfoo/orgs","repos_url":"https://api.github.com/users/cobolfoo/repos","events_url":"https://api.github.com/users/cobolfoo/events{/privacy}","received_events_url":"https://api.github.com/users/cobolfoo/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2014-04-01T04:21:35Z","updated_at":"2014-06-20T12:14:07Z","closed_at":"2014-04-01T09:28:23Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/1606","html_url":"https://github.com/libgdx/libgdx/pull/1606","diff_url":"https://github.com/libgdx/libgdx/pull/1606.diff","patch_url":"https://github.com/libgdx/libgdx/pull/1606.patch"},"body":"I am currently developing a skin editor for libGDX that need this feature. I think it might be useful in some situations too.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/1606/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}}],"meta":{"x-ratelimit-limit":"5000","x-ratelimit-remaining":"4889","x-ratelimit-reset":"1506844633","x-github-request-id":"DCC0:110A:2491634:40DE87E:59D096CB","x-github-media-type":"github.squirrel-girl-preview","link":"<https://api.github.com/repositories/5373551/issues?state=all&page=111>; rel=\"next\", <https://api.github.com/repositories/5373551/issues?state=all&page=164>; rel=\"last\", <https://api.github.com/repositories/5373551/issues?state=all&page=1>; rel=\"first\", <https://api.github.com/repositories/5373551/issues?state=all&page=109>; rel=\"prev\"","etag":"\"52b55b80bedba61535777ae5d942bcca\"","status":"200 OK"}}
