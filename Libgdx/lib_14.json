{"data":[{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4518","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4518/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4518/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4518/events","html_url":"https://github.com/libgdx/libgdx/issues/4518","id":198924378,"number":4518,"title":"New reflected Class not included when executing the application with GWT superDev mode","user":{"login":"LennartH","id":902689,"avatar_url":"https://avatars2.githubusercontent.com/u/902689?v=4","gravatar_id":"","url":"https://api.github.com/users/LennartH","html_url":"https://github.com/LennartH","followers_url":"https://api.github.com/users/LennartH/followers","following_url":"https://api.github.com/users/LennartH/following{/other_user}","gists_url":"https://api.github.com/users/LennartH/gists{/gist_id}","starred_url":"https://api.github.com/users/LennartH/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/LennartH/subscriptions","organizations_url":"https://api.github.com/users/LennartH/orgs","repos_url":"https://api.github.com/users/LennartH/repos","events_url":"https://api.github.com/users/LennartH/events{/privacy}","received_events_url":"https://api.github.com/users/LennartH/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2017-01-05T10:36:47Z","updated_at":"2017-01-24T16:59:15Z","closed_at":null,"author_association":"NONE","body":"#### Issue details\r\nIt seems like the reflection cache isn't updated, when you test the application with the GWT superDev mode (`gradle html:superDev`). This leads to the error `Couldn't find Type for class`, when the application is recompiled, after a new class thats used with reflection has been added.\r\n\r\n#### Reproduction steps/code\r\n1. Include an empty package to the reflection\r\n```\r\n<module>\r\n\t<source path=\"com.application\" />\r\n\t\r\n\t<extend-configuration-property name=\"gdx.reflect.include\" value=\"com.application.reflect.me\" />\r\n</module>\r\n```\r\n2. Start the code server (e.g. with `gradle html:superDev`)\r\n3. Test that the application runs error free\r\n4. Create a new class in the previously added package and create a new instance with the reflection API\r\n5. Recompile the application\r\n\r\n#### Workaround\r\n1. Stop the coder server\r\n2. ~~Package the application for the web (e.g. with `gradle html:dist`)~~\r\n3. Start the code server again\r\n\r\nIf there's no way to fix this properly, please add a note to the [reflection wiki page](https://github.com/libgdx/libgdx/wiki/Reflection#gwt).\r\n\r\n#### Version of LibGDX and/or relevant dependencies\r\n1.9.6-SNAPSHOT\r\n\r\n#### Please select the affected platforms\r\n- [ ] Android\r\n- [ ] iOS (robovm)\r\n- [ ] iOS (MOE)\r\n- [x] HTML/GWT\r\n- [ ] Windows\r\n- [ ] Linux\r\n- [ ] MacOS\r\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4518/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4517","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4517/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4517/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4517/events","html_url":"https://github.com/libgdx/libgdx/pull/4517","id":198805369,"number":4517,"title":"Add missing methods to ClassReflection","user":{"login":"intrigus","id":10353467,"avatar_url":"https://avatars2.githubusercontent.com/u/10353467?v=4","gravatar_id":"","url":"https://api.github.com/users/intrigus","html_url":"https://github.com/intrigus","followers_url":"https://api.github.com/users/intrigus/followers","following_url":"https://api.github.com/users/intrigus/following{/other_user}","gists_url":"https://api.github.com/users/intrigus/gists{/gist_id}","starred_url":"https://api.github.com/users/intrigus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/intrigus/subscriptions","organizations_url":"https://api.github.com/users/intrigus/orgs","repos_url":"https://api.github.com/users/intrigus/repos","events_url":"https://api.github.com/users/intrigus/events{/privacy}","received_events_url":"https://api.github.com/users/intrigus/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2017-01-04T20:39:48Z","updated_at":"2017-01-04T23:35:08Z","closed_at":"2017-01-04T23:35:03Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4517","html_url":"https://github.com/libgdx/libgdx/pull/4517","diff_url":"https://github.com/libgdx/libgdx/pull/4517.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4517.patch"},"body":"Adds some missing methods to ClassReflection.\r\nThe methods already exist but haven't been exposed for general usage.","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4517/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4516","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4516/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4516/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4516/events","html_url":"https://github.com/libgdx/libgdx/issues/4516","id":198628411,"number":4516,"title":"[BUG] Gradle update does not install Bullet past 1.9.2","user":{"login":"Yusspy","id":15306683,"avatar_url":"https://avatars2.githubusercontent.com/u/15306683?v=4","gravatar_id":"","url":"https://api.github.com/users/Yusspy","html_url":"https://github.com/Yusspy","followers_url":"https://api.github.com/users/Yusspy/followers","following_url":"https://api.github.com/users/Yusspy/following{/other_user}","gists_url":"https://api.github.com/users/Yusspy/gists{/gist_id}","starred_url":"https://api.github.com/users/Yusspy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Yusspy/subscriptions","organizations_url":"https://api.github.com/users/Yusspy/orgs","repos_url":"https://api.github.com/users/Yusspy/repos","events_url":"https://api.github.com/users/Yusspy/events{/privacy}","received_events_url":"https://api.github.com/users/Yusspy/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2017-01-04T04:33:44Z","updated_at":"2017-01-04T04:49:06Z","closed_at":"2017-01-04T04:49:06Z","author_association":"NONE","body":"To update libGDX, one must open the build.gradle file in their libGDX Gradle project and change the version specification of gdxVersion to whichever version they choose. In my testing project, I realized it was out of date and updated the project as usual. This time, however, everywhere that a Bullet reference was located, and error showed up. After some digging, I found that the gdx-bullet.jar had completely disappeared from all projects. After multiple Gradle updates to see where this issue occurs, I discovered that when updating to any libGDX build over version 1.9.2, the jar disappears completely and all you are left with is gdx-bullet-platform.jar that contains nothing but a META-INF file inside. I believe this is a bug as it occurs with other libGDX projects.\r\n\r\nIf its of any importance, this project was originally created in version 1.7.0.\r\n\r\nFor a reference, here is the build.gradle file:\r\n\r\n<br><br><br>\r\n<b>\r\nbuildscript {\r\n    repositories {\r\n        mavenCentral()\r\n        maven { url \"https://oss.sonatype.org/content/repositories/snapshots/\" }\r\n        jcenter()\r\n    }\r\n    dependencies {\r\n        classpath 'de.richsource.gradle.plugins:gwt-gradle-plugin:0.6'\r\n    }\r\n}\r\n\r\nallprojects {\r\n    apply plugin: \"eclipse\"\r\n    apply plugin: \"idea\"\r\n\r\n    version = '1.0'\r\n    ext {\r\n        appName = \"JBox2D_Workspace\"\r\n        gdxVersion = '1.9.2'\r\n        roboVMVersion = '1.8.0'\r\n        box2DLightsVersion = '1.4'\r\n        ashleyVersion = '1.6.0'\r\n        aiVersion = '1.5.0'\r\n    }\r\n\r\n    repositories {\r\n        mavenCentral()\r\n        maven { url \"https://oss.sonatype.org/content/repositories/snapshots/\" }\r\n        maven { url \"https://oss.sonatype.org/content/repositories/releases/\" }\r\n    }\r\n}\r\n\r\nproject(\":desktop\") {\r\n    apply plugin: \"java\"\r\n\r\n\r\n    dependencies {\r\n        compile project(\":core\")\r\n        compile \"com.badlogicgames.gdx:gdx-backend-lwjgl:$gdxVersion\"\r\n        compile \"com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop\"\r\n        compile \"com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-desktop\"\r\n        compile \"com.badlogicgames.gdx:gdx-controllers-desktop:$gdxVersion\"\r\n        compile \"com.badlogicgames.gdx:gdx-controllers-platform:$gdxVersion:natives-desktop\"\r\n        compile \"com.badlogicgames.gdx:gdx-bullet-platform:$gdxVersion:natives-desktop\"\r\n    }\r\n}\r\n\r\nproject(\":html\") {\r\n    apply plugin: \"gwt\"\r\n    apply plugin: \"war\"\r\n\r\n\r\n    dependencies {\r\n        compile project(\":core\")\r\n        compile \"com.badlogicgames.gdx:gdx-backend-gwt:$gdxVersion\"\r\n        compile \"com.badlogicgames.gdx:gdx:$gdxVersion:sources\"\r\n        compile \"com.badlogicgames.gdx:gdx-backend-gwt:$gdxVersion:sources\"\r\n        compile \"com.badlogicgames.gdx:gdx-box2d:$gdxVersion:sources\"\r\n        compile \"com.badlogicgames.gdx:gdx-box2d-gwt:$gdxVersion:sources\"\r\n        compile \"com.badlogicgames.gdx:gdx-controllers:$gdxVersion:sources\"\r\n        compile \"com.badlogicgames.gdx:gdx-controllers-gwt:$gdxVersion\"\r\n        compile \"com.badlogicgames.gdx:gdx-controllers-gwt:$gdxVersion:sources\"\r\n        compile \"com.badlogicgames.box2dlights:box2dlights:$box2DLightsVersion:sources\"\r\n    }\r\n}\r\n\r\nproject(\":core\") {\r\n    apply plugin: \"java\"\r\n\r\n\r\n    dependencies {\r\n        compile \"com.badlogicgames.gdx:gdx:$gdxVersion\"\r\n        compile \"com.badlogicgames.gdx:gdx-box2d:$gdxVersion\"\r\n        compile \"com.badlogicgames.gdx:gdx-controllers:$gdxVersion\"\r\n        compile \"com.badlogicgames.box2dlights:box2dlights:$box2DLightsVersion\"\r\n        compile \"com.badlogicgames.gdx:gdx-bullet-platform:$gdxVersion\"\r\n       \r\n    }\r\n}\r\n\r\ntasks.eclipse.doLast {\r\n    delete \".project\"\r\n}</b>","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4516/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4515","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4515/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4515/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4515/events","html_url":"https://github.com/libgdx/libgdx/issues/4515","id":198349931,"number":4515,"title":"[BUG] [LWJGL3] GLProfiler stats not counting after GLProfiler.reset()","user":{"login":"sreich","id":1508497,"avatar_url":"https://avatars1.githubusercontent.com/u/1508497?v=4","gravatar_id":"","url":"https://api.github.com/users/sreich","html_url":"https://github.com/sreich","followers_url":"https://api.github.com/users/sreich/followers","following_url":"https://api.github.com/users/sreich/following{/other_user}","gists_url":"https://api.github.com/users/sreich/gists{/gist_id}","starred_url":"https://api.github.com/users/sreich/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sreich/subscriptions","organizations_url":"https://api.github.com/users/sreich/orgs","repos_url":"https://api.github.com/users/sreich/repos","events_url":"https://api.github.com/users/sreich/events{/privacy}","received_events_url":"https://api.github.com/users/sreich/received_events","type":"User","site_admin":false},"labels":[{"id":309796149,"url":"https://api.github.com/repos/libgdx/libgdx/labels/LWJGL3","name":"LWJGL3","color":"d4c5f9","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2017-01-02T15:30:48Z","updated_at":"2017-06-25T13:46:22Z","closed_at":"2017-06-25T13:46:22Z","author_association":"CONTRIBUTOR","body":"#### Issue details\r\nwith the lwjgl3 backend, at init running GLProfiler.enable() and then in render, do a batch draw, print counters and call GLProfiler.reset. counters will not update after that, ONLY on lwjgl3 backend. on lwjgl2 backend it works fine.\r\n\r\n#### Reproduction steps/code\r\n* use lwjgl3 backend\r\n* at init call GLProfiler.enable()\r\n* render anything (spritebatch is fine)\r\n* print the GLProfiler.drawCalls counter, for example\r\n* GLProfiler.reset()\r\n* counters never go beyond 0 anymore, after that reset\r\n\r\na workaround for this i found is after the reset to call GLProfiler.enable() -- obviously this isn't meant to be called, but it fixes it. i've no idea how lwjgl3 manages to affect this sort of thing, as it is just a rather simple interception of gl calls, which all go through libgdx first.\r\n\r\n```\r\n\r\npublic class GLProfilerTestCaseIssue extends ApplicationAdapter {\r\n    SpriteBatch batch;\r\n    Texture texture;\r\n\r\n    public void create() {\r\n        GLProfiler.enable();\r\n        batch = new SpriteBatch();\r\n        Pixmap pixmap = new Pixmap(16, 16, Pixmap.Format.RGBA8888);\r\n        pixmap.setColor(Color.RED);\r\n        pixmap.fill();\r\n        texture = new Texture(pixmap);\r\n    }\r\n\r\n    public void render() {\r\n        Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);\r\n        batch.begin();\r\n        batch.draw(texture, 100, 100);\r\n        batch.end();\r\n\r\n        //draw calls printed as 1 the first frame, 0 every frame after!\r\n        System.out.println(\"draw calls:\" + GLProfiler.drawCalls);\r\n        GLProfiler.reset();\r\n\r\n        //if we add:\r\n        //GLProfiler.enable();\r\n        //here every frame, it magically counts properly. obviously that isn't the right way\r\n    }\r\n\r\n    public static void main(String[] args) throws Exception {\r\n        Lwjgl3ApplicationConfiguration config = new Lwjgl3ApplicationConfiguration();\r\n        config.setWindowedMode(640, 480);\r\n        new Lwjgl3Application(new GLProfilerTestCaseIssue(), config);\r\n    }\r\n}\r\n\r\n\r\n```\r\n#### Version of LibGDX and/or relevant dependencies\r\nlwjgl3 backend - libgdx 1.9.4 and 1.9.5 confirmed.\r\n\r\n#### Please select the affected platforms\r\n- [ ] Android\r\n- [ ] iOS (robovm)\r\n- [ ] iOS (MOE)\r\n- [ ] HTML/GWT\r\n- [ ] Windows\r\n- [X] Linux\r\n- [ ] MacOS\r\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4515/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4514","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4514/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4514/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4514/events","html_url":"https://github.com/libgdx/libgdx/issues/4514","id":198183828,"number":4514,"title":"Timer only triggering repeat task in foreground.","user":{"login":"vedi0boy","id":4818003,"avatar_url":"https://avatars3.githubusercontent.com/u/4818003?v=4","gravatar_id":"","url":"https://api.github.com/users/vedi0boy","html_url":"https://github.com/vedi0boy","followers_url":"https://api.github.com/users/vedi0boy/followers","following_url":"https://api.github.com/users/vedi0boy/following{/other_user}","gists_url":"https://api.github.com/users/vedi0boy/gists{/gist_id}","starred_url":"https://api.github.com/users/vedi0boy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vedi0boy/subscriptions","organizations_url":"https://api.github.com/users/vedi0boy/orgs","repos_url":"https://api.github.com/users/vedi0boy/repos","events_url":"https://api.github.com/users/vedi0boy/events{/privacy}","received_events_url":"https://api.github.com/users/vedi0boy/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-12-30T19:11:36Z","updated_at":"2016-12-30T20:04:50Z","closed_at":"2016-12-30T20:04:50Z","author_association":"NONE","body":"#### Issue details\r\nWhen I use the [Timer](https://libgdx.badlogicgames.com/nightlies/docs/api/com/badlogic/gdx/utils/Timer.html#scheduleTask-com.badlogic.gdx.utils.Timer.Task-float-float-) it only ticks the timer if the program is in the foreground. I looked through the documentation and there doesn't seem to be a way to allow it in background as well. I think this should be implemented since Timer is not only used for foreground tasks.\r\n\r\n#### Reproduction steps/code\r\n1. Set up a repeated task with the Timer\r\n2. Run the game\r\n3. Focus view on another window other than the game\r\n4. Task no longer happens until returning to game window\r\n\r\n#### Version of LibGDX and/or relevant dependencies\r\n1.9.4\r\n\r\n#### Please select the affected platforms\r\n- [x] Windows (Only one I tested)\r\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4514/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4513","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4513/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4513/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4513/events","html_url":"https://github.com/libgdx/libgdx/pull/4513","id":198047559,"number":4513,"title":"Lwjgl3Input delegates to InputEventQueue for event timestamps.","user":{"login":"benjamin-heasly","id":1950775,"avatar_url":"https://avatars0.githubusercontent.com/u/1950775?v=4","gravatar_id":"","url":"https://api.github.com/users/benjamin-heasly","html_url":"https://github.com/benjamin-heasly","followers_url":"https://api.github.com/users/benjamin-heasly/followers","following_url":"https://api.github.com/users/benjamin-heasly/following{/other_user}","gists_url":"https://api.github.com/users/benjamin-heasly/gists{/gist_id}","starred_url":"https://api.github.com/users/benjamin-heasly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/benjamin-heasly/subscriptions","organizations_url":"https://api.github.com/users/benjamin-heasly/orgs","repos_url":"https://api.github.com/users/benjamin-heasly/repos","events_url":"https://api.github.com/users/benjamin-heasly/events{/privacy}","received_events_url":"https://api.github.com/users/benjamin-heasly/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-12-29T18:17:37Z","updated_at":"2017-01-04T23:37:59Z","closed_at":"2017-01-04T23:37:59Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4513","html_url":"https://github.com/libgdx/libgdx/pull/4513","diff_url":"https://github.com/libgdx/libgdx/pull/4513.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4513.patch"},"body":"Would close #4512.\r\n\r\nSuggest that `Lwjgl3Input` should delegate to its `InputEventQueue` for event timestamp reporting, instead of keeping its own `currentEventTime` field.","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4513/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4512","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4512/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4512/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4512/events","html_url":"https://github.com/libgdx/libgdx/issues/4512","id":198047400,"number":4512,"title":"Lwjgl3 backend report event timestamp instead of current time.","user":{"login":"benjamin-heasly","id":1950775,"avatar_url":"https://avatars0.githubusercontent.com/u/1950775?v=4","gravatar_id":"","url":"https://api.github.com/users/benjamin-heasly","html_url":"https://github.com/benjamin-heasly","followers_url":"https://api.github.com/users/benjamin-heasly/followers","following_url":"https://api.github.com/users/benjamin-heasly/following{/other_user}","gists_url":"https://api.github.com/users/benjamin-heasly/gists{/gist_id}","starred_url":"https://api.github.com/users/benjamin-heasly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/benjamin-heasly/subscriptions","organizations_url":"https://api.github.com/users/benjamin-heasly/orgs","repos_url":"https://api.github.com/users/benjamin-heasly/repos","events_url":"https://api.github.com/users/benjamin-heasly/events{/privacy}","received_events_url":"https://api.github.com/users/benjamin-heasly/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-12-29T18:16:24Z","updated_at":"2017-01-04T23:37:59Z","closed_at":"2017-01-04T23:37:59Z","author_association":"CONTRIBUTOR","body":"This is a feature request and PR that would affect the Lwjgl3 backend.  It's about reporting of input event timestamps to users.  \r\n\r\n## Background\r\nI think the expected way to access event timestamps is to call `Gdx.input.getCurrentEventTime()` during `InputProcessor` callbacks like `keyUp()`.  For example:\r\n```\r\n    @Override\r\n    public boolean keyUp(int keycode) {\r\n        System.out.println(\"Event time is: \" + Gdx.input.getCurrentEventTime());\r\n        return false;\r\n    }\r\n```\r\n From the [comments/docs](https://github.com/libgdx/libgdx/blob/master/gdx/src/com/badlogic/gdx/Input.java#L709), this should return the timestamp of the current event being handled.\r\n\r\n## Current State\r\nI think the current implementation of `Lwjgl3Input` is actually returning the time when the most recent event was enqueued for processing, rather than the time when the currently-being-handled event occurred.\r\n\r\nThis is because the `Lwjgl3Input.currentEventTime` is only updated as events are enqueued, and then reported to the user during `getCurrentEventTime()`.\r\n\r\nSo, the timestamps for events that were enqueued earlier might be ignored and replaced with a later time stamp.\r\n\r\n## Suggested Change\r\nI suggest that `Lwjgl3Input` should report event timestamps by delegating to its `InputEventQueue`, instead of keeping its own `currentEventTime` field.\r\n\r\nThis would take advantage of the fact that `InputEventQueue` updates its own `currentEventTime` field each time it dequeues an event and makes an `InputProcessor` callback.\r\n\r\nHere is a PR with the specific change that I suggest: #4513.\r\n\r\n## Happiness\r\nThank you very much for libgdx!  It is a great project and I am excited to be working with it!","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4512/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4511","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4511/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4511/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4511/events","html_url":"https://github.com/libgdx/libgdx/issues/4511","id":197937285,"number":4511,"title":"iOS Accelerometer broken using MOE","user":{"login":"aaimister","id":818073,"avatar_url":"https://avatars1.githubusercontent.com/u/818073?v=4","gravatar_id":"","url":"https://api.github.com/users/aaimister","html_url":"https://github.com/aaimister","followers_url":"https://api.github.com/users/aaimister/followers","following_url":"https://api.github.com/users/aaimister/following{/other_user}","gists_url":"https://api.github.com/users/aaimister/gists{/gist_id}","starred_url":"https://api.github.com/users/aaimister/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aaimister/subscriptions","organizations_url":"https://api.github.com/users/aaimister/orgs","repos_url":"https://api.github.com/users/aaimister/repos","events_url":"https://api.github.com/users/aaimister/events{/privacy}","received_events_url":"https://api.github.com/users/aaimister/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2016-12-29T00:49:50Z","updated_at":"2016-12-29T01:30:19Z","closed_at":null,"author_association":"NONE","body":"#### Issue details\r\nI updated to the lastest LibGDX [1.9.5] & MOE [1.2.5] versions and this broke the Accelerometer on iOS.\r\nThe Accelerometer works with LibGDX [1.9.5], MOE[1.2.2] & Build Tools [1.5.0].\r\nThis may be an issue with the newest version of MOE and not LibGDX.\r\n\r\n#### Reproduction steps/code\r\nYou can test using my current project at: http://pastebin.com/xxb8KKAL\r\n\r\n#### Version of LibGDX and/or relevant dependencies\r\nLibGDX 1.9.5\r\nMOE 1.2.5\r\nBuild Tools 2.2.0\r\n\r\n#### Stacktrace\r\nnone\r\n\r\n#### Please select the affected platforms\r\n- [ ] Android\r\n- [ ] iOS (robovm)\r\n- [X] iOS (MOE)\r\n- [ ] HTML/GWT\r\n- [ ] Windows\r\n- [ ] Linux\r\n- [ ] MacOS\r\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4511/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4510","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4510/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4510/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4510/events","html_url":"https://github.com/libgdx/libgdx/issues/4510","id":197749530,"number":4510,"title":"Performance improvement when clearing *Map classes","user":{"login":"tdionizio","id":13252863,"avatar_url":"https://avatars3.githubusercontent.com/u/13252863?v=4","gravatar_id":"","url":"https://api.github.com/users/tdionizio","html_url":"https://github.com/tdionizio","followers_url":"https://api.github.com/users/tdionizio/followers","following_url":"https://api.github.com/users/tdionizio/following{/other_user}","gists_url":"https://api.github.com/users/tdionizio/gists{/gist_id}","starred_url":"https://api.github.com/users/tdionizio/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tdionizio/subscriptions","organizations_url":"https://api.github.com/users/tdionizio/orgs","repos_url":"https://api.github.com/users/tdionizio/repos","events_url":"https://api.github.com/users/tdionizio/events{/privacy}","received_events_url":"https://api.github.com/users/tdionizio/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-12-27T19:49:25Z","updated_at":"2016-12-27T19:49:25Z","closed_at":null,"author_association":"CONTRIBUTOR","body":"When clearing a Map instance the `keyTable` array is traversed in reverse order when setting the array elements to `EMPTY`, thus clearing the array.\r\n\r\nWhen iterating in 'normal' order the JVM seems to be able to optimize the loop and can see great improvements.\r\n\r\nCurrent code (excerpt from IntIntMap.clear()):\r\n```java\r\nfor (int i = capacity + stashSize; i-- > 0;)\r\n\tkeyTable[i] = EMPTY;\r\n```\r\n\r\nChanging it to\r\n```java\r\nfor (int i = 0, n = capacity + stashSize; i < n; i++)\r\n\tkeyTable[i] = EMPTY;\r\n```\r\n\r\nor even using `Arrays.fill(keyTable, 0, capacity + stashSize, EMPTY);` brings noticable performance improvements.\r\n\r\nStumbled upon it when doing tests with ModelCache and changing the IntIntMap as mentioned brought an improvement from ~200 to ~250 fps (just for reference, ignoring what and how it was being tested) clearly showing this change can be useful.\r\n\r\nOther Map classes should be changed in the same way.\r\n\r\nCan contribute with a push request, just can't do it sometime soon, but leaving this suggestion in case someone has any interest in doing it first.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4510/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4509","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4509/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4509/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4509/events","html_url":"https://github.com/libgdx/libgdx/issues/4509","id":197677561,"number":4509,"title":"NetJavaImpl prevents creating more then one asynchronous http request ","user":{"login":"doronn","id":10085790,"avatar_url":"https://avatars1.githubusercontent.com/u/10085790?v=4","gravatar_id":"","url":"https://api.github.com/users/doronn","html_url":"https://github.com/doronn","followers_url":"https://api.github.com/users/doronn/followers","following_url":"https://api.github.com/users/doronn/following{/other_user}","gists_url":"https://api.github.com/users/doronn/gists{/gist_id}","starred_url":"https://api.github.com/users/doronn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/doronn/subscriptions","organizations_url":"https://api.github.com/users/doronn/orgs","repos_url":"https://api.github.com/users/doronn/repos","events_url":"https://api.github.com/users/doronn/events{/privacy}","received_events_url":"https://api.github.com/users/doronn/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-12-27T09:55:00Z","updated_at":"2016-12-27T09:55:00Z","closed_at":null,"author_association":"NONE","body":"#### Issue details\r\nWhen trying to make a http request, which has a long processing time, and at the same time create another short request (or any) the second request is blocked until the first one returns.\r\n\r\n#### Reproduction steps/code\r\nMake a 'Long poll' request to your server with one http request\r\nnow while this one is processing try and make another request to get other data from your server.\r\nfirst call will block second call.\r\n\r\n#### Version of LibGDX and/or relevant dependencies\r\n1.7.0 (latest NetJavaImpl.java version)\r\n\r\n- [* ] Android\r\n- [* ] iOS (robovm)\r\n- [* ] iOS (MOE)\r\n- [* ] HTML/GWT\r\n- [* ] Windows\r\n- [* ] Linux\r\n- [* ] MacOS\r\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4509/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4508","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4508/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4508/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4508/events","html_url":"https://github.com/libgdx/libgdx/issues/4508","id":197644356,"number":4508,"title":"[Feature Request] Input Emulation","user":{"login":"nhydock","id":316728,"avatar_url":"https://avatars0.githubusercontent.com/u/316728?v=4","gravatar_id":"","url":"https://api.github.com/users/nhydock","html_url":"https://github.com/nhydock","followers_url":"https://api.github.com/users/nhydock/followers","following_url":"https://api.github.com/users/nhydock/following{/other_user}","gists_url":"https://api.github.com/users/nhydock/gists{/gist_id}","starred_url":"https://api.github.com/users/nhydock/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nhydock/subscriptions","organizations_url":"https://api.github.com/users/nhydock/orgs","repos_url":"https://api.github.com/users/nhydock/repos","events_url":"https://api.github.com/users/nhydock/events{/privacy}","received_events_url":"https://api.github.com/users/nhydock/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2016-12-27T04:30:36Z","updated_at":"2016-12-30T16:48:07Z","closed_at":"2016-12-30T16:48:06Z","author_association":"NONE","body":"With LibGDX providing an input abstraction for all backends, I feel it could be useful to also provide emulation features for the Input interface so developers may programmatically invoke input events.  \r\n\r\nSuch a feature can be used for testing UIs, testing game logic dependent on input, or even doing scripted tutorials, all while following through the standardized input handling interfaces.","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4508/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4507","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4507/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4507/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4507/events","html_url":"https://github.com/libgdx/libgdx/issues/4507","id":197601107,"number":4507,"title":"Ask about other libs integration","user":{"login":"tes1oner","id":10299991,"avatar_url":"https://avatars1.githubusercontent.com/u/10299991?v=4","gravatar_id":"","url":"https://api.github.com/users/tes1oner","html_url":"https://github.com/tes1oner","followers_url":"https://api.github.com/users/tes1oner/followers","following_url":"https://api.github.com/users/tes1oner/following{/other_user}","gists_url":"https://api.github.com/users/tes1oner/gists{/gist_id}","starred_url":"https://api.github.com/users/tes1oner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tes1oner/subscriptions","organizations_url":"https://api.github.com/users/tes1oner/orgs","repos_url":"https://api.github.com/users/tes1oner/repos","events_url":"https://api.github.com/users/tes1oner/events{/privacy}","received_events_url":"https://api.github.com/users/tes1oner/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-12-26T16:08:19Z","updated_at":"2016-12-26T17:32:01Z","closed_at":"2016-12-26T17:32:01Z","author_association":"NONE","body":"Please ensure you have given all the following requested information in your report.\r\n\r\n#### Issue details\r\n_It is possible to integrate LibGDX with other libraries, example for the use of web services, without this affecting the product in different platforms (eg iOS)_\r\n\r\n#### Detalles\r\n_Es posible integrar LibGDX con otras librerías, ejemplo para el uso de servicios web, sin que esto afecte el producto en las distintas plataformas(ej, iOS)_","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4507/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4506","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4506/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4506/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4506/events","html_url":"https://github.com/libgdx/libgdx/issues/4506","id":197586768,"number":4506,"title":"Create common interface for container classes in com.badlogic.gdx.utils","user":{"login":"danijelz","id":13315108,"avatar_url":"https://avatars3.githubusercontent.com/u/13315108?v=4","gravatar_id":"","url":"https://api.github.com/users/danijelz","html_url":"https://github.com/danijelz","followers_url":"https://api.github.com/users/danijelz/followers","following_url":"https://api.github.com/users/danijelz/following{/other_user}","gists_url":"https://api.github.com/users/danijelz/gists{/gist_id}","starred_url":"https://api.github.com/users/danijelz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/danijelz/subscriptions","organizations_url":"https://api.github.com/users/danijelz/orgs","repos_url":"https://api.github.com/users/danijelz/repos","events_url":"https://api.github.com/users/danijelz/events{/privacy}","received_events_url":"https://api.github.com/users/danijelz/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-12-26T13:12:39Z","updated_at":"2017-06-25T11:47:42Z","closed_at":"2017-06-25T11:47:42Z","author_association":"NONE","body":"Looks like all Collection/Map alike utility classes have at least two things in common - size and ability to clear. Utility methods that question object 'emptyness' would be much easier to implement if all those classes would share a common interface e.g.:\r\n\r\n    public interface Container {\r\n        int size();\r\n    \r\n        void clear();\r\n    }\r\n\r\nSome of classes already implement interface Iterable and the 'emptyness' could be checked by Iterator, but this triggers creating Iterator instance if there was no need for one before. \r\n\r\nThis interface could be implemented by:\r\n - Array\r\n - ArrayMap\r\n - BooleanArray\r\n - ObjectSet\r\n - ObjectMap\r\n - ObjectIntMap\r\n - ObjectFloatMap\r\n - LongMap\r\n - LongArray\r\n - IntSet\r\n - IntMap\r\n - IntIntMap\r\n - IntFloatMap\r\n - IntArray\r\n - IdentityMap\r\n - FloatArray\r\n - CharArray\r\n - ByteArray\r\n - BooleanArray\r\n - Queue\r\n - ShortArray\r\n - SortedIntList\r\n - PooledLinkedList\r\n\r\nThis could be a humble beginning for further API generalisation on this classes if needed.","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4506/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4505","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4505/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4505/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4505/events","html_url":"https://github.com/libgdx/libgdx/issues/4505","id":197535757,"number":4505,"title":"[Feature Request] Create a reset method for Gdx.input.getX and Y","user":{"login":"LogicWrite","id":24365725,"avatar_url":"https://avatars1.githubusercontent.com/u/24365725?v=4","gravatar_id":"","url":"https://api.github.com/users/LogicWrite","html_url":"https://github.com/LogicWrite","followers_url":"https://api.github.com/users/LogicWrite/followers","following_url":"https://api.github.com/users/LogicWrite/following{/other_user}","gists_url":"https://api.github.com/users/LogicWrite/gists{/gist_id}","starred_url":"https://api.github.com/users/LogicWrite/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/LogicWrite/subscriptions","organizations_url":"https://api.github.com/users/LogicWrite/orgs","repos_url":"https://api.github.com/users/LogicWrite/repos","events_url":"https://api.github.com/users/LogicWrite/events{/privacy}","received_events_url":"https://api.github.com/users/LogicWrite/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2016-12-26T04:47:48Z","updated_at":"2016-12-26T22:18:19Z","closed_at":"2016-12-26T22:18:19Z","author_association":"NONE","body":"this is the despription of the method `Gdx.input.getX()`\r\n\r\n`/** @return The x coordinate of the last touch on touch screen devices and the current mouse position on desktop for the first\r\n\t *         pointer in screen coordinates. The screen origin is the top left corner. */\r\n`\r\nwe should place a method for reset all the pointers to (0,0)\r\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4505/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4504","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4504/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4504/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4504/events","html_url":"https://github.com/libgdx/libgdx/issues/4504","id":197519727,"number":4504,"title":"Slider is not working within a ScrollPane","user":{"login":"rami-alisawi","id":5969503,"avatar_url":"https://avatars1.githubusercontent.com/u/5969503?v=4","gravatar_id":"","url":"https://api.github.com/users/rami-alisawi","html_url":"https://github.com/rami-alisawi","followers_url":"https://api.github.com/users/rami-alisawi/followers","following_url":"https://api.github.com/users/rami-alisawi/following{/other_user}","gists_url":"https://api.github.com/users/rami-alisawi/gists{/gist_id}","starred_url":"https://api.github.com/users/rami-alisawi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rami-alisawi/subscriptions","organizations_url":"https://api.github.com/users/rami-alisawi/orgs","repos_url":"https://api.github.com/users/rami-alisawi/repos","events_url":"https://api.github.com/users/rami-alisawi/events{/privacy}","received_events_url":"https://api.github.com/users/rami-alisawi/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-12-26T00:07:24Z","updated_at":"2016-12-27T16:01:05Z","closed_at":"2016-12-27T16:01:05Z","author_association":"NONE","body":"\r\n#### Issue details\r\nSlider is not working as expected when it is placed inside of a ScrollPane. Try to run the BarebonesStage and **drag** the knob to the end. The knob will jump to the start unexpectedly. In addition, ScrollPane does not scroll.\r\nIn my app, I need to have a scrollable list of sliders.\r\nThe slider works as expected outside of a ScrollPane.\r\n\r\n#### Reproduction steps/code\r\n\r\n`\r\npublic class BarebonesStage extends ApplicationAdapter {`\r\n\r\n    Stage stage;\r\n    public void create () {\r\n        stage = new Stage(new ScreenViewport());\r\n        Gdx.input.setInputProcessor(stage);\r\n        VerticalGroup mainvg= new VerticalGroup();\r\n        Skin skin = new Skin(Gdx.files.internal(\"uiskin.json\"));\r\n        mainvg.addActor(new Label(\"Header\", skin));\r\n        VerticalGroup content=new VerticalGroup();\r\n        content.addActor(new Slider(0,100,1,false,skin));\r\n        content.addActor(new Slider(0,100,1,false,skin));\r\n        content.addActor(new Slider(0,100,1,false,skin));\r\n        content.addActor(new Slider(0,100,1,false,skin));\r\n        content.addActor(new Slider(0,100,1,false,skin));\r\n        content.addActor(new Slider(0,100,1,false,skin));\r\n        content.addActor(new Slider(0,100,1,false,skin));\r\n        content.addActor(new Slider(0,100,1,false,skin));\r\n        content.addActor(new Slider(0,100,1,false,skin));\r\n        content.addActor(new Slider(0,100,1,false,skin));\r\n        content.addActor(new Slider(0,100,1,false,skin));\r\n        content.addActor(new Slider(0,100,1,false,skin));\r\n\r\n        mainvg.addActor(new Container(new ScrollPane(content)).height(200));\r\n        mainvg.addActor(new Label(\"Footer\", skin));\r\n\r\n        mainvg.addActor(new Label(\"Example of a working slider:\", skin));\r\n        mainvg.addActor(new Slider(0,100,1,false,skin));\r\n        mainvg.setFillParent(true);\r\n        stage.addActor(mainvg);\r\n    }\r\n\r\n    public void render () {\r\n        Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);\r\n        stage.draw();\r\n    }\r\n\r\n    public void resize (int width, int height) {\r\n        stage.getViewport().update(width, height, true);\r\n    }\r\n\r\n    public static void main (String[] args) throws Exception {\r\n        new LwjglApplication(new BarebonesStage());\r\n    }\r\n`}`\r\n\r\n#### Version of LibGDX and/or relevant dependencies\r\ngdxVersion = '1.9.5'\r\n\r\n#### Please select the affected platforms\r\nscene2d\r\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4504/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4503","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4503/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4503/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4503/events","html_url":"https://github.com/libgdx/libgdx/issues/4503","id":197374876,"number":4503,"title":"[Feature request] setDefaultHideAction() and setDefaultShowAction() for Dialog","user":{"login":"Betalord","id":22757675,"avatar_url":"https://avatars3.githubusercontent.com/u/22757675?v=4","gravatar_id":"","url":"https://api.github.com/users/Betalord","html_url":"https://github.com/Betalord","followers_url":"https://api.github.com/users/Betalord/followers","following_url":"https://api.github.com/users/Betalord/following{/other_user}","gists_url":"https://api.github.com/users/Betalord/gists{/gist_id}","starred_url":"https://api.github.com/users/Betalord/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Betalord/subscriptions","organizations_url":"https://api.github.com/users/Betalord/orgs","repos_url":"https://api.github.com/users/Betalord/repos","events_url":"https://api.github.com/users/Betalord/events{/privacy}","received_events_url":"https://api.github.com/users/Betalord/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-12-23T14:05:45Z","updated_at":"2016-12-23T14:55:00Z","closed_at":null,"author_association":"NONE","body":"Currently, the Dialog class does not provide a way to set actions that happen on hide() and show(). The source code uses some default hardcoded actions that cannot be changed (if not by manually calling show() and hide() methods, which is a problem, especially with hide() because it gets called automatically and you have no control over it):\r\n\r\n```\r\n\tpublic void hide () {\r\n\t\thide(sequence(fadeOut(0.4f, Interpolation.fade), Actions.removeListener(ignoreTouchDown, true), Actions.removeActor()));\r\n\t}\r\n\r\n\tpublic Dialog show (Stage stage) {\r\n\t\tshow(stage, sequence(Actions.alpha(0), Actions.fadeIn(0.4f, Interpolation.fade)));\r\n\t\tsetPosition(Math.round((stage.getWidth() - getWidth()) / 2), Math.round((stage.getHeight() - getHeight()) / 2));\r\n\t\treturn this;\r\n\t}\r\n```\r\n\r\nSo I think it would be very useful to have the following methods:\r\n\r\n```\r\nprivate Action showAction, hideAction;\r\n\r\npublic void setDefaultShowAction(Action showAction) {\r\n\tthis.showAction = showAction;\r\n}\r\n\r\npublic void setDefaultHideAction(Action hideAction) {\r\n\tthis.hideAction = hideAction;\r\n}\r\n```\r\n\r\nThat would then be used as following:\r\n\r\n```\r\n\tpublic void hide () {\r\n\t\thide(hideAction);\r\n\t}\r\n\r\n\tpublic Dialog show (Stage stage) {\r\n\t\tshow(stage, showAction);\r\n\t\tsetPosition(Math.round((stage.getWidth() - getWidth()) / 2), Math.round((stage.getHeight() - getHeight()) / 2));\r\n\t\treturn this;\r\n\t}\r\n```","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4503/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4502","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4502/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4502/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4502/events","html_url":"https://github.com/libgdx/libgdx/pull/4502","id":197285188,"number":4502,"title":"Fixes #4501, iOS-MOE compatibility with Xcode 8.1","user":{"login":"kerberjg","id":16939117,"avatar_url":"https://avatars1.githubusercontent.com/u/16939117?v=4","gravatar_id":"","url":"https://api.github.com/users/kerberjg","html_url":"https://github.com/kerberjg","followers_url":"https://api.github.com/users/kerberjg/followers","following_url":"https://api.github.com/users/kerberjg/following{/other_user}","gists_url":"https://api.github.com/users/kerberjg/gists{/gist_id}","starred_url":"https://api.github.com/users/kerberjg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kerberjg/subscriptions","organizations_url":"https://api.github.com/users/kerberjg/orgs","repos_url":"https://api.github.com/users/kerberjg/repos","events_url":"https://api.github.com/users/kerberjg/events{/privacy}","received_events_url":"https://api.github.com/users/kerberjg/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-12-22T23:07:16Z","updated_at":"2017-01-25T15:26:28Z","closed_at":"2017-01-25T15:26:28Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4502","html_url":"https://github.com/libgdx/libgdx/pull/4502","diff_url":"https://github.com/libgdx/libgdx/pull/4502.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4502.patch"},"body":"Fixes Xcode 8.1 compatibility issues in `ios-moe` projects generated with `gdx-setup` (issue #4501 ) by changing the `moe-gradle` version from 1.2.3 to 1.2.5\r\n\r\nMOE 1.2.3 and earlier seem to not be compatible with Xcode 8.1, an issue that has since been solved in MOE 1.2.4 and newer. Upon changing the dependency version, I was able to successfully compile the iOS MOE project and run it on a iOS Simulator.\r\n\r\nSource: https://discuss.multi-os-engine.org/t/xcode-8-1-upgrade/292/10","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4502/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4501","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4501/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4501/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4501/events","html_url":"https://github.com/libgdx/libgdx/issues/4501","id":197265404,"number":4501,"title":"iOS MOE launch failing (Xcode 8.1 compatibility issue)","user":{"login":"kerberjg","id":16939117,"avatar_url":"https://avatars1.githubusercontent.com/u/16939117?v=4","gravatar_id":"","url":"https://api.github.com/users/kerberjg","html_url":"https://github.com/kerberjg","followers_url":"https://api.github.com/users/kerberjg/followers","following_url":"https://api.github.com/users/kerberjg/following{/other_user}","gists_url":"https://api.github.com/users/kerberjg/gists{/gist_id}","starred_url":"https://api.github.com/users/kerberjg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kerberjg/subscriptions","organizations_url":"https://api.github.com/users/kerberjg/orgs","repos_url":"https://api.github.com/users/kerberjg/repos","events_url":"https://api.github.com/users/kerberjg/events{/privacy}","received_events_url":"https://api.github.com/users/kerberjg/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2016-12-22T21:00:12Z","updated_at":"2017-05-15T20:41:36Z","closed_at":"2017-05-15T20:41:36Z","author_association":"CONTRIBUTOR","body":"I'm unable to launch the default base iOS-MOE project generated by gdx-setup\r\n\r\n#### Issue details\r\nI've attempted to compile other MOE samples and they launch without any problem. The only difference that I noticed is that the samples use MOE 1.2.5, while the libGDX project seems to use 1.2.3\r\n\r\nI'm not having any trouble with Android and Desktop backends of the same project.\r\n\r\n#### Reproduction steps/code\r\n1. Generate a project in gdx-setup with a ios-moe backend\r\n2. Import generated projects into Eclipse\r\n3. Run the \"ios-moe\" project as \"Multi-OS Engine iOS Application\"\r\n4. Fails after the \":ios-moe:moeLaunch\" task\r\n\r\n#### Version of LibGDX and/or relevant dependencies\r\n* Intel MOE 1.2.3\r\n* LibGDX 1.9.5\r\n* Gradle 2.10\r\n* Eclipse Neon 4.6.0\r\n* Xcode 8.1\r\n* macOS 10.11\r\n* Default iOS simulator: iOS 10.1\r\n\r\n#### Stacktrace\r\n```java\r\n:ios-moe:moeLaunch (Thread[Daemon worker Thread 5,5,main]) started.\r\n:ios-moe:moeLaunch\r\nExecuting task ':i\r\nos-moe:moeLaunch' (up-to-date check took 0.0 secs) due to:\r\n  Task has not declared any outputs.\r\nStarting process 'command '/Users/kerberjg/.moe/moe-sdk-1.2.3/tools/simlauncher''. Working directory: /Users/kerberjg/.moe/moe-sdk-1.2.3/tools Command: /Users/kerberjg/.moe/moe-sdk-1.2.3/tools/simlauncher --udid=A9F79815-B33C-41E5-A5DE-4AEE1561FA90 --app-path=/Users/kerberjg/git/gdxstudio-backends/ios-moe/build/moe/xcodebuild/Debug-iphonesimulator/ios-moe.app --launch-arg=-args\r\n\r\nSuccessfully started process 'command '/Users/kerberjg/.moe/moe-sdk-1.2.3/tools/simlauncher''\r\n\r\n2016-12-22 21:48:14.056 simlauncher[62113:868773] +[SimDeviceSet defaultSet]: unrecognized selector sent to class 0x105e3f118\r\n2016-12-22 21:48:14.057 simlauncher[62113:868773] *** Terminating app due to uncaught exception 'NSInvalidArgumentException', reason: '+[SimDeviceSet defaultSet]: unrecognized selector sent to class 0x105e3f118'\r\n*** First throw call stack:\r\n(\r\n\t0   CoreFoundation                      0x00007fff9404348b __exceptionPreprocess + 171\r\n\t1   libobjc.A.dylib                     0x00007fffa87a5cad objc_exception_throw + 48\r\n\t2   CoreFoundation                      0x00007fff940c4bd4 +[NSObject(NSObject) doesNotRecognizeSelector:] + 132\r\n\t3   CoreFoundation                      0x00007fff93fb5b55 ___forwarding___ + 1061\r\n\t4   CoreFoundation                      0x00007fff93fb56a8 _CF_forwarding_prep_0 + 120\r\n\t5   simlauncher                         0x00000001026d721d getSimDevice + 53\r\n\t6   simlauncher                         0x00000001026d6dbb moe_main + 569\r\n\t7   simlauncher                         0x\r\n00000001026d6b5c main + 275\r\n\t8   libdyld.dylib                       0x00007fffa9084255 start + 1\r\n)\r\nlibc++abi.dylib: terminating with uncaught exception of type NSException\r\nCommand failed: [null]\r\n\r\n\r\nFAILURE: Build failed with an exception.\r\n\r\n* What went wrong:\r\nExecution failed for task ':ios-moe:moeLaunch'.\r\n> Process exited with non-zero exit value\r\n\r\n* Try:\r\nRun with --debug option to get more log output.\r\n\r\n* Exception is:\r\n\r\n:ios-moe:moeLaunch FAILED\r\n:ios-moe:moeLaunch (Thread[Daemon worker Thread 5,5,main]) completed. Took 0.264 secs.\r\n\r\norg.gradle.api.tasks.TaskExecutionException: Execution failed for task ':ios-moe:moeLaunch'.\r\n\tat org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeActions(ExecuteActionsTaskExecuter.java:69)\r\n\tat org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.execute(ExecuteActionsTaskExecuter.java:46)\r\n\tat org.gradle.api.internal.tasks.execution.PostExecutionAnalysisTaskExecuter.execute(PostExecutionAnalysisTaskExecuter.java:35)\r\n\tat org.gradle.api.internal.tasks.execution.SkipUpToDateTaskExecuter.execute(SkipUpToDateTaskExecuter.java:64)\r\n\tat org.gradle.api.internal.tasks.execution.ValidatingTaskExecuter.execute(ValidatingTaskExecuter.java:58)\r\n\tat org.gradle.api.internal.tasks.execution.SkipEmptySourceFilesTaskExecuter.execute(SkipEmptySourceFilesTaskExecuter.java:52)\r\n\tat org.gradle.api.internal.tasks.execution.SkipTaskWithNoActionsExecuter.execute(SkipTaskWithNoActionsExecuter.java:52)\r\n\tat org.gradle.api.internal.tasks.execution.SkipOnlyIfTaskExecuter.execute(SkipOnlyIfTaskExecuter.j\r\nava:53)\r\n\tat org.gradle.api.internal.tasks.execution.ExecuteAtMostOnceTaskExecuter.execute(ExecuteAtMostOnceTaskExecuter.java:43)\r\n\tat org.gradle.execution.taskgraph.DefaultTaskGraphExecuter$EventFiringTaskWorker.execute(DefaultTaskGraphExecuter.java:203)\r\n\tat org.gradle.execution.taskgraph.DefaultTaskGraphExecuter$EventFiringTaskWorker.execute(DefaultTaskGraphExecuter.java:185)\r\n\tat org.gradle.execution.taskgraph.AbstractTaskPlanExecutor$TaskExecutorWorker.processTask(AbstractTaskPlanExecutor.java:66)\r\n\tat org.gradle.execution.taskgraph.AbstractTaskPlanExecutor$TaskExecutorWorker.run(AbstractTaskPlanExecutor.java:50)\r\n\tat org.gradle.execution.taskgraph.DefaultTaskPlanExecutor.process(DefaultTaskPlanExecutor.java:25)\r\n\tat org.gradle.execution.taskgraph.DefaultTaskGraphExecuter.execute(DefaultTaskGraphExecuter.java:110)\r\n\tat org.gradle.execution.SelectedTaskExecutionAction.execute(SelectedTaskExecutionAction.java:37)\r\n\tat org.gradle.execution.DefaultBuildExecuter.execute(DefaultBuildExecuter.java:37)\r\n\tat org.gradle.exe\r\ncution.DefaultBuildExecuter.access$000(DefaultBuildExecuter.java:23)\r\n\tat org.gradle.execution.DefaultBuildExecuter$1.proceed(DefaultBuildExecuter.java:43)\r\n\tat org.gradle.execution.DryRunBuildExecutionAction.execute(DryRunBuildExecutionAction.java:32)\r\n\tat org.gradle.execution.DefaultBuildExecuter.execute(DefaultBuildExecuter.java:37)\r\n\tat org.gradle.execution.DefaultBuildExecuter.execute(DefaultBuildExecuter.java:30)\r\n\tat org.gradle.initialization.DefaultGradleLauncher$4.run(DefaultGradleLauncher.java:154)\r\n\tat org.gradle.internal.Factories$1.create(Factories.java:22)\r\n\tat org.gradle.internal.progress.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:90)\r\n\tat org.gradle.internal.progress.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:52)\r\n\tat org.gradle.initialization.DefaultGradleLauncher.doBuildStages(DefaultGradleLauncher.java:151)\r\n\tat org.gradle.initialization.DefaultGradleLauncher.access$200(DefaultGradleLauncher.java:32)\r\n\tat org.gradle.initialization.DefaultGradleLaunch\r\ner$1.create(DefaultGradleLauncher.java:99)\r\n\tat org.gradle.initialization.DefaultGradleLauncher$1.create(DefaultGradleLauncher.java:93)\r\n\tat org.gradle.internal.progress.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:90)\r\n\tat org.gradle.internal.progress.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:62)\r\n\tat org.gradle.initialization.DefaultGradleLauncher.doBuild(DefaultGradleLauncher.java:93)\r\n\tat org.gradle.initialization.DefaultGradleLauncher.run(DefaultGradleLauncher.java:82)\r\n\tat org.gradle.launcher.exec.InProcessBuildActionExecuter$DefaultBuildController.run(InProcessBuildActionExecuter.java:94)\r\n\tat org.gradle.tooling.internal.provider.ExecuteBuildActionRunner.run(ExecuteBuildActionRunner.java:28)\r\n\tat org.gradle.launcher.exec.ChainingBuildActionRunner.run(ChainingBuildActionRunner.java:35)\r\n\tat org.gradle.launcher.exec.InProcessBuildActionExecuter.execute(InProcessBuildActionExecuter.java:43)\r\n\tat org.gradle.launcher.exec.InProcessBuildActionExecuter.execute(InProces\r\nsBuildActionExecuter.java:28)\r\n\tat org.gradle.launcher.exec.ContinuousBuildActionExecuter.execute(ContinuousBuildActionExecuter.java:78)\r\n\tat org.gradle.launcher.exec.ContinuousBuildActionExecuter.execute(ContinuousBuildActionExecuter.java:48)\r\n\tat org.gradle.launcher.daemon.server.exec.ExecuteBuild.doBuild(ExecuteBuild.java:52)\r\n\tat org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:36)\r\n\tat org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:120)\r\n\tat org.gradle.launcher.daemon.server.exec.WatchForDisconnection.execute(WatchForDisconnection.java:37)\r\n\tat org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:120)\r\n\tat org.gradle.launcher.daemon.server.exec.ResetDeprecationLogger.execute(ResetDeprecationLogger.java:26)\r\n\tat org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:120)\r\n\tat org.gradle.launcher.daemon.server.exec.RequestStopIfSingleUsedDaemon.e\r\nxecute(RequestStopIfSingleUsedDaemon.java:34)\r\n\tat org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:120)\r\n\tat org.gradle.launcher.daemon.server.exec.ForwardClientInput$2.call(ForwardClientInput.java:74)\r\n\tat org.gradle.launcher.daemon.server.exec.ForwardClientInput$2.call(ForwardClientInput.java:72)\r\n\tat org.gradle.util.Swapper.swap(Swapper.java:38)\r\n\tat org.gradle.launcher.daemon.server.exec.ForwardClientInput.execute(ForwardClientInput.java:72)\r\n\tat org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:120)\r\n\tat org.gradle.launcher.daemon.server.health.DaemonHealthTracker.execute(DaemonHealthTracker.java:47)\r\n\tat org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:120)\r\n\tat org.gradle.launcher.daemon.server.exec.LogToClient.doBuild(LogToClient.java:66)\r\n\tat org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:36)\r\n\tat org.gradle.launcher.daemon.server.\r\napi.DaemonCommandExecution.proceed(DaemonCommandExecution.java:120)\r\n\tat org.gradle.launcher.daemon.server.exec.EstablishBuildEnvironment.doBuild(EstablishBuildEnvironment.java:72)\r\n\tat org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:36)\r\n\tat org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:120)\r\n\tat org.gradle.launcher.daemon.server.health.HintGCAfterBuild.execute(HintGCAfterBuild.java:41)\r\n\tat org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:120)\r\n\tat org.gradle.launcher.daemon.server.exec.StartBuildOrRespondWithBusy$1.run(StartBuildOrRespondWithBusy.java:50)\r\n\tat org.gradle.launcher.daemon.server.DaemonStateCoordinator$1.run(DaemonStateCoordinator.java:246)\r\n\tat org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:54)\r\n\tat org.gradle.internal.concurrent.StoppableExecutorImpl$1.run(StoppableExecutorImpl.java:40)\r\nCaused by: org.gradle.api.G\r\nradleException: Process exited with non-zero exit value\r\n\tat org.moe.gradle.utils.TaskUtils.exec(TaskUtils.java:143)\r\n\tat org.moe.gradle.tasks.Launchers.lambda$setupDevicesAndSimulators$17(Launchers.java:880)\r\n\tat org.moe.gradle.tasks.Launchers$$Lambda$158/1081535708.execute(Unknown Source)\r\n\tat org.gradle.api.internal.AbstractTask$TaskActionWrapper.execute(AbstractTask.java:585)\r\n\tat org.gradle.api.internal.AbstractTask$TaskActionWrapper.execute(AbstractTask.java:568)\r\n\tat org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeAction(ExecuteActionsTaskExecuter.java:80)\r\n\tat org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeActions(ExecuteActionsTaskExecuter.java:61)\r\n\t... 68 more\r\n\r\n\r\n\r\nBUILD FAILED\r\n\r\nTotal time: 1.483 secs\r\n\r\nStopped 0 compiler daemon(s).\r\n\r\nReceived result Failure[value=org.gradle.initialization.ReportedException: org.gradle.internal.exceptions.LocationAwareException: Execution failed for task ':ios-moe:moeLaunch'.] from daemon DaemonInfo{pid=61081, address=[5b055eef-0559-41f2-897f-13c9d1553e98 port:59916, addresses:[/0:0:0:0:0:0:0:1, /127.0.0.1]], idle=true, context=DefaultDaemonContext[uid=a51760cd-a8e5-40f4-96c6-c83fdf0999b0,javaHome=/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home,daemonRegistryDir=/Users/kerberjg/.gradle/daemon,pid=61081,idleTimeout=10800000,daemonOpts=-Xms128m,-Xmx1500m,-Dfile.encoding=UTF-8,-Duser.country=US,-Duser.language=en,-Duser.variant]} (build should be done).\r\n```\r\n\r\n#### Please select the affected platforms\r\n- [ ] Android\r\n- [ ] iOS (robovm)\r\n- [x] iOS (MOE)\r\n- [ ] HTML/GWT\r\n- [ ] Windows\r\n- [ ] Linux\r\n- [ ] MacOS\r\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4501/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4500","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4500/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4500/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4500/events","html_url":"https://github.com/libgdx/libgdx/issues/4500","id":197184513,"number":4500,"title":"[GWT] gwt compile failed","user":{"login":"vinou31","id":10153311,"avatar_url":"https://avatars1.githubusercontent.com/u/10153311?v=4","gravatar_id":"","url":"https://api.github.com/users/vinou31","html_url":"https://github.com/vinou31","followers_url":"https://api.github.com/users/vinou31/followers","following_url":"https://api.github.com/users/vinou31/following{/other_user}","gists_url":"https://api.github.com/users/vinou31/gists{/gist_id}","starred_url":"https://api.github.com/users/vinou31/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vinou31/subscriptions","organizations_url":"https://api.github.com/users/vinou31/orgs","repos_url":"https://api.github.com/users/vinou31/repos","events_url":"https://api.github.com/users/vinou31/events{/privacy}","received_events_url":"https://api.github.com/users/vinou31/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2016-12-22T14:19:53Z","updated_at":"2016-12-22T15:46:41Z","closed_at":"2016-12-22T14:22:25Z","author_association":"NONE","body":"#### Issue details\r\nI cloned the master depository because I needed to check on what was the problem with the freetypeFontGenerator and gwt. But before doing anything I wanted to test my clone on gwt so I launch a gwtCompile  on gdx-tests-gwt but it failed.\r\nI took the liberty to change the gwt version to 2.8.0 since I spotted that in the gdx-test-gwt build.gradle it was still referencing 2.6.0. But the bug remain\r\n\r\n#### Version of LibGDX and/or relevant dependencies\r\nLibgdx 1.9.6-Snapshot\r\nGwt 2.8.0\r\n\r\n#### Stacktrace\r\n:tests:gdx-tests-gwt:compileGwt FAILED\r\n\r\nFAILURE: Build failed with an exception.\r\n\r\n* What went wrong:\r\nExecution failed for task ':tests:gdx-tests-gwt:compileGwt'.\r\n> Process 'command 'C:\\Program Files\\Java\\jdk1.8.0_73\\bin\\java.exe'' finished with non-zero exit value 1\r\n\r\n* Try:\r\nRun with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output.\r\n\r\nBUILD FAILED\r\n\r\n\r\n#### Please select the affected platforms\r\n- [ ] Android\r\n- [ ] iOS (robovm)\r\n- [ ] iOS (MOE)\r\n- [X] HTML/GWT\r\n- [ ] Windows\r\n- [ ] Linux\r\n- [ ] MacOS\r\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4500/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4499","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4499/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4499/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4499/events","html_url":"https://github.com/libgdx/libgdx/pull/4499","id":197025618,"number":4499,"title":"TextureAtlas hasRegion check","user":{"login":"BenMcLean","id":1747250,"avatar_url":"https://avatars1.githubusercontent.com/u/1747250?v=4","gravatar_id":"","url":"https://api.github.com/users/BenMcLean","html_url":"https://github.com/BenMcLean","followers_url":"https://api.github.com/users/BenMcLean/followers","following_url":"https://api.github.com/users/BenMcLean/following{/other_user}","gists_url":"https://api.github.com/users/BenMcLean/gists{/gist_id}","starred_url":"https://api.github.com/users/BenMcLean/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/BenMcLean/subscriptions","organizations_url":"https://api.github.com/users/BenMcLean/orgs","repos_url":"https://api.github.com/users/BenMcLean/repos","events_url":"https://api.github.com/users/BenMcLean/events{/privacy}","received_events_url":"https://api.github.com/users/BenMcLean/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-12-21T20:28:59Z","updated_at":"2016-12-21T20:42:25Z","closed_at":"2016-12-21T20:42:25Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4499","html_url":"https://github.com/libgdx/libgdx/pull/4499","diff_url":"https://github.com/libgdx/libgdx/pull/4499.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4499.patch"},"body":"This will let you check whether or not a region exists in the TextureAtlas.","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4499/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4498","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4498/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4498/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4498/events","html_url":"https://github.com/libgdx/libgdx/issues/4498","id":196555404,"number":4498,"title":"Widget cannot receive touchUp event.","user":{"login":"vedi0boy","id":4818003,"avatar_url":"https://avatars3.githubusercontent.com/u/4818003?v=4","gravatar_id":"","url":"https://api.github.com/users/vedi0boy","html_url":"https://github.com/vedi0boy","followers_url":"https://api.github.com/users/vedi0boy/followers","following_url":"https://api.github.com/users/vedi0boy/following{/other_user}","gists_url":"https://api.github.com/users/vedi0boy/gists{/gist_id}","starred_url":"https://api.github.com/users/vedi0boy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vedi0boy/subscriptions","organizations_url":"https://api.github.com/users/vedi0boy/orgs","repos_url":"https://api.github.com/users/vedi0boy/repos","events_url":"https://api.github.com/users/vedi0boy/events{/privacy}","received_events_url":"https://api.github.com/users/vedi0boy/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-12-20T00:27:05Z","updated_at":"2016-12-20T00:30:31Z","closed_at":"2016-12-20T00:30:31Z","author_association":"NONE","body":"#### Issue details\r\nI have setup and input listener on a custom Widget class I setup. The touchDown() event works, but the touchUp() doesn't. There must be some kind of bug on the LibGDX side. Could someone look into it?\r\n\r\n#### Reproduction steps/code\r\nHere is the code I used:\r\n```\r\nthis.addListener(new InputListener() {\r\n\t\t\t\r\n\t@Override\r\n\tpublic boolean touchDown (InputEvent event, float x, float y, int pointer, int button) {\r\n\t\thandler.slotTouchDown(slotNum, inventoryNum);\r\n\t\treturn super.touchDown(event, x, y, pointer, button);\r\n\t}\r\n\t\r\n\t@Override\r\n\tpublic void touchUp(InputEvent event, float x, float y, int pointer, int button) {\r\n\t\thandler.slotTouchUp(slotNum, inventoryNum);\r\n\t\tsuper.touchUp(event, x, y, pointer, button);\r\n\t}\r\n\t\r\n});\r\n```\r\n\r\n#### Version of LibGDX and/or relevant dependencies\r\nLibGDX 1.9.4. I have only tested on Windows.\r\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4498/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4497","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4497/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4497/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4497/events","html_url":"https://github.com/libgdx/libgdx/issues/4497","id":196481913,"number":4497,"title":"[Feature Request] Ability to apply lighting to decals.","user":{"login":"Vichy97","id":11032718,"avatar_url":"https://avatars1.githubusercontent.com/u/11032718?v=4","gravatar_id":"","url":"https://api.github.com/users/Vichy97","html_url":"https://github.com/Vichy97","followers_url":"https://api.github.com/users/Vichy97/followers","following_url":"https://api.github.com/users/Vichy97/following{/other_user}","gists_url":"https://api.github.com/users/Vichy97/gists{/gist_id}","starred_url":"https://api.github.com/users/Vichy97/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Vichy97/subscriptions","organizations_url":"https://api.github.com/users/Vichy97/orgs","repos_url":"https://api.github.com/users/Vichy97/repos","events_url":"https://api.github.com/users/Vichy97/events{/privacy}","received_events_url":"https://api.github.com/users/Vichy97/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-12-19T18:04:25Z","updated_at":"2017-01-03T01:31:33Z","closed_at":null,"author_association":"NONE","body":"It isn't possible to apply lighting using an Environment (or any other way I'm aware of) to a Decal. There should be a way to pass an Environment to the DecalBatch.\r\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4497/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4496","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4496/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4496/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4496/events","html_url":"https://github.com/libgdx/libgdx/issues/4496","id":196448570,"number":4496,"title":"Unable to change particles sprite after spawn","user":{"login":"serpent7776","id":3284364,"avatar_url":"https://avatars1.githubusercontent.com/u/3284364?v=4","gravatar_id":"","url":"https://api.github.com/users/serpent7776","html_url":"https://github.com/serpent7776","followers_url":"https://api.github.com/users/serpent7776/followers","following_url":"https://api.github.com/users/serpent7776/following{/other_user}","gists_url":"https://api.github.com/users/serpent7776/gists{/gist_id}","starred_url":"https://api.github.com/users/serpent7776/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/serpent7776/subscriptions","organizations_url":"https://api.github.com/users/serpent7776/orgs","repos_url":"https://api.github.com/users/serpent7776/repos","events_url":"https://api.github.com/users/serpent7776/events{/privacy}","received_events_url":"https://api.github.com/users/serpent7776/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-12-19T15:55:28Z","updated_at":"2017-06-25T13:17:11Z","closed_at":"2017-06-25T13:17:11Z","author_association":"CONTRIBUTOR","body":"#### Issue details\r\nCalling [setSprite](https://github.com/libgdx/libgdx/blob/1.9.5/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleEmitter.java#L601) on particle emitter does not change sprite of existing particles - only texture and origin are modified. Particle's region should also be updated. I think size should also be changed.\r\n\r\n#### Reproduction steps/code\r\nsee https://github.com/serpent7776/gdx-particle-emitter-change-sprite-issue-sample\r\n\r\n#### Version of LibGDX and/or relevant dependencies\r\n1.9.5\r\n\r\n#### Please select the affected platforms\r\n- [x] core\r\n- [ ] Android\r\n- [ ] iOS (robovm)\r\n- [ ] iOS (MOE)\r\n- [ ] HTML/GWT\r\n- [ ] Windows\r\n- [ ] Linux\r\n- [ ] MacOS\r\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4496/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4495","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4495/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4495/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4495/events","html_url":"https://github.com/libgdx/libgdx/issues/4495","id":196415780,"number":4495,"title":"Wrong Label layout for scaled BitmapFonts","user":{"login":"obigu","id":1794492,"avatar_url":"https://avatars0.githubusercontent.com/u/1794492?v=4","gravatar_id":"","url":"https://api.github.com/users/obigu","html_url":"https://github.com/obigu","followers_url":"https://api.github.com/users/obigu/followers","following_url":"https://api.github.com/users/obigu/following{/other_user}","gists_url":"https://api.github.com/users/obigu/gists{/gist_id}","starred_url":"https://api.github.com/users/obigu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/obigu/subscriptions","organizations_url":"https://api.github.com/users/obigu/orgs","repos_url":"https://api.github.com/users/obigu/repos","events_url":"https://api.github.com/users/obigu/events{/privacy}","received_events_url":"https://api.github.com/users/obigu/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-12-19T13:39:46Z","updated_at":"2017-03-09T22:23:14Z","closed_at":"2017-03-09T22:23:14Z","author_association":"CONTRIBUTOR","body":"**Issue Details**\r\nThis issue is associated to the PR #4382 which provides a fix for it.\r\n\r\nLabel prefHeight is not correctly calculated if underlying BitmapFont scale Y is different to 1.\r\n\r\nThis affects any layout using Labels that use a BitMap font with a scaleY != 1.\r\n\r\nAn example:\r\n![example](https://cloud.githubusercontent.com/assets/1794492/21314557/03d55314-c5f8-11e6-980f-959c6caf4acb.png)\r\n\r\n**Reproduction steps/code**\r\nPlease see the SSCCE attached http://pastebin.com/EB7mv2AU\r\n\r\n#### Version of LibGDX and/or relevant dependencies\r\n1.9.5\r\n\r\n#### Please select the affected platforms\r\n- [x] Android\r\n- [x] iOS (robovm)\r\n- [x] iOS (MOE)\r\n- [x] HTML/GWT\r\n- [x] Windows\r\n- [x] Linux\r\n- [x] MacOS\r\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4495/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4494","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4494/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4494/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4494/events","html_url":"https://github.com/libgdx/libgdx/issues/4494","id":196294689,"number":4494,"title":"root in TiledMapLoader.loadAsync is not set","user":{"login":"Lucrecious","id":4584511,"avatar_url":"https://avatars1.githubusercontent.com/u/4584511?v=4","gravatar_id":"","url":"https://api.github.com/users/Lucrecious","html_url":"https://github.com/Lucrecious","followers_url":"https://api.github.com/users/Lucrecious/followers","following_url":"https://api.github.com/users/Lucrecious/following{/other_user}","gists_url":"https://api.github.com/users/Lucrecious/gists{/gist_id}","starred_url":"https://api.github.com/users/Lucrecious/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Lucrecious/subscriptions","organizations_url":"https://api.github.com/users/Lucrecious/orgs","repos_url":"https://api.github.com/users/Lucrecious/repos","events_url":"https://api.github.com/users/Lucrecious/events{/privacy}","received_events_url":"https://api.github.com/users/Lucrecious/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-12-18T19:37:51Z","updated_at":"2016-12-18T23:33:12Z","closed_at":"2016-12-18T23:33:12Z","author_association":"NONE","body":"#### Issue details\r\nI get this exception when I try to load a TiledMap asynchronously.\r\n```java\r\nCaused by: java.lang.NullPointerException\r\n\tat com.badlogic.gdx.maps.tiled.TmxMapLoader.loadTilemap(TmxMapLoader.java:158)\r\n\tat com.badlogic.gdx.maps.tiled.TmxMapLoader.loadAsync(TmxMapLoader.java:110)\r\n```\r\n\r\n#### Reproduction steps/code\r\nTrivial reproduction.\r\nInitialize a new TmxMapLoader, and use the loadAsync method.\r\nHere's the line of code that causes grief:\r\n`String mapOrientation = root.getAttribute(\"orientation\", null);`\r\nClearly, \"root\" is the null exception.\r\n\r\nHowever, even if root was set, loadAsync assumes that the required dependancies (i.e. texture files) have already been loaded, so it still fails (I tried running loadAsync after a call to \"getDependancies\" and I still get exceptions regarding loads).\r\nSo loadAsync isn't really \"loadAsync\".  I can't finish loading the required dependancies either because I'm on a different thread, which means, I'd have to load them in from outside in a thread with the OpenGL context.\r\n\r\nAll this to say: loadAsync, doesn't seems to work as intended?\r\n\r\nAm I using loadAsync incorrectly?\r\n\r\nThanks.\r\n\r\n#### Version of LibGDX and/or relevant dependencies\r\nLatest\r\n\r\n#### Stacktrace\r\nProvided above\r\n\r\n#### Please select the affected platforms\r\nProbably affects all platforms.\r\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4494/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4493","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4493/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4493/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4493/events","html_url":"https://github.com/libgdx/libgdx/issues/4493","id":196224848,"number":4493,"title":"SIGSEGV on ModelBatch.end()","user":{"login":"Litarvan","id":8712146,"avatar_url":"https://avatars3.githubusercontent.com/u/8712146?v=4","gravatar_id":"","url":"https://api.github.com/users/Litarvan","html_url":"https://github.com/Litarvan","followers_url":"https://api.github.com/users/Litarvan/followers","following_url":"https://api.github.com/users/Litarvan/following{/other_user}","gists_url":"https://api.github.com/users/Litarvan/gists{/gist_id}","starred_url":"https://api.github.com/users/Litarvan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Litarvan/subscriptions","organizations_url":"https://api.github.com/users/Litarvan/orgs","repos_url":"https://api.github.com/users/Litarvan/repos","events_url":"https://api.github.com/users/Litarvan/events{/privacy}","received_events_url":"https://api.github.com/users/Litarvan/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-12-17T14:32:59Z","updated_at":"2016-12-17T15:35:16Z","closed_at":"2016-12-17T15:35:16Z","author_association":"NONE","body":"#### Issue details\r\n\r\nWe're trying to do a Voxel engine, but when rendring the World, ModelBatch.end() throws a SIGSEGV and create an hs_err_pid log file.\r\n\r\n#### Reproduction steps/code\r\n\r\nVery hard to do, if you need it, i can try to provide one. The code throwing the crash looks like this\r\n\r\n```java\r\n        modelBatch.begin(cam); // cam: com.badlogic.gdx.graphics.PerspectiveCamera\r\n        modelBatch.render(this, environment); // this: com.badlogic.gdx.graphics.g3d.RenderableProvider, com.badlogic.gdx.utils.Disposable\r\n        modelBatch.render(pointedBlock); // pointedBlock: com.badlogic.gdx.graphics.g3d.Renderable\r\n        modelBatch.end();\r\n```\r\n\r\n#### Version of LibGDX and/or relevant dependencies\r\n\r\nLibGDX 1.9.4\r\n\r\n#### Stacktrace\r\n```java\r\n\r\n# A fatal error has been detected by the Java Runtime Environment:\r\n#\r\n#  SIGSEGV (0xb) at pc=0x00007f10ab3487b0, pid=9824, tid=0x00007f10c1024700\r\n#\r\n# JRE version: OpenJDK Runtime Environment (8.0_112-b15) (build 1.8.0_112-b15)\r\n# Java VM: OpenJDK 64-Bit Server VM (25.112-b15 mixed mode linux-amd64 compressed oops)\r\n# Problematic frame:\r\n# C  [libnvidia-glcore.so.375.20+0x11197b0]\r\n\r\nStack: [0x00007f10c0f24000,0x00007f10c1025000],  sp=0x00007f10c1022f48,  free space=1019k\r\nNative frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)\r\nC  [libnvidia-glcore.so.375.20+0x11197b0]\r\n\r\nJava frames: (J=compiled Java code, j=interpreted, Vv=VM code)\r\nj  org.lwjgl.opengl.GL11.nglDrawElementsBO(IIIJJ)V+0\r\nj  org.lwjgl.opengl.GL11.glDrawElements(IIIJ)V+28\r\nj  com.badlogic.gdx.backends.lwjgl.LwjglGL20.glDrawElements(IIII)V+6\r\nj  com.badlogic.gdx.graphics.Mesh.render(Lcom/badlogic/gdx/graphics/glutils/ShaderProgram;IIIZ)V+151\r\nj  com.badlogic.gdx.graphics.g3d.model.MeshPart.render(Lcom/badlogic/gdx/graphics/glutils/ShaderProgram;Z)V+18\r\nj  com.badlogic.gdx.graphics.g3d.shaders.BaseShader.render(Lcom/badlogic/gdx/graphics/g3d/Renderable;Lcom/badlogic/gdx/graphics/g3d/Attributes;)V+146\r\nj  com.badlogic.gdx.graphics.g3d.shaders.DefaultShader.render(Lcom/badlogic/gdx/graphics/g3d/Renderable;Lcom/badlogic/gdx/graphics/g3d/Attributes;)V+45\r\nj  com.badlogic.gdx.graphics.g3d.shaders.BaseShader.render(Lcom/badlogic/gdx/graphics/g3d/Renderable;)V+62\r\nj  com.badlogic.gdx.graphics.g3d.ModelBatch.flush()V+83\r\nj  com.badlogic.gdx.graphics.g3d.ModelBatch.end()V+1\r\nj  net.wytrem.voxel.WorldRenderer.render()V+142\r\nj  net.wytrem.voxel.WyVoxel.render()V+4\r\nj  com.badlogic.gdx.backends.lwjgl.LwjglApplication.mainLoop()V+698\r\nj  com.badlogic.gdx.backends.lwjgl.LwjglApplication$1.run()V+27\r\nv  ~StubRoutines::call_stub\r\n```\r\n\r\n#### Please select the affected platforms\r\n- [ ] Android\r\n- [ ] iOS (robovm)\r\n- [ ] iOS (MOE)\r\n- [ ] HTML/GWT\r\n- [ ] Windows\r\n- [x] Linux\r\n- [ ] MacOS\r\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4493/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4492","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4492/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4492/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4492/events","html_url":"https://github.com/libgdx/libgdx/pull/4492","id":196192271,"number":4492,"title":"fix MOE  crash caused by call \"UIApplication.sharedApplication().delegate().window()\"","user":{"login":"tianqiujie","id":2835129,"avatar_url":"https://avatars1.githubusercontent.com/u/2835129?v=4","gravatar_id":"","url":"https://api.github.com/users/tianqiujie","html_url":"https://github.com/tianqiujie","followers_url":"https://api.github.com/users/tianqiujie/followers","following_url":"https://api.github.com/users/tianqiujie/following{/other_user}","gists_url":"https://api.github.com/users/tianqiujie/gists{/gist_id}","starred_url":"https://api.github.com/users/tianqiujie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tianqiujie/subscriptions","organizations_url":"https://api.github.com/users/tianqiujie/orgs","repos_url":"https://api.github.com/users/tianqiujie/repos","events_url":"https://api.github.com/users/tianqiujie/events{/privacy}","received_events_url":"https://api.github.com/users/tianqiujie/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-12-17T03:04:46Z","updated_at":"2017-01-16T13:28:30Z","closed_at":"2017-01-16T13:28:30Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4492","html_url":"https://github.com/libgdx/libgdx/pull/4492","diff_url":"https://github.com/libgdx/libgdx/pull/4492.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4492.patch"},"body":"fix issue https://github.com/libgdx/libgdx/issues/4491","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4492/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4491","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4491/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4491/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4491/events","html_url":"https://github.com/libgdx/libgdx/issues/4491","id":196002159,"number":4491,"title":"[BUG] UIApplication.sharedApplication().delegate().window(), MOE will Crash","user":{"login":"tianqiujie","id":2835129,"avatar_url":"https://avatars1.githubusercontent.com/u/2835129?v=4","gravatar_id":"","url":"https://api.github.com/users/tianqiujie","html_url":"https://github.com/tianqiujie","followers_url":"https://api.github.com/users/tianqiujie/followers","following_url":"https://api.github.com/users/tianqiujie/following{/other_user}","gists_url":"https://api.github.com/users/tianqiujie/gists{/gist_id}","starred_url":"https://api.github.com/users/tianqiujie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tianqiujie/subscriptions","organizations_url":"https://api.github.com/users/tianqiujie/orgs","repos_url":"https://api.github.com/users/tianqiujie/repos","events_url":"https://api.github.com/users/tianqiujie/events{/privacy}","received_events_url":"https://api.github.com/users/tianqiujie/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-12-16T08:06:22Z","updated_at":"2017-01-20T16:22:28Z","closed_at":"2017-01-20T16:22:28Z","author_association":"CONTRIBUTOR","body":"libgdx 1.9.5, MOE gradle plugin 1.2.5\r\n## 1.Reproduction\r\nJust write the code in ``` applicationDidFinishLaunchingWithOptions ```\r\n\r\n```\r\nUIApplication.sharedApplication().delegate().window(),\r\n```\r\nthe app will crased by error:\r\n![image](https://cloud.githubusercontent.com/assets/2835129/21260152/9a288bf0-c3bf-11e6-9965-4ee5085aec21.png)\r\n\r\n## 2.Reason\r\nI found the reason, because the moe-backends not override the window method in IOSApplication\r\n![image](https://cloud.githubusercontent.com/assets/2835129/21260200/d7f2e4ee-c3bf-11e6-931b-e2b7c3e849e6.png)\r\n## 3.Solution\r\nSo I download the source code of moe-backends, and override the window().\r\n![image](https://cloud.githubusercontent.com/assets/2835129/21260257/058b4072-c3c0-11e6-9af2-91143d435f7d.png)\r\n\r\n## 4.Effects\r\nAnd then the app will run normal. I do not know how to \"Pull requests\", so please add the code in the IOSApplication.java. Thank you.","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4491/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4490","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4490/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4490/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4490/events","html_url":"https://github.com/libgdx/libgdx/issues/4490","id":195956752,"number":4490,"title":"Libgdx html (gwt) font error - Invalid page id","user":{"login":"okilimnik","id":11755521,"avatar_url":"https://avatars1.githubusercontent.com/u/11755521?v=4","gravatar_id":"","url":"https://api.github.com/users/okilimnik","html_url":"https://github.com/okilimnik","followers_url":"https://api.github.com/users/okilimnik/followers","following_url":"https://api.github.com/users/okilimnik/following{/other_user}","gists_url":"https://api.github.com/users/okilimnik/gists{/gist_id}","starred_url":"https://api.github.com/users/okilimnik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/okilimnik/subscriptions","organizations_url":"https://api.github.com/users/okilimnik/orgs","repos_url":"https://api.github.com/users/okilimnik/repos","events_url":"https://api.github.com/users/okilimnik/events{/privacy}","received_events_url":"https://api.github.com/users/okilimnik/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-12-16T01:01:13Z","updated_at":"2016-12-16T23:37:02Z","closed_at":"2016-12-16T23:37:02Z","author_association":"NONE","body":"When I try to run html application I get this error in browser:\r\n\r\nGwtApplication: exception: Error loading font file: fonts/comic-en.fnt \r\nError loading font file: fonts/comic-en.fnt \r\nInvalid page id: \r\nFor input string: \"\"\r\n\r\nAndroid build runs always successfully, the font file is correct. This bug happens even while running libgdx sample projects or using a standard font like:\r\n\r\n`BitmapFont font = new BitmapFont();`\r\n\r\n Is there some secret magic?\r\n\r\nLibgdx version  - 1.9.5\r\nThe project is generated by gdx-setup.jar\r\n\r\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4490/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4489","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4489/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4489/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4489/events","html_url":"https://github.com/libgdx/libgdx/issues/4489","id":195950145,"number":4489,"title":"DelaunayTriangulator is occasionally incorrect (6-point example)","user":{"login":"SpexGuy","id":2281818,"avatar_url":"https://avatars2.githubusercontent.com/u/2281818?v=4","gravatar_id":"","url":"https://api.github.com/users/SpexGuy","html_url":"https://github.com/SpexGuy","followers_url":"https://api.github.com/users/SpexGuy/followers","following_url":"https://api.github.com/users/SpexGuy/following{/other_user}","gists_url":"https://api.github.com/users/SpexGuy/gists{/gist_id}","starred_url":"https://api.github.com/users/SpexGuy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SpexGuy/subscriptions","organizations_url":"https://api.github.com/users/SpexGuy/orgs","repos_url":"https://api.github.com/users/SpexGuy/repos","events_url":"https://api.github.com/users/SpexGuy/events{/privacy}","received_events_url":"https://api.github.com/users/SpexGuy/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2016-12-16T00:10:44Z","updated_at":"2017-01-05T23:06:03Z","closed_at":null,"author_association":"CONTRIBUTOR","body":"#### Issue details\r\nI am attempting to use the `DelaunayTriangulator` to calculate adjacency information in a voronoi diagram.  Unfortunately, it appears that the triangulator occasionally triangulates quads in the wrong direction.  Here's a picture of one of the failing cases I'm encountering:\r\n\r\n![delaunay_fail](https://cloud.githubusercontent.com/assets/2281818/21246526/f6f9abb0-c2ee-11e6-863f-5d43f53d1001.png)\r\n\r\nThe background is the rasterized voronoi of the points, to emphasize the problem.  The quad made up of points `(0, 3, 1, 2)` should be triangulated into `(0, 3, 1)` and `(1, 2, 0)`, but instead it gets cut in the other direction.  Adding another point somewhere else in the diagram (even far away) can sometimes flip this particular quad to be correct.\r\n\r\n#### Reproduction steps/code\r\nThis test case reproduces the issue exactly as shown in the picture.\r\n```java\r\nimport com.badlogic.gdx.math.DelaunayTriangulator;\r\nimport com.badlogic.gdx.utils.ShortArray;\r\n\r\npublic class DelaunayTest {\r\n\r\n\tpublic static void main(String[] args) {\r\n\t\tfloat[] points = new float[12];\r\n\t\tpoints[0] = (float) 2000.7620849609375;\r\n\t\tpoints[1] = (float) 3044.865234375;\r\n\t\tpoints[2] = (float) 3121.152099609375;\r\n\t\tpoints[3] = (float) 2331.909912109375;\r\n\t\tpoints[4] = (float) 1909.64794921875;\r\n\t\tpoints[5] = (float) 1924.1240234375;\r\n\t\tpoints[6] = (float) 3096.233642578125;\r\n\t\tpoints[7] = (float) 2911.776611328125;\r\n\t\tpoints[8] = (float) 776.0308227539062;\r\n\t\tpoints[9] = (float) 658.64501953125;\r\n\t\tpoints[10] = (float) 3619.53564453125;\r\n\t\tpoints[11] = (float) 163.5050811767578;\r\n\r\n\t\tDelaunayTriangulator delaunay = new DelaunayTriangulator();\r\n\t\tShortArray trigs = delaunay.computeTriangles(points, false);\r\n\r\n\t\tfor (int c = 0, n = trigs.size; c < n; c += 3) {\r\n\t\t\tSystem.out.format(\"(%d, %d, %d)\\n\", trigs.get(c), trigs.get(c+1), trigs.get(c+2));\r\n\t\t}\r\n\r\n\t\t// Prints out:\r\n\t\t// (4, 2, 5)\r\n\t\t// (2, 3, 1) // wrong!\r\n\t\t// (2, 4, 0)\r\n\t\t// (3, 5, 1)\r\n\t\t// (2, 0, 3) // wrong!\r\n\t\t// (5, 2, 1)\r\n\t}\r\n\r\n}\r\n```\r\n\r\n#### Version of LibGDX and/or relevant dependencies\r\nmaster (as of 12/15/2016, commit 52bbab3)\r\n\r\n#### Please select the affected platforms\r\n- [ ] Android\r\n- [ ] iOS (robovm)\r\n- [ ] iOS (MOE)\r\n- [ ] HTML/GWT\r\n- [X] Windows\r\n- [ ] Linux\r\n- [ ] MacOS\r\nI've only tested on Windows 7, but the problem seems algorithmic.","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4489/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}}],"meta":{"x-ratelimit-limit":"5000","x-ratelimit-remaining":"4986","x-ratelimit-reset":"1506844633","x-github-request-id":"A572:028B:DD8E7D:2EAF1FD:59D0932D","x-github-media-type":"github.squirrel-girl-preview","link":"<https://api.github.com/repositories/5373551/issues?state=all&page=15>; rel=\"next\", <https://api.github.com/repositories/5373551/issues?state=all&page=164>; rel=\"last\", <https://api.github.com/repositories/5373551/issues?state=all&page=1>; rel=\"first\", <https://api.github.com/repositories/5373551/issues?state=all&page=13>; rel=\"prev\"","etag":"\"6c9d8f5109d78e5820f4ddd453cad94e\"","status":"200 OK"}}
