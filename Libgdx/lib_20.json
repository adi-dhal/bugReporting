{"data":[{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4338","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4338/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4338/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4338/events","html_url":"https://github.com/libgdx/libgdx/issues/4338","id":180465093,"number":4338,"title":"Libgdx: Save and Load a screen","user":{"login":"Lafrag","id":22563530,"avatar_url":"https://avatars2.githubusercontent.com/u/22563530?v=4","gravatar_id":"","url":"https://api.github.com/users/Lafrag","html_url":"https://github.com/Lafrag","followers_url":"https://api.github.com/users/Lafrag/followers","following_url":"https://api.github.com/users/Lafrag/following{/other_user}","gists_url":"https://api.github.com/users/Lafrag/gists{/gist_id}","starred_url":"https://api.github.com/users/Lafrag/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Lafrag/subscriptions","organizations_url":"https://api.github.com/users/Lafrag/orgs","repos_url":"https://api.github.com/users/Lafrag/repos","events_url":"https://api.github.com/users/Lafrag/events{/privacy}","received_events_url":"https://api.github.com/users/Lafrag/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-10-01T16:18:45Z","updated_at":"2016-10-01T17:48:14Z","closed_at":"2016-10-01T17:48:14Z","author_association":"NONE","body":"Hi, I want to save and load the progression of a player in my game, I came to the conclusion that\n I'll give each of my screens a name or a number. When I load a screen, I can do\n`preferences.putInt(\"currentScreen\", screenName);`\n. Then when I reopen my game, in the\n`create() method`\n, I'd do\n`preferences.get(\"currentScreen\")`\nand set the screen from the name I get\nbut how to tell the machine to get the last screen or the last variable ?\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4338/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4337","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4337/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4337/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4337/events","html_url":"https://github.com/libgdx/libgdx/pull/4337","id":180463423,"number":4337,"title":"Fix Gradle build problems cause by the retooling","user":{"login":"Zomby2D","id":5513720,"avatar_url":"https://avatars0.githubusercontent.com/u/5513720?v=4","gravatar_id":"","url":"https://api.github.com/users/Zomby2D","html_url":"https://github.com/Zomby2D","followers_url":"https://api.github.com/users/Zomby2D/followers","following_url":"https://api.github.com/users/Zomby2D/following{/other_user}","gists_url":"https://api.github.com/users/Zomby2D/gists{/gist_id}","starred_url":"https://api.github.com/users/Zomby2D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Zomby2D/subscriptions","organizations_url":"https://api.github.com/users/Zomby2D/orgs","repos_url":"https://api.github.com/users/Zomby2D/repos","events_url":"https://api.github.com/users/Zomby2D/events{/privacy}","received_events_url":"https://api.github.com/users/Zomby2D/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2016-10-01T15:49:47Z","updated_at":"2016-10-01T22:17:04Z","closed_at":"2016-10-01T18:09:42Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4337","html_url":"https://github.com/libgdx/libgdx/pull/4337","diff_url":"https://github.com/libgdx/libgdx/pull/4337.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4337.patch"},"body":"Since the Gradle retooling, the source won't build under Gradle anymore.\n\nThis is the minimum changeset required to get the command-line Gradle build working again. It's not enough to Sync the project or run the demos under Android Studio but it's a step in the right direction, bringing back command-line tools.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4337/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4336","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4336/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4336/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4336/events","html_url":"https://github.com/libgdx/libgdx/pull/4336","id":180446401,"number":4336,"title":"Added support for Multi-OS Engine 1.2.0","user":{"login":"liliomk","id":1080033,"avatar_url":"https://avatars1.githubusercontent.com/u/1080033?v=4","gravatar_id":"","url":"https://api.github.com/users/liliomk","html_url":"https://github.com/liliomk","followers_url":"https://api.github.com/users/liliomk/followers","following_url":"https://api.github.com/users/liliomk/following{/other_user}","gists_url":"https://api.github.com/users/liliomk/gists{/gist_id}","starred_url":"https://api.github.com/users/liliomk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/liliomk/subscriptions","organizations_url":"https://api.github.com/users/liliomk/orgs","repos_url":"https://api.github.com/users/liliomk/repos","events_url":"https://api.github.com/users/liliomk/events{/privacy}","received_events_url":"https://api.github.com/users/liliomk/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-10-01T08:51:11Z","updated_at":"2016-10-01T17:47:19Z","closed_at":"2016-10-01T17:47:19Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4336","html_url":"https://github.com/libgdx/libgdx/pull/4336","diff_url":"https://github.com/libgdx/libgdx/pull/4336.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4336.patch"},"body":"","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4336/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4335","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4335/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4335/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4335/events","html_url":"https://github.com/libgdx/libgdx/issues/4335","id":180071103,"number":4335,"title":"TextArea assumes Raw Array is bigger than FloatArray","user":{"login":"perseus93","id":7457029,"avatar_url":"https://avatars2.githubusercontent.com/u/7457029?v=4","gravatar_id":"","url":"https://api.github.com/users/perseus93","html_url":"https://github.com/perseus93","followers_url":"https://api.github.com/users/perseus93/followers","following_url":"https://api.github.com/users/perseus93/following{/other_user}","gists_url":"https://api.github.com/users/perseus93/gists{/gist_id}","starred_url":"https://api.github.com/users/perseus93/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/perseus93/subscriptions","organizations_url":"https://api.github.com/users/perseus93/orgs","repos_url":"https://api.github.com/users/perseus93/repos","events_url":"https://api.github.com/users/perseus93/events{/privacy}","received_events_url":"https://api.github.com/users/perseus93/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2016-09-29T14:50:11Z","updated_at":"2016-11-25T00:28:55Z","closed_at":"2016-11-25T00:28:55Z","author_association":"NONE","body":"#### Issue details\n\nDuring development and debugging a different issue (on my my side) I came across the following issue:\nThe TextArea class assumes that the raw backing array of FloatArray is bigger than the actual used data.\nWhen filling the text area with x amount of characters the letterUnderCursor method (TextArea:90) will cause an ArrayOutOfBoundsException because of this. (this method wrongly assumes the backing array is bigger).\n#### Reproduction steps/code\n\nCompile and run the code below; then click just anywhere on the right side of the text (but inside the text area). This will cause the TextArea to throw a ArrayIndexOutOfBoundsException.\n\nNote: The code snippet below is based upon the TextAreaTest class (in gidx-tests).\n\n``` java\n/*******************************************************************************\n * Copyright 2011 See AUTHORS file.\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *   http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ******************************************************************************/\n\npackage com.badlogic.gdx.tests;\n\nimport com.badlogic.gdx.Gdx;\nimport com.badlogic.gdx.graphics.GL20;\nimport com.badlogic.gdx.graphics.g2d.SpriteBatch;\nimport com.badlogic.gdx.scenes.scene2d.Stage;\nimport com.badlogic.gdx.scenes.scene2d.ui.Skin;\nimport com.badlogic.gdx.scenes.scene2d.ui.TextArea;\nimport com.badlogic.gdx.scenes.scene2d.ui.TextField;\nimport com.badlogic.gdx.tests.utils.GdxTest;\nimport com.badlogic.gdx.utils.FloatArray;\n\npublic class TextAreaTest extends GdxTest {\n    private Stage stage;\n    private Skin skin;\n\n    @Override\n    public void create () {\n        stage = new Stage();\n        Gdx.input.setInputProcessor(stage);\n        skin = new Skin(Gdx.files.internal(\"data/uiskin.json\"));\n\n        //Create a string that perfectly fills the float array used in the textarea float array\n        FloatArray dummyArray = new FloatArray();\n        String limit = \"\";\n        // Minus one, because TextField adds a magic char\n        for (int i = 0; i < dummyArray.items.length-1; i++) {\n            limit += \"a\";\n        }\n\n        TextArea textArea = new TextArea(\n            limit,\n            skin);\n        textArea.setX(10);\n        textArea.setY(10);\n        textArea.setWidth(200);\n        textArea.setHeight(200);\n\n        stage.addActor(textArea);\n    }\n\n    @Override\n    public void render () {\n        Gdx.gl.glClearColor(0.2f, 0.2f, 0.2f, 1);\n        Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);\n        stage.draw();\n        Gdx.app.log(\"X\", \"FPS: \" + Gdx.graphics.getFramesPerSecond());\n        SpriteBatch spriteBatch = (SpriteBatch)stage.getBatch();\n        Gdx.app.log(\"X\", \"render calls: \" + spriteBatch.totalRenderCalls);\n        spriteBatch.totalRenderCalls = 0;\n    }\n\n    @Override\n    public void resize (int width, int height) {\n        stage.getViewport().update(width, height, true);\n    }\n\n    @Override\n    public void dispose () {\n        stage.dispose();\n        skin.dispose();\n    }\n}\n```\n#### Version of LibGDX and/or relevant dependencies\n\nLibGDX 1.9.3\n#### Stacktrace\n\n``` java\nException in thread \"LWJGL Application\" java.lang.ArrayIndexOutOfBoundsException: 16\n    at com.badlogic.gdx.scenes.scene2d.ui.TextArea.letterUnderCursor(TextArea.java:91)\n    at com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldClickListener.setCursorPosition(TextField.java:827)\n    at com.badlogic.gdx.scenes.scene2d.ui.TextArea$TextAreaListener.setCursorPosition(TextArea.java:386)\n    at com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldClickListener.touchDown(TextField.java:805)\n    at com.badlogic.gdx.scenes.scene2d.InputListener.handle(InputListener.java:56)\n    at com.badlogic.gdx.scenes.scene2d.Actor.notify(Actor.java:181)\n    at com.badlogic.gdx.scenes.scene2d.Actor.fire(Actor.java:146)\n    at com.badlogic.gdx.scenes.scene2d.Stage.touchDown(Stage.java:282)\n    at com.badlogic.gdx.backends.lwjgl.LwjglInput.processEvents(LwjglInput.java:329)\n    at com.badlogic.gdx.backends.lwjgl.LwjglApplication.mainLoop(LwjglApplication.java:217)\n    at com.badlogic.gdx.backends.lwjgl.LwjglApplication$1.run(LwjglApplication.java:126)\n```\n#### Please select the affected platforms\n- [x] Android\n- [x] iOS (robovm)\n- [x] iOS (MOE)\n- [x] HTML/GWT\n- [x] Windows\n- [x] Linux\n- [x] MacOS\n\nNote: I only tested this on Linux; but given the core functionality I suspect it affects all platforms.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4335/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4334","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4334/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4334/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4334/events","html_url":"https://github.com/libgdx/libgdx/issues/4334","id":179395342,"number":4334,"title":"Robovm 1.14.0 didn't support IPV6?","user":{"login":"guojinshang","id":17976968,"avatar_url":"https://avatars3.githubusercontent.com/u/17976968?v=4","gravatar_id":"","url":"https://api.github.com/users/guojinshang","html_url":"https://github.com/guojinshang","followers_url":"https://api.github.com/users/guojinshang/followers","following_url":"https://api.github.com/users/guojinshang/following{/other_user}","gists_url":"https://api.github.com/users/guojinshang/gists{/gist_id}","starred_url":"https://api.github.com/users/guojinshang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/guojinshang/subscriptions","organizations_url":"https://api.github.com/users/guojinshang/orgs","repos_url":"https://api.github.com/users/guojinshang/repos","events_url":"https://api.github.com/users/guojinshang/events{/privacy}","received_events_url":"https://api.github.com/users/guojinshang/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-09-27T04:32:59Z","updated_at":"2016-09-30T06:28:28Z","closed_at":"2016-09-30T06:28:28Z","author_association":"NONE","body":"My IOS Game was reject by apple for my iap-item can't be got in IPV6 environment,does anybody meet\nthis problem?How to resolve it?Is it robovm bug?\n\nIssue details\nI request iap-item form apple service as below code show.And It's ok in IPV4 environment.\npublic void initIAP(){\nSKPaymentQueue.getDefaultQueue().addTransactionObserver(StoreObserver.getInstance());\n        NSNotificationCenter.getDefaultCenter().addObserver(StoreManager.IAPProductRequestNotification,\n                StoreManager.getInstance(), NSOperationQueue.getMainQueue(), new VoidBlock1<NSNotification>() {\n                    @Override\n                    public void invoke(NSNotification a) {\n                        Gdx.app.log(TAG, \"handleProductRequestNotification\");\n                        handleProductRequestNotification(a);\n                    }\n                });\n        NSNotificationCenter.getDefaultCenter().addObserver(StoreObserver.IAPPurchaseNotification,\n                StoreObserver.getInstance(), NSOperationQueue.getMainQueue(), new VoidBlock1<NSNotification>() {\n                    @Override\n                    public void invoke(NSNotification a) {\n                        handlePurchasesNotification(a);\n                    }\n                });\n}\nVersion of LibGDX and/or relevant dependencies\nLbgdx 1.9.2 ,robovm 1.14.0\n\nThe affected platforms\n iOS (robovm)\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4334/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4333","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4333/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4333/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4333/events","html_url":"https://github.com/libgdx/libgdx/pull/4333","id":179388986,"number":4333,"title":"Add Matrix4::hasRotationOrScaling to GWT backend","user":{"login":"Zomby2D","id":5513720,"avatar_url":"https://avatars0.githubusercontent.com/u/5513720?v=4","gravatar_id":"","url":"https://api.github.com/users/Zomby2D","html_url":"https://github.com/Zomby2D","followers_url":"https://api.github.com/users/Zomby2D/followers","following_url":"https://api.github.com/users/Zomby2D/following{/other_user}","gists_url":"https://api.github.com/users/Zomby2D/gists{/gist_id}","starred_url":"https://api.github.com/users/Zomby2D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Zomby2D/subscriptions","organizations_url":"https://api.github.com/users/Zomby2D/orgs","repos_url":"https://api.github.com/users/Zomby2D/repos","events_url":"https://api.github.com/users/Zomby2D/events{/privacy}","received_events_url":"https://api.github.com/users/Zomby2D/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-09-27T03:25:55Z","updated_at":"2016-09-27T05:45:45Z","closed_at":"2016-09-27T05:45:39Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4333","html_url":"https://github.com/libgdx/libgdx/pull/4333","diff_url":"https://github.com/libgdx/libgdx/pull/4333.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4333.patch"},"body":"Following #4319, a `hasRotationOrScaling` method was added to `Matrix4`.\n\nHowever, the method had not been replicated in the GWT backend, causing it to stop compiling properly.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4333/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4332","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4332/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4332/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4332/events","html_url":"https://github.com/libgdx/libgdx/issues/4332","id":179314137,"number":4332,"title":"Game crashing without stacktrace, presumably box2d","user":{"login":"ForsakenHarmony","id":8845940,"avatar_url":"https://avatars3.githubusercontent.com/u/8845940?v=4","gravatar_id":"","url":"https://api.github.com/users/ForsakenHarmony","html_url":"https://github.com/ForsakenHarmony","followers_url":"https://api.github.com/users/ForsakenHarmony/followers","following_url":"https://api.github.com/users/ForsakenHarmony/following{/other_user}","gists_url":"https://api.github.com/users/ForsakenHarmony/gists{/gist_id}","starred_url":"https://api.github.com/users/ForsakenHarmony/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ForsakenHarmony/subscriptions","organizations_url":"https://api.github.com/users/ForsakenHarmony/orgs","repos_url":"https://api.github.com/users/ForsakenHarmony/repos","events_url":"https://api.github.com/users/ForsakenHarmony/events{/privacy}","received_events_url":"https://api.github.com/users/ForsakenHarmony/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-09-26T19:19:15Z","updated_at":"2016-09-26T19:26:28Z","closed_at":"2016-09-26T19:26:28Z","author_association":"NONE","body":"#### Issue details\n\nGame crashes on certain collisions?\nWindows freezes with no output\n#### Reproduction steps/code\n\nhttps://github.com/ForsakenHarmony/GameProt\ncrashes when shooting other ships\n\ncontrols: wasd,space\n\nVideo: https://youtu.be/11KLDI5MC9o\n#### Version of LibGDX and/or relevant dependencies\n\ngdxVersion = '1.9.4'\nbox2DLightsVersion = '1.4'\nashleyVersion = '1.7.3'\naiVersion = '1.8.0'\nkotlin_version = '1.0.4'\n#### Stacktrace\n\n``` java\n//no output\n```\n#### Please select the affected platforms\n- [x] Windows\n- [ ] Linux (didn't test)\n- [ ] MacOS (didn't test)\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4332/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4331","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4331/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4331/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4331/events","html_url":"https://github.com/libgdx/libgdx/pull/4331","id":179301821,"number":4331,"title":"Fixes #4322: Restore window on the monitor it was before going fullscreen.","user":{"login":"CreamyCookie","id":3063858,"avatar_url":"https://avatars2.githubusercontent.com/u/3063858?v=4","gravatar_id":"","url":"https://api.github.com/users/CreamyCookie","html_url":"https://github.com/CreamyCookie","followers_url":"https://api.github.com/users/CreamyCookie/followers","following_url":"https://api.github.com/users/CreamyCookie/following{/other_user}","gists_url":"https://api.github.com/users/CreamyCookie/gists{/gist_id}","starred_url":"https://api.github.com/users/CreamyCookie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CreamyCookie/subscriptions","organizations_url":"https://api.github.com/users/CreamyCookie/orgs","repos_url":"https://api.github.com/users/CreamyCookie/repos","events_url":"https://api.github.com/users/CreamyCookie/events{/privacy}","received_events_url":"https://api.github.com/users/CreamyCookie/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-09-26T18:24:02Z","updated_at":"2016-09-30T06:36:37Z","closed_at":"2016-09-30T06:36:37Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4331","html_url":"https://github.com/libgdx/libgdx/pull/4331","diff_url":"https://github.com/libgdx/libgdx/pull/4331.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4331.patch"},"body":"Instead of centering the window when going from fullscreen to windowed, it is now placed at the position it was before we switched to fullscreen. This, I think, is a more intuitive solution, because if the user has positioned the window in a certain way, then this shouldn't be lost, when switching between windowed and fullscreen.\n\nThis works, because in Lwjgl3 (or GLFW) all monitors are [part of a virtual screen coordinate system](http://www.glfw.org/docs/latest/intro_guide.html#coordinate_systems). The stored positions are in that coordinate system.\n\n---\n\nFor cases, where developers want to center their window, we could do the following, which is based on the previous code in `setWindowedMode`:\n\n``` java\n    public void centerWindowOnMonitor(Monitor monitor) {\n        if (!isFullscreen()) {\n            DisplayMode currentMode = getDisplayMode(monitor);\n            int windowPosX = monitor.virtualX + (currentMode.width - getWidth()) / 2;\n            int windowPosY = monitor.virtualY + (displcurrentModeayModeBeforeFullscreen.height - getHeight()) / 2;\n            window.setPosition(windowPosX, windowPosY);\n        }\n    }\n\n    public void centerWindowOnCurrentMonitor() {\n        centerWindowOnMonitor(getMonitor());\n    }\n```\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4331/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4330","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4330/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4330/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4330/events","html_url":"https://github.com/libgdx/libgdx/issues/4330","id":179108607,"number":4330,"title":"WeldJoint missing getReferenceAngle method","user":{"login":"nanodeath","id":10625,"avatar_url":"https://avatars0.githubusercontent.com/u/10625?v=4","gravatar_id":"","url":"https://api.github.com/users/nanodeath","html_url":"https://github.com/nanodeath","followers_url":"https://api.github.com/users/nanodeath/followers","following_url":"https://api.github.com/users/nanodeath/following{/other_user}","gists_url":"https://api.github.com/users/nanodeath/gists{/gist_id}","starred_url":"https://api.github.com/users/nanodeath/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nanodeath/subscriptions","organizations_url":"https://api.github.com/users/nanodeath/orgs","repos_url":"https://api.github.com/users/nanodeath/repos","events_url":"https://api.github.com/users/nanodeath/events{/privacy}","received_events_url":"https://api.github.com/users/nanodeath/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-09-25T20:59:42Z","updated_at":"2016-11-06T04:38:40Z","closed_at":"2016-11-06T04:38:40Z","author_association":"NONE","body":"#### Issue details\n\nIf you look at [RevoluteJoint.java](https://github.com/libgdx/libgdx/blob/master/extensions/gdx-box2d/gdx-box2d/src/com/badlogic/gdx/physics/box2d/joints/RevoluteJoint.java) and [RevoluteJointDef.java](https://github.com/libgdx/libgdx/blob/master/extensions/gdx-box2d/gdx-box2d/src/com/badlogic/gdx/physics/box2d/joints/RevoluteJointDef.java), you'll see they both have fields or getters for the `referenceAngle` property.\n\nHowever, while [WeldJointDef.java](https://github.com/libgdx/libgdx/blob/master/extensions/gdx-box2d/gdx-box2d/src/com/badlogic/gdx/physics/box2d/joints/WeldJointDef.java) does have a field for `referenceAngle`, [WeldJoint.java](https://github.com/libgdx/libgdx/blob/master/extensions/gdx-box2d/gdx-box2d/src/com/badlogic/gdx/physics/box2d/joints/WeldJoint.java) has no getter for that field. I've verified that there's indeed a getter in the Box2D implementation [b2WeldJoint.h](https://github.com/erincatto/Box2D/blob/374664b2a4ce2e7c24fbad6e1ed34bebcc9ab6bc/Box2D/Box2D/Dynamics/Joints/b2WeldJoint.h#L78).\n#### Version of LibGDX and/or relevant dependencies\n\n1.9.4. `master` (0e5c4e9) is also affected.\n#### Please select the affected platforms\n\nAll, probably.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4330/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4329","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4329/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4329/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4329/events","html_url":"https://github.com/libgdx/libgdx/issues/4329","id":179097930,"number":4329,"title":"Reported Memory Footprint continues to grow","user":{"login":"MondayHopscotch","id":3443665,"avatar_url":"https://avatars0.githubusercontent.com/u/3443665?v=4","gravatar_id":"","url":"https://api.github.com/users/MondayHopscotch","html_url":"https://github.com/MondayHopscotch","followers_url":"https://api.github.com/users/MondayHopscotch/followers","following_url":"https://api.github.com/users/MondayHopscotch/following{/other_user}","gists_url":"https://api.github.com/users/MondayHopscotch/gists{/gist_id}","starred_url":"https://api.github.com/users/MondayHopscotch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MondayHopscotch/subscriptions","organizations_url":"https://api.github.com/users/MondayHopscotch/orgs","repos_url":"https://api.github.com/users/MondayHopscotch/repos","events_url":"https://api.github.com/users/MondayHopscotch/events{/privacy}","received_events_url":"https://api.github.com/users/MondayHopscotch/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2016-09-25T17:34:32Z","updated_at":"2016-09-26T19:52:25Z","closed_at":"2016-09-26T19:52:25Z","author_association":"NONE","body":"#### Issue details\n\nApp memory (Windows Desktop) continues to grow. I was debugging something in a game I've been working on and noticed that If I just let the app sit open, the memory footprint continually increases. For my game, it started at about 200MB, but got up to over 1.2GB after letting it sit for 45 minutes.\n\nAfter banging my head on it, I made a base LibGDX project and performed the same test. Using JVisualVM, the memory consumption appears normal. I see a nice slow sawtooth profile. But according to Windows (Observing through Task Manager) the memory started at ~45MB, but after about 15 minutes, it's reporting about 110MB.\n#### Reproduction steps/code\n\nLatest at the time of observing this was version 1.9.4\nRun the desktop project (I'm currently using IntelliJ Community 2016.2)\nOpen Task Manager and watch the processes reported Private Working Set\n#### Version of LibGDX and/or relevant dependencies\n\nI am only aware of this issue on Windows\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4329/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4328","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4328/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4328/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4328/events","html_url":"https://github.com/libgdx/libgdx/issues/4328","id":179097114,"number":4328,"title":"Runtime failure on iOS 10.0: Cannot parse iOS version string \"10.0\"","user":{"login":"magicgoose","id":1442206,"avatar_url":"https://avatars1.githubusercontent.com/u/1442206?v=4","gravatar_id":"","url":"https://api.github.com/users/magicgoose","html_url":"https://github.com/magicgoose","followers_url":"https://api.github.com/users/magicgoose/followers","following_url":"https://api.github.com/users/magicgoose/following{/other_user}","gists_url":"https://api.github.com/users/magicgoose/gists{/gist_id}","starred_url":"https://api.github.com/users/magicgoose/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/magicgoose/subscriptions","organizations_url":"https://api.github.com/users/magicgoose/orgs","repos_url":"https://api.github.com/users/magicgoose/repos","events_url":"https://api.github.com/users/magicgoose/events{/privacy}","received_events_url":"https://api.github.com/users/magicgoose/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2016-09-25T17:18:33Z","updated_at":"2016-09-26T19:42:15Z","closed_at":"2016-09-26T19:42:15Z","author_association":"CONTRIBUTOR","body":"#### Issue details\n\nApp crashes with message `Cannot parse iOS version string \"10.0\"`\nI guess it's self explanatory and easy to fix, but I am not sure yet if it's a bug in libgdx or in MOE.\n#### Reproduction steps/code\n\nTry to launch a ios-moe project on iOS 10.0 simulator.\nI can add [SSCCE](http://sscce.org/) if necessary.\n#### Version of LibGDX and/or relevant dependencies\n\ngdxVersion = '1.9.5-SNAPSHOT'\n#### Log\n\n```\nassertion failed: 15G1004 14A345: libxpc.dylib + 62597 [37A9DF49-35C1-3D93-B854-B35CACF0100F]: 0x7d\nError: -[IOSVersion init]: Cannot parse iOS version string \"10.0\"\nobjc[74486]: Invalid or prematurely-freed autorelease pool 0x7fd1718b1040.\n```\n#### Affected platforms\n- [ ] Android\n- [ ] iOS (robovm)\n- [x] iOS (MOE)\n- [ ] HTML/GWT\n- [ ] Windows\n- [ ] Linux\n- [ ] MacOS\n### Update\n\nI think, the message is from this code\n\nhttps://searchcode.com/codesearch/view/255216/\n\nAnd it looks like an obvious error.\n\n```\n        NSString* versionStr = [[UIDevice currentDevice] systemVersion];\n        unichar ch = [versionStr characterAtIndex:0];\n        if(ch < '0' || ch > '9' || [versionStr characterAtIndex:1] != '.')\n        {\n            NSLog(@\"Error: %s: Cannot parse iOS version string \\\"%@\\\"\", __PRETTY_FUNCTION__, versionStr);\n        }\n```\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4328/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4327","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4327/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4327/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4327/events","html_url":"https://github.com/libgdx/libgdx/pull/4327","id":179091579,"number":4327,"title":"Improved Android default icons and added xxxhdpi","user":{"login":"obigu","id":1794492,"avatar_url":"https://avatars0.githubusercontent.com/u/1794492?v=4","gravatar_id":"","url":"https://api.github.com/users/obigu","html_url":"https://github.com/obigu","followers_url":"https://api.github.com/users/obigu/followers","following_url":"https://api.github.com/users/obigu/following{/other_user}","gists_url":"https://api.github.com/users/obigu/gists{/gist_id}","starred_url":"https://api.github.com/users/obigu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/obigu/subscriptions","organizations_url":"https://api.github.com/users/obigu/orgs","repos_url":"https://api.github.com/users/obigu/repos","events_url":"https://api.github.com/users/obigu/events{/privacy}","received_events_url":"https://api.github.com/users/obigu/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-09-25T15:23:09Z","updated_at":"2016-09-30T06:38:02Z","closed_at":"2016-09-30T06:38:02Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4327","html_url":"https://github.com/libgdx/libgdx/pull/4327","diff_url":"https://github.com/libgdx/libgdx/pull/4327.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4327.patch"},"body":"This PR replaces the Gdx Setup application default Android icons by a very simple new one based on the libGDX logo (see attachment).  The main reason to replace it is to avoid possible confusions with the Android's default icon when no icon is defined and help users understand this is the one that needs to be replaced.\n\nIt also adds **xxxhdpi** resolution which was missing.\n\nFinally replaces the ic_web_launcher (512*512) accordingly (now it looks good).\n\n**edit** The icon has a transparent bevel that can't be seen on white background\n\n![ic_launcher-web](https://cloud.githubusercontent.com/assets/1794492/18816165/f0f07e64-8343-11e6-9af8-eb3af1db9e99.png)\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4327/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4326","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4326/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4326/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4326/events","html_url":"https://github.com/libgdx/libgdx/pull/4326","id":179054830,"number":4326,"title":"#4267 Fixing a deadlock problem in AndroidGraphics and AndroidGraphicsLiveWallpaper","user":{"login":"marko-vasic","id":12842283,"avatar_url":"https://avatars3.githubusercontent.com/u/12842283?v=4","gravatar_id":"","url":"https://api.github.com/users/marko-vasic","html_url":"https://github.com/marko-vasic","followers_url":"https://api.github.com/users/marko-vasic/followers","following_url":"https://api.github.com/users/marko-vasic/following{/other_user}","gists_url":"https://api.github.com/users/marko-vasic/gists{/gist_id}","starred_url":"https://api.github.com/users/marko-vasic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/marko-vasic/subscriptions","organizations_url":"https://api.github.com/users/marko-vasic/orgs","repos_url":"https://api.github.com/users/marko-vasic/repos","events_url":"https://api.github.com/users/marko-vasic/events{/privacy}","received_events_url":"https://api.github.com/users/marko-vasic/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-09-24T22:08:50Z","updated_at":"2016-09-24T22:15:22Z","closed_at":null,"author_association":"NONE","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4326","html_url":"https://github.com/libgdx/libgdx/pull/4326","diff_url":"https://github.com/libgdx/libgdx/pull/4326.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4326.patch"},"body":"There was a problem with a possible deadlock ocurence in AndroidGraphics and AndroidGraphicsLiveWallpaper classes.\nA thread was waiting for notify signal, the problem is that other thread can call\nnotify before the current thread executes wait on the synch object\n(this scenario results in a deadlock).\nI implemented solution by using semaphores for synchronization instead of mutexes.\nSemaphores have different behaviour compared to mutexes, \nin that they internally remember number of permits,\nthread that calls signal on a semaphore will cause that thread that later arrives\non a semaphore uses that permit, unlike mutexes where waiting thread will\nbe unblocked only if it currently waits on a mutex.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4326/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4325","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4325/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4325/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4325/events","html_url":"https://github.com/libgdx/libgdx/pull/4325","id":178979607,"number":4325,"title":"Decrease size of ground mesh in Bullet wrapper VehicleTest","user":{"login":"jsjolund","id":174467,"avatar_url":"https://avatars0.githubusercontent.com/u/174467?v=4","gravatar_id":"","url":"https://api.github.com/users/jsjolund","html_url":"https://github.com/jsjolund","followers_url":"https://api.github.com/users/jsjolund/followers","following_url":"https://api.github.com/users/jsjolund/following{/other_user}","gists_url":"https://api.github.com/users/jsjolund/gists{/gist_id}","starred_url":"https://api.github.com/users/jsjolund/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jsjolund/subscriptions","organizations_url":"https://api.github.com/users/jsjolund/orgs","repos_url":"https://api.github.com/users/jsjolund/repos","events_url":"https://api.github.com/users/jsjolund/events{/privacy}","received_events_url":"https://api.github.com/users/jsjolund/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-09-23T21:42:08Z","updated_at":"2016-09-23T22:08:01Z","closed_at":"2016-09-23T22:08:01Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4325","html_url":"https://github.com/libgdx/libgdx/pull/4325","diff_url":"https://github.com/libgdx/libgdx/pull/4325.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4325.patch"},"body":"Prevents the wheels of the vehicle from twitching up and down. Collision in Bullet works best when triangles of shapes are of similar size.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4325/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4324","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4324/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4324/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4324/events","html_url":"https://github.com/libgdx/libgdx/pull/4324","id":178714300,"number":4324,"title":"Revert \"Fixes #4322: Restore window on correct monitor\"","user":{"login":"Tom-Ski","id":4346114,"avatar_url":"https://avatars0.githubusercontent.com/u/4346114?v=4","gravatar_id":"","url":"https://api.github.com/users/Tom-Ski","html_url":"https://github.com/Tom-Ski","followers_url":"https://api.github.com/users/Tom-Ski/followers","following_url":"https://api.github.com/users/Tom-Ski/following{/other_user}","gists_url":"https://api.github.com/users/Tom-Ski/gists{/gist_id}","starred_url":"https://api.github.com/users/Tom-Ski/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Tom-Ski/subscriptions","organizations_url":"https://api.github.com/users/Tom-Ski/orgs","repos_url":"https://api.github.com/users/Tom-Ski/repos","events_url":"https://api.github.com/users/Tom-Ski/events{/privacy}","received_events_url":"https://api.github.com/users/Tom-Ski/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-09-22T20:37:43Z","updated_at":"2016-09-22T20:37:48Z","closed_at":"2016-09-22T20:37:48Z","author_association":"OWNER","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4324","html_url":"https://github.com/libgdx/libgdx/pull/4324","diff_url":"https://github.com/libgdx/libgdx/pull/4324.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4324.patch"},"body":"Reverts libgdx/libgdx#4323\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4324/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4323","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4323/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4323/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4323/events","html_url":"https://github.com/libgdx/libgdx/pull/4323","id":178702824,"number":4323,"title":"Fixes #4322: Restore window on correct monitor","user":{"login":"CreamyCookie","id":3063858,"avatar_url":"https://avatars2.githubusercontent.com/u/3063858?v=4","gravatar_id":"","url":"https://api.github.com/users/CreamyCookie","html_url":"https://github.com/CreamyCookie","followers_url":"https://api.github.com/users/CreamyCookie/followers","following_url":"https://api.github.com/users/CreamyCookie/following{/other_user}","gists_url":"https://api.github.com/users/CreamyCookie/gists{/gist_id}","starred_url":"https://api.github.com/users/CreamyCookie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CreamyCookie/subscriptions","organizations_url":"https://api.github.com/users/CreamyCookie/orgs","repos_url":"https://api.github.com/users/CreamyCookie/repos","events_url":"https://api.github.com/users/CreamyCookie/events{/privacy}","received_events_url":"https://api.github.com/users/CreamyCookie/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2016-09-22T19:44:11Z","updated_at":"2016-09-22T20:03:59Z","closed_at":"2016-09-22T19:52:54Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4323","html_url":"https://github.com/libgdx/libgdx/pull/4323","diff_url":"https://github.com/libgdx/libgdx/pull/4323.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4323.patch"},"body":"","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4323/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4322","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4322/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4322/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4322/events","html_url":"https://github.com/libgdx/libgdx/issues/4322","id":178702174,"number":4322,"title":"Lwjgl3: When going from fullscreen to windowed, the window isn't restored on the correct monitor","user":{"login":"CreamyCookie","id":3063858,"avatar_url":"https://avatars2.githubusercontent.com/u/3063858?v=4","gravatar_id":"","url":"https://api.github.com/users/CreamyCookie","html_url":"https://github.com/CreamyCookie","followers_url":"https://api.github.com/users/CreamyCookie/followers","following_url":"https://api.github.com/users/CreamyCookie/following{/other_user}","gists_url":"https://api.github.com/users/CreamyCookie/gists{/gist_id}","starred_url":"https://api.github.com/users/CreamyCookie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CreamyCookie/subscriptions","organizations_url":"https://api.github.com/users/CreamyCookie/orgs","repos_url":"https://api.github.com/users/CreamyCookie/repos","events_url":"https://api.github.com/users/CreamyCookie/events{/privacy}","received_events_url":"https://api.github.com/users/CreamyCookie/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2016-09-22T19:41:09Z","updated_at":"2016-09-30T06:36:42Z","closed_at":"2016-09-30T06:36:42Z","author_association":"CONTRIBUTOR","body":"#### Issue details\n\nThe window isn't restored on the correct monitor if going from fullscreen to windowed.\n#### Reproduction steps/code\n\nExecute, immediately drag the window to any non-primary monitor.\n\n``` java\nimport com.badlogic.gdx.*;\nimport com.badlogic.gdx.backends.lwjgl.LwjglApplication;\nimport com.badlogic.gdx.graphics.*;\nimport com.badlogic.gdx.graphics.g2d.SpriteBatch;\n\npublic class BarebonesBatch extends ApplicationAdapter {\n    SpriteBatch batch;\n    Texture texture;\n\n    public void create () {\n        batch = new SpriteBatch();\n        texture = new Texture(Gdx.files.internal(\"data/badlogic.jpg\"));\n\n    }\n\n    int i = 0;\n\n    public void render () {\n        i++;\n        if (i == 100000) {\n            Gdx.graphics.setFullscreenMode(Gdx.graphics.getDisplayMode());\n        } else if (i == 200000) {\n            Gdx.graphics.setWindowedMode(400,400);\n        }\n        Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);\n        batch.begin();\n        batch.draw(texture, 100, 100);\n        batch.end();\n    }\n\n    public static void main (String[] args) throws Exception {\n        new LwjglApplication(new BarebonesBatch());\n    }\n}\n```\n#### Version of LibGDX and/or relevant dependencies\n\n1.9.4\n#### Please select the affected platforms\n- [ ] Android\n- [ ] iOS (robovm)\n- [ ] iOS (MOE)\n- [ ] HTML/GWT\n- [X] Windows\n- [X] Linux\n- [X] MacOS\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4322/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4321","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4321/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4321/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4321/events","html_url":"https://github.com/libgdx/libgdx/issues/4321","id":178406979,"number":4321,"title":"Switch field modifiers of BitmapFont to \"private\"","user":{"login":"avamix","id":6989705,"avatar_url":"https://avatars3.githubusercontent.com/u/6989705?v=4","gravatar_id":"","url":"https://api.github.com/users/avamix","html_url":"https://github.com/avamix","followers_url":"https://api.github.com/users/avamix/followers","following_url":"https://api.github.com/users/avamix/following{/other_user}","gists_url":"https://api.github.com/users/avamix/gists{/gist_id}","starred_url":"https://api.github.com/users/avamix/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/avamix/subscriptions","organizations_url":"https://api.github.com/users/avamix/orgs","repos_url":"https://api.github.com/users/avamix/repos","events_url":"https://api.github.com/users/avamix/events{/privacy}","received_events_url":"https://api.github.com/users/avamix/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2016-09-21T17:05:45Z","updated_at":"2016-12-04T12:36:36Z","closed_at":"2016-12-04T12:36:36Z","author_association":"NONE","body":"#### Issue details\n\nI need to override BitmapFont but can't do this because of some field modifiers of BitmapFont are \"package\", such as\n\n```\n    final BitmapFontData data;\n    Array<TextureRegion> regions;\n    boolean integer;\n```\n\nThere are getters for all of them, but some classes in the same package use them as is. \nFor example:\n\n```\nGlyphLayout uses font.data (com/badlogic/gdx/graphics/g2d/GlyphLayout.java:84)\nBitmapFontCache uses font.regions.size (com/badlogic/gdx/graphics/g2d/BitmapFontCache.java:346)\n```\n\nCould you set all of field modifiers to private for BitmapFont.\nIt really helps me with overriding.\n#### Reproduction steps/code\n#### Version of LibGDX and/or relevant dependencies\n\n1.9.4\n#### Stacktrace\n#### Please select the affected platforms\n\nAll platforms\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4321/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4320","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4320/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4320/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4320/events","html_url":"https://github.com/libgdx/libgdx/issues/4320","id":178223598,"number":4320,"title":"IPv6","user":{"login":"dungnart","id":9654516,"avatar_url":"https://avatars2.githubusercontent.com/u/9654516?v=4","gravatar_id":"","url":"https://api.github.com/users/dungnart","html_url":"https://github.com/dungnart","followers_url":"https://api.github.com/users/dungnart/followers","following_url":"https://api.github.com/users/dungnart/following{/other_user}","gists_url":"https://api.github.com/users/dungnart/gists{/gist_id}","starred_url":"https://api.github.com/users/dungnart/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dungnart/subscriptions","organizations_url":"https://api.github.com/users/dungnart/orgs","repos_url":"https://api.github.com/users/dungnart/repos","events_url":"https://api.github.com/users/dungnart/events{/privacy}","received_events_url":"https://api.github.com/users/dungnart/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2016-09-21T01:39:09Z","updated_at":"2016-09-21T09:06:20Z","closed_at":"2016-09-21T09:06:20Z","author_association":"NONE","body":"Please ensure you have given all the following requested information in your report.\n#### Issue details\n\nI have just submitted our game to Apple for reviewing. They have rejected our game because of IPv6. This is their reply: \"We discovered one or more bugs in your app when reviewed on iPad and iPhone running iOS 10.0.1 on Wi-Fi connected to an IPv6 network.We found the app displays an error message upon launch. Please run your app on a device while connected to an IPv6 network (all apps must support IPv6) to identify the issue(s), then revise and resubmit your app for review.\"\nI want to know that does Libgdx support IPv6 ? How to implement IPv6 in my code ?\n\nThanks !\n#### Version of LibGDX and/or relevant dependencies\n\n gdxVersion = '1.9.4'\n roboVMVersion = '2.2.0'\n box2DLightsVersion = '1.4'\n ashleyVersion = '1.7.0'\n aiVersion = '1.8.0'\n#### Stacktrace\n\n``` java\n//Please provide the stacktrace if applicable \n```\n#### Please select the affected platforms\n- [ ] Android\n- [x ] iOS (robovm)\n- [ ] iOS (MOE)\n- [ ] HTML/GWT\n- [ ] Windows\n- [ ] Linux\n- [ ] MacOS\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4320/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4319","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4319/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4319/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4319/events","html_url":"https://github.com/libgdx/libgdx/pull/4319","id":178116684,"number":4319,"title":"DefaultRenderableSorter accounts for center of Renderable mesh","user":{"login":"jsjolund","id":174467,"avatar_url":"https://avatars0.githubusercontent.com/u/174467?v=4","gravatar_id":"","url":"https://api.github.com/users/jsjolund","html_url":"https://github.com/jsjolund","followers_url":"https://api.github.com/users/jsjolund/followers","following_url":"https://api.github.com/users/jsjolund/following{/other_user}","gists_url":"https://api.github.com/users/jsjolund/gists{/gist_id}","starred_url":"https://api.github.com/users/jsjolund/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jsjolund/subscriptions","organizations_url":"https://api.github.com/users/jsjolund/orgs","repos_url":"https://api.github.com/users/jsjolund/repos","events_url":"https://api.github.com/users/jsjolund/events{/privacy}","received_events_url":"https://api.github.com/users/jsjolund/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2016-09-20T16:57:30Z","updated_at":"2017-01-08T13:15:49Z","closed_at":"2016-09-20T18:17:05Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4319","html_url":"https://github.com/libgdx/libgdx/pull/4319","diff_url":"https://github.com/libgdx/libgdx/pull/4319.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4319.patch"},"body":"Useful for cases when `Renderable` translation cannot be stored in `Renderable#worldTransform` but must be stored in `Renderable#MeshPart#center`, for example in 3D `ParticleSystem`. The performance penalty of this change can be tested in e.g. `Basic3DTest`, but I had a hard time seeing any change. It seems to be insignificant compared to the time it takes to render the models.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4319/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4318","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4318/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4318/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4318/events","html_url":"https://github.com/libgdx/libgdx/pull/4318","id":178109615,"number":4318,"title":"Fixes #3742, 3D particles not rendered behind transparent models","user":{"login":"jsjolund","id":174467,"avatar_url":"https://avatars0.githubusercontent.com/u/174467?v=4","gravatar_id":"","url":"https://api.github.com/users/jsjolund","html_url":"https://github.com/jsjolund","followers_url":"https://api.github.com/users/jsjolund/followers","following_url":"https://api.github.com/users/jsjolund/following{/other_user}","gists_url":"https://api.github.com/users/jsjolund/gists{/gist_id}","starred_url":"https://api.github.com/users/jsjolund/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jsjolund/subscriptions","organizations_url":"https://api.github.com/users/jsjolund/orgs","repos_url":"https://api.github.com/users/jsjolund/repos","events_url":"https://api.github.com/users/jsjolund/events{/privacy}","received_events_url":"https://api.github.com/users/jsjolund/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-09-20T16:27:36Z","updated_at":"2016-09-20T17:00:01Z","closed_at":null,"author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4318","html_url":"https://github.com/libgdx/libgdx/pull/4318","diff_url":"https://github.com/libgdx/libgdx/pull/4318.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4318.patch"},"body":"This fixes the problem mentioned in issue #3742 by using a separate `Renderable` for each `ParticleController` in  `BillboardParticleBatch` and `PointSpriteParticleBatch`. The `Renderable`s are obtained from a pool as needed.\n\nDepends on #4319 to work correctly.\n\nThe test/demo loads up pre-generated 3D particle systems of all three types. Video at\n[http://youtu.be/-LVBtB3fgpU](http://youtu.be/-LVBtB3fgpU)\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4318/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4317","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4317/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4317/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4317/events","html_url":"https://github.com/libgdx/libgdx/pull/4317","id":178108838,"number":4317,"title":"DefaultRenderableSorter accounts for center of Renderable mesh","user":{"login":"jsjolund","id":174467,"avatar_url":"https://avatars0.githubusercontent.com/u/174467?v=4","gravatar_id":"","url":"https://api.github.com/users/jsjolund","html_url":"https://github.com/jsjolund","followers_url":"https://api.github.com/users/jsjolund/followers","following_url":"https://api.github.com/users/jsjolund/following{/other_user}","gists_url":"https://api.github.com/users/jsjolund/gists{/gist_id}","starred_url":"https://api.github.com/users/jsjolund/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jsjolund/subscriptions","organizations_url":"https://api.github.com/users/jsjolund/orgs","repos_url":"https://api.github.com/users/jsjolund/repos","events_url":"https://api.github.com/users/jsjolund/events{/privacy}","received_events_url":"https://api.github.com/users/jsjolund/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-09-20T16:24:25Z","updated_at":"2016-09-20T16:52:19Z","closed_at":"2016-09-20T16:52:19Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4317","html_url":"https://github.com/libgdx/libgdx/pull/4317","diff_url":"https://github.com/libgdx/libgdx/pull/4317.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4317.patch"},"body":"Useful for cases when `Renderable` translation cannot be stored in `Renderable#worldTransform` but must be stored in `RenderableMeshPart#center`, for example in 3D `ParticleSystem`. The performance penalty of this change can be tested in e.g. `Basic3DTest`, but I had a hard time seeing any change. It seems to be insignificant compared to the time it takes to render the models.\n\nI can post create and post a benchmark program if required.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4317/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4316","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4316/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4316/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4316/events","html_url":"https://github.com/libgdx/libgdx/pull/4316","id":177971030,"number":4316,"title":"Updated to compile and run under Android Studio 2.2","user":{"login":"Zomby2D","id":5513720,"avatar_url":"https://avatars0.githubusercontent.com/u/5513720?v=4","gravatar_id":"","url":"https://api.github.com/users/Zomby2D","html_url":"https://github.com/Zomby2D","followers_url":"https://api.github.com/users/Zomby2D/followers","following_url":"https://api.github.com/users/Zomby2D/following{/other_user}","gists_url":"https://api.github.com/users/Zomby2D/gists{/gist_id}","starred_url":"https://api.github.com/users/Zomby2D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Zomby2D/subscriptions","organizations_url":"https://api.github.com/users/Zomby2D/orgs","repos_url":"https://api.github.com/users/Zomby2D/repos","events_url":"https://api.github.com/users/Zomby2D/events{/privacy}","received_events_url":"https://api.github.com/users/Zomby2D/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-09-20T05:53:34Z","updated_at":"2016-09-30T06:30:10Z","closed_at":"2016-09-30T06:30:10Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4316","html_url":"https://github.com/libgdx/libgdx/pull/4316","diff_url":"https://github.com/libgdx/libgdx/pull/4316.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4316.patch"},"body":"With the release of Android Studio 2.2, you can no longer push your Android apps to the emulator or your hardware without first updating the Android Gradle plugin to version 2.2.0. This is of course dependant on Gradle 2.14.1+ so it breaks the build because of some modules and their parents sharing the same name. This was previously discussed in issue #4230 and we are now facing a situation where we need to address this, unless we want to get stuck in the past.\n\nIn order to resolve the issue, I have added the suffix \"-common\" to the main branch of `gdx-box2d` and `gdx-controllers`. These fixes have allowed me to compile the source under Android Studio 2.2 and run the gdx-test.\n\nSo far it has only been tested under the latest version of Android Studio, with builds for lwjgl, lwjgl3, and Android. It would probably need to be tested under all IDE and on every platform before anyone could consider merging this.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4316/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4315","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4315/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4315/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4315/events","html_url":"https://github.com/libgdx/libgdx/pull/4315","id":177687369,"number":4315,"title":"Fixes #3742, 3D particles not rendered behind transparent models","user":{"login":"jsjolund","id":174467,"avatar_url":"https://avatars0.githubusercontent.com/u/174467?v=4","gravatar_id":"","url":"https://api.github.com/users/jsjolund","html_url":"https://github.com/jsjolund","followers_url":"https://api.github.com/users/jsjolund/followers","following_url":"https://api.github.com/users/jsjolund/following{/other_user}","gists_url":"https://api.github.com/users/jsjolund/gists{/gist_id}","starred_url":"https://api.github.com/users/jsjolund/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jsjolund/subscriptions","organizations_url":"https://api.github.com/users/jsjolund/orgs","repos_url":"https://api.github.com/users/jsjolund/repos","events_url":"https://api.github.com/users/jsjolund/events{/privacy}","received_events_url":"https://api.github.com/users/jsjolund/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-09-19T00:21:20Z","updated_at":"2016-09-19T19:56:14Z","closed_at":"2016-09-19T19:56:14Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4315","html_url":"https://github.com/libgdx/libgdx/pull/4315","diff_url":"https://github.com/libgdx/libgdx/pull/4315.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4315.patch"},"body":"This fixes the problem mentioned in issue #3742 by using a separate `Renderable` for each `ParticleController` in  `BillboardParticleBatch` and `PointSpriteParticleBatch`. The `Renderable`s are obtained from a pool as needed.\n\nSince these particles are created in world space coordinates, their translation cannot be stored in `Renderable#worldTransform` but must be stored in `MeshPart#center`. For this reason it was necessary to make `DefaultRenderableSorter` account for this situation. The performance penalty of this change can be tested in e.g. `Basic3DTest`, but I had a hard time seeing any change. It seems to be insignificant compared to the time it takes to render the models.\n\nThe test/demo loads up pre-generated 3D particle systems of all three types. Video at\n[http://youtu.be/-LVBtB3fgpU](http://youtu.be/-LVBtB3fgpU)\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4315/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4314","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4314/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4314/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4314/events","html_url":"https://github.com/libgdx/libgdx/pull/4314","id":177660582,"number":4314,"title":"Added md5 hash to file name for GWT preloader","user":{"login":"stanislaw89","id":3681384,"avatar_url":"https://avatars3.githubusercontent.com/u/3681384?v=4","gravatar_id":"","url":"https://api.github.com/users/stanislaw89","html_url":"https://github.com/stanislaw89","followers_url":"https://api.github.com/users/stanislaw89/followers","following_url":"https://api.github.com/users/stanislaw89/following{/other_user}","gists_url":"https://api.github.com/users/stanislaw89/gists{/gist_id}","starred_url":"https://api.github.com/users/stanislaw89/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stanislaw89/subscriptions","organizations_url":"https://api.github.com/users/stanislaw89/orgs","repos_url":"https://api.github.com/users/stanislaw89/repos","events_url":"https://api.github.com/users/stanislaw89/events{/privacy}","received_events_url":"https://api.github.com/users/stanislaw89/received_events","type":"User","site_admin":false},"labels":[{"id":67383148,"url":"https://api.github.com/repos/libgdx/libgdx/labels/gwt","name":"gwt","color":"5319e7","default":false}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-09-18T16:13:20Z","updated_at":"2017-09-05T20:58:15Z","closed_at":null,"author_association":"NONE","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4314","html_url":"https://github.com/libgdx/libgdx/pull/4314","diff_url":"https://github.com/libgdx/libgdx/pull/4314.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4314.patch"},"body":"Added MD5 hash to filename of asset files for easier dealing with browser cache.\nBefore this pull request the assets.txt file produced by PreloaderBundleGenerator may contain something like:\n\n> t:uiskin/arial_wgl_b_13.fnt:27071:application/unknown\n> \n> i:uiskin/arial_wgl_b_13.png:11533:image/png\n\nAfter pull request:\n\n> t:uiskin/arial_wgl_b_13.fnt:uiskin/arial_wgl_b_13-5af9a1bc28326501c446f7aafcd2e7fa.fnt:27071:application/unknown\n> \n> i:uiskin/arial_wgl_b_13.png:uiskin/arial_wgl_b_13-1de0c7c7a0eb31e51db9393bfcc28695.png:11533:image/png\n\nSo, in addition to filepath, url for downloading was added which contains md5 of the file. Developer who uses it can access file by the filepath just like it was before.\nThese make working with browser cache easier. Having md5 of file in url is common practice (btw GWT itself uses it for js files) and saves developer from pain of configuring cache headers etc (which may not be easy if some CDN is used).\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4314/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4313","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4313/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4313/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4313/events","html_url":"https://github.com/libgdx/libgdx/issues/4313","id":177647220,"number":4313,"title":"No option for rendering Arc Lines","user":{"login":"hareshkh","id":16576273,"avatar_url":"https://avatars3.githubusercontent.com/u/16576273?v=4","gravatar_id":"","url":"https://api.github.com/users/hareshkh","html_url":"https://github.com/hareshkh","followers_url":"https://api.github.com/users/hareshkh/followers","following_url":"https://api.github.com/users/hareshkh/following{/other_user}","gists_url":"https://api.github.com/users/hareshkh/gists{/gist_id}","starred_url":"https://api.github.com/users/hareshkh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hareshkh/subscriptions","organizations_url":"https://api.github.com/users/hareshkh/orgs","repos_url":"https://api.github.com/users/hareshkh/repos","events_url":"https://api.github.com/users/hareshkh/events{/privacy}","received_events_url":"https://api.github.com/users/hareshkh/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2016-09-18T11:45:22Z","updated_at":"2016-09-22T20:02:43Z","closed_at":"2016-09-22T20:02:43Z","author_association":"NONE","body":"I was recently writing some code in libGDX when I came across a problem that there is no method in the `ShapeRenderer` class that can render a Arc in form of a line. The default `arc` method renders a pie shaped sector, which is evident from the code. With little changes to the the base arc method a new method can be made which renders arc as a line. I have done the same and code to which can be found [here](https://github.com/karandesai-96/Magneto-Mania/blob/hw-refactor/core/src/com/sdsmdg/kd/helpers/ArcDrawer.java). The `arc` method in this class can be used to draw an arc line instead of a pie sector.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4313/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4312","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4312/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4312/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4312/events","html_url":"https://github.com/libgdx/libgdx/pull/4312","id":177627489,"number":4312,"title":"Playing around with new sprite batch API","user":{"login":"Cassiel-girl","id":22267660,"avatar_url":"https://avatars3.githubusercontent.com/u/22267660?v=4","gravatar_id":"","url":"https://api.github.com/users/Cassiel-girl","html_url":"https://github.com/Cassiel-girl","followers_url":"https://api.github.com/users/Cassiel-girl/followers","following_url":"https://api.github.com/users/Cassiel-girl/following{/other_user}","gists_url":"https://api.github.com/users/Cassiel-girl/gists{/gist_id}","starred_url":"https://api.github.com/users/Cassiel-girl/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Cassiel-girl/subscriptions","organizations_url":"https://api.github.com/users/Cassiel-girl/orgs","repos_url":"https://api.github.com/users/Cassiel-girl/repos","events_url":"https://api.github.com/users/Cassiel-girl/events{/privacy}","received_events_url":"https://api.github.com/users/Cassiel-girl/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-09-18T03:50:16Z","updated_at":"2016-09-18T06:46:34Z","closed_at":"2016-09-18T06:46:34Z","author_association":"NONE","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4312","html_url":"https://github.com/libgdx/libgdx/pull/4312","diff_url":"https://github.com/libgdx/libgdx/pull/4312.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4312.patch"},"body":"","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4312/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4311","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4311/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4311/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4311/events","html_url":"https://github.com/libgdx/libgdx/pull/4311","id":177582650,"number":4311,"title":"Add support for saving/loading the rendering type in Hiero","user":{"login":"barkholt","id":16083107,"avatar_url":"https://avatars3.githubusercontent.com/u/16083107?v=4","gravatar_id":"","url":"https://api.github.com/users/barkholt","html_url":"https://github.com/barkholt","followers_url":"https://api.github.com/users/barkholt/followers","following_url":"https://api.github.com/users/barkholt/following{/other_user}","gists_url":"https://api.github.com/users/barkholt/gists{/gist_id}","starred_url":"https://api.github.com/users/barkholt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/barkholt/subscriptions","organizations_url":"https://api.github.com/users/barkholt/orgs","repos_url":"https://api.github.com/users/barkholt/repos","events_url":"https://api.github.com/users/barkholt/events{/privacy}","received_events_url":"https://api.github.com/users/barkholt/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-09-17T14:58:10Z","updated_at":"2016-09-22T19:26:27Z","closed_at":"2016-09-22T19:26:27Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/libgdx/libgdx/pulls/4311","html_url":"https://github.com/libgdx/libgdx/pull/4311","diff_url":"https://github.com/libgdx/libgdx/pull/4311.diff","patch_url":"https://github.com/libgdx/libgdx/pull/4311.patch"},"body":"Using the command line batch support in Hiero was hampered by Hiero not saving/loading the rendering mode. Since it defaults to FreeType rendering, no effects would get exported by the batch mode since that requires the Java rendering mode.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4311/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4310","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4310/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4310/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4310/events","html_url":"https://github.com/libgdx/libgdx/issues/4310","id":177544878,"number":4310,"title":"Pool allows Individual Object to be freed multiple times.","user":{"login":"itravers","id":8468525,"avatar_url":"https://avatars3.githubusercontent.com/u/8468525?v=4","gravatar_id":"","url":"https://api.github.com/users/itravers","html_url":"https://github.com/itravers","followers_url":"https://api.github.com/users/itravers/followers","following_url":"https://api.github.com/users/itravers/following{/other_user}","gists_url":"https://api.github.com/users/itravers/gists{/gist_id}","starred_url":"https://api.github.com/users/itravers/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/itravers/subscriptions","organizations_url":"https://api.github.com/users/itravers/orgs","repos_url":"https://api.github.com/users/itravers/repos","events_url":"https://api.github.com/users/itravers/events{/privacy}","received_events_url":"https://api.github.com/users/itravers/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2016-09-17T00:25:55Z","updated_at":"2016-09-20T12:18:24Z","closed_at":"2016-09-20T12:18:24Z","author_association":"NONE","body":"I found this while writing Unit Tests for my project.\n#### Issue details\n\nShould a pool be able to add a single object multiple times with free(Object)?\nI find I am able to add an Object to a pool twice by calling free(Object) twice.\nThen when I try to obtain that object, I do, but it also remains in the pool available to \nbe obtained again.\nThis doesn't seem like the correct behavior to me.\n#### Reproduction steps/code\n1. Create an implemented class that extends Pool.\n2. Obtain an Object from the Pool.\n3. call Pool.free(Object) Twice in a row.\n   -The Pool's Array now contains two references to the Object, instead of the expected one reference.\n4. call Pool.obtain() to get an Object for TaskA\n5. call Pool.obtain() again to get an Object for TaskB\n\nThe Object for TaskA should NOT be the same Object for TaskB.\nYet it is.\n#### Suggested Possible Fix\n\nDon't allow Pool.free(Object) to add a specific object to it's array\ntwice. The Pools array should only have 1 reference to a free'd Object.\n\nWhen it checks `if(freeObjects.size < max)`\n\n``` java\n    public void free (T object) {\n        if (object == null) throw new IllegalArgumentException(\"object cannot be null.\");\n        if (freeObjects.size < max) {\n            freeObjects.add(object);\n            peak = Math.max(peak, freeObjects.size);\n        }\n        reset(object);\n    }\n```\n\nYou can just change the check to:\n `if(freeObjects.size < max && !freeObjects.contains(object, true))`\nas so:\n\n``` java\n    public void free (T object) {\n        if (object == null) throw new IllegalArgumentException(\"object cannot be null.\");\n        if (freeObjects.size < max && !freeObjects.contains(object, true)) {\n            freeObjects.add(object);\n            peak = Math.max(peak, freeObjects.size);\n        }\n        reset(object);\n    }\n```\n\nI'm using this modified version and everything is testing as expected.\n#### Version of LibGDX and/or relevant dependencies\n\nOccurs in the current Master branch\n#### Please select the affected platforms\n\nI didn't test them all, but it looks liket his will occur in any\nplatform that uses the Pool Class\n- [ x] Android\n- [ x] iOS (robovm)\n- [x ] iOS (MOE)\n- [x ] HTML/GWT\n- [ x] Windows\n- [x ] Linux\n- [ x] MacOS\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4310/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4309","repository_url":"https://api.github.com/repos/libgdx/libgdx","labels_url":"https://api.github.com/repos/libgdx/libgdx/issues/4309/labels{/name}","comments_url":"https://api.github.com/repos/libgdx/libgdx/issues/4309/comments","events_url":"https://api.github.com/repos/libgdx/libgdx/issues/4309/events","html_url":"https://github.com/libgdx/libgdx/issues/4309","id":177365779,"number":4309,"title":"Tiled Map loading throwing IllegalArgumentException: initialCapacity is too large.","user":{"login":"Snehks","id":12007086,"avatar_url":"https://avatars2.githubusercontent.com/u/12007086?v=4","gravatar_id":"","url":"https://api.github.com/users/Snehks","html_url":"https://github.com/Snehks","followers_url":"https://api.github.com/users/Snehks/followers","following_url":"https://api.github.com/users/Snehks/following{/other_user}","gists_url":"https://api.github.com/users/Snehks/gists{/gist_id}","starred_url":"https://api.github.com/users/Snehks/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Snehks/subscriptions","organizations_url":"https://api.github.com/users/Snehks/orgs","repos_url":"https://api.github.com/users/Snehks/repos","events_url":"https://api.github.com/users/Snehks/events{/privacy}","received_events_url":"https://api.github.com/users/Snehks/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-09-16T07:58:26Z","updated_at":"2016-09-20T12:20:30Z","closed_at":"2016-09-20T12:20:30Z","author_association":"NONE","body":"#### Issue details\n\nBasically my game is being played by few people at the moment and one of them sometimes get this exception when he moves from one map to the other - \nTiled Map loading throwing IllegalArgumentException: initialCapacity is too large.\n\nI am not doing anything outside render thread. Even map is loaded on the render thread.\n#### Reproduction steps/code\n\nSadly there is no way I could reproduce it, it just happens on one of my client's computer when a new map is loaded. Also this doesn't happen very often, the exception occurs rarely.\n#### The way I load map is like this :\n\n`currentMap = new TmxMapLoader().load(\"maps/\" + switchMapMessage.getMapId() + TMX_EXTENSION, mapParams);`\n#### Version of LibGDX and/or relevant dependencies\n\nLibgdx Version 1.9.3\n#### Stacktrace\n\n```\nLWJGL Application ERROR - A fatal error\ncom.badlogic.gdx.utils.SerializationException: Error parsing file: maps/1.tmx\n    at com.badlogic.gdx.utils.XmlReader.parse(XmlReader.java:83)\n    at com.badlogic.gdx.maps.tiled.TmxMapLoader.load(TmxMapLoader.java:78)\n    at com.pbo.game.client.map.DefaultMapManager.setupNewMap(DefaultMapManager.java:158)\n    at com.pbo.game.client.ui.screens.MainGameScreen.handleNetworkQueue(MainGameScreen.java:226)\n    at com.pbo.game.client.ui.screens.MainGameScreen.render(MainGameScreen.java:156)\n    at com.badlogic.gdx.Game.render(Game.java:46)\n    at com.pbo.game.client.GameClient.render(GameClient.java:73)\n    at com.badlogic.gdx.backends.lwjgl.LwjglApplication.mainLoop(LwjglApplication.java:223)\n    at com.badlogic.gdx.backends.lwjgl.LwjglApplication$1.run(LwjglApplication.java:124)\nCaused by: java.lang.IllegalArgumentException: initialCapacity is too large: 16\n    at com.badlogic.gdx.utils.ObjectMap.<init>(ObjectMap.java:68)\n    at com.badlogic.gdx.utils.ObjectMap.<init>(ObjectMap.java:59)\n    at com.badlogic.gdx.utils.XmlReader$Element.setAttribute(XmlReader.java:487)\n    at com.badlogic.gdx.utils.XmlReader.attribute(XmlReader.java:428)\n    at com.badlogic.gdx.utils.XmlReader.parse(XmlReader.java:260)\n    at com.badlogic.gdx.utils.XmlReader.parse(XmlReader.java:61)\n    at com.badlogic.gdx.utils.XmlReader.parse(XmlReader.java:81)\n    ... 8 common frames omitted\n```\n#### Please select the affected platforms\n\nWindows\n\nAlso sometimes this `Caused by: java.lang.IllegalArgumentException: initialCapacity is too large: 16` has 64 as initial capacity too.\n","reactions":{"url":"https://api.github.com/repos/libgdx/libgdx/issues/4309/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}}],"meta":{"x-ratelimit-limit":"5000","x-ratelimit-remaining":"4980","x-ratelimit-reset":"1506844633","x-github-request-id":"AECA:110A:247E139:40BE25A:59D09362","x-github-media-type":"github.squirrel-girl-preview","link":"<https://api.github.com/repositories/5373551/issues?state=all&page=21>; rel=\"next\", <https://api.github.com/repositories/5373551/issues?state=all&page=164>; rel=\"last\", <https://api.github.com/repositories/5373551/issues?state=all&page=1>; rel=\"first\", <https://api.github.com/repositories/5373551/issues?state=all&page=19>; rel=\"prev\"","etag":"\"f53e77546ef22861e6dd8dce80090212\"","status":"200 OK"}}
