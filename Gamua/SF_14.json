{"data":[{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/612","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/612/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/612/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/612/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/612","id":41802784,"number":612,"title":"It's very difficult to extend AssetsManager","user":{"login":"wangping0214","id":2487703,"avatar_url":"https://avatars3.githubusercontent.com/u/2487703?v=4","gravatar_id":"","url":"https://api.github.com/users/wangping0214","html_url":"https://github.com/wangping0214","followers_url":"https://api.github.com/users/wangping0214/followers","following_url":"https://api.github.com/users/wangping0214/following{/other_user}","gists_url":"https://api.github.com/users/wangping0214/gists{/gist_id}","starred_url":"https://api.github.com/users/wangping0214/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wangping0214/subscriptions","organizations_url":"https://api.github.com/users/wangping0214/orgs","repos_url":"https://api.github.com/users/wangping0214/repos","events_url":"https://api.github.com/users/wangping0214/events{/privacy}","received_events_url":"https://api.github.com/users/wangping0214/received_events","type":"User","site_admin":false},"labels":[{"id":130317,"url":"https://api.github.com/repos/Gamua/Starling-Framework/labels/Feature","name":"Feature","color":"009800","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2014-09-03T10:39:24Z","updated_at":"2014-11-18T07:25:15Z","closed_at":"2014-11-18T07:25:15Z","author_association":"NONE","body":"I want to extend AssetsManager to process new file format, plist for example. To do that, it's a good way to override nested function processXmls, but I can't do that, because the function is nested, I have to override the entire outer function loadQueue, which looks very ugly. \n\nCan you give me some suggestions? Thank you in advance!\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/612/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/611","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/611/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/611/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/611/events","html_url":"https://github.com/Gamua/Starling-Framework/pull/611","id":41585005,"number":611,"title":"Refactored Gradle script to plug-in-less (dropped GradleFX integration)","user":{"login":"vpmedia","id":1160199,"avatar_url":"https://avatars2.githubusercontent.com/u/1160199?v=4","gravatar_id":"","url":"https://api.github.com/users/vpmedia","html_url":"https://github.com/vpmedia","followers_url":"https://api.github.com/users/vpmedia/followers","following_url":"https://api.github.com/users/vpmedia/following{/other_user}","gists_url":"https://api.github.com/users/vpmedia/gists{/gist_id}","starred_url":"https://api.github.com/users/vpmedia/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vpmedia/subscriptions","organizations_url":"https://api.github.com/users/vpmedia/orgs","repos_url":"https://api.github.com/users/vpmedia/repos","events_url":"https://api.github.com/users/vpmedia/events{/privacy}","received_events_url":"https://api.github.com/users/vpmedia/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2014-08-31T12:14:35Z","updated_at":"2014-09-15T09:03:31Z","closed_at":"2014-09-14T14:05:50Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/pulls/611","html_url":"https://github.com/Gamua/Starling-Framework/pull/611","diff_url":"https://github.com/Gamua/Starling-Framework/pull/611.diff","patch_url":"https://github.com/Gamua/Starling-Framework/pull/611.patch"},"body":"For better flexibility I've refactored the Gradle build script to do NOT use the GradleFX plug-in.\nYou can read more about this requirement here: https://github.com/Gamua/Starling-Framework/pull/609\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/611/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/610","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/610/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/610/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/610/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/610","id":41510536,"number":610,"title":"Use stencil buffers to perform masking.","user":{"login":"henke37","id":4971363,"avatar_url":"https://avatars0.githubusercontent.com/u/4971363?v=4","gravatar_id":"","url":"https://api.github.com/users/henke37","html_url":"https://github.com/henke37","followers_url":"https://api.github.com/users/henke37/followers","following_url":"https://api.github.com/users/henke37/following{/other_user}","gists_url":"https://api.github.com/users/henke37/gists{/gist_id}","starred_url":"https://api.github.com/users/henke37/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/henke37/subscriptions","organizations_url":"https://api.github.com/users/henke37/orgs","repos_url":"https://api.github.com/users/henke37/repos","events_url":"https://api.github.com/users/henke37/events{/privacy}","received_events_url":"https://api.github.com/users/henke37/received_events","type":"User","site_admin":false},"labels":[{"id":130317,"url":"https://api.github.com/repos/Gamua/Starling-Framework/labels/Feature","name":"Feature","color":"009800","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2014-08-29T15:14:29Z","updated_at":"2015-03-06T14:18:33Z","closed_at":"2015-03-06T14:18:33Z","author_association":"NONE","body":"Stencil buffers are made for the purpose of masking, so why not do that?\n\nThis does depend on the ability to control buffer updating based on a texture value, which is not obviously supported in the Stage3D API.\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/610/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/609","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/609/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/609/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/609/events","html_url":"https://github.com/Gamua/Starling-Framework/pull/609","id":41505746,"number":609,"title":"Add unit test for AssetManager","user":{"login":"honzabrecka","id":1021827,"avatar_url":"https://avatars3.githubusercontent.com/u/1021827?v=4","gravatar_id":"","url":"https://api.github.com/users/honzabrecka","html_url":"https://github.com/honzabrecka","followers_url":"https://api.github.com/users/honzabrecka/followers","following_url":"https://api.github.com/users/honzabrecka/following{/other_user}","gists_url":"https://api.github.com/users/honzabrecka/gists{/gist_id}","starred_url":"https://api.github.com/users/honzabrecka/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/honzabrecka/subscriptions","organizations_url":"https://api.github.com/users/honzabrecka/orgs","repos_url":"https://api.github.com/users/honzabrecka/repos","events_url":"https://api.github.com/users/honzabrecka/events{/privacy}","received_events_url":"https://api.github.com/users/honzabrecka/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":19,"created_at":"2014-08-29T14:27:52Z","updated_at":"2014-10-07T08:51:35Z","closed_at":"2014-09-23T07:01:17Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/pulls/609","html_url":"https://github.com/Gamua/Starling-Framework/pull/609","diff_url":"https://github.com/Gamua/Starling-Framework/pull/609.diff","patch_url":"https://github.com/Gamua/Starling-Framework/pull/609.patch"},"body":"The main purpose was to test the `AssetManager` class, but because it requires Starling instance inside, I wrote the `StarlingTestCase`:\n- each test waits until the fresh Starling instance is ready\n- provides Starling to flash events adapter\n\nI think it's a good start how to get to \"100%\" code coverage.\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/609/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/608","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/608/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/608/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/608/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/608","id":41165914,"number":608,"title":"Use z buffering to allow for fewer drawcalls","user":{"login":"henke37","id":4971363,"avatar_url":"https://avatars0.githubusercontent.com/u/4971363?v=4","gravatar_id":"","url":"https://api.github.com/users/henke37","html_url":"https://github.com/henke37","followers_url":"https://api.github.com/users/henke37/followers","following_url":"https://api.github.com/users/henke37/following{/other_user}","gists_url":"https://api.github.com/users/henke37/gists{/gist_id}","starred_url":"https://api.github.com/users/henke37/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/henke37/subscriptions","organizations_url":"https://api.github.com/users/henke37/orgs","repos_url":"https://api.github.com/users/henke37/repos","events_url":"https://api.github.com/users/henke37/events{/privacy}","received_events_url":"https://api.github.com/users/henke37/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":10,"created_at":"2014-08-26T12:21:31Z","updated_at":"2014-08-27T09:10:13Z","closed_at":"2014-08-26T12:28:26Z","author_association":"NONE","body":"A major source of draw calls is having to switch state, specifically because the display tree has an Image with a  different state between two other Images that share a state.\n\nUsing z buffering would allow correct layer order without having to split the draw calls to allow for other content in between.\n\nThe idea here is simply assign each quad an unique z value. Assign the z values in the same order as the display tree is traversed. This ensures correct layering even if only some parts of a state should be covered by content from a different state.\n\nSince there is no per polygon values, the correct value has to be stored in each vertex, not too bad size it is only a factor of four per quad.\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/608/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/607","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/607/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/607/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/607/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/607","id":40957897,"number":607,"title":"Changed MovieClip to allow SoundTransforms on frame sounds","user":{"login":"kheftel","id":669328,"avatar_url":"https://avatars2.githubusercontent.com/u/669328?v=4","gravatar_id":"","url":"https://api.github.com/users/kheftel","html_url":"https://github.com/kheftel","followers_url":"https://api.github.com/users/kheftel/followers","following_url":"https://api.github.com/users/kheftel/following{/other_user}","gists_url":"https://api.github.com/users/kheftel/gists{/gist_id}","starred_url":"https://api.github.com/users/kheftel/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kheftel/subscriptions","organizations_url":"https://api.github.com/users/kheftel/orgs","repos_url":"https://api.github.com/users/kheftel/repos","events_url":"https://api.github.com/users/kheftel/events{/privacy}","received_events_url":"https://api.github.com/users/kheftel/received_events","type":"User","site_admin":false},"labels":[{"id":130317,"url":"https://api.github.com/repos/Gamua/Starling-Framework/labels/Feature","name":"Feature","color":"009800","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2014-08-22T22:52:54Z","updated_at":"2014-11-17T14:13:50Z","closed_at":"2014-11-17T14:12:46Z","author_association":"NONE","body":"Hi,\n  I've altered MovieClip to be able to specify a SoundTransform (volume, panning) for each frame sound.\n\n  I have no idea how to use git (I promise to learn one day, I'm still stuck on SVN lol), so in case the code is useful here it is in its entirety (sorry).\n\n``` as3\n// =================================================================================================\n//\n//  Starling Framework\n//  Copyright 2011 Gamua OG. All Rights Reserved.\n//\n//  This program is free software. You can redistribute and/or modify it\n//  in accordance with the terms of the accompanying license agreement.\n//\n// =================================================================================================\n\npackage starling.display\n{\n    import flash.errors.IllegalOperationError;\n    import flash.media.Sound;\n    import flash.media.SoundTransform;\n\n    import starling.animation.IAnimatable;\n    import starling.events.Event;\n    import starling.textures.Texture;\n\n    /** Dispatched whenever the movie has displayed its last frame. */\n    [Event(name=\"complete\", type=\"starling.events.Event\")]\n\n    /** A MovieClip is a simple way to display an animation depicted by a list of textures.\n     *  \n     *  <p>Pass the frames of the movie in a vector of textures to the constructor. The movie clip \n     *  will have the width and height of the first frame. If you group your frames with the help \n     *  of a texture atlas (which is recommended), use the <code>getTextures</code>-method of the \n     *  atlas to receive the textures in the correct (alphabetic) order.</p> \n     *  \n     *  <p>You can specify the desired framerate via the constructor. You can, however, manually \n     *  give each frame a custom duration. You can also play a sound whenever a certain frame \n     *  appears.</p>\n     *  \n     *  <p>The methods <code>play</code> and <code>pause</code> control playback of the movie. You\n     *  will receive an event of type <code>Event.COMPLETE</code> when the movie finished\n     *  playback. If the movie is looping, the event is dispatched once per loop.</p>\n     *  \n     *  <p>As any animated object, a movie clip has to be added to a juggler (or have its \n     *  <code>advanceTime</code> method called regularly) to run. The movie will dispatch \n     *  an event of type \"Event.COMPLETE\" whenever it has displayed its last frame.</p>\n     *  \n     *  @see starling.textures.TextureAtlas\n     */    \n    public class MovieClip extends Image implements IAnimatable\n    {\n        private var mTextures:Vector.<Texture>;\n        private var mSounds:Vector.<Sound>;\n        private var mDurations:Vector.<Number>;\n        private var mStartTimes:Vector.<Number>;\n\n        private var mDefaultFrameDuration:Number;\n        private var mCurrentTime:Number;\n        private var mCurrentFrame:int;\n        private var mLoop:Boolean;\n        private var mPlaying:Boolean;\n        private var mMuted:Boolean;\n\n        private var mSoundTransforms:Vector.<SoundTransform>;\n\n        /** Creates a movie clip from the provided textures and with the specified default framerate.\n         *  The movie will have the size of the first frame. */  \n        public function MovieClip(textures:Vector.<Texture>, fps:Number=12)\n        {\n            if (textures.length > 0)\n            {\n                super(textures[0]);\n                init(textures, fps);\n            }\n            else\n            {\n                throw new ArgumentError(\"Empty texture array\");\n            }\n        }\n\n        private function init(textures:Vector.<Texture>, fps:Number):void\n        {\n            if (fps <= 0) throw new ArgumentError(\"Invalid fps: \" + fps);\n            var numFrames:int = textures.length;\n\n            mDefaultFrameDuration = 1.0 / fps;\n            mLoop = true;\n            mPlaying = true;\n            mCurrentTime = 0.0;\n            mCurrentFrame = 0;\n            mTextures = textures.concat();\n            mSounds = new Vector.<Sound>(numFrames);\n            mSoundTransforms = new Vector.<SoundTransform>(numFrames);\n            mDurations = new Vector.<Number>(numFrames);\n            mStartTimes = new Vector.<Number>(numFrames);\n\n            for (var i:int=0; i<numFrames; ++i)\n            {\n                mDurations[i] = mDefaultFrameDuration;\n                mStartTimes[i] = i * mDefaultFrameDuration;\n            }\n        }\n\n        // frame manipulation\n\n        /** Adds an additional frame, optionally with a sound and a custom duration. If the \n         *  duration is omitted, the default framerate is used (as specified in the constructor). */   \n        public function addFrame(texture:Texture, sound:Sound=null, soundTransform:SoundTransform = null, duration:Number=-1):void\n        {\n            addFrameAt(numFrames, texture, sound, soundTransform, duration);\n        }\n\n        /** Adds a frame at a certain index, optionally with a sound and a custom duration. */\n        public function addFrameAt(frameID:int, texture:Texture, sound:Sound=null, soundTransform:SoundTransform = null, \n                                   duration:Number=-1):void\n        {\n            if (frameID < 0 || frameID > numFrames) throw new ArgumentError(\"Invalid frame id\");\n            if (duration < 0) duration = mDefaultFrameDuration;\n\n            mTextures.splice(frameID, 0, texture);\n            mSounds.splice(frameID, 0, sound);\n            mSoundTransforms.splice(frameID, 0, soundTransform);\n            mDurations.splice(frameID, 0, duration);\n\n            if (frameID > 0 && frameID == numFrames) \n                mStartTimes[frameID] = mStartTimes[int(frameID-1)] + mDurations[int(frameID-1)];\n            else\n                updateStartTimes();\n        }\n\n        /** Removes the frame at a certain ID. The successors will move down. */\n        public function removeFrameAt(frameID:int):void\n        {\n            if (frameID < 0 || frameID >= numFrames) throw new ArgumentError(\"Invalid frame id\");\n            if (numFrames == 1) throw new IllegalOperationError(\"Movie clip must not be empty\");\n\n            mTextures.splice(frameID, 1);\n            mSounds.splice(frameID, 1);\n            mSoundTransforms.splice(frameID, 1);\n            mDurations.splice(frameID, 1);\n\n            updateStartTimes();\n        }\n\n        /** Returns the texture of a certain frame. */\n        public function getFrameTexture(frameID:int):Texture\n        {\n            if (frameID < 0 || frameID >= numFrames) throw new ArgumentError(\"Invalid frame id\");\n            return mTextures[frameID];\n        }\n\n        /** Sets the texture of a certain frame. */\n        public function setFrameTexture(frameID:int, texture:Texture):void\n        {\n            if (frameID < 0 || frameID >= numFrames) throw new ArgumentError(\"Invalid frame id\");\n            mTextures[frameID] = texture;\n        }\n\n        /** Returns the sound of a certain frame. */\n        public function getFrameSound(frameID:int):Sound\n        {\n            if (frameID < 0 || frameID >= numFrames) throw new ArgumentError(\"Invalid frame id\");\n            return mSounds[frameID];\n        }\n\n        /** Returns the SoundTransform of a certain frame. */\n        public function getFrameSoundTransform(frameID:int):SoundTransform\n        {\n            if (frameID < 0 || frameID >= numFrames) throw new ArgumentError(\"Invalid frame id\");\n            return mSoundTransforms[frameID];\n        }\n\n        /** Sets the sound of a certain frame. The sound will be played whenever the frame \n         *  is displayed. */\n        public function setFrameSound(frameID:int, sound:Sound, transform:SoundTransform = null):void\n        {\n            if (frameID < 0 || frameID >= numFrames) throw new ArgumentError(\"Invalid frame id\");\n            mSounds[frameID] = sound;\n            mSoundTransforms[frameID] = transform;\n        }\n\n        /** Returns the duration of a certain frame (in seconds). */\n        public function getFrameDuration(frameID:int):Number\n        {\n            if (frameID < 0 || frameID >= numFrames) throw new ArgumentError(\"Invalid frame id\");\n            return mDurations[frameID];\n        }\n\n        /** Sets the duration of a certain frame (in seconds). */\n        public function setFrameDuration(frameID:int, duration:Number):void\n        {\n            if (frameID < 0 || frameID >= numFrames) throw new ArgumentError(\"Invalid frame id\");\n            mDurations[frameID] = duration;\n            updateStartTimes();\n        }\n\n        // playback methods\n\n        /** Starts playback. Beware that the clip has to be added to a juggler, too! */\n        public function play():void\n        {\n            mPlaying = true;\n        }\n\n        /** Pauses playback. */\n        public function pause():void\n        {\n            mPlaying = false;\n        }\n\n        /** Stops playback, resetting \"currentFrame\" to zero. */\n        public function stop():void\n        {\n            mPlaying = false;\n            currentFrame = 0;\n        }\n\n        // helpers\n\n        private function updateStartTimes():void\n        {\n            var numFrames:int = this.numFrames;\n\n            mStartTimes.length = 0;\n            mStartTimes[0] = 0;\n\n            for (var i:int=1; i<numFrames; ++i)\n                mStartTimes[i] = mStartTimes[int(i-1)] + mDurations[int(i-1)];\n        }\n\n        // IAnimatable\n\n        /** @inheritDoc */\n        public function advanceTime(passedTime:Number):void\n        {\n            if (!mPlaying || passedTime <= 0.0) return;\n\n            var finalFrame:int;\n            var previousFrame:int = mCurrentFrame;\n            var restTime:Number = 0.0;\n            var breakAfterFrame:Boolean = false;\n            var hasCompleteListener:Boolean = hasEventListener(Event.COMPLETE); \n            var dispatchCompleteEvent:Boolean = false;\n            var totalTime:Number = this.totalTime;\n\n            if (mLoop && mCurrentTime >= totalTime)\n            { \n                mCurrentTime = 0.0; \n                mCurrentFrame = 0; \n            }\n\n            if (mCurrentTime < totalTime)\n            {\n                mCurrentTime += passedTime;\n                finalFrame = mTextures.length - 1;\n\n                while (mCurrentTime > mStartTimes[mCurrentFrame] + mDurations[mCurrentFrame])\n                {\n                    if (mCurrentFrame == finalFrame)\n                    {\n                        if (mLoop && !hasCompleteListener)\n                        {\n                            mCurrentTime -= totalTime;\n                            mCurrentFrame = 0;\n                        }\n                        else\n                        {\n                            breakAfterFrame = true;\n                            restTime = mCurrentTime - totalTime;\n                            dispatchCompleteEvent = hasCompleteListener;\n                            mCurrentFrame = finalFrame;\n                            mCurrentTime = totalTime;\n                        }\n                    }\n                    else\n                    {\n                        mCurrentFrame++;\n                    }\n\n                    var sound:Sound = mSounds[mCurrentFrame];\n                    if (sound && !mMuted) sound.play(0, 0, mSoundTransforms[mCurrentFrame]);\n                    if (breakAfterFrame) break;\n                }\n\n                // special case when we reach *exactly* the total time.\n                if (mCurrentFrame == finalFrame && mCurrentTime == totalTime)\n                    dispatchCompleteEvent = hasCompleteListener;\n            }\n\n            if (mCurrentFrame != previousFrame)\n                texture = mTextures[mCurrentFrame];\n\n            if (dispatchCompleteEvent)\n                dispatchEventWith(Event.COMPLETE);\n\n            if (mLoop && restTime > 0.0)\n                advanceTime(restTime);\n        }\n\n        // properties  \n\n        /** The total duration of the clip in seconds. */\n        public function get totalTime():Number \n        {\n            var numFrames:int = mTextures.length;\n            return mStartTimes[int(numFrames-1)] + mDurations[int(numFrames-1)];\n        }\n\n        /** The time that has passed since the clip was started (each loop starts at zero). */\n        public function get currentTime():Number { return mCurrentTime; }\n\n        /** The total number of frames. */\n        public function get numFrames():int { return mTextures.length; }\n\n        /** Indicates if the clip should loop. */\n        public function get loop():Boolean { return mLoop; }\n        public function set loop(value:Boolean):void { mLoop = value; }\n\n        /** If enabled, no new sounds will be started during playback. Sounds that are already\n         *  playing are not affected. */\n        public function get muted():Boolean { return mMuted; }\n        public function set muted(value:Boolean):void { mMuted = value; }\n\n        /** The index of the frame that is currently displayed. */\n        public function get currentFrame():int { return mCurrentFrame; }\n        public function set currentFrame(value:int):void\n        {\n            mCurrentFrame = value;\n            mCurrentTime = 0.0;\n\n            for (var i:int=0; i<value; ++i)\n                mCurrentTime += getFrameDuration(i);\n\n            texture = mTextures[mCurrentFrame];\n            if (!mMuted && mSounds[mCurrentFrame]) mSounds[mCurrentFrame].play(0, 0, mSoundTransforms[mCurrentFrame]);\n        }\n\n        /** The default number of frames per second. Individual frames can have different \n         *  durations. If you change the fps, the durations of all frames will be scaled \n         *  relatively to the previous value. */\n        public function get fps():Number { return 1.0 / mDefaultFrameDuration; }\n        public function set fps(value:Number):void\n        {\n            if (value <= 0) throw new ArgumentError(\"Invalid fps: \" + value);\n\n            var newFrameDuration:Number = 1.0 / value;\n            var acceleration:Number = newFrameDuration / mDefaultFrameDuration;\n            mCurrentTime *= acceleration;\n            mDefaultFrameDuration = newFrameDuration;\n\n            for (var i:int=0; i<numFrames; ++i) \n            {\n                var duration:Number = mDurations[i] * acceleration;\n                mDurations[i] = duration;\n            }\n\n            updateStartTimes();\n        }\n\n        /** Indicates if the clip is still playing. Returns <code>false</code> when the end \n         *  is reached. */\n        public function get isPlaying():Boolean \n        {\n            if (mPlaying)\n                return mLoop || mCurrentTime < totalTime;\n            else\n                return false;\n        }\n\n        /** Indicates if a (non-looping) movie has come to its end. */\n        public function get isComplete():Boolean\n        {\n            return !mLoop && mCurrentTime >= totalTime;\n        }\n    }\n}\n```\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/607/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/606","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/606/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/606/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/606/events","html_url":"https://github.com/Gamua/Starling-Framework/pull/606","id":40786363,"number":606,"title":"add check for http response status code","user":{"login":"honzabrecka","id":1021827,"avatar_url":"https://avatars3.githubusercontent.com/u/1021827?v=4","gravatar_id":"","url":"https://api.github.com/users/honzabrecka","html_url":"https://github.com/honzabrecka","followers_url":"https://api.github.com/users/honzabrecka/followers","following_url":"https://api.github.com/users/honzabrecka/following{/other_user}","gists_url":"https://api.github.com/users/honzabrecka/gists{/gist_id}","starred_url":"https://api.github.com/users/honzabrecka/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/honzabrecka/subscriptions","organizations_url":"https://api.github.com/users/honzabrecka/orgs","repos_url":"https://api.github.com/users/honzabrecka/repos","events_url":"https://api.github.com/users/honzabrecka/events{/privacy}","received_events_url":"https://api.github.com/users/honzabrecka/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2014-08-21T09:18:57Z","updated_at":"2014-10-07T08:51:40Z","closed_at":"2014-08-21T18:55:38Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/pulls/606","html_url":"https://github.com/Gamua/Starling-Framework/pull/606","diff_url":"https://github.com/Gamua/Starling-Framework/pull/606.diff","patch_url":"https://github.com/Gamua/Starling-Framework/pull/606.patch"},"body":"Some old versions of Adobe AIR have a bug - https://bugbase.adobe.com/index.cfm?event=bug&id=3197184. Even if the asset can't be loaded (response contains 404 http status code), URLLoader dispatches Event.COMPLETE event (instead of IOErrorEvent.IO_ERROR).\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/606/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/605","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/605/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/605/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/605/events","html_url":"https://github.com/Gamua/Starling-Framework/pull/605","id":40714345,"number":605,"title":"add security error handler","user":{"login":"honzabrecka","id":1021827,"avatar_url":"https://avatars3.githubusercontent.com/u/1021827?v=4","gravatar_id":"","url":"https://api.github.com/users/honzabrecka","html_url":"https://github.com/honzabrecka","followers_url":"https://api.github.com/users/honzabrecka/followers","following_url":"https://api.github.com/users/honzabrecka/following{/other_user}","gists_url":"https://api.github.com/users/honzabrecka/gists{/gist_id}","starred_url":"https://api.github.com/users/honzabrecka/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/honzabrecka/subscriptions","organizations_url":"https://api.github.com/users/honzabrecka/orgs","repos_url":"https://api.github.com/users/honzabrecka/repos","events_url":"https://api.github.com/users/honzabrecka/events{/privacy}","received_events_url":"https://api.github.com/users/honzabrecka/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-08-20T16:03:43Z","updated_at":"2014-08-23T17:25:06Z","closed_at":"2014-08-22T07:35:19Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/pulls/605","html_url":"https://github.com/Gamua/Starling-Framework/pull/605","diff_url":"https://github.com/Gamua/Starling-Framework/pull/605.diff","patch_url":"https://github.com/Gamua/Starling-Framework/pull/605.patch"},"body":"It handles, for example, the following error:\n\n```\nError #2044: Unhandled securityError:. text=Error #2048: Security sandbox violation: <ourUrl> cannot load data from https://fbstatic-a.akamaihd.net/rsrc.php/v2/yo/r/UlIqmHJn-SK.gif.\n    at path.assets::AssetManager/loadRawAsset()[D:\\...\\code-shared\\src\\main\\as3\\com\\path\\assets\\AssetManager.as:890]\n    at path.assets::LoggingAssetManager/loadRawAsset()[D:\\...\\code-shared\\src\\main\\as3\\com\\path\\assets\\LoggingAssetManager.as:86]\n    at path.assets::AssetManager/processRawAsset()[D:\\...\\code-shared\\src\\main\\as3\\com\\path\\assets\\AssetManager.as:710]\n    at Function/path.assets:AssetManager/loadQueue/path.assets:loadQueueElement()[D:\\...\\code-shared\\src\\main\\as3\\com\\path\\assets\\AssetManager.as:604]\n    at Function/path.assets:AssetManager/loadQueue/path.assets:loadNextQueueElement()[D:\\...\\code-shared\\src\\main\\as3\\com\\path\\assets\\AssetManager.as:582]\n    at path.assets::AssetManager/loadQueue()[D:\\...\\code-shared\\src\\main\\as3\\com\\path\\assets\\AssetManager.as:569]\n```\n\nwhich causes, that AssetManager never reaches 100%.\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/605/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/604","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/604/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/604/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/604/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/604","id":40708878,"number":604,"title":"Incomplete Asset Load","user":{"login":"etmiranda","id":3160644,"avatar_url":"https://avatars2.githubusercontent.com/u/3160644?v=4","gravatar_id":"","url":"https://api.github.com/users/etmiranda","html_url":"https://github.com/etmiranda","followers_url":"https://api.github.com/users/etmiranda/followers","following_url":"https://api.github.com/users/etmiranda/following{/other_user}","gists_url":"https://api.github.com/users/etmiranda/gists{/gist_id}","starred_url":"https://api.github.com/users/etmiranda/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/etmiranda/subscriptions","organizations_url":"https://api.github.com/users/etmiranda/orgs","repos_url":"https://api.github.com/users/etmiranda/repos","events_url":"https://api.github.com/users/etmiranda/events{/privacy}","received_events_url":"https://api.github.com/users/etmiranda/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2014-08-20T15:14:00Z","updated_at":"2014-08-23T20:27:22Z","closed_at":"2014-08-23T20:27:22Z","author_association":"NONE","body":"I'm not sure how feasible this is to fix, but we noticed that some users were getting incomplete loads. Like, the AssetManager never reaches 100%.\n\nThis seems to be because this error is unhandled (we have a local copy of AssetManager, but it's an exact match to what's on Github now):\n\n```\nError #2044: Unhandled securityError:. text=Error #2048: Security sandbox violation: <ourUrl> cannot load data from https://fbstatic-a.akamaihd.net/rsrc.php/v2/yo/r/UlIqmHJn-SK.gif.\n    at path.assets::AssetManager/loadRawAsset()[D:\\...\\code-shared\\src\\main\\as3\\com\\path\\assets\\AssetManager.as:890]\n    at path.assets::LoggingAssetManager/loadRawAsset()[D:\\...\\code-shared\\src\\main\\as3\\com\\path\\assets\\LoggingAssetManager.as:86]\n    at path.assets::AssetManager/processRawAsset()[D:\\...\\code-shared\\src\\main\\as3\\com\\path\\assets\\AssetManager.as:710]\n    at Function/path.assets:AssetManager/loadQueue/path.assets:loadQueueElement()[D:\\...\\code-shared\\src\\main\\as3\\com\\path\\assets\\AssetManager.as:604]\n    at Function/path.assets:AssetManager/loadQueue/path.assets:loadNextQueueElement()[D:\\...\\code-shared\\src\\main\\as3\\com\\path\\assets\\AssetManager.as:582]\n    at path.assets::AssetManager/loadQueue()[D:\\...\\code-shared\\src\\main\\as3\\com\\path\\assets\\AssetManager.as:569]\n```\n\nWe're hoping the crossdomain.xml file from that location will fix our build, but we probably want the AssetManager to error nicely too, so that loads can actually complete. :)\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/604/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/603","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/603/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/603/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/603/events","html_url":"https://github.com/Gamua/Starling-Framework/pull/603","id":40431354,"number":603,"title":"Feature TDD refactor","user":{"login":"vpmedia","id":1160199,"avatar_url":"https://avatars2.githubusercontent.com/u/1160199?v=4","gravatar_id":"","url":"https://api.github.com/users/vpmedia","html_url":"https://github.com/vpmedia","followers_url":"https://api.github.com/users/vpmedia/followers","following_url":"https://api.github.com/users/vpmedia/following{/other_user}","gists_url":"https://api.github.com/users/vpmedia/gists{/gist_id}","starred_url":"https://api.github.com/users/vpmedia/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vpmedia/subscriptions","organizations_url":"https://api.github.com/users/vpmedia/orgs","repos_url":"https://api.github.com/users/vpmedia/repos","events_url":"https://api.github.com/users/vpmedia/events{/privacy}","received_events_url":"https://api.github.com/users/vpmedia/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2014-08-17T10:31:01Z","updated_at":"2014-08-23T20:10:30Z","closed_at":"2014-08-22T11:05:55Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/pulls/603","html_url":"https://github.com/Gamua/Starling-Framework/pull/603","diff_url":"https://github.com/Gamua/Starling-Framework/pull/603.diff","patch_url":"https://github.com/Gamua/Starling-Framework/pull/603.patch"},"body":"What's done:\n- Added [FlexPMD](http://sourceforge.net/adobe/flexpmd/home/Home/) static code analysis generation.\n\nOutput rendered with FlexPMD violations viewer:\n\n```\nhttps://dl.dropboxusercontent.com/u/1375050/starling-flexpmd/index.html?report=pmd.xml\n```\n\nTip:\n\n> Select 'Show violation level' => 'all' & Press 'Filter'\n\n(It uses the latest non-official 1.3 version from [here](https://github.com/PeterHoeche/adobe-flex-pmd))\n\nOriginal project which FlexPMD is based on: \n\nhttp://pmd.sourceforge.net/pmd-5.1.2/\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/603/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/602","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/602/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/602/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/602/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/602","id":40410146,"number":602,"title":"Starling - Lite","user":{"login":"DQvsRA","id":442111,"avatar_url":"https://avatars1.githubusercontent.com/u/442111?v=4","gravatar_id":"","url":"https://api.github.com/users/DQvsRA","html_url":"https://github.com/DQvsRA","followers_url":"https://api.github.com/users/DQvsRA/followers","following_url":"https://api.github.com/users/DQvsRA/following{/other_user}","gists_url":"https://api.github.com/users/DQvsRA/gists{/gist_id}","starred_url":"https://api.github.com/users/DQvsRA/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DQvsRA/subscriptions","organizations_url":"https://api.github.com/users/DQvsRA/orgs","repos_url":"https://api.github.com/users/DQvsRA/repos","events_url":"https://api.github.com/users/DQvsRA/events{/privacy}","received_events_url":"https://api.github.com/users/DQvsRA/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2014-08-16T12:51:17Z","updated_at":"2014-08-18T10:02:50Z","closed_at":"2014-08-18T10:02:50Z","author_association":"NONE","body":"Is it possible to make lite swc without some additional features of framework like AssetManager?\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/602/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/601","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/601/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/601/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/601/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/601","id":40352248,"number":601,"title":"404 Asset Issues?","user":{"login":"etmiranda","id":3160644,"avatar_url":"https://avatars2.githubusercontent.com/u/3160644?v=4","gravatar_id":"","url":"https://api.github.com/users/etmiranda","html_url":"https://github.com/etmiranda","followers_url":"https://api.github.com/users/etmiranda/followers","following_url":"https://api.github.com/users/etmiranda/following{/other_user}","gists_url":"https://api.github.com/users/etmiranda/gists{/gist_id}","starred_url":"https://api.github.com/users/etmiranda/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/etmiranda/subscriptions","organizations_url":"https://api.github.com/users/etmiranda/orgs","repos_url":"https://api.github.com/users/etmiranda/repos","events_url":"https://api.github.com/users/etmiranda/events{/privacy}","received_events_url":"https://api.github.com/users/etmiranda/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2014-08-15T14:31:22Z","updated_at":"2014-08-18T13:57:12Z","closed_at":"2014-08-18T13:49:46Z","author_association":"NONE","body":"Our server was hiccuping (or something, I don't really know) yesterday and some of our assets were hitting the 404 page:\n\n```\n<!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\n<html><head>\n<title>404 Not Found</title>\n</head><body>\n<h1>Not Found</h1>\n<p>The requested URL /poker/online/video-poker/h5c/web/x1/h5c_poker_web_x1_2.png was not found on this server.</p>\n<hr>\n<address>Apache/2.2.15 (CentOS) DAV/2 Server at www.high5casino.net Port 80</address>\n</body></html>\n```\n\nObviously nothing you can do about that. However, it seems strange that it doesn't error earlier in the AssetManager process. For the PNGs, it was getting into onUrlLoaderComplete just fine and not erroring until it tried to interpret the 404 page as a PNG, ending up in this listener:\n`loaderInfo.addEventListener(IOErrorEvent.IO_ERROR, onIoError);`\n\nFor the XML, it was similarly making it into onUrlLoaderComplete  and only erroring where the `log(\"Could not parse XML: \" + e.message);` call is, because the 404 page has that mismatched `<hr>` tag. So we wouldn't even be able to tell it was bad data if the 404 page ever gets fixed up. Which seems problematic.\n\nShouldn't we be able to tell sooner, from the header data or something, that we got a 404, rather than trying to interpret it as valid data?\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/601/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/600","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/600/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/600/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/600/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/600","id":40352011,"number":600,"title":"404 Asset Issues?","user":{"login":"etmiranda","id":3160644,"avatar_url":"https://avatars2.githubusercontent.com/u/3160644?v=4","gravatar_id":"","url":"https://api.github.com/users/etmiranda","html_url":"https://github.com/etmiranda","followers_url":"https://api.github.com/users/etmiranda/followers","following_url":"https://api.github.com/users/etmiranda/following{/other_user}","gists_url":"https://api.github.com/users/etmiranda/gists{/gist_id}","starred_url":"https://api.github.com/users/etmiranda/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/etmiranda/subscriptions","organizations_url":"https://api.github.com/users/etmiranda/orgs","repos_url":"https://api.github.com/users/etmiranda/repos","events_url":"https://api.github.com/users/etmiranda/events{/privacy}","received_events_url":"https://api.github.com/users/etmiranda/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":17,"created_at":"2014-08-15T14:28:09Z","updated_at":"2014-08-23T20:27:11Z","closed_at":"2014-08-23T20:27:11Z","author_association":"NONE","body":"Our server was hiccuping (or something, I don't really know) yesterday and some of our assets were hitting the 404 page:\n\n```\n<!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\n<html><head>\n<title>404 Not Found</title>\n</head><body>\n<h1>Not Found</h1>\n<p>The requested URL /poker/online/video-poker/h5c/web/x1/h5c_poker_web_x1_2.png was not found on this server.</p>\n<hr>\n<address>Apache/2.2.15 (CentOS) DAV/2 Server at www.high5casino.net Port 80</address>\n</body></html>\n```\n\nObviously nothing you can do about that. However, it seems strange that it doesn't error earlier in the AssetManager process. For the PNGs, it was getting into onUrlLoaderComplete just fine and not erroring until it tried to interpret the 404 page as a PNG, ending up in this listener:\n`loaderInfo.addEventListener(IOErrorEvent.IO_ERROR, onIoError);`\n\nFor the XML, it was similarly making it into onUrlLoaderComplete  and only erroring where the `log(\"Could not parse XML: \" + e.message);` call is, because the 404 page has that mismatched `<hr>` tag. So we wouldn't even be able to tell it was bad data if the 404 page ever gets fixed up. Which seems problematic.\n\nShouldn't we be able to tell sooner, from the header data or something, that we got a 404, rather than trying to interpret it as valid data?\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/600/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/599","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/599/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/599/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/599/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/599","id":40076601,"number":599,"title":"Starting / Stopping Starling when \"inactive\" causes issues for TouchEvents and launch time in Simulator","user":{"login":"GeorgeGardiner","id":5549378,"avatar_url":"https://avatars2.githubusercontent.com/u/5549378?v=4","gravatar_id":"","url":"https://api.github.com/users/GeorgeGardiner","html_url":"https://github.com/GeorgeGardiner","followers_url":"https://api.github.com/users/GeorgeGardiner/followers","following_url":"https://api.github.com/users/GeorgeGardiner/following{/other_user}","gists_url":"https://api.github.com/users/GeorgeGardiner/gists{/gist_id}","starred_url":"https://api.github.com/users/GeorgeGardiner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/GeorgeGardiner/subscriptions","organizations_url":"https://api.github.com/users/GeorgeGardiner/orgs","repos_url":"https://api.github.com/users/GeorgeGardiner/repos","events_url":"https://api.github.com/users/GeorgeGardiner/events{/privacy}","received_events_url":"https://api.github.com/users/GeorgeGardiner/received_events","type":"User","site_admin":false},"labels":[{"id":64488856,"url":"https://api.github.com/repos/Gamua/Starling-Framework/labels/Bug%20in%20Flash/AIR","name":"Bug in Flash/AIR","color":"5319e7","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2014-08-12T17:05:20Z","updated_at":"2014-08-18T09:06:41Z","closed_at":"2014-08-18T09:05:33Z","author_association":"NONE","body":"Hi guys,\n\nThese two lines in \"Demo_Mobile\" have caused me quite a bit of pain when working with Starling in Flash CS6.\n\n```\nNativeApplication.nativeApplication.addEventListener(flash.events.Event.ACTIVATE, function (e:*):void { mStarling.start(); });\nNativeApplication.nativeApplication.addEventListener(flash.events.Event.DEACTIVATE, function (e:*):void { mStarling.stop(true); });\n```\n\nWhen running in the simulator (Air Debug Launcher for iOS) it is not possible to use the Touch layer because the focus change when turning on the touch layer triggers DEACTIVATE, and when ACTIVATE is triggered later, no touch events are registered.\n\nIt also causes the simulator to hang for around 15 seconds before starting, presumably because these events are being triggered at various points during the launch phase.\n\nFlash CS6 / Mac / Mavericks.\n\nWould it be possible to detect the scenario and prevent the event listeners from being added to save others the same struggle?\n\nCheers,\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/599/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/598","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/598/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/598/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/598/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/598","id":40069992,"number":598,"title":"Add to Starling.onTouch event.updateAfterEvent();","user":{"login":"alevys","id":1547157,"avatar_url":"https://avatars1.githubusercontent.com/u/1547157?v=4","gravatar_id":"","url":"https://api.github.com/users/alevys","html_url":"https://github.com/alevys","followers_url":"https://api.github.com/users/alevys/followers","following_url":"https://api.github.com/users/alevys/following{/other_user}","gists_url":"https://api.github.com/users/alevys/gists{/gist_id}","starred_url":"https://api.github.com/users/alevys/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alevys/subscriptions","organizations_url":"https://api.github.com/users/alevys/orgs","repos_url":"https://api.github.com/users/alevys/repos","events_url":"https://api.github.com/users/alevys/events{/privacy}","received_events_url":"https://api.github.com/users/alevys/received_events","type":"User","site_admin":false},"labels":[{"id":130317,"url":"https://api.github.com/repos/Gamua/Starling-Framework/labels/Feature","name":"Feature","color":"009800","default":false}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2014-08-12T15:57:30Z","updated_at":"2014-11-17T11:43:40Z","closed_at":null,"author_association":"NONE","body":"Hi! \nYou can add to method in Starling onTouch() line event.updateAfterEvent(), if MouseEvent.MOUSE_MOVE ?\n\nThat would provide a more accurate position of the cursor.\n\nAnd it would be great to add two new static properties:\n\nStarling.globalX;\nStarling.globalY;\n\nor \n\nStarling.current.stage.globalX;\nStarling.current.stage.globalY;\n\nSometimes i need to get the coordinates of the cursor without the listener. Does not want to write another handler, if he so have Starling.\n\nThank you.\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/598/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/597","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/597/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/597/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/597/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/597","id":40016765,"number":597,"title":"Add a Event.INIT before starling initialize()","user":{"login":"tsangwailam","id":3538066,"avatar_url":"https://avatars3.githubusercontent.com/u/3538066?v=4","gravatar_id":"","url":"https://api.github.com/users/tsangwailam","html_url":"https://github.com/tsangwailam","followers_url":"https://api.github.com/users/tsangwailam/followers","following_url":"https://api.github.com/users/tsangwailam/following{/other_user}","gists_url":"https://api.github.com/users/tsangwailam/gists{/gist_id}","starred_url":"https://api.github.com/users/tsangwailam/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tsangwailam/subscriptions","organizations_url":"https://api.github.com/users/tsangwailam/orgs","repos_url":"https://api.github.com/users/tsangwailam/repos","events_url":"https://api.github.com/users/tsangwailam/events{/privacy}","received_events_url":"https://api.github.com/users/tsangwailam/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-08-12T01:24:59Z","updated_at":"2014-08-12T01:52:05Z","closed_at":"2014-08-12T01:52:05Z","author_association":"NONE","body":"I facing a problem. The device will lost context when orientation change in android. It can be deal with the handleLostContext. And i want to add a loading text with normal display list textfield. \n\nBut there existing a time gap on handling lost context successfully and fire next ContextCreated event.\n\nIs it possible to add a INIT event before starling call initialize()? So, it can tell starling is going to handle the lost context.\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/597/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/596","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/596/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/596/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/596/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/596","id":39973471,"number":596,"title":"Adding some HTML support to TextField?","user":{"login":"alamboley","id":687978,"avatar_url":"https://avatars3.githubusercontent.com/u/687978?v=4","gravatar_id":"","url":"https://api.github.com/users/alamboley","html_url":"https://github.com/alamboley","followers_url":"https://api.github.com/users/alamboley/followers","following_url":"https://api.github.com/users/alamboley/following{/other_user}","gists_url":"https://api.github.com/users/alamboley/gists{/gist_id}","starred_url":"https://api.github.com/users/alamboley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alamboley/subscriptions","organizations_url":"https://api.github.com/users/alamboley/orgs","repos_url":"https://api.github.com/users/alamboley/repos","events_url":"https://api.github.com/users/alamboley/events{/privacy}","received_events_url":"https://api.github.com/users/alamboley/received_events","type":"User","site_admin":false},"labels":[{"id":130317,"url":"https://api.github.com/repos/Gamua/Starling-Framework/labels/Feature","name":"Feature","color":"009800","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2014-08-11T16:09:59Z","updated_at":"2015-12-16T11:40:49Z","closed_at":"2015-12-16T11:40:49Z","author_association":"CONTRIBUTOR","body":"Starling is lacking some features concerning the TextField: having several colors, bold, italic and size supports.\n\nI discovered this class https://github.com/binouze/HTMLBitmapFonts and it isn't bad at all, but it's lacking latest Starling's updates.\nIt would be great to merge it into the Starling's TextField code.\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/596/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/595","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/595/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/595/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/595/events","html_url":"https://github.com/Gamua/Starling-Framework/pull/595","id":39728315,"number":595,"title":"Feature ci improvement","user":{"login":"vpmedia","id":1160199,"avatar_url":"https://avatars2.githubusercontent.com/u/1160199?v=4","gravatar_id":"","url":"https://api.github.com/users/vpmedia","html_url":"https://github.com/vpmedia","followers_url":"https://api.github.com/users/vpmedia/followers","following_url":"https://api.github.com/users/vpmedia/following{/other_user}","gists_url":"https://api.github.com/users/vpmedia/gists{/gist_id}","starred_url":"https://api.github.com/users/vpmedia/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vpmedia/subscriptions","organizations_url":"https://api.github.com/users/vpmedia/orgs","repos_url":"https://api.github.com/users/vpmedia/repos","events_url":"https://api.github.com/users/vpmedia/events{/privacy}","received_events_url":"https://api.github.com/users/vpmedia/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2014-08-07T14:04:12Z","updated_at":"2014-08-11T09:07:48Z","closed_at":"2014-08-11T09:02:13Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/pulls/595","html_url":"https://github.com/Gamua/Starling-Framework/pull/595","diff_url":"https://github.com/Gamua/Starling-Framework/pull/595.diff","patch_url":"https://github.com/Gamua/Starling-Framework/pull/595.patch"},"body":"Hi,\n\nI'm opening this pull request so You can reflect and follow the progression.\nWhat's done:\n- Added Travis build status icon to readme, you can take a look at here how it looks like:\n  https://github.com/vpmedia/Starling-Framework/tree/feature-ci-improvement\n- Merged gitignore files, so only one left in the root\n- Added Gradle build files so Samples can be built automatically \n- Fixed Maven build script issues (checksums and config tweaks)\n- Integrated FlexUnit into Travis build process, so other pull requests will be validated against tests\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/595/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/594","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/594/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/594/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/594/events","html_url":"https://github.com/Gamua/Starling-Framework/pull/594","id":39617967,"number":594,"title":"Feature maven refactor","user":{"login":"vpmedia","id":1160199,"avatar_url":"https://avatars2.githubusercontent.com/u/1160199?v=4","gravatar_id":"","url":"https://api.github.com/users/vpmedia","html_url":"https://github.com/vpmedia","followers_url":"https://api.github.com/users/vpmedia/followers","following_url":"https://api.github.com/users/vpmedia/following{/other_user}","gists_url":"https://api.github.com/users/vpmedia/gists{/gist_id}","starred_url":"https://api.github.com/users/vpmedia/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vpmedia/subscriptions","organizations_url":"https://api.github.com/users/vpmedia/orgs","repos_url":"https://api.github.com/users/vpmedia/repos","events_url":"https://api.github.com/users/vpmedia/events{/privacy}","received_events_url":"https://api.github.com/users/vpmedia/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":15,"created_at":"2014-08-06T12:56:23Z","updated_at":"2014-12-12T09:48:19Z","closed_at":"2014-08-07T10:26:08Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/pulls/594","html_url":"https://github.com/Gamua/Starling-Framework/pull/594","diff_url":"https://github.com/Gamua/Starling-Framework/pull/594.diff","patch_url":"https://github.com/Gamua/Starling-Framework/pull/594.patch"},"body":"Hi,\nI've noticed that the projects build machine ( trylogic.ci.cloudbees.com/job/StarlingFramework ) produces continous failing builds so I've started to refactor the Maven build script.\nEdit: Now it's fixed and working.\n\nBest! \n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/594/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/593","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/593/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/593/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/593/events","html_url":"https://github.com/Gamua/Starling-Framework/pull/593","id":39552355,"number":593,"title":"Feature ant refactor","user":{"login":"vpmedia","id":1160199,"avatar_url":"https://avatars2.githubusercontent.com/u/1160199?v=4","gravatar_id":"","url":"https://api.github.com/users/vpmedia","html_url":"https://github.com/vpmedia","followers_url":"https://api.github.com/users/vpmedia/followers","following_url":"https://api.github.com/users/vpmedia/following{/other_user}","gists_url":"https://api.github.com/users/vpmedia/gists{/gist_id}","starred_url":"https://api.github.com/users/vpmedia/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vpmedia/subscriptions","organizations_url":"https://api.github.com/users/vpmedia/orgs","repos_url":"https://api.github.com/users/vpmedia/repos","events_url":"https://api.github.com/users/vpmedia/events{/privacy}","received_events_url":"https://api.github.com/users/vpmedia/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2014-08-05T18:56:25Z","updated_at":"2014-08-07T13:00:58Z","closed_at":"2014-08-07T10:01:51Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/pulls/593","html_url":"https://github.com/Gamua/Starling-Framework/pull/593","diff_url":"https://github.com/Gamua/Starling-Framework/pull/593.diff","patch_url":"https://github.com/Gamua/Starling-Framework/pull/593.patch"},"body":"Hi,\n\nI've refactored the ANT build script:\n- added comments and the license header\n- modularized build targets\n- improved compatibility with Adobe AIR SDK\n\nThe build script now checks for the FLEX_HOME and AIR_HOME environment variables or uses the previous default one (shipped with Flash Builder).\n\nI've tested the build script using Adobe AIR 14.0 and Apache Flex 4.13.\n\nHopefully this will enable successful builds using Travis CI service, if merged together.\n\nBest Regards!\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/593/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/592","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/592/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/592/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/592/events","html_url":"https://github.com/Gamua/Starling-Framework/pull/592","id":39448388,"number":592,"title":"Added TravisCI build script","user":{"login":"vpmedia","id":1160199,"avatar_url":"https://avatars2.githubusercontent.com/u/1160199?v=4","gravatar_id":"","url":"https://api.github.com/users/vpmedia","html_url":"https://github.com/vpmedia","followers_url":"https://api.github.com/users/vpmedia/followers","following_url":"https://api.github.com/users/vpmedia/following{/other_user}","gists_url":"https://api.github.com/users/vpmedia/gists{/gist_id}","starred_url":"https://api.github.com/users/vpmedia/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vpmedia/subscriptions","organizations_url":"https://api.github.com/users/vpmedia/orgs","repos_url":"https://api.github.com/users/vpmedia/repos","events_url":"https://api.github.com/users/vpmedia/events{/privacy}","received_events_url":"https://api.github.com/users/vpmedia/received_events","type":"User","site_admin":false},"labels":[{"id":130317,"url":"https://api.github.com/repos/Gamua/Starling-Framework/labels/Feature","name":"Feature","color":"009800","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":19,"created_at":"2014-08-04T18:41:44Z","updated_at":"2015-03-02T14:16:21Z","closed_at":"2014-08-07T10:14:41Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/pulls/592","html_url":"https://github.com/Gamua/Starling-Framework/pull/592","diff_url":"https://github.com/Gamua/Starling-Framework/pull/592.diff","patch_url":"https://github.com/Gamua/Starling-Framework/pull/592.patch"},"body":"Continuous builds using Travis-CI service:\nhttps://travis-ci.org/vpmedia/Starling-Framework/builds/31642080\n\nI think this would be useful to validate other feature requests too, using automated scripts.\n\nPlease note that the ant build script assembles the SWC but does fail to run the ASDoc script, because OSX brew package manager has only AdobeAIR SDK support (Apache Flex SDK is problematic to install headless) so the Ant build script needs some refactoring.\nNot sure that that should be done in a separated feature branch or in this one.\n\nCheers!\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/592/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/591","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/591/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/591/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/591/events","html_url":"https://github.com/Gamua/Starling-Framework/pull/591","id":39447096,"number":591,"title":"Added GradleFX build script","user":{"login":"vpmedia","id":1160199,"avatar_url":"https://avatars2.githubusercontent.com/u/1160199?v=4","gravatar_id":"","url":"https://api.github.com/users/vpmedia","html_url":"https://github.com/vpmedia","followers_url":"https://api.github.com/users/vpmedia/followers","following_url":"https://api.github.com/users/vpmedia/following{/other_user}","gists_url":"https://api.github.com/users/vpmedia/gists{/gist_id}","starred_url":"https://api.github.com/users/vpmedia/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vpmedia/subscriptions","organizations_url":"https://api.github.com/users/vpmedia/orgs","repos_url":"https://api.github.com/users/vpmedia/repos","events_url":"https://api.github.com/users/vpmedia/events{/privacy}","received_events_url":"https://api.github.com/users/vpmedia/received_events","type":"User","site_admin":false},"labels":[{"id":130317,"url":"https://api.github.com/repos/Gamua/Starling-Framework/labels/Feature","name":"Feature","color":"009800","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2014-08-04T18:27:22Z","updated_at":"2014-08-07T13:01:05Z","closed_at":"2014-08-07T09:55:13Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/pulls/591","html_url":"https://github.com/Gamua/Starling-Framework/pull/591","diff_url":"https://github.com/Gamua/Starling-Framework/pull/591.diff","patch_url":"https://github.com/Gamua/Starling-Framework/pull/591.patch"},"body":"Hi,\nI think Gradle with GradleFX is quite popular and this build script assembles Starling into SWC using it.\n\nYou can learn more about GradleFX here:\nhttp://gradlefx.org/\n\nBest Regards!\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/591/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/590","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/590/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/590/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/590/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/590","id":39140203,"number":590,"title":"Error: Error #3605: Sampler 0 binds an invalid texture","user":{"login":"ypmits","id":308533,"avatar_url":"https://avatars0.githubusercontent.com/u/308533?v=4","gravatar_id":"","url":"https://api.github.com/users/ypmits","html_url":"https://github.com/ypmits","followers_url":"https://api.github.com/users/ypmits/followers","following_url":"https://api.github.com/users/ypmits/following{/other_user}","gists_url":"https://api.github.com/users/ypmits/gists{/gist_id}","starred_url":"https://api.github.com/users/ypmits/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ypmits/subscriptions","organizations_url":"https://api.github.com/users/ypmits/orgs","repos_url":"https://api.github.com/users/ypmits/repos","events_url":"https://api.github.com/users/ypmits/events{/privacy}","received_events_url":"https://api.github.com/users/ypmits/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2014-07-30T21:40:49Z","updated_at":"2014-08-01T07:04:35Z","closed_at":"2014-07-30T22:53:18Z","author_association":"NONE","body":"Hi there,\n\nI seem to have come along a bug that was also found (and fixed I think) back in the 1.4 version. But right now I'm using 1.5.1-swc. The project works perfectly when I compile to mobile (iOS) but not to AdobeAIR. They both use, for the largest part, the same codebase. The really weird thing is that it 'reeeealy' sometimes seems to work. (like 1 of 30 tries or something). I know that's of no help at all, but I think I should mention this. I'm using Flash Builder 4.7 with AirSDK 14 for both mobile and Air.\nThe full trace I'm getting (picture):\n![stacktrace](https://cloud.githubusercontent.com/assets/308533/3756811/146ce28a-1832-11e4-9c22-8aeb9076de98.png)\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/590/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/589","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/589/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/589/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/589/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/589","id":38818574,"number":589,"title":"Sprite with clipRect set, inside of Sprite with clipRect shows occasionally even when outside parent's clipRect","user":{"login":"martin3361","id":6729011,"avatar_url":"https://avatars1.githubusercontent.com/u/6729011?v=4","gravatar_id":"","url":"https://api.github.com/users/martin3361","html_url":"https://github.com/martin3361","followers_url":"https://api.github.com/users/martin3361/followers","following_url":"https://api.github.com/users/martin3361/following{/other_user}","gists_url":"https://api.github.com/users/martin3361/gists{/gist_id}","starred_url":"https://api.github.com/users/martin3361/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martin3361/subscriptions","organizations_url":"https://api.github.com/users/martin3361/orgs","repos_url":"https://api.github.com/users/martin3361/repos","events_url":"https://api.github.com/users/martin3361/events{/privacy}","received_events_url":"https://api.github.com/users/martin3361/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2014-07-26T14:34:46Z","updated_at":"2014-08-05T06:43:43Z","closed_at":"2014-08-05T06:43:43Z","author_association":"NONE","body":"Code that reproduces the issue:\n\n```\n    override protected function init():void\n    {\n            _weeklyInfoContainer = new Sprite();\n            _weeklyInfoContainer.y = 100;\n            _weeklyInfoContainer.clipRect = new Rectangle(0,0,500,60);\n\n            var weeklyInfoContainerBackground:Scale9Image = new Scale9Image(new Scale9Textures(ResourcesManager.get.menusTextureAtlasesLoader.getTextureByName(\"container9_\"), new Rectangle(20,20,1,1)));\n            weeklyInfoContainerBackground.width = _weeklyInfoContainer.clipRect.width;\n            weeklyInfoContainerBackground.height = _weeklyInfoContainer.clipRect.height;\n            _weeklyInfoContainer.addChild(weeklyInfoContainerBackground);\n\n            _weeklyInfoInnerContainer = new Sprite();\n            _weeklyInfoContainer.addChild(_weeklyInfoInnerContainer);\n            addChild(_weeklyInfoContainer);\n\n            for (var i:uint = 0; i < 6; i++) {\n\n                var rewardContainer:Sprite = new Sprite();\n                rewardContainer.clipRect = _weeklyInfoContainer.clipRect;\n\n                var trophyImage:Image = ResourcesManager.get.menusTextureAtlasesLoader.getImageByName(\"rankingsButton\");\n                trophyImage.scaleX = trophyImage.scaleY = 46 / trophyImage.height;\n                trophyImage.x = 15;\n                trophyImage.y = 8;\n                rewardContainer.addChild(trophyImage);\n\n                var rewardPositionLabel:String = \"# + (i + 1) + \" position:\";               \n                var rewardTextField:TextField = new TextField(250,weeklyInfoContainerBackground.height,rewardPositionLabel,ModelsManager.get.gameModel.fontName,18,ViewConstants.COLOR_LIGHT_BROWN);\n                rewardTextField.x = trophyImage.x + trophyImage.width + 10;\n                rewardTextField.hAlign = HAlign.LEFT;\n                rewardTextField.vAlign = VAlign.CENTER;\n                rewardContainer.addChild(rewardTextField);\n\n                var itemsContainer:MultipleItemsContainer = new MultipleSmallItemsContainer(rewardProcessDefinition.itemsGiven,15,3);\n                itemsContainer.x = rewardTextField.x + rewardTextField.width + 10;\n                rewardContainer.addChild(itemsContainer);\n\n                rewardContainer.x = (i + 1) * _weeklyInfoContainer.clipRect.width;\n                _weeklyInfoInnerContainer.addChild(rewardContainer);\n            }\n\n            _weeklyInfoContainerTweenTimeout = setTimeout(tweenWeeklyInfoInnerContainer, 2500);\n    }\n\n    private function tweenWeeklyInfoInnerContainer():void\n    {\n        var newX:int = Math.abs(_weeklyInfoInnerContainer.x) < _weeklyInfoInnerContainer.width - _weeklyInfoContainer.clipRect.width ? _weeklyInfoInnerContainer.x - _weeklyInfoContainer.clipRect.width : 0;\n        Starling.juggler.tween(_weeklyInfoInnerContainer, 2.5, {x : newX, transition: Transitions.EASE_OUT_ELASTIC});\n\n        _weeklyInfoContainerTweenTimeout = setTimeout(tweenWeeklyInfoInnerContainer, 3500);\n    }\n```\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/589/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/588","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/588/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/588/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/588/events","html_url":"https://github.com/Gamua/Starling-Framework/pull/588","id":38535607,"number":588,"title":"Update DisplayObjectContainer.as","user":{"login":"tony851028","id":7839327,"avatar_url":"https://avatars0.githubusercontent.com/u/7839327?v=4","gravatar_id":"","url":"https://api.github.com/users/tony851028","html_url":"https://github.com/tony851028","followers_url":"https://api.github.com/users/tony851028/followers","following_url":"https://api.github.com/users/tony851028/following{/other_user}","gists_url":"https://api.github.com/users/tony851028/gists{/gist_id}","starred_url":"https://api.github.com/users/tony851028/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tony851028/subscriptions","organizations_url":"https://api.github.com/users/tony851028/orgs","repos_url":"https://api.github.com/users/tony851028/repos","events_url":"https://api.github.com/users/tony851028/events{/privacy}","received_events_url":"https://api.github.com/users/tony851028/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-07-23T14:43:38Z","updated_at":"2014-07-24T09:24:38Z","closed_at":"2014-07-24T09:24:38Z","author_association":"NONE","pull_request":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/pulls/588","html_url":"https://github.com/Gamua/Starling-Framework/pull/588","diff_url":"https://github.com/Gamua/Starling-Framework/pull/588.diff","patch_url":"https://github.com/Gamua/Starling-Framework/pull/588.patch"},"body":"avoid to repeatedly set blendMode.\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/588/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/587","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/587/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/587/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/587/events","html_url":"https://github.com/Gamua/Starling-Framework/pull/587","id":38319161,"number":587,"title":"suggestion : a PARSE_ERROR event for the asset manager.","user":{"login":"gsynuh","id":2741417,"avatar_url":"https://avatars3.githubusercontent.com/u/2741417?v=4","gravatar_id":"","url":"https://api.github.com/users/gsynuh","html_url":"https://github.com/gsynuh","followers_url":"https://api.github.com/users/gsynuh/followers","following_url":"https://api.github.com/users/gsynuh/following{/other_user}","gists_url":"https://api.github.com/users/gsynuh/gists{/gist_id}","starred_url":"https://api.github.com/users/gsynuh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gsynuh/subscriptions","organizations_url":"https://api.github.com/users/gsynuh/orgs","repos_url":"https://api.github.com/users/gsynuh/repos","events_url":"https://api.github.com/users/gsynuh/events{/privacy}","received_events_url":"https://api.github.com/users/gsynuh/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-07-21T16:23:25Z","updated_at":"2014-07-23T10:30:55Z","closed_at":"2014-07-23T10:29:59Z","author_association":"NONE","pull_request":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/pulls/587","html_url":"https://github.com/Gamua/Starling-Framework/pull/587","diff_url":"https://github.com/Gamua/Starling-Framework/pull/587.diff","patch_url":"https://github.com/Gamua/Starling-Framework/pull/587.patch"},"body":"This helps clearly determining that the cause for getObject(someDataAsset) returning null is not from an IO_ERROR or the asset not existing in the first place.\n\n If this data was requested by the app to the user or an external source, we can implement a backup plan by listening for this event such as switching to a default set of data or reloading it from another source, or at least give the user or the external source the proper feedback.\n\n(edit: sorry for the bad indentation I have no idea how that got through because it doesn't show up like this in my editor. i just wanted to go ahead with a pull request just to save you a bit of time)\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/587/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/586","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/586/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/586/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/586/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/586","id":38157409,"number":586,"title":"[minor] mOnRepeat/mOnRepeatArgs not cleared with Tween.reset()","user":{"login":"divillysausages","id":179882,"avatar_url":"https://avatars1.githubusercontent.com/u/179882?v=4","gravatar_id":"","url":"https://api.github.com/users/divillysausages","html_url":"https://github.com/divillysausages","followers_url":"https://api.github.com/users/divillysausages/followers","following_url":"https://api.github.com/users/divillysausages/following{/other_user}","gists_url":"https://api.github.com/users/divillysausages/gists{/gist_id}","starred_url":"https://api.github.com/users/divillysausages/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/divillysausages/subscriptions","organizations_url":"https://api.github.com/users/divillysausages/orgs","repos_url":"https://api.github.com/users/divillysausages/repos","events_url":"https://api.github.com/users/divillysausages/events{/privacy}","received_events_url":"https://api.github.com/users/divillysausages/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-07-18T08:34:43Z","updated_at":"2014-07-18T10:26:22Z","closed_at":"2014-07-18T10:25:54Z","author_association":"NONE","body":"In the `reset()` method of `Tween`, you need to change these lines:\n\n```\nmOnStart = mOnUpdate = mOnComplete = null;\nmOnStartArgs = mOnUpdateArgs = mOnCompleteArgs = null;\n```\n\nto\n\n```\nmOnStart = mOnUpdate = mOnComplete = mOnRepeat = null;\nmOnStartArgs = mOnUpdateArgs = mOnCompleteArgs = mOnRepeatArgs = null;\n```\n\notherwise they'll still persist if a Tween is reused (NOTE: this is if you use your own pooling system - it's fine in the static `toPool()` method)\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/586/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/585","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/585/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/585/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/585/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/585","id":38083789,"number":585,"title":"RenderTexture BlendMode bug ","user":{"login":"b005t3r","id":757150,"avatar_url":"https://avatars3.githubusercontent.com/u/757150?v=4","gravatar_id":"","url":"https://api.github.com/users/b005t3r","html_url":"https://github.com/b005t3r","followers_url":"https://api.github.com/users/b005t3r/followers","following_url":"https://api.github.com/users/b005t3r/following{/other_user}","gists_url":"https://api.github.com/users/b005t3r/gists{/gist_id}","starred_url":"https://api.github.com/users/b005t3r/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/b005t3r/subscriptions","organizations_url":"https://api.github.com/users/b005t3r/orgs","repos_url":"https://api.github.com/users/b005t3r/repos","events_url":"https://api.github.com/users/b005t3r/events{/privacy}","received_events_url":"https://api.github.com/users/b005t3r/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2014-07-17T14:05:13Z","updated_at":"2014-07-18T06:12:41Z","closed_at":"2014-07-18T06:07:54Z","author_association":"NONE","body":"When rendering couple of objects some with BlendMode set to AUTO and some with a different setting (e.g. ERASE) objects with AUTO setting are rendered with the previously used BlednMode (ERASE in this example). I'm not sure if this is the expected behavior (I was not expecting that for sure :), but in case it is not, the fix seems quite simple - render() method of RenderTexture has to be changed like so:\n\n``` as3\nprivate function render(object:DisplayObject, matrix:Matrix=null, alpha:Number=1.0):void\n{\n    var oldBlendMode:String = mSupport.blendMode; // this was added\n    mSupport.loadIdentity();\n    mSupport.blendMode = object.blendMode;\n\n    if (matrix) mSupport.prependMatrix(matrix);\n    else        mSupport.transformMatrix(object);\n\n    object.render(mSupport, alpha);\n    mSupport.blendMode = oldBlendMode; // and this was added too, that's it!\n}\n```\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/585/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/584","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/584/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/584/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/584/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/584","id":38078896,"number":584,"title":"Allow GPU memory consumption calculation","user":{"login":"henke37","id":4971363,"avatar_url":"https://avatars0.githubusercontent.com/u/4971363?v=4","gravatar_id":"","url":"https://api.github.com/users/henke37","html_url":"https://github.com/henke37","followers_url":"https://api.github.com/users/henke37/followers","following_url":"https://api.github.com/users/henke37/following{/other_user}","gists_url":"https://api.github.com/users/henke37/gists{/gist_id}","starred_url":"https://api.github.com/users/henke37/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/henke37/subscriptions","organizations_url":"https://api.github.com/users/henke37/orgs","repos_url":"https://api.github.com/users/henke37/repos","events_url":"https://api.github.com/users/henke37/events{/privacy}","received_events_url":"https://api.github.com/users/henke37/received_events","type":"User","site_admin":false},"labels":[{"id":130317,"url":"https://api.github.com/repos/Gamua/Starling-Framework/labels/Feature","name":"Feature","color":"009800","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":15,"created_at":"2014-07-17T13:08:25Z","updated_at":"2016-04-14T15:43:23Z","closed_at":"2016-04-14T13:58:44Z","author_association":"NONE","body":"Add a new interface to get the GPU memory consumption for objects.\n\n``` actionscript\ninterface IGPUSizedObject {\nfunction getGPUMemmoryConsumption():uint;\n}\n```\n\nThe main use for this is obviously getting the size of ConcreteTextures, but there are other objects that could be tracked.\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/584/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/583","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/583/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/583/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/583/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/583","id":38067636,"number":583,"title":"BitmapFont.arrangeChars: reduce Array allocations","user":{"login":"neuronix","id":219800,"avatar_url":"https://avatars1.githubusercontent.com/u/219800?v=4","gravatar_id":"","url":"https://api.github.com/users/neuronix","html_url":"https://github.com/neuronix","followers_url":"https://api.github.com/users/neuronix/followers","following_url":"https://api.github.com/users/neuronix/following{/other_user}","gists_url":"https://api.github.com/users/neuronix/gists{/gist_id}","starred_url":"https://api.github.com/users/neuronix/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/neuronix/subscriptions","organizations_url":"https://api.github.com/users/neuronix/orgs","repos_url":"https://api.github.com/users/neuronix/repos","events_url":"https://api.github.com/users/neuronix/events{/privacy}","received_events_url":"https://api.github.com/users/neuronix/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2014-07-17T10:14:25Z","updated_at":"2014-07-18T09:35:07Z","closed_at":"2014-07-18T09:33:03Z","author_association":"NONE","body":"BitmapFont.arrangeChars is #1 Starling function for allocating arrays (#3 function in my application).\n\nThe \"lines\" array in arrangeChars is just a helper array that is only used during the calculations so I suggest moving it outside of the function:\n\n```\nprivate function arrangeChars(width:N...):Vector.<CharLocation> {\n            if (text == null || text.length == 0) return new <CharLocation>[];\n            if (fontSize < 0) fontSize *= -mSize;\n\n            var lines:Array = [];\n```\n\nwould be : \n\n```\nprivate var lines:Array = [];\nprivate function arrangeChars(width:N...):Vector.<CharLocation> {\n            if (text == null || text.length == 0) return new <CharLocation>[];\n            if (fontSize < 0) fontSize *= -mSize;\n\n            lines.length = 0;\n```\n\nI'm not sure how pertinent this suggestion is but Scout does differentiate Array allocation and Vector.<CharLocation> allocation so I guess \"lines\" is the only potential culprite for all these allocations.\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/583/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}}],"meta":{"x-ratelimit-limit":"5000","x-ratelimit-remaining":"4754","x-ratelimit-reset":"1507250212","x-github-request-id":"C091:572D:14781A1:31B7A1F:59D6C7BF","x-github-media-type":"github.squirrel-girl-preview","link":"<https://api.github.com/repositories/2097941/issues?state=all&page=15>; rel=\"next\", <https://api.github.com/repositories/2097941/issues?state=all&page=34>; rel=\"last\", <https://api.github.com/repositories/2097941/issues?state=all&page=1>; rel=\"first\", <https://api.github.com/repositories/2097941/issues?state=all&page=13>; rel=\"prev\"","etag":"\"4980156f78ebe4d59fc19c3eb84da559\"","status":"200 OK"}}
