{"data":[{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/972","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/972/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/972/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/972/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/972","id":234137802,"number":972,"title":"Textures are not fully loaded","user":{"login":"CrazyFlasher","id":1607138,"avatar_url":"https://avatars2.githubusercontent.com/u/1607138?v=4","gravatar_id":"","url":"https://api.github.com/users/CrazyFlasher","html_url":"https://github.com/CrazyFlasher","followers_url":"https://api.github.com/users/CrazyFlasher/followers","following_url":"https://api.github.com/users/CrazyFlasher/following{/other_user}","gists_url":"https://api.github.com/users/CrazyFlasher/gists{/gist_id}","starred_url":"https://api.github.com/users/CrazyFlasher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CrazyFlasher/subscriptions","organizations_url":"https://api.github.com/users/CrazyFlasher/orgs","repos_url":"https://api.github.com/users/CrazyFlasher/repos","events_url":"https://api.github.com/users/CrazyFlasher/events{/privacy}","received_events_url":"https://api.github.com/users/CrazyFlasher/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2017-06-07T08:54:36Z","updated_at":"2017-06-24T17:24:14Z","closed_at":"2017-06-24T17:24:14Z","author_association":"NONE","body":"Hi.\r\nOn some android devices, textures are not fully displayed:\r\nhttp://joxi.net/nAyQ6kpIZKPLAZ\r\nhttp://joxi.net/Dr819ZafNROam6\r\nhttp://joxi.net/E2pLnK3cKzPn2Y\r\nAre there any ways to fix it?\r\nStarling 2.1 release, AIR 25","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/972/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/971","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/971/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/971/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/971/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/971","id":233839587,"number":971,"title":"Exception, while stage is resized","user":{"login":"CrazyFlasher","id":1607138,"avatar_url":"https://avatars2.githubusercontent.com/u/1607138?v=4","gravatar_id":"","url":"https://api.github.com/users/CrazyFlasher","html_url":"https://github.com/CrazyFlasher","followers_url":"https://api.github.com/users/CrazyFlasher/followers","following_url":"https://api.github.com/users/CrazyFlasher/following{/other_user}","gists_url":"https://api.github.com/users/CrazyFlasher/gists{/gist_id}","starred_url":"https://api.github.com/users/CrazyFlasher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CrazyFlasher/subscriptions","organizations_url":"https://api.github.com/users/CrazyFlasher/orgs","repos_url":"https://api.github.com/users/CrazyFlasher/repos","events_url":"https://api.github.com/users/CrazyFlasher/events{/privacy}","received_events_url":"https://api.github.com/users/CrazyFlasher/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2017-06-06T09:59:45Z","updated_at":"2017-06-07T08:58:00Z","closed_at":"2017-06-07T08:56:55Z","author_association":"NONE","body":"Hi.\r\nWhen I resize stage to very small on Windows AIR, I receive exception:\r\n```Error: Error #3780: Requested width of backbuffer is not in allowed range 32 to 16384.```\r\nIs there a good way to handle it?\r\nI use latest release of Starling and AIR 25 merged with Flex 4.16.0.\r\nThanks","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/971/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/970","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/970/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/970/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/970/events","html_url":"https://github.com/Gamua/Starling-Framework/pull/970","id":233641041,"number":970,"title":"The Inverted Mask Feature","user":{"login":"EhsanMarufi","id":22413487,"avatar_url":"https://avatars2.githubusercontent.com/u/22413487?v=4","gravatar_id":"","url":"https://api.github.com/users/EhsanMarufi","html_url":"https://github.com/EhsanMarufi","followers_url":"https://api.github.com/users/EhsanMarufi/followers","following_url":"https://api.github.com/users/EhsanMarufi/following{/other_user}","gists_url":"https://api.github.com/users/EhsanMarufi/gists{/gist_id}","starred_url":"https://api.github.com/users/EhsanMarufi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/EhsanMarufi/subscriptions","organizations_url":"https://api.github.com/users/EhsanMarufi/orgs","repos_url":"https://api.github.com/users/EhsanMarufi/repos","events_url":"https://api.github.com/users/EhsanMarufi/events{/privacy}","received_events_url":"https://api.github.com/users/EhsanMarufi/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":17,"created_at":"2017-06-05T16:26:27Z","updated_at":"2017-06-27T10:01:05Z","closed_at":"2017-06-12T12:05:56Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/pulls/970","html_url":"https://github.com/Gamua/Starling-Framework/pull/970","diff_url":"https://github.com/Gamua/Starling-Framework/pull/970.diff","patch_url":"https://github.com/Gamua/Starling-Framework/pull/970.patch"},"body":"I've implemented the Inverted Mask feature into the Starling API and put together a live demo of the feature [here](http://nibblessoft.com/starling-InvertedMask/).\r\n\r\nAs the name suggests, the inverted mask marks the pixels where the object shouldn't be drawn, contrary to the normal mask where it marks the desired portion to be drawn.\r\n\r\nThe implementation supports any arbitrary combination of nesting or stacking of objects having normal or inverted masks. The only pushed restriction compared to the current masking routine is the maximum nesting count; through which, the stencil masking works. Before introducing the Invertible Masks, the maximum count was 255 levels of nesting on the Starling framework; and now, it's 127, half of which is dedicated to the inverted masks. A new property of `isMaskInverted` is added to the `DisplayObject` for the feature. The mask drawing methods in the `Painter` class are completely rewritten to support the feature. An almost non-destructive argument of `isMaskInverted` is also added to the method signatures (it's _almost_ non-destructive to the public, as the methods are almost never invoked independently!) The support also causes the `DisplayObjectContainer.as` and the `RenderTexture.as` files to be slightly modified. The initial uniform stencil buffer value (when the buffer gets `clear`ed) is pushed up to the value of 127; the change is reflected in the both of the `Paint.as` and the `RenderUtil.as` files.\r\n\r\nThe added code in the class of `Painter` could've been more concise and maybe even more \"pretty!\" using the ternary operator and some in-place conditional statements; but, since this is a drawing method, it needs to be as optimized as posible. Thus, the new code is organized into a single if-else statement instead of checking the state of the `isMaskInverted` parameter repeatedly.","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/970/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/969","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/969/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/969/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/969/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/969","id":233422207,"number":969,"title":"Sprite3D.isFlat() calculation does not take transformationMatrix3D adjustments into consideration","user":{"login":"Snky","id":7985031,"avatar_url":"https://avatars0.githubusercontent.com/u/7985031?v=4","gravatar_id":"","url":"https://api.github.com/users/Snky","html_url":"https://github.com/Snky","followers_url":"https://api.github.com/users/Snky/followers","following_url":"https://api.github.com/users/Snky/following{/other_user}","gists_url":"https://api.github.com/users/Snky/gists{/gist_id}","starred_url":"https://api.github.com/users/Snky/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Snky/subscriptions","organizations_url":"https://api.github.com/users/Snky/orgs","repos_url":"https://api.github.com/users/Snky/repos","events_url":"https://api.github.com/users/Snky/events{/privacy}","received_events_url":"https://api.github.com/users/Snky/received_events","type":"User","site_admin":false},"labels":[{"id":130317,"url":"https://api.github.com/repos/Gamua/Starling-Framework/labels/Feature","name":"Feature","color":"009800","default":false}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2017-06-04T09:23:55Z","updated_at":"2017-06-24T17:24:59Z","closed_at":null,"author_association":"NONE","body":"    ..container = new Sprite3D();\r\n    _containerTransformationMatrix3DHelper = ..container.transformationMatrix3D.clone();\r\n    _containerTransformationMatrix3DHelper.(prepend/append)Rotation(rX, Vector3D.X_AXIS);\r\n    _containerTransformationMatrix3DHelper.(prepend/append)Rotation(rY, Vector3D.Y_AXIS);\r\n    _containerTransformationMatrix3DHelper.(prepend/append)Rotation(rZ, Vector3D.Z_AXIS);\r\n    ..container.transformationMatrix3D.copyFrom(_containerTransformationMatrix3DHelper);\r\n\r\n    trace(..container.is3D, ..container.isFlat); //true, true\r\n\r\nThe isFlat function should compensate for these adjustments. Which would make the trace result: true, false\r\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/969/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/968","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/968/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/968/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/968/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/968","id":231960421,"number":968,"title":"[Feature request] Add an easy way to batch multiple object using a custom Painer","user":{"login":"b005t3r","id":757150,"avatar_url":"https://avatars3.githubusercontent.com/u/757150?v=4","gravatar_id":"","url":"https://api.github.com/users/b005t3r","html_url":"https://github.com/b005t3r","followers_url":"https://api.github.com/users/b005t3r/followers","following_url":"https://api.github.com/users/b005t3r/following{/other_user}","gists_url":"https://api.github.com/users/b005t3r/gists{/gist_id}","starred_url":"https://api.github.com/users/b005t3r/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/b005t3r/subscriptions","organizations_url":"https://api.github.com/users/b005t3r/orgs","repos_url":"https://api.github.com/users/b005t3r/repos","events_url":"https://api.github.com/users/b005t3r/events{/privacy}","received_events_url":"https://api.github.com/users/b005t3r/received_events","type":"User","site_admin":false},"labels":[{"id":130317,"url":"https://api.github.com/repos/Gamua/Starling-Framework/labels/Feature","name":"Feature","color":"009800","default":false}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2017-05-29T08:38:35Z","updated_at":"2017-05-29T09:35:09Z","closed_at":null,"author_association":"NONE","body":"In 1.x there was a ```flatten()``` method for easy batching of static objects together (on one or multiple batches). There's no such thing currently, but it looks like that if there was a custom Painter implementation all that needed to be done would be this:\r\n```as3\r\nobj.render(customPainer);\r\nvar batches:Vector<MeshBatch> = customPainter.getBatches();\r\n```\r\nDo you think you'd be able to add something like that?","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/968/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/967","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/967/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/967/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/967/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/967","id":231261676,"number":967,"title":"requiresRedraw not always properly validated","user":{"login":"b005t3r","id":757150,"avatar_url":"https://avatars3.githubusercontent.com/u/757150?v=4","gravatar_id":"","url":"https://api.github.com/users/b005t3r","html_url":"https://github.com/b005t3r","followers_url":"https://api.github.com/users/b005t3r/followers","following_url":"https://api.github.com/users/b005t3r/following{/other_user}","gists_url":"https://api.github.com/users/b005t3r/gists{/gist_id}","starred_url":"https://api.github.com/users/b005t3r/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/b005t3r/subscriptions","organizations_url":"https://api.github.com/users/b005t3r/orgs","repos_url":"https://api.github.com/users/b005t3r/repos","events_url":"https://api.github.com/users/b005t3r/events{/privacy}","received_events_url":"https://api.github.com/users/b005t3r/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2017-05-25T07:24:32Z","updated_at":"2017-05-29T09:40:35Z","closed_at":"2017-05-29T09:40:35Z","author_association":"NONE","body":"I have this class:\r\n```as3\r\npublic class DevBackgroundSprite extends BackgroundSprite {\r\n    public static const PARENT_X_MARGIN:Number          = 26;\r\n    public static const PARENT_Y_MARGIN:Number          = 26;\r\n    public static const BORDER_SIZE:Number              = 2.5;\r\n    public static const LINE_SIZE:Number                = 3.5;\r\n    public static const INTERNAL_X_MARGIN:Number        = 14;\r\n    public static const INTERNAL_Y_MARGIN:Number        = 12;\r\n    public static const INTERNAL_SPACING:Number         = 2;\r\n\r\n    public static const TITLE_FONT_SIZE:Number          = 18;\r\n    public static const SUBTITLE_FONT_SIZE:Number       = 12;\r\n    public static const SPECIAL_RULES_FONT_SIZE:Number  = 12;\r\n    public static const STANDARD_RULES_FONT_SIZE:Number = 12;\r\n\r\n    public static const WIDTH:Number            = DevCardSprite.WIDTH - 2 * PARENT_X_MARGIN;\r\n    public static const HEIGHT:Number           = DevCardSprite.HEIGHT - 2 * PARENT_Y_MARGIN;\r\n\r\n    private var _bgMesh:Mesh;\r\n    private var _fgMesh:Mesh;\r\n    private var _lineMesh:Mesh;\r\n\r\n    private var _title:TextField;\r\n    private var _subtitle:TextField;\r\n    private var _specialRules:TextField;\r\n    private var _standardRules:TextField;\r\n\r\n    public function DevBackgroundSprite() {\r\n        super(WIDTH, HEIGHT);\r\n\r\n        var poly:Polygon = Polygon.createRectangle(0, 0, WIDTH, HEIGHT);\r\n\r\n        if(poly == null)\r\n            throw new ArgumentError(\"poly cannot be null\");\r\n\r\n        var bgVertexData:VertexData = new VertexData();\r\n        var fgVertexData:VertexData = new VertexData();\r\n        var lineVertexData:VertexData = new VertexData();\r\n        var indexData:IndexData = new IndexData(poly.numTriangles * 3);\r\n\r\n        poly.triangulate(indexData);\r\n        poly.copyToVertexData(bgVertexData);\r\n        poly.copyToVertexData(fgVertexData);\r\n        poly.copyToVertexData(lineVertexData);\r\n\r\n        bgVertexData.colorize(\"color\", Color.BLACK, 1.0);\r\n        fgVertexData.colorize(\"color\", Color.WHITE, 1.0);\r\n        lineVertexData.colorize(\"color\", Color.BLACK, 1.0);\r\n\r\n        _bgMesh = new Mesh(bgVertexData, indexData);\r\n        _fgMesh = new Mesh(fgVertexData, indexData);\r\n        _lineMesh = new Mesh(lineVertexData, indexData);\r\n\r\n        _fgMesh.width   -= 2 * BORDER_SIZE;\r\n        _fgMesh.height  -= 2 * BORDER_SIZE;\r\n        _fgMesh.x       += BORDER_SIZE;\r\n        _fgMesh.y       += BORDER_SIZE;\r\n\r\n        _lineMesh.height = LINE_SIZE;\r\n        _lineMesh.y      = (HEIGHT - LINE_SIZE) / 2;\r\n\r\n        addChild(_bgMesh);\r\n        addChild(_fgMesh);\r\n        addChild(_lineMesh);\r\n\r\n        _title                                  = new DevTextField(WIDTH - 2 * INTERNAL_X_MARGIN, 1, \"Sample title\");\r\n        _title.autoSize                         = TextFieldAutoSize.VERTICAL;\r\n        _title.format.horizontalAlign           = Align.RIGHT;\r\n        _title.format.size                      = TITLE_FONT_SIZE;\r\n        _title.x                                = WIDTH - INTERNAL_X_MARGIN;\r\n        _title.y                                = INTERNAL_Y_MARGIN;\r\n        _title.alignPivot(Align.RIGHT, Align.TOP);\r\n\r\n        _subtitle                               = new DevTextField(WIDTH - 2 * INTERNAL_X_MARGIN, 1, \"Sample subtitle\");\r\n        _subtitle.autoSize                      = TextFieldAutoSize.VERTICAL;\r\n        _subtitle.format.horizontalAlign        = Align.RIGHT;\r\n        _subtitle.format.size                   = SUBTITLE_FONT_SIZE;\r\n        _subtitle.x                             = WIDTH - INTERNAL_X_MARGIN;\r\n        _subtitle.alignPivot(Align.RIGHT, Align.TOP);\r\n\r\n        _specialRules                           = new DevTextField(WIDTH - 2 * INTERNAL_X_MARGIN, 1, \"Sample special rules\");\r\n        _specialRules.autoSize                  = TextFieldAutoSize.VERTICAL;\r\n        _specialRules.format.horizontalAlign    = Align.LEFT;\r\n        _specialRules.format.size               = SPECIAL_RULES_FONT_SIZE;\r\n        _specialRules.x                         = INTERNAL_X_MARGIN;\r\n        _specialRules.y                         = HEIGHT / 2 + INTERNAL_Y_MARGIN;\r\n        _specialRules.alignPivot(Align.LEFT, Align.TOP);\r\n\r\n        _standardRules                          = new DevTextField(WIDTH - 2 * INTERNAL_X_MARGIN, 1, \"Sample standard rules\");\r\n        _standardRules.autoSize                 = TextFieldAutoSize.VERTICAL;\r\n        _standardRules.format.horizontalAlign   = Align.LEFT;\r\n        _standardRules.format.size              = STANDARD_RULES_FONT_SIZE;\r\n        _standardRules.x                        = INTERNAL_X_MARGIN;\r\n        _standardRules.alignPivot(Align.LEFT, Align.TOP);\r\n\r\n        addChild(_title);\r\n        addChild(_subtitle);\r\n        addChild(_specialRules);\r\n        addChild(_standardRules);\r\n    }\r\n\r\n    override public function get title():DisplayObject { return _title; }\r\n    override public function get subtitle():DisplayObject { return _subtitle; }\r\n    override public function get specialRules():DisplayObject { return _specialRules; }\r\n    override public function get standardRules():DisplayObject { return _standardRules; }\r\n\r\n    override public function render(painter:Painter):void {\r\n        layout();\r\n\r\n        super.render(painter);\r\n    }\r\n\r\n    private function layout():void {\r\n        if(! _title.requiresRedraw && ! _subtitle.requiresRedraw && ! _specialRules.requiresRedraw && ! _standardRules.requiresRedraw)\r\n            return;\r\n\r\n        _subtitle.y         = _title.y + INTERNAL_SPACING + _title.height;\r\n        _standardRules.y    = _specialRules.y + INTERNAL_SPACING + _specialRules.height;\r\n    }\r\n}\r\n```\r\n\r\nTake a look at the ```layout()``` method. It's called on each ```render()``` call and ```requiresRedraw``` for each child object is evaluated then.\r\n\r\nNow, if this display object is made visible and added to stage, everything works as expected - ```requiresRedraw``` is ```false``` as it should be. BUT if this object is hidden and made visible on one of the subsequent frames (after it has been added to stage) ```requiresRedraw``` returns ```false``` which is obviously not the expected behaviour, because these objects haven't been rendered yet at all.","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/967/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/966","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/966/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/966/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/966/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/966","id":230951399,"number":966,"title":"Calling alignPivot() on Sprite3D does not trigger transformationMatrix revalidation","user":{"login":"b005t3r","id":757150,"avatar_url":"https://avatars3.githubusercontent.com/u/757150?v=4","gravatar_id":"","url":"https://api.github.com/users/b005t3r","html_url":"https://github.com/b005t3r","followers_url":"https://api.github.com/users/b005t3r/followers","following_url":"https://api.github.com/users/b005t3r/following{/other_user}","gists_url":"https://api.github.com/users/b005t3r/gists{/gist_id}","starred_url":"https://api.github.com/users/b005t3r/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/b005t3r/subscriptions","organizations_url":"https://api.github.com/users/b005t3r/orgs","repos_url":"https://api.github.com/users/b005t3r/repos","events_url":"https://api.github.com/users/b005t3r/events{/privacy}","received_events_url":"https://api.github.com/users/b005t3r/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2017-05-24T07:55:55Z","updated_at":"2017-05-24T08:49:56Z","closed_at":"2017-05-24T08:36:06Z","author_association":"NONE","body":"Consider this:\r\n\r\n```as3\r\nvar quad:Quad = new Quad(300, 300);\r\nvar sprite3D:Sprite3D = new Sprite3D();\r\nsprite3D.addChild(quad);\r\nsprite3D.alignPivot();\r\nparent.addChild(sprite3D);\r\n```\r\n\r\nThe expected result is that ```sprite3D``` should be draw with its center anchored at ```parent```'s top-left corner.\r\n\r\nThe actual result is that it's top-left corner is anchored at the ```parent```'s top-left corner, as if the pivot hasn't been changed at all.\r\n\r\nThis is caused due to ```_transformationChanged``` not being set to ```true``` on ```alignPivot()``` call in ```Sprite3D``` (this method is not overridden).  ","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/966/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/965","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/965/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/965/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/965/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/965","id":230407458,"number":965,"title":"ANRs on Android","user":{"login":"neuronix","id":219800,"avatar_url":"https://avatars1.githubusercontent.com/u/219800?v=4","gravatar_id":"","url":"https://api.github.com/users/neuronix","html_url":"https://github.com/neuronix","followers_url":"https://api.github.com/users/neuronix/followers","following_url":"https://api.github.com/users/neuronix/following{/other_user}","gists_url":"https://api.github.com/users/neuronix/gists{/gist_id}","starred_url":"https://api.github.com/users/neuronix/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/neuronix/subscriptions","organizations_url":"https://api.github.com/users/neuronix/orgs","repos_url":"https://api.github.com/users/neuronix/repos","events_url":"https://api.github.com/users/neuronix/events{/privacy}","received_events_url":"https://api.github.com/users/neuronix/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2017-05-22T14:07:38Z","updated_at":"2017-06-24T17:26:30Z","closed_at":"2017-06-24T17:26:30Z","author_association":"NONE","body":"Hi Daniel,\r\n\r\nAll our apps still have many ANRs (Input dispatching timed out & Broadcast of Intent types) on Android. The AIR team answer regarding this is that one should avoid any heavy calculations in the mouse_down, mouse click, key_down, etc. events and delay the calculations to avoid freezing the input.\r\n\r\nFrom what I see, Starling already delays touch input handling to the next frame.. but we still get lots of ANRs. All our inputs are handled via Starling. Is there anything left to improve in Starling? Should one consider queuing the touch events in seperate setTimout calls instead of processing all of them in the next frame like currently?\r\n\r\nAny other advice related to these dreaded ANRs?\r\n\r\nThanks for your help Daniel! :)\r\n\r\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/965/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/964","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/964/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/964/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/964/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/964","id":229518608,"number":964,"title":"Back buffer can be left in unknown state","user":{"login":"johncridges","id":28767703,"avatar_url":"https://avatars2.githubusercontent.com/u/28767703?v=4","gravatar_id":"","url":"https://api.github.com/users/johncridges","html_url":"https://github.com/johncridges","followers_url":"https://api.github.com/users/johncridges/followers","following_url":"https://api.github.com/users/johncridges/following{/other_user}","gists_url":"https://api.github.com/users/johncridges/gists{/gist_id}","starred_url":"https://api.github.com/users/johncridges/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/johncridges/subscriptions","organizations_url":"https://api.github.com/users/johncridges/orgs","repos_url":"https://api.github.com/users/johncridges/repos","events_url":"https://api.github.com/users/johncridges/events{/privacy}","received_events_url":"https://api.github.com/users/johncridges/received_events","type":"User","site_admin":false},"labels":[{"id":130316,"url":"https://api.github.com/repos/Gamua/Starling-Framework/labels/Bug","name":"Bug","color":"e10c02","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2017-05-17T23:53:25Z","updated_at":"2017-05-24T09:56:27Z","closed_at":"2017-05-24T09:55:40Z","author_association":"NONE","body":"When setting Starling.shareContext false, the back buffer is not necessarily set back to the Starling viewport. I suggest the following change in Starling.as:\r\n```\r\n\r\n        public function set shareContext(value : Boolean) : void\r\n        {\r\n            if (!value) {\r\n                _previousViewPort.setEmpty();\r\n            }\r\n            _painter.shareContext = value;\r\n        }\r\n\r\n```","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/964/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/963","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/963/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/963/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/963/events","html_url":"https://github.com/Gamua/Starling-Framework/pull/963","id":226065728,"number":963,"title":"SystemUtil: added convenience methods","user":{"login":"kevinfoley","id":7231744,"avatar_url":"https://avatars2.githubusercontent.com/u/7231744?v=4","gravatar_id":"","url":"https://api.github.com/users/kevinfoley","html_url":"https://github.com/kevinfoley","followers_url":"https://api.github.com/users/kevinfoley/followers","following_url":"https://api.github.com/users/kevinfoley/following{/other_user}","gists_url":"https://api.github.com/users/kevinfoley/gists{/gist_id}","starred_url":"https://api.github.com/users/kevinfoley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kevinfoley/subscriptions","organizations_url":"https://api.github.com/users/kevinfoley/orgs","repos_url":"https://api.github.com/users/kevinfoley/repos","events_url":"https://api.github.com/users/kevinfoley/events{/privacy}","received_events_url":"https://api.github.com/users/kevinfoley/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2017-05-03T17:55:53Z","updated_at":"2017-05-10T12:06:06Z","closed_at":"2017-05-10T12:05:34Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/pulls/963","html_url":"https://github.com/Gamua/Starling-Framework/pull/963","diff_url":"https://github.com/Gamua/Starling-Framework/pull/963.diff","patch_url":"https://github.com/Gamua/Starling-Framework/pull/963.patch"},"body":"Added `isAndroid`, `isIOS`, `isMac`, `isWindows` as shortcuts for manually checking the `platform` string","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/963/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/962","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/962/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/962/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/962/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/962","id":225713571,"number":962,"title":"Unable to load AGALMiniAssembler, for some reason....","user":{"login":"syberkitten","id":3462714,"avatar_url":"https://avatars0.githubusercontent.com/u/3462714?v=4","gravatar_id":"","url":"https://api.github.com/users/syberkitten","html_url":"https://github.com/syberkitten","followers_url":"https://api.github.com/users/syberkitten/followers","following_url":"https://api.github.com/users/syberkitten/following{/other_user}","gists_url":"https://api.github.com/users/syberkitten/gists{/gist_id}","starred_url":"https://api.github.com/users/syberkitten/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/syberkitten/subscriptions","organizations_url":"https://api.github.com/users/syberkitten/orgs","repos_url":"https://api.github.com/users/syberkitten/repos","events_url":"https://api.github.com/users/syberkitten/events{/privacy}","received_events_url":"https://api.github.com/users/syberkitten/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2017-05-02T14:30:52Z","updated_at":"2017-05-02T16:06:31Z","closed_at":"2017-05-02T16:03:10Z","author_association":"NONE","body":"I've been working on an air mobile app which now\r\nalso runs on IOS (which it didn't before).\r\n\r\nBut stranger then anything is that now I cannot access\r\nthe GPU in the Android version, getting this crazy \r\nerror.\r\n\r\ncould this be a side effect of some of the ANE's used?\r\nspecs:\r\n- AIR SDK 25, using -swf-version=36\r\n- IntelliJ Idea 14\r\n- Starling 2.1 - the latest maser version from git.\r\n\r\n`\r\n[Fault] exception, information=VerifyError: Error #1014: Class com.adobe.utils::AGALMiniAssembler could not be found.\r\njava.lang.IndexOutOfBoundsException: Index: 0, Size: 0\r\n\tat java.util.ArrayList.RangeCheck(ArrayList.java:547)\r\n\tat java.util.ArrayList.get(ArrayList.java:322)\r\n\tat flash.tools.debugger.concrete.DManager.getFrame(DManager.java:921)\r\n\tat flash.tools.debugger.concrete.PlayerSession.pullUpActivationObjectVariables(PlayerSession.java:1113)\r\n\tat flash.tools.debugger.concrete.PlayerSession.requestFrame(PlayerSession.java:1089)\r\n\tat flash.tools.debugger.concrete.PlayerSession.getValueWorker(PlayerSession.java:1211)\r\n\tat flash.tools.debugger.concrete.IsolatePlayerSession.getValue(IsolatePlayerSession.java:123)\r\n\tat flex.tools.debugger.cli.ExpressionContext.memberNamed(ExpressionContext.java:438)\r\n\tat flex.tools.debugger.cli.ExpressionContext.locateParentForNamed(ExpressionContext.java:540)\r\n\tat flex.tools.debugger.cli.ExpressionContext.determineContext(ExpressionContext.java:490)\r\n\tat flex.tools.debugger.cli.ExpressionContext.resolveToVariable(ExpressionContext.java:350)\r\n\tat flex.tools.debugger.cli.ExpressionContext.lookup(ExpressionContext.java:169)\r\n\tat flash.tools.debugger.expression.DebuggerEvaluator.evaluate(DebuggerEvaluator.java:161)\r\n\tat macromedia.asc.parser.ThisExpressionNode.evaluate(ThisExpressionNode.java:34)\r\n\tat flash.tools.debugger.expression.DebuggerEvaluator.evaluate(DebuggerEvaluator.java:1031)\r\n\tat macromedia.asc.parser.ListNode.evaluate(ListNode.java:44)\r\n\tat flash.tools.debugger.expression.DebuggerEvaluator.evaluate(DebuggerEvaluator.java:1031)\r\n\tat macromedia.asc.parser.ListNode.evaluate(ListNode.java:44)\r\n\tat flash.tools.debugger.expression.DebuggerEvaluator.evaluate(DebuggerEvaluator.java:1065)\r\n\tat macromedia.asc.parser.ExpressionStatementNode.evaluate(ExpressionStatementNode.java:50)\r\n\tat flash.tools.debugger.expression.DebuggerEvaluator.evaluate(DebuggerEvaluator.java:1306)\r\n\tat macromedia.asc.parser.ProgramNode.evaluate(ProgramNode.java:80)\r\n\tat flash.tools.debugger.expression.DebuggerExpression.evaluate(DebuggerExpression.java:106)\r\n\tat flex.tools.debugger.cli.ExpressionCache.evaluate(ExpressionCache.java:101)\r\n\tat flex.tools.debugger.cli.DebugCLI.evalExpression(DebugCLI.java:4023)\r\n\tat flex.tools.debugger.cli.DebugCLI.evalExpression(DebugCLI.java:4015)\r\n\tat flex.tools.debugger.cli.DebugCLI.doPrint(DebugCLI.java:3941)\r\n\tat flex.tools.debugger.cli.DebugCLI.processLine(DebugCLI.java:7032)\r\n\tat flex.tools.debugger.cli.DebugCLI.process(DebugCLI.java:828)\r\n\tat flex.tools.debugger.cli.DebugCLI.execute(DebugCLI.java:669)\r\n\tat flex.tools.debugger.cli.DebugCLI.main(DebugCLI.java:461)\r\n[trace] *** Security Sandbox Violation ***\r\n[trace] SecurityDomain 'app:/xxxxx.swf' tried to access incompatible context 'http://adobe.com/apollo'\r\n[trace] [EXCEPTION UNCAUGHT ERROR]: VerifyError: Error #1014: Class com.adobe.utils::AGALMiniAssembler could not be found.  StackTrace--> VerifyError: Error #1014: Class com.adobe.utils::AGALMiniAssembler could not be found.\r\n[trace] \tat starling.rendering::Painter/getProgram()[/Users/redge/Dropbox/Development/starling/starling/src/starling/rendering/Painter.as:275]\r\n[trace] \tat starling.rendering::Effect/get program()[/Users/redge/Dropbox/Development/starling/starling/src/starling/rendering/Effect.as:342]\r\n[trace] \tat starling.rendering::Effect/beforeDraw()[/Users/redge/Dropbox/Development/starling/starling/src/starling/rendering/Effect.as:0]\r\n[trace] \tat starling.rendering::FilterEffect/beforeDraw()[/Users/redge/Dropbox/Development/starling/starling/src/starling/rendering/FilterEffect.as:93]\r\n[trace] \tat starling.rendering::MeshEffect/beforeDraw()[/Users/redge/Dropbox/Development/starling/starling/src/starling/rendering/MeshEffect.as:111]\r\n[trace] \tat starling.rendering::Effect/render()[/Users/redge/Dropbox/Development/starling/starling/src/starling/rendering/Effect.as:235]\r\n[trace] \tat starling.display::MeshBatch/render()[/Users/redge/Dropbox/Development/starling/starling/src/starling/display/MeshBatch.as:238]\r\n[trace] \tat starling.rendering::Painter/drawBatch()[/Users/redge/Dropbox/Development/starling/starling/src/starling/rendering/Painter.as:630]\r\n[trace] \tat BatchProcessor/finishBatch()[/Users/redge/Dropbox/Development/starling/starling/src/starling/rendering/BatchProcessor.as:117]\r\n[trace] \tat starling.rendering::Painter/finishMeshBatch()[/Users/redge/Dropbox/Development/starling/starling/src/starling/rendering/Painter.as:516]\r\n[trace] \tat starling.rendering::Painter/renderMask()[/Users/redge/Dropbox/Development/starling/starling/src/starling/rendering/Painter.as:440]\r\n[trace] \tat starling.rendering::Painter/drawMask()[/Users/redge/Dropbox/Development/starling/starling/src/starling/rendering/Painter.as:371]\r\n[trace] \tat starling.display::DisplayObjectContainer/render()[/Users/redge/Dropbox/Development/starling/starling/src/starling/display/DisplayObjectContainer.as:386]\r\n[trace] \tat starling.display::DisplayObjectContainer/render()[/Users/redge/Dropbox/Development/starling/starling/src/starling/display/DisplayObjectContainer.as:389]\r\n[trace] \tat starling.core::Starling/render()[/Users/redge/Dropbox/Development/starling/starling/src/starling/core/Starling.as:440]\r\n[trace] \tat starling.core::Starling/nextFrame()[/Users/redge/Dropbox/Development/starling/starling/src/starling/core/Starling.as:388]\r\n[trace] \tat starling.core::Starling/onEnterFrame()[/Users/redge/Dropbox/Development/starling/starling/src/starling/core/Starling.as:601]\r\n\r\n`\r\n\r\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/962/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/961","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/961/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/961/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/961/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/961","id":225342761,"number":961,"title":"Texture with frames","user":{"login":"Yaniko","id":27950327,"avatar_url":"https://avatars3.githubusercontent.com/u/27950327?v=4","gravatar_id":"","url":"https://api.github.com/users/Yaniko","html_url":"https://github.com/Yaniko","followers_url":"https://api.github.com/users/Yaniko/followers","following_url":"https://api.github.com/users/Yaniko/following{/other_user}","gists_url":"https://api.github.com/users/Yaniko/gists{/gist_id}","starred_url":"https://api.github.com/users/Yaniko/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Yaniko/subscriptions","organizations_url":"https://api.github.com/users/Yaniko/orgs","repos_url":"https://api.github.com/users/Yaniko/repos","events_url":"https://api.github.com/users/Yaniko/events{/privacy}","received_events_url":"https://api.github.com/users/Yaniko/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2017-04-30T17:52:04Z","updated_at":"2017-05-10T11:59:08Z","closed_at":"2017-05-10T11:59:08Z","author_association":"NONE","body":"Hi.\r\nIn our project we use rectangles as placeholders (in fla files). We set alpha 0 to their fill. After converting to textures such a rectangle becomes a 3x3 with frame 1x1. All was good in starling 1.6.\r\nRecentlty we migrated to starling 2. All placeholders become 3 times wider and higher. I think there is a bug in Texture.as in setupVertexPositions().\r\n```\r\n            if (frame)\r\n                sRectangle.setTo(-frame.x, -frame.y, width, height);\r\n            else\r\n                sRectangle.setTo(0, 0, width, height);\r\n```\r\nLooks like it should be (line 609)\r\n```\r\n            if (frame)\r\n                sRectangle.setTo(-frame.x, -frame.y, frame.width, frame.height);\r\n            else\r\n                sRectangle.setTo(0, 0, width, height);\r\n```\r\nAlso I'm not sure about `-frame.x, -frame.y`. In our case `frame.x == 0` so it works.\r\nMaybe here is a good place to use texture's `public function get frameWidth`?","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/961/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/960","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/960/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/960/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/960/events","html_url":"https://github.com/Gamua/Starling-Framework/pull/960","id":225309706,"number":960,"title":"Employing the `numSides` parameter for elliptical gen methods","user":{"login":"EhsanMarufi","id":22413487,"avatar_url":"https://avatars2.githubusercontent.com/u/22413487?v=4","gravatar_id":"","url":"https://api.github.com/users/EhsanMarufi","html_url":"https://github.com/EhsanMarufi","followers_url":"https://api.github.com/users/EhsanMarufi/followers","following_url":"https://api.github.com/users/EhsanMarufi/following{/other_user}","gists_url":"https://api.github.com/users/EhsanMarufi/gists{/gist_id}","starred_url":"https://api.github.com/users/EhsanMarufi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/EhsanMarufi/subscriptions","organizations_url":"https://api.github.com/users/EhsanMarufi/orgs","repos_url":"https://api.github.com/users/EhsanMarufi/repos","events_url":"https://api.github.com/users/EhsanMarufi/events{/privacy}","received_events_url":"https://api.github.com/users/EhsanMarufi/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2017-04-30T07:08:22Z","updated_at":"2017-05-02T09:59:47Z","closed_at":"2017-05-02T09:58:58Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/pulls/960","html_url":"https://github.com/Gamua/Starling-Framework/pull/960","diff_url":"https://github.com/Gamua/Starling-Framework/pull/960.diff","patch_url":"https://github.com/Gamua/Starling-Framework/pull/960.patch"},"body":"The useful parameter of `numSides` in the constructor of the internal class of `Ellipse` is implemented and available; why not allow the users to benefit the advantages of the parameter?!\r\nAs the class provides a resolution-independent concept, one may need to have more control on the sides' count, e.g. where the shape may be scaled in a way the imperfection of the to-be elliptical curve is undesirable, and the issue could've been solved easily, if there were more sides on the shape!","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/960/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/959","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/959/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/959/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/959/events","html_url":"https://github.com/Gamua/Starling-Framework/pull/959","id":224615296,"number":959,"title":"Include the name of the class when throwing an error","user":{"login":"kevinfoley","id":7231744,"avatar_url":"https://avatars2.githubusercontent.com/u/7231744?v=4","gravatar_id":"","url":"https://api.github.com/users/kevinfoley","html_url":"https://github.com/kevinfoley","followers_url":"https://api.github.com/users/kevinfoley/followers","following_url":"https://api.github.com/users/kevinfoley/following{/other_user}","gists_url":"https://api.github.com/users/kevinfoley/gists{/gist_id}","starred_url":"https://api.github.com/users/kevinfoley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kevinfoley/subscriptions","organizations_url":"https://api.github.com/users/kevinfoley/orgs","repos_url":"https://api.github.com/users/kevinfoley/repos","events_url":"https://api.github.com/users/kevinfoley/events{/privacy}","received_events_url":"https://api.github.com/users/kevinfoley/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2017-04-26T22:15:07Z","updated_at":"2017-06-27T07:22:52Z","closed_at":"2017-06-27T07:22:52Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/pulls/959","html_url":"https://github.com/Gamua/Starling-Framework/pull/959","diff_url":"https://github.com/Gamua/Starling-Framework/pull/959.diff","patch_url":"https://github.com/Gamua/Starling-Framework/pull/959.patch"},"body":"E.g. \"[DisplayObject] Invalid horizontal alignment: lfet\"\r\n\r\nThis is useful when debugging in an environment or situation where we don't have access to the line number or call stack, such as when the error is caught by a handler or logged to a file:\r\n\r\n    try {\r\n        var texture:Texture = assetManager.getTexture(\"texture\");\r\n        var image:Image = new Image(texture);\r\n        image.alignPivot(\"lfet\", \"top\");\r\n        addChild(image);\r\n    } catch (error:Error) {\r\n        Alert.show(error.message, \"Error!\"); //we'll see the call stack, but not what \r\n    }\r\n\r\nThis isn't the best example, but the point is that sometimes you end up with an error message and it's not immediately obvious which class it came from. \r\n\r\nSo far I've implemented this for Juggler, Tween, Starling, Button, DisplayObject, AssetManager. If you like the change, I can continue applying it in the remaining classes.\r\n\r\nA possible enhancement I just thought of, in case we're concerned about potentially displaying class names to users in a production environment:\r\n\r\n    private static function get outputName():String { \r\n        return (Starling.current.includeClassNamesInErrors) ? \"[DisplayObject] \" : \"\";\r\n    }","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/959/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/958","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/958/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/958/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/958/events","html_url":"https://github.com/Gamua/Starling-Framework/pull/958","id":224598256,"number":958,"title":"Add static functions to Image for binding a scale9Grid to a Texture","user":{"login":"kevinfoley","id":7231744,"avatar_url":"https://avatars2.githubusercontent.com/u/7231744?v=4","gravatar_id":"","url":"https://api.github.com/users/kevinfoley","html_url":"https://github.com/kevinfoley","followers_url":"https://api.github.com/users/kevinfoley/followers","following_url":"https://api.github.com/users/kevinfoley/following{/other_user}","gists_url":"https://api.github.com/users/kevinfoley/gists{/gist_id}","starred_url":"https://api.github.com/users/kevinfoley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kevinfoley/subscriptions","organizations_url":"https://api.github.com/users/kevinfoley/orgs","repos_url":"https://api.github.com/users/kevinfoley/repos","events_url":"https://api.github.com/users/kevinfoley/events{/privacy}","received_events_url":"https://api.github.com/users/kevinfoley/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2017-04-26T21:01:59Z","updated_at":"2017-06-26T12:36:39Z","closed_at":"2017-06-26T12:31:15Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/pulls/958","html_url":"https://github.com/Gamua/Starling-Framework/pull/958","diff_url":"https://github.com/Gamua/Starling-Framework/pull/958.diff","patch_url":"https://github.com/Gamua/Starling-Framework/pull/958.patch"},"body":"The scale9Grid will automatically be applied whenever the Texture is displayed in an Image, saving us the boilerplate of passing around the scale9Grid with the Texture.\r\n\r\nUsage:\r\n\r\n    var texture:Texture = assetManager.getTexture(\"scale9-texture\");\r\n    var scale9Grid:Rectangle = new Rectangle(4, 4, 56, 56);\r\n    //call this once after your textures have loaded\r\n    Image.bindScale9GridToTexture(texture, scale9Grid);\r\n\r\n    var image:Image = new Image(texture);\r\n    var button:Button = new Button(texture, \"Press me\");\r\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/958/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/957","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/957/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/957/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/957/events","html_url":"https://github.com/Gamua/Starling-Framework/pull/957","id":220456704,"number":957,"title":"better Object Oriented scheme","user":{"login":"EhsanMarufi","id":22413487,"avatar_url":"https://avatars2.githubusercontent.com/u/22413487?v=4","gravatar_id":"","url":"https://api.github.com/users/EhsanMarufi","html_url":"https://github.com/EhsanMarufi","followers_url":"https://api.github.com/users/EhsanMarufi/followers","following_url":"https://api.github.com/users/EhsanMarufi/following{/other_user}","gists_url":"https://api.github.com/users/EhsanMarufi/gists{/gist_id}","starred_url":"https://api.github.com/users/EhsanMarufi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/EhsanMarufi/subscriptions","organizations_url":"https://api.github.com/users/EhsanMarufi/orgs","repos_url":"https://api.github.com/users/EhsanMarufi/repos","events_url":"https://api.github.com/users/EhsanMarufi/events{/privacy}","received_events_url":"https://api.github.com/users/EhsanMarufi/received_events","type":"User","site_admin":false},"labels":[{"id":130317,"url":"https://api.github.com/repos/Gamua/Starling-Framework/labels/Feature","name":"Feature","color":"009800","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2017-04-09T08:31:51Z","updated_at":"2017-04-11T10:06:04Z","closed_at":"2017-04-11T09:06:00Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/pulls/957","html_url":"https://github.com/Gamua/Starling-Framework/pull/957","diff_url":"https://github.com/Gamua/Starling-Framework/pull/957.diff","patch_url":"https://github.com/Gamua/Starling-Framework/pull/957.patch"},"body":"Changed the <code>private</code> access modifiers to <code>protected</code> to enforce the OOP practices. By changing the fields' access modifiers to <code>protected</code>, one can customize the implementation while still utilizing the same interface.","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/957/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":1}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/956","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/956/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/956/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/956/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/956","id":219829874,"number":956,"title":"Reuse images ","user":{"login":"Deirel","id":4112416,"avatar_url":"https://avatars3.githubusercontent.com/u/4112416?v=4","gravatar_id":"","url":"https://api.github.com/users/Deirel","html_url":"https://github.com/Deirel","followers_url":"https://api.github.com/users/Deirel/followers","following_url":"https://api.github.com/users/Deirel/following{/other_user}","gists_url":"https://api.github.com/users/Deirel/gists{/gist_id}","starred_url":"https://api.github.com/users/Deirel/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Deirel/subscriptions","organizations_url":"https://api.github.com/users/Deirel/orgs","repos_url":"https://api.github.com/users/Deirel/repos","events_url":"https://api.github.com/users/Deirel/events{/privacy}","received_events_url":"https://api.github.com/users/Deirel/received_events","type":"User","site_admin":false},"labels":[{"id":130317,"url":"https://api.github.com/repos/Gamua/Starling-Framework/labels/Feature","name":"Feature","color":"009800","default":false}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2017-04-06T08:58:32Z","updated_at":"2017-06-24T17:26:47Z","closed_at":null,"author_association":"NONE","body":"If there is reason to add ability to temporary unload textures from GPU memory and return it back later, to avoid disposing display objects containing Images and make possible its pooling without spending GPU memory?","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/956/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/955","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/955/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/955/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/955/events","html_url":"https://github.com/Gamua/Starling-Framework/pull/955","id":219631779,"number":955,"title":"Bug: double dispose call if text is empty","user":{"login":"5k0rp","id":11645433,"avatar_url":"https://avatars1.githubusercontent.com/u/11645433?v=4","gravatar_id":"","url":"https://api.github.com/users/5k0rp","html_url":"https://github.com/5k0rp","followers_url":"https://api.github.com/users/5k0rp/followers","following_url":"https://api.github.com/users/5k0rp/following{/other_user}","gists_url":"https://api.github.com/users/5k0rp/gists{/gist_id}","starred_url":"https://api.github.com/users/5k0rp/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/5k0rp/subscriptions","organizations_url":"https://api.github.com/users/5k0rp/orgs","repos_url":"https://api.github.com/users/5k0rp/repos","events_url":"https://api.github.com/users/5k0rp/events{/privacy}","received_events_url":"https://api.github.com/users/5k0rp/received_events","type":"User","site_admin":false},"labels":[{"id":130316,"url":"https://api.github.com/repos/Gamua/Starling-Framework/labels/Bug","name":"Bug","color":"e10c02","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2017-04-05T15:53:58Z","updated_at":"2017-04-06T12:54:08Z","closed_at":"2017-04-06T08:20:20Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/pulls/955","html_url":"https://github.com/Gamua/Starling-Framework/pull/955","diff_url":"https://github.com/Gamua/Starling-Framework/pull/955.diff","patch_url":"https://github.com/Gamua/Starling-Framework/pull/955.patch"},"body":"fillMeshBatch does not replace texture if text is empty","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/955/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/954","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/954/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/954/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/954/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/954","id":218887086,"number":954,"title":"Make setOrientationChanged() public","user":{"login":"b005t3r","id":757150,"avatar_url":"https://avatars3.githubusercontent.com/u/757150?v=4","gravatar_id":"","url":"https://api.github.com/users/b005t3r","html_url":"https://github.com/b005t3r","followers_url":"https://api.github.com/users/b005t3r/followers","following_url":"https://api.github.com/users/b005t3r/following{/other_user}","gists_url":"https://api.github.com/users/b005t3r/gists{/gist_id}","starred_url":"https://api.github.com/users/b005t3r/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/b005t3r/subscriptions","organizations_url":"https://api.github.com/users/b005t3r/orgs","repos_url":"https://api.github.com/users/b005t3r/repos","events_url":"https://api.github.com/users/b005t3r/events{/privacy}","received_events_url":"https://api.github.com/users/b005t3r/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":46,"created_at":"2017-04-03T10:11:06Z","updated_at":"2017-05-29T15:03:11Z","closed_at":"2017-05-29T09:19:16Z","author_association":"NONE","body":"Currently, if you override the ```transformationMatrix``` property (so your object is translated/scaled/rotated according to something else than x/y/rotation/scale etc.) you need a hack to call ```setOrientationChanged()```, like this one:\r\n\r\n```as3\r\npublic function set myNewParam(value:Number):void {\r\n    _myNewParam = value;\r\n\r\n    // a hack\r\n    var oldX:Number = x;\r\n    x = oldX + 1; // calls setOrientationChanged()\r\n    x = oldX; // we don't really want to change x\r\n}\r\n\r\n// my new transformation matrix\r\noverride public function get transformationMatrix():Matrix {\r\n    var mat:Matrix = super.transformationMatrix;\r\n    mat.translate(0, _myNewParam); // alter the matrix accordingly to the new param\r\n    return mat;\r\n}\r\n```\r\n\r\nI don't see any risks in making ```setOrientationChanged()``` public - ```setRequiresRedraw()``` is public after all and used similarly.","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/954/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/953","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/953/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/953/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/953/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/953","id":216398326,"number":953,"title":"Video texture artifacts","user":{"login":"CrazyFlasher","id":1607138,"avatar_url":"https://avatars2.githubusercontent.com/u/1607138?v=4","gravatar_id":"","url":"https://api.github.com/users/CrazyFlasher","html_url":"https://github.com/CrazyFlasher","followers_url":"https://api.github.com/users/CrazyFlasher/followers","following_url":"https://api.github.com/users/CrazyFlasher/following{/other_user}","gists_url":"https://api.github.com/users/CrazyFlasher/gists{/gist_id}","starred_url":"https://api.github.com/users/CrazyFlasher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CrazyFlasher/subscriptions","organizations_url":"https://api.github.com/users/CrazyFlasher/orgs","repos_url":"https://api.github.com/users/CrazyFlasher/repos","events_url":"https://api.github.com/users/CrazyFlasher/events{/privacy}","received_events_url":"https://api.github.com/users/CrazyFlasher/received_events","type":"User","site_admin":false},"labels":[{"id":64488856,"url":"https://api.github.com/repos/Gamua/Starling-Framework/labels/Bug%20in%20Flash/AIR","name":"Bug in Flash/AIR","color":"5319e7","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2017-03-23T11:34:38Z","updated_at":"2017-06-24T17:27:33Z","closed_at":"2017-06-24T17:27:33Z","author_association":"NONE","body":"Hi.\r\nI am playing video texture and it is fine on mobiles and some pcs.\r\nBut one pc with Intel® HD Graphics 2000 integrated graphics adapter I receive artifacts:\r\n![codec_issue](https://cloud.githubusercontent.com/assets/1607138/24244089/296f5a08-0fc6-11e7-9644-554270a3ae68.jpg)\r\n![lvl4_broken_safe](https://cloud.githubusercontent.com/assets/1607138/24245891/692aacfe-0fcd-11e7-8535-97688c4946b1.gif)\r\n\r\nI play video using this way:\r\n```\r\nvideoTexture = Texture.fromNetStream(netStream, 1, function():void\r\n{\r\n\tvideoImage = new Image(videoTexture);\r\n\tvideoUI = new UIClip().setAssets(videoImage);\r\n\taddUIClip(videoUI);\r\n\t\tupdateUIContainer();\r\n});\r\nnetStream.play(hintListModel.suitableHintImmutable.videoURL);\r\n```\r\nIf I play this video using some other players installed on PC - everything is fine. So the problem, not in video.\r\nI am building with AIR 25 SDK, but tried lower versions also.\r\n\r\nMay be the reason is in the codec? What is the most compatible codec for mp4 videos and Starling / AIR?\r\n\r\nLink to video file:\r\nhttp://95.85.13.123:8080/hints/level_5/22-step.mp4\r\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/953/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/952","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/952/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/952/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/952/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/952","id":216310255,"number":952,"title":"chrome of two windows of same size,display bug","user":{"login":"matrix3d","id":4150631,"avatar_url":"https://avatars0.githubusercontent.com/u/4150631?v=4","gravatar_id":"","url":"https://api.github.com/users/matrix3d","html_url":"https://github.com/matrix3d","followers_url":"https://api.github.com/users/matrix3d/followers","following_url":"https://api.github.com/users/matrix3d/following{/other_user}","gists_url":"https://api.github.com/users/matrix3d/gists{/gist_id}","starred_url":"https://api.github.com/users/matrix3d/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/matrix3d/subscriptions","organizations_url":"https://api.github.com/users/matrix3d/orgs","repos_url":"https://api.github.com/users/matrix3d/repos","events_url":"https://api.github.com/users/matrix3d/events{/privacy}","received_events_url":"https://api.github.com/users/matrix3d/received_events","type":"User","site_admin":false},"labels":[{"id":64488856,"url":"https://api.github.com/repos/Gamua/Starling-Framework/labels/Bug%20in%20Flash/AIR","name":"Bug in Flash/AIR","color":"5319e7","default":false}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":16,"created_at":"2017-03-23T05:52:03Z","updated_at":"2017-06-24T17:27:53Z","closed_at":null,"author_association":"NONE","body":"http://ycanvas.yoz.sk/maps/\r\n\r\n![default](https://cloud.githubusercontent.com/assets/4150631/24233879/e080b88c-0fcf-11e7-96db-1b9a13f4289f.jpg)\r\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/952/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/951","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/951/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/951/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/951/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/951","id":215958316,"number":951,"title":"the atf of etc2 without alpha not work on iphone5 ","user":{"login":"matrix3d","id":4150631,"avatar_url":"https://avatars0.githubusercontent.com/u/4150631?v=4","gravatar_id":"","url":"https://api.github.com/users/matrix3d","html_url":"https://github.com/matrix3d","followers_url":"https://api.github.com/users/matrix3d/followers","following_url":"https://api.github.com/users/matrix3d/following{/other_user}","gists_url":"https://api.github.com/users/matrix3d/gists{/gist_id}","starred_url":"https://api.github.com/users/matrix3d/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/matrix3d/subscriptions","organizations_url":"https://api.github.com/users/matrix3d/orgs","repos_url":"https://api.github.com/users/matrix3d/repos","events_url":"https://api.github.com/users/matrix3d/events{/privacy}","received_events_url":"https://api.github.com/users/matrix3d/received_events","type":"User","site_admin":false},"labels":[{"id":64488856,"url":"https://api.github.com/repos/Gamua/Starling-Framework/labels/Bug%20in%20Flash/AIR","name":"Bug in Flash/AIR","color":"5319e7","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2017-03-22T05:38:30Z","updated_at":"2017-06-24T17:28:08Z","closed_at":"2017-06-24T17:28:08Z","author_association":"NONE","body":"the atf of etc2 with alpha work good on iphone5.","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/951/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/950","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/950/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/950/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/950/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/950","id":215381317,"number":950,"title":"iOS specific memory leak in BatchPool","user":{"login":"neuronix","id":219800,"avatar_url":"https://avatars1.githubusercontent.com/u/219800?v=4","gravatar_id":"","url":"https://api.github.com/users/neuronix","html_url":"https://github.com/neuronix","followers_url":"https://api.github.com/users/neuronix/followers","following_url":"https://api.github.com/users/neuronix/following{/other_user}","gists_url":"https://api.github.com/users/neuronix/gists{/gist_id}","starred_url":"https://api.github.com/users/neuronix/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/neuronix/subscriptions","organizations_url":"https://api.github.com/users/neuronix/orgs","repos_url":"https://api.github.com/users/neuronix/repos","events_url":"https://api.github.com/users/neuronix/events{/privacy}","received_events_url":"https://api.github.com/users/neuronix/received_events","type":"User","site_admin":false},"labels":[{"id":64488856,"url":"https://api.github.com/repos/Gamua/Starling-Framework/labels/Bug%20in%20Flash/AIR","name":"Bug in Flash/AIR","color":"5319e7","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2017-03-20T10:37:58Z","updated_at":"2017-06-27T07:01:16Z","closed_at":"2017-06-26T07:16:11Z","author_association":"NONE","body":"Hi Daniel,\r\n\r\nOn ios our app had 45% of cpu time used up by BatchPool.get & memory cleaning due to a very high number of String allocations/deallocations.\r\n\r\nThe code is very simple, no object creation at first sight. However my intuition was that it was related to the dictionary Class -> Vector.\\<MeshBatch\\> and a bad implementation in the iOS IOT. Indeed, after testing on Android/Windows, no string allocation.\r\n\r\nI stumbled upon this topic that has the exact same issue, string allocation with a dictionary of vectors on ios: https://forums.adobe.com/thread/2088454\r\n\r\nIn BatchPool, I did a dump of the _batchLists content and noticed that there were only 2 keys: MeshStyle & DistanceFieldStyle, so a simple fix was to add 2 new vectors and some if/else tests to directly use these vectors instead of looking them up in the dictionary.\r\n\r\nMy fix:\r\n```actionscript\r\nclass BatchPool\r\n{\r\n    private var _batchLists:Dictionary;\r\n\tprivate var _batchMeshStyle:Vector.<MeshBatch>;\r\n\tprivate var _batchDistanceFieldStyle:Vector.<MeshBatch>;\r\n\r\n    public function BatchPool()\r\n    {\r\n        _batchLists = new Dictionary();\r\n\t\t_batchMeshStyle = new <MeshBatch>[];\r\n\t\t_batchDistanceFieldStyle = new <MeshBatch>[];\r\n    }\r\n\r\n    public function purge():void\r\n    {\r\n        for each (var batchList:Vector.<MeshBatch> in _batchLists)\r\n        {\r\n            purgeList(batchList);\r\n        }\r\n\t\tpurgeList(_batchMeshStyle);\r\n\t\tpurgeList(_batchDistanceFieldStyle);\r\n    }\r\n\t\r\n\tprivate function purgeList(batchList:Vector.<MeshBatch>) : void {\r\n\t\tfor (var i:int = 0; i < batchList.length; ++i)\r\n\t\t{\r\n\t\t\tbatchList[i].dispose();\r\n\t\t}\r\n\t\tbatchList.length = 0;\r\n\t}\r\n\r\n    public function get(styleType:Class):MeshBatch\r\n    {\r\n        var batchList:Vector.<MeshBatch>;\r\n\t\t\r\n\t\tif (styleType == MeshStyle)\r\n\t\t{\r\n\t\t\tbatchList = _batchMeshStyle;\r\n\t\t} \r\n\t\telse if (styleType == DistanceFieldStyle)\r\n\t\t{\r\n\t\t\tbatchList = _batchDistanceFieldStyle;\r\n\t\t} \r\n\t\telse\r\n\t\t{\r\n\t\t\tbatchList = _batchLists[styleType];\r\n\t\t\tif (batchList == null)\r\n\t\t\t{\r\n\t\t\t\tbatchList = new <MeshBatch>[];\r\n\t\t\t\t_batchLists[styleType] = batchList;\r\n\t\t\t}\r\n\t\t}\r\n\r\n        if (batchList.length > 0) return batchList.pop();\r\n        else return new MeshBatch();\r\n    }\r\n\r\n    public function put(meshBatch:MeshBatch):void\r\n    {\r\n        var styleType:Class = meshBatch.style.type;\r\n        \r\n\t\tvar batchList:Vector.<MeshBatch>;\r\n\t\t\r\n\t\tif (styleType == MeshStyle)\r\n\t\t{\r\n\t\t\tbatchList = _batchMeshStyle;\r\n\t\t} \r\n\t\telse if (styleType == DistanceFieldStyle)\r\n\t\t{\r\n\t\t\tbatchList = _batchDistanceFieldStyle;\r\n\t\t} \r\n\t\telse\r\n\t\t{\r\n\t\t\tbatchList = _batchLists[styleType];\r\n\t\t\tif (batchList == null)\r\n\t\t\t{\r\n\t\t\t\tbatchList = new <MeshBatch>[];\r\n\t\t\t\t_batchLists[styleType] = batchList;\r\n\t\t\t}\r\n\t\t}\r\n\r\n        meshBatch.clear();\r\n        batchList[batchList.length] = meshBatch;\r\n    }\r\n}\r\n\r\n```\r\n\r\nThe effect is quite obvious as you can see on these 2 scout recordings:\r\n\r\nBefore:\r\n![batchpool](https://cloud.githubusercontent.com/assets/219800/24095972/d7b88788-0d5f-11e7-9b0f-c49d806e3657.jpg)\r\n\r\nAfter:\r\n![batchpool_fixed](https://cloud.githubusercontent.com/assets/219800/24095981/e0727b54-0d5f-11e7-92c4-29418d64b20b.jpg)\r\n\r\n1. I think it is a mandatory optimization to skip the dictionary call at least for MeshStyle since it is the only style in 99% of cases.\r\n2. I would suggest implementing the same fix for all possible classes in Starling and relying on a dictionary for custom styles.\r\n\r\nThanks for your work Daniel!\r\n\r\nRegards,\r\n\r\nCameron\r\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/950/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/949","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/949/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/949/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/949/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/949","id":215025451,"number":949,"title":"Flex SDK zip binaries removed :)","user":{"login":"CrazyFlasher","id":1607138,"avatar_url":"https://avatars2.githubusercontent.com/u/1607138?v=4","gravatar_id":"","url":"https://api.github.com/users/CrazyFlasher","html_url":"https://github.com/CrazyFlasher","followers_url":"https://api.github.com/users/CrazyFlasher/followers","following_url":"https://api.github.com/users/CrazyFlasher/following{/other_user}","gists_url":"https://api.github.com/users/CrazyFlasher/gists{/gist_id}","starred_url":"https://api.github.com/users/CrazyFlasher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CrazyFlasher/subscriptions","organizations_url":"https://api.github.com/users/CrazyFlasher/orgs","repos_url":"https://api.github.com/users/CrazyFlasher/repos","events_url":"https://api.github.com/users/CrazyFlasher/events{/privacy}","received_events_url":"https://api.github.com/users/CrazyFlasher/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2017-03-17T14:48:53Z","updated_at":"2017-03-18T10:51:21Z","closed_at":"2017-03-18T10:50:14Z","author_association":"NONE","body":"Build fails :)\r\nI guess link should be changed to\r\nhttps://github.com/apache/flex-sdk/archive/apache-flex-sdk-4.16.0.zip\r\n\r\nUPD: nope..these are sources :(\r\n\r\nUPD: http://www-us.apache.org/dist/flex/4.15.0/binaries/apache-flex-sdk-4.15.0-bin.zip working one","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/949/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/948","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/948/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/948/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/948/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/948","id":213305413,"number":948,"title":"Starling root should be disposed before context","user":{"login":"neuronix","id":219800,"avatar_url":"https://avatars1.githubusercontent.com/u/219800?v=4","gravatar_id":"","url":"https://api.github.com/users/neuronix","html_url":"https://github.com/neuronix","followers_url":"https://api.github.com/users/neuronix/followers","following_url":"https://api.github.com/users/neuronix/following{/other_user}","gists_url":"https://api.github.com/users/neuronix/gists{/gist_id}","starred_url":"https://api.github.com/users/neuronix/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/neuronix/subscriptions","organizations_url":"https://api.github.com/users/neuronix/orgs","repos_url":"https://api.github.com/users/neuronix/repos","events_url":"https://api.github.com/users/neuronix/events{/privacy}","received_events_url":"https://api.github.com/users/neuronix/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2017-03-10T10:38:23Z","updated_at":"2017-03-13T09:12:38Z","closed_at":"2017-03-13T09:12:17Z","author_association":"NONE","body":"Hi Daniel,\r\n\r\nWe noticed that the stage/context is disposed before the actual tree of display objects which can cause errors when disposing & recreating a Starling instance (app relaunch without exit to refresh data for example).\r\n\r\nOur fix was to simply add: \r\nstarling.root.dispose(); \r\nBefore the call:\r\nstarling.dispose();\r\n\r\nHowever, it would be better changed in the framework I think.\r\n\r\nKind regards,\r\n\r\nCameron","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/948/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/947","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/947/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/947/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/947/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/947","id":212385333,"number":947,"title":"Event.TEXTURE_READY not dispatched on Android","user":{"login":"marpies","id":6077555,"avatar_url":"https://avatars0.githubusercontent.com/u/6077555?v=4","gravatar_id":"","url":"https://api.github.com/users/marpies","html_url":"https://github.com/marpies","followers_url":"https://api.github.com/users/marpies/followers","following_url":"https://api.github.com/users/marpies/following{/other_user}","gists_url":"https://api.github.com/users/marpies/gists{/gist_id}","starred_url":"https://api.github.com/users/marpies/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/marpies/subscriptions","organizations_url":"https://api.github.com/users/marpies/orgs","repos_url":"https://api.github.com/users/marpies/repos","events_url":"https://api.github.com/users/marpies/events{/privacy}","received_events_url":"https://api.github.com/users/marpies/received_events","type":"User","site_admin":false},"labels":[{"id":64488856,"url":"https://api.github.com/repos/Gamua/Starling-Framework/labels/Bug%20in%20Flash/AIR","name":"Bug in Flash/AIR","color":"5319e7","default":false}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2017-03-07T10:08:15Z","updated_at":"2017-05-24T16:40:34Z","closed_at":null,"author_association":"NONE","body":"It's an AIR issue but I thought I should let you know about it. I recently found it's possible to crash an app if a texture is disposed *while* the bitmap data is being uploaded asynchronously; [Adobe is currently looking into it](https://tracker.adobe.com/#/view/AIR-4198272).\r\n\r\nThe actual problem is that the `Event.TEXTURE_READY` event fails to be dispatched after some time on Android, practically leaving the texture in the \"uploading\" state. Once this occurs, the event is never dispatched for subsequent texture uploads; the app has to be restarted. There is no error and the app continues to run, it's just that any further async texture uploads do not work. Unfortunately, Adobe says they cannot reproduce this, but I think it's pretty serious issue as it eventually breaks the app down.\r\n\r\nI'm able to reliably reproduce it on devices like Nexus 7 2013 or Sony Xperia Z3, both running Android 6. I haven't encountered this issue on old samsung phone running Android 4. I was wondering if you have ever seen this happen?\r\n\r\nIn case you'd like to test it on some of your devices, I've created a sample project where a bitmap data is uploaded and disposed repeatedly. If you create `apk-debug` and launch a logcat, you will see a counter that tracks the number of uploads. I've seen the event to stop being dispatched randomly, for example at 90th, 250th or 700th cycle. I'm using AIR 25.0.0.126 and `-swf-version=36`.\r\n\r\n[sample-project-upload.zip](https://github.com/Gamua/Starling-Framework/files/823997/sample-project-upload.zip)\r\n\r\n**EDIT:** Added ready-to-use APK of the sample project:\r\n[com.example.sample.apk.zip](https://github.com/Gamua/Starling-Framework/files/833387/com.example.sample.apk.zip)","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/947/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/946","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/946/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/946/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/946/events","html_url":"https://github.com/Gamua/Starling-Framework/pull/946","id":212068738,"number":946,"title":"Sort optimisation","user":{"login":"JohnBlackburne","id":6003194,"avatar_url":"https://avatars3.githubusercontent.com/u/6003194?v=4","gravatar_id":"","url":"https://api.github.com/users/JohnBlackburne","html_url":"https://github.com/JohnBlackburne","followers_url":"https://api.github.com/users/JohnBlackburne/followers","following_url":"https://api.github.com/users/JohnBlackburne/following{/other_user}","gists_url":"https://api.github.com/users/JohnBlackburne/gists{/gist_id}","starred_url":"https://api.github.com/users/JohnBlackburne/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JohnBlackburne/subscriptions","organizations_url":"https://api.github.com/users/JohnBlackburne/orgs","repos_url":"https://api.github.com/users/JohnBlackburne/repos","events_url":"https://api.github.com/users/JohnBlackburne/events{/privacy}","received_events_url":"https://api.github.com/users/JohnBlackburne/received_events","type":"User","site_admin":false},"labels":[{"id":130317,"url":"https://api.github.com/repos/Gamua/Starling-Framework/labels/Feature","name":"Feature","color":"009800","default":false}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2017-03-06T09:39:47Z","updated_at":"2017-06-27T03:03:29Z","closed_at":null,"author_association":"NONE","pull_request":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/pulls/946","html_url":"https://github.com/Gamua/Starling-Framework/pull/946","diff_url":"https://github.com/Gamua/Starling-Framework/pull/946.diff","patch_url":"https://github.com/Gamua/Starling-Framework/pull/946.patch"},"body":"This adds two functions and associated constants, implementing a faster sort at the cost of some flexibility. Rather than a function it sorts on one of x, y or z. Sorting on y is commonly used to draw an overhead view, so objects recede into the distance as they move up towards the horizon. z is unused in Starling so can be used for arbitrary data. x is for completeness. In a simple test it seems to provide a 10 - 20% speedup over sortChildren using a function.","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/946/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":1}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/945","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/945/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/945/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/945/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/945","id":210795462,"number":945,"title":"Add 'color' parameter to 'drawToBitmapData'","user":{"login":"marpies","id":6077555,"avatar_url":"https://avatars0.githubusercontent.com/u/6077555?v=4","gravatar_id":"","url":"https://api.github.com/users/marpies","html_url":"https://github.com/marpies","followers_url":"https://api.github.com/users/marpies/followers","following_url":"https://api.github.com/users/marpies/following{/other_user}","gists_url":"https://api.github.com/users/marpies/gists{/gist_id}","starred_url":"https://api.github.com/users/marpies/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/marpies/subscriptions","organizations_url":"https://api.github.com/users/marpies/orgs","repos_url":"https://api.github.com/users/marpies/repos","events_url":"https://api.github.com/users/marpies/events{/privacy}","received_events_url":"https://api.github.com/users/marpies/received_events","type":"User","site_admin":false},"labels":[{"id":130317,"url":"https://api.github.com/repos/Gamua/Starling-Framework/labels/Feature","name":"Feature","color":"009800","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2017-02-28T14:03:00Z","updated_at":"2017-06-23T08:26:22Z","closed_at":"2017-06-23T08:25:53Z","author_association":"NONE","body":"It'd be great if we could specify the color the painter is cleared with before drawing to bitmap data. Currently it defaults to black and cannot be changed as needed.","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/945/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/944","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/944/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/944/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/944/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/944","id":210688790,"number":944,"title":"atf not work on flashplayer 11.4","user":{"login":"matrix3d","id":4150631,"avatar_url":"https://avatars0.githubusercontent.com/u/4150631?v=4","gravatar_id":"","url":"https://api.github.com/users/matrix3d","html_url":"https://github.com/matrix3d","followers_url":"https://api.github.com/users/matrix3d/followers","following_url":"https://api.github.com/users/matrix3d/following{/other_user}","gists_url":"https://api.github.com/users/matrix3d/gists{/gist_id}","starred_url":"https://api.github.com/users/matrix3d/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/matrix3d/subscriptions","organizations_url":"https://api.github.com/users/matrix3d/orgs","repos_url":"https://api.github.com/users/matrix3d/repos","events_url":"https://api.github.com/users/matrix3d/events{/privacy}","received_events_url":"https://api.github.com/users/matrix3d/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2017-02-28T05:10:44Z","updated_at":"2017-02-28T12:53:53Z","closed_at":"2017-02-28T12:53:53Z","author_association":"NONE","body":"","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/944/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/943","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/943/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/943/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/943/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/943","id":205180540,"number":943,"title":"drawToBitmapData not working correctly with ScaleMode.NO_BORDER","user":{"login":"Selonie","id":3800454,"avatar_url":"https://avatars2.githubusercontent.com/u/3800454?v=4","gravatar_id":"","url":"https://api.github.com/users/Selonie","html_url":"https://github.com/Selonie","followers_url":"https://api.github.com/users/Selonie/followers","following_url":"https://api.github.com/users/Selonie/following{/other_user}","gists_url":"https://api.github.com/users/Selonie/gists{/gist_id}","starred_url":"https://api.github.com/users/Selonie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Selonie/subscriptions","organizations_url":"https://api.github.com/users/Selonie/orgs","repos_url":"https://api.github.com/users/Selonie/repos","events_url":"https://api.github.com/users/Selonie/events{/privacy}","received_events_url":"https://api.github.com/users/Selonie/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2017-02-03T15:02:58Z","updated_at":"2017-02-13T11:09:03Z","closed_at":"2017-02-07T15:52:13Z","author_association":"NONE","body":"Hi Daniel\r\n\t\t\t\r\nPerhaps I'm the only person who ever uses this ScaleMode.NO_BORDER with drawToBitmapData or maybe I am doing something wrong, but one way or the other this is probably the best place to ask.\r\n\t\t\t\r\nProblem: \r\nUsing drawToBitmapData with ScaleMode.NO_BORDER creates distorted images if the device being used requires the stage to zoom to remove borders.\r\nThis is an issue with the very latest and all previous versions of drawToBitmapData within starling.\r\n\t\t\t\r\nI've been 'correcting' the distortion like this (below), but I don't like the way the the screen flickers every time I take a screenshot and the fact I have to mess around with Starling every time I want to use ScaleMode.NO_BORDER. Can someone show me a better solution?\r\n\t\t\t\r\nDisplayObject.as\r\n```\r\npublic function drawToBitmapData(out:BitmapData=null):BitmapData\r\n{\r\n\tvar scale:Number = Starling.contentScaleFactor;\t\t\t\r\n\tvar alterX:int = Math.abs(Starling.current.viewPort.x) / scale*2;\r\n\tvar stage:Stage = Starling.current.stage;\r\n\tvar stageWidth:Number = stage.stageWidth-alterX ;\r\n\tvar stageHeight:Number = stage.stageHeight-alterY;\r\n\t\t\t   \r\n\tvar painter:Painter = Starling.painter;\r\n\tvar bounds:Rectangle = this is Stage ?\r\n\tstage.getStageBounds(this, sHelperRect) : getBounds(_parent, sHelperRect);\r\n\r\n\tif (out == null)\r\n\t\t\tout = new BitmapData(Math.ceil(bounds.width-alterX)  * scale,\r\n\t\t\t\t\t\t Math.ceil(bounds.height - (alterY+1)) * scale);\t\t\t\t\t\t\t \r\n\t\t\t\t\r\n\tpainter.clear();\r\n\tpainter.pushState();\r\n\tpainter.state.renderTarget = null;\r\n\tpainter.state.setModelviewMatricesToIdentity();\r\n\tpainter.setStateTo(transformationMatrix);\r\n\r\n\tpainter.state.setProjectionMatrix(bounds.x+alterX, bounds.y+alterY, stageWidth, stageHeight,\r\n\t\t\t\t\tstageWidth, stageHeight, stage.cameraPosition);\r\n\r\n\trender(painter);\r\n\r\n\tpainter.finishMeshBatch();\r\n\tpainter.context.drawToBitmapData(out);\r\n\tpainter.popState();\r\n\r\n\treturn out;\r\n}\r\n```\r\nPrevious attempts at fixing this here: \r\nhttp://forum.starling-framework.org/topic/screenshot-distortion-using-drawtobitmapdata\r\n\t\t\t\r\nAnyway thanks for everything - and don't stop doing anything important, cos this can wait!\r\n\t\t\t\r\nRegards\r\n\t\t\t\r\nSelonie","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/943/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}}],"meta":{"x-ratelimit-limit":"5000","x-ratelimit-remaining":"4765","x-ratelimit-reset":"1507250212","x-github-request-id":"BE3C:572D:14739C9:31ACF74:59D6C718","x-github-media-type":"github.squirrel-girl-preview","link":"<https://api.github.com/repositories/2097941/issues?state=all&page=3>; rel=\"next\", <https://api.github.com/repositories/2097941/issues?state=all&page=34>; rel=\"last\", <https://api.github.com/repositories/2097941/issues?state=all&page=1>; rel=\"first\", <https://api.github.com/repositories/2097941/issues?state=all&page=1>; rel=\"prev\"","etag":"\"6dae263bfe8f05889d906e4f4d950f08\"","status":"200 OK"}}
