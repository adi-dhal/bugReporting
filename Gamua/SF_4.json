{"data":[{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/912","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/912/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/912/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/912/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/912","id":181728870,"number":912,"title":"Calling render() manually omits masks","user":{"login":"joshtynjala","id":141885,"avatar_url":"https://avatars1.githubusercontent.com/u/141885?v=4","gravatar_id":"","url":"https://api.github.com/users/joshtynjala","html_url":"https://github.com/joshtynjala","followers_url":"https://api.github.com/users/joshtynjala/followers","following_url":"https://api.github.com/users/joshtynjala/following{/other_user}","gists_url":"https://api.github.com/users/joshtynjala/gists{/gist_id}","starred_url":"https://api.github.com/users/joshtynjala/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/joshtynjala/subscriptions","organizations_url":"https://api.github.com/users/joshtynjala/orgs","repos_url":"https://api.github.com/users/joshtynjala/repos","events_url":"https://api.github.com/users/joshtynjala/events{/privacy}","received_events_url":"https://api.github.com/users/joshtynjala/received_events","type":"User","site_admin":false},"labels":[{"id":42482767,"url":"https://api.github.com/repos/Gamua/Starling-Framework/labels/Discussion","name":"Discussion","color":"fbca04","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2016-10-07T17:46:59Z","updated_at":"2016-10-10T16:50:17Z","closed_at":"2016-10-10T15:16:57Z","author_association":"CONTRIBUTOR","body":"Feathers has a class called RenderDelegate with a render() overide that simply calls render() on another display object. It basically allows the target display object to be rendered with different transformations. I use it for animated transitions so that, once the animation is completed, I don't need to worry about resetting any changes that I made. Here is a simplified version of the RenderDelegate class:\n\n```\nclass RenderDelegate extends DisplayObject\n{\n    public function RenderDelegate(target:DisplayObject)\n    {\n        this.target = target;\n    }\n\n    public var target:DisplayObject;\n\n    override public function getBounds(targetSpace:DisplayObject, resultRect:Rectangle = null):Rectangle\n    {\n        if(!resultRect) resultRect = new Rectangle();\n        return resultRect;\n    }\n\n    override public function render(painter:Painter):void\n    {\n        target.setRequiresRedraw();\n        target.render(painter);\n    }\n}\n```\n\nAfter commit 70f98e86bf73dc1ff6b690ddfb7ab48d52c8d11b, if the target (or one of its children) has a mask, that mask is not included when the RenderDelegate renders. See the following code to reproduce:\n\n```\nvar quad:Quad = new Quad(100, 100, 0xff0000);\nquad.mask = new Quad(50, 50);\nquad.x = 40;\nquad.y = 40;\nthis.addChild(quad);\n\nvar delegate:RenderDelegate = new RenderDelegate(quad);\ndelegate.x = 40;\ndelegate.y = 150;\nthis.addChild(delegate);\n```\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/912/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/911","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/911/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/911/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/911/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/911","id":181657000,"number":911,"title":"Improving distance field style","user":{"login":"neuronix","id":219800,"avatar_url":"https://avatars1.githubusercontent.com/u/219800?v=4","gravatar_id":"","url":"https://api.github.com/users/neuronix","html_url":"https://github.com/neuronix","followers_url":"https://api.github.com/users/neuronix/followers","following_url":"https://api.github.com/users/neuronix/following{/other_user}","gists_url":"https://api.github.com/users/neuronix/gists{/gist_id}","starred_url":"https://api.github.com/users/neuronix/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/neuronix/subscriptions","organizations_url":"https://api.github.com/users/neuronix/orgs","repos_url":"https://api.github.com/users/neuronix/repos","events_url":"https://api.github.com/users/neuronix/events{/privacy}","received_events_url":"https://api.github.com/users/neuronix/received_events","type":"User","site_admin":false},"labels":[{"id":130317,"url":"https://api.github.com/repos/Gamua/Starling-Framework/labels/Feature","name":"Feature","color":"009800","default":false}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":22,"created_at":"2016-10-07T12:31:14Z","updated_at":"2017-05-30T13:52:03Z","closed_at":null,"author_association":"NONE","body":"Hi Daniel,\n\nFirst of all, thanks for the work on distance field fonts, they are great! \n\nI would however like to suggest a modification to the shader (if technically possible).\n\nCurrently the shader seems to draw each letter of the font then apply the outline and move on. This causes an ugly overlapping of the outline on the previous letter. So you either have to keep a outline smaller than the minimum spacing of letters or do with the artefact.\n\nIt would be great if the outline could be applied after rendering all the letters so that whatever the thickness of the outline, there is no overlapping.\n\nHere is an illustration, top is current, bottom is expected result:\n\n![test](https://cloud.githubusercontent.com/assets/219800/19189876/9111eebe-8c9a-11e6-80e8-886ed12719f4.jpg)\n\nThanks! :)\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/911/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/910","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/910/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/910/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/910/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/910","id":181299749,"number":910,"title":"Error #3780 in Painter.configureBackBuffer()","user":{"login":"tconkling","id":709022,"avatar_url":"https://avatars2.githubusercontent.com/u/709022?v=4","gravatar_id":"","url":"https://api.github.com/users/tconkling","html_url":"https://github.com/tconkling","followers_url":"https://api.github.com/users/tconkling/followers","following_url":"https://api.github.com/users/tconkling/following{/other_user}","gists_url":"https://api.github.com/users/tconkling/gists{/gist_id}","starred_url":"https://api.github.com/users/tconkling/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tconkling/subscriptions","organizations_url":"https://api.github.com/users/tconkling/orgs","repos_url":"https://api.github.com/users/tconkling/repos","events_url":"https://api.github.com/users/tconkling/events{/privacy}","received_events_url":"https://api.github.com/users/tconkling/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2016-10-06T00:40:47Z","updated_at":"2017-01-04T14:55:20Z","closed_at":"2016-10-06T17:32:05Z","author_association":"CONTRIBUTOR","body":"In the latest build of my game, a Windows tester is seeing this error occasionally:\n\n```\nError: Error #3780\n        at starling.rendering::Painter/configureBackBuffer()\n        at starling.core::Starling/updateViewPort()\n        at starling.core::Starling/onContextRestored()\n```\n\nWhen this happens, the only way he can recover is by entering the Windows Task Manager and force-exiting the game.\n\nAccording to the web, error 3780 means \"Requested width of backbuffer is not in allowed range 32 to 16384\".\n\nStrangely, this is happening when the tester is loading a game from the main menu - this involves binding some textures to the GPU, but shouldn't ever involve a context loss/restore, at least as far as I can tell.\n\nThis has happened to the same tester twice today. It's never happened to me or anyone else, and nothing dramatic has changed in the game, so I'm inclined to blame it on crappy GPU drivers - but I wanted to run this by everyone here in the chance somebody has insight into what's going on?\n\nFWIW, the tester is running the game in fullscreen mode.\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/910/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/909","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/909/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/909/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/909/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/909","id":181084132,"number":909,"title":"Shared instance of DistanceFieldStyle causes an error","user":{"login":"jarkkosyrjala","id":1029627,"avatar_url":"https://avatars3.githubusercontent.com/u/1029627?v=4","gravatar_id":"","url":"https://api.github.com/users/jarkkosyrjala","html_url":"https://github.com/jarkkosyrjala","followers_url":"https://api.github.com/users/jarkkosyrjala/followers","following_url":"https://api.github.com/users/jarkkosyrjala/following{/other_user}","gists_url":"https://api.github.com/users/jarkkosyrjala/gists{/gist_id}","starred_url":"https://api.github.com/users/jarkkosyrjala/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jarkkosyrjala/subscriptions","organizations_url":"https://api.github.com/users/jarkkosyrjala/orgs","repos_url":"https://api.github.com/users/jarkkosyrjala/repos","events_url":"https://api.github.com/users/jarkkosyrjala/events{/privacy}","received_events_url":"https://api.github.com/users/jarkkosyrjala/received_events","type":"User","site_admin":false},"labels":[{"id":130316,"url":"https://api.github.com/repos/Gamua/Starling-Framework/labels/Bug","name":"Bug","color":"e10c02","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2016-10-05T07:38:01Z","updated_at":"2016-10-07T15:45:48Z","closed_at":"2016-10-07T15:44:45Z","author_association":"NONE","body":"Using an instance of DistanceFieldStyle in more than one TextField causes an exception:\n\n> exception, information=TypeError: Error #2007: Parameter indexBuffer must be non-null.\n\nHere's a small Class to reproduce the error:\n\n```\npackage {\n\nimport starling.display.Sprite;\nimport starling.styles.DistanceFieldStyle;\nimport starling.text.BitmapFont;\nimport starling.text.TextField;\nimport starling.text.TextFormat;\nimport starling.textures.Texture;\n\npublic class TestStarlingDistanceFieldStyle extends Sprite {\n    [Embed(source=\"../assets/fonts/FontXML.fnt\", mimeType=\"application/octet-stream\")]\n    public static const FontXml:Class;\n    [Embed(source=\"../assets/image-assets/FontTexture.png\")]\n    public static const FontTexture:Class;\n\n    public function TestStarlingDistanceFieldStyle() {\n        //shared instance of DistanceFieldStyle does not work properly\n        var distanceFieldStyle:DistanceFieldStyle=new DistanceFieldStyle();\n\n        //setup font\n        var texture:Texture = Texture.fromEmbeddedAsset(FontTexture);\n        var xml:XML = XML(new FontXml());\n        var bitmapFont:BitmapFont = new BitmapFont(texture, xml);\n        var fontName:String=bitmapFont.name;\n        TextField.registerCompositor(bitmapFont,fontName);\n\n        var textFormat:TextFormat=new TextFormat(fontName,62,0xFF0000)\n\n        var textField1:TextField = new TextField(500, 100, \"I love Starling\",textFormat);\n        textField1.style=distanceFieldStyle;\n        addChild(textField1);\n\n        var textField2:TextField = new TextField(500, 100, \"I love Starling\",textFormat);\n        textField2.y=100;\n        //below line causes error: exception, information=TypeError: Error #2007: Parameter indexBuffer must be non-null.\n        textField2.style=distanceFieldStyle; //works if changed to new DistanceFieldStyle();\n        addChild(textField2);\n    }\n}\n}\n```\n\nObvious workaround is to use unique instance of DistanceFieldStyle for each TextField, but it should be possible to use shared instance of DistanceFieldStyle.\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/909/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/908","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/908/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/908/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/908/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/908","id":181078904,"number":908,"title":"Texture.fromNetStream does not function as described","user":{"login":"kevinfoley","id":7231744,"avatar_url":"https://avatars2.githubusercontent.com/u/7231744?v=4","gravatar_id":"","url":"https://api.github.com/users/kevinfoley","html_url":"https://github.com/kevinfoley","followers_url":"https://api.github.com/users/kevinfoley/followers","following_url":"https://api.github.com/users/kevinfoley/following{/other_user}","gists_url":"https://api.github.com/users/kevinfoley/gists{/gist_id}","starred_url":"https://api.github.com/users/kevinfoley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kevinfoley/subscriptions","organizations_url":"https://api.github.com/users/kevinfoley/orgs","repos_url":"https://api.github.com/users/kevinfoley/repos","events_url":"https://api.github.com/users/kevinfoley/events{/privacy}","received_events_url":"https://api.github.com/users/kevinfoley/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2016-10-05T07:02:18Z","updated_at":"2016-10-05T09:13:05Z","closed_at":"2016-10-05T07:09:39Z","author_association":"CONTRIBUTOR","body":"When Starling 1.7 was released, you recommended creating video textures via this method:\n\n```\nvar nc:NetConnection = new NetConnection();\nnc.connect(null);\n\nvar file:File = File.applicationDirectory.resolvePath(\"lolcat.m4v\");\nvar ns:NetStream = new NetStream(nc);\nns.play(file.url);\n\nvar texture:Texture = Texture.fromNetStream(ns, 1, function():void\n{\n    addChild(new Image(texture));\n});\n```\n\nUsing AIR 23 and Starling 2.1, this method works fine on desktops, but does not work on iOS, because the anonymous function is never called, and the Image is never created and added.\n\nNow (according to Starling docs) you recommend this method:\n\n```\nvar nc:NetConnection = new NetConnection();\nnc.connect(null);\n\nvar ns:NetStream = new NetStream(nc);\nvar texture:Texture = Texture.fromNetStream(ns, 1, function():void\n{\n    addChild(new Image(texture));\n});\n\nvar file:File = File.applicationDirectory.resolvePath(\"bugs-bunny.m4v\");\nns.play(file.url);\n```\n\nThis method does not appear to work on iOS _or_ desktops. The anonymous function is never called.\n\nHas the syntax changed again?\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/908/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/907","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/907/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/907/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/907/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/907","id":180247461,"number":907,"title":"starling.utils.Pool.as - Null pointer exception","user":{"login":"ZeratulDev","id":22539794,"avatar_url":"https://avatars2.githubusercontent.com/u/22539794?v=4","gravatar_id":"","url":"https://api.github.com/users/ZeratulDev","html_url":"https://github.com/ZeratulDev","followers_url":"https://api.github.com/users/ZeratulDev/followers","following_url":"https://api.github.com/users/ZeratulDev/following{/other_user}","gists_url":"https://api.github.com/users/ZeratulDev/gists{/gist_id}","starred_url":"https://api.github.com/users/ZeratulDev/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ZeratulDev/subscriptions","organizations_url":"https://api.github.com/users/ZeratulDev/orgs","repos_url":"https://api.github.com/users/ZeratulDev/repos","events_url":"https://api.github.com/users/ZeratulDev/events{/privacy}","received_events_url":"https://api.github.com/users/ZeratulDev/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2016-09-30T08:23:58Z","updated_at":"2016-10-03T13:16:15Z","closed_at":"2016-10-03T13:15:28Z","author_association":"NONE","body":"This method checks sPoints but pop() from sPoints3D.\nCause Nullpointer sometimes\n\n```\n        public static function getPoint3D(x:Number = 0, y:Number = 0, z:Number = 0):Vector3D\n        {\n            if (sPoints.length == 0) return new Vector3D(x, y, z);\n            else\n            {\n                var point:Vector3D = sPoints3D.pop();\n                point.x = x; point.y = y; point.z = z;\n                return point;\n            }\n        }\n```\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/907/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/906","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/906/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/906/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/906/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/906","id":179238047,"number":906,"title":"Disposing & Recreating Starling broken","user":{"login":"neuronix","id":219800,"avatar_url":"https://avatars1.githubusercontent.com/u/219800?v=4","gravatar_id":"","url":"https://api.github.com/users/neuronix","html_url":"https://github.com/neuronix","followers_url":"https://api.github.com/users/neuronix/followers","following_url":"https://api.github.com/users/neuronix/following{/other_user}","gists_url":"https://api.github.com/users/neuronix/gists{/gist_id}","starred_url":"https://api.github.com/users/neuronix/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/neuronix/subscriptions","organizations_url":"https://api.github.com/users/neuronix/orgs","repos_url":"https://api.github.com/users/neuronix/repos","events_url":"https://api.github.com/users/neuronix/events{/privacy}","received_events_url":"https://api.github.com/users/neuronix/received_events","type":"User","site_admin":false},"labels":[{"id":130316,"url":"https://api.github.com/repos/Gamua/Starling-Framework/labels/Bug","name":"Bug","color":"e10c02","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2016-09-26T14:05:38Z","updated_at":"2016-09-27T19:46:44Z","closed_at":"2016-09-27T10:06:36Z","author_association":"NONE","body":"Hi Daniel,\n\nWe have a \"reboot\" sequence in our apps that we use after changing language or after an error for example. We get rid of the current data, remove all handlers and dispose Starling etc. Then we start all up again.\n\nThis worked fine on the initial 2.0 release and the issue appeared with 2.01, can't say which commit because I noticed when I took the dev version on Github.\n\nHerewith a test case: https://gist.github.com/neuronix/d81431c278eea4849a64580c78748150\n\nIssue 1. After \"rebooting\", Image does not display at all..\n\nIssue 2. You have to wait a frame between disposing starling children and disposing the starling instance (workaround is easy though)\n\nThanks for your help Daniel!\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/906/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/905","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/905/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/905/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/905/events","html_url":"https://github.com/Gamua/Starling-Framework/pull/905","id":179028573,"number":905,"title":"More data consistency","user":{"login":"EhsanMarufi","id":22413487,"avatar_url":"https://avatars2.githubusercontent.com/u/22413487?v=4","gravatar_id":"","url":"https://api.github.com/users/EhsanMarufi","html_url":"https://github.com/EhsanMarufi","followers_url":"https://api.github.com/users/EhsanMarufi/followers","following_url":"https://api.github.com/users/EhsanMarufi/following{/other_user}","gists_url":"https://api.github.com/users/EhsanMarufi/gists{/gist_id}","starred_url":"https://api.github.com/users/EhsanMarufi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/EhsanMarufi/subscriptions","organizations_url":"https://api.github.com/users/EhsanMarufi/orgs","repos_url":"https://api.github.com/users/EhsanMarufi/repos","events_url":"https://api.github.com/users/EhsanMarufi/events{/privacy}","received_events_url":"https://api.github.com/users/EhsanMarufi/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2016-09-24T12:46:22Z","updated_at":"2016-09-26T06:53:31Z","closed_at":"2016-09-26T06:52:36Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/pulls/905","html_url":"https://github.com/Gamua/Starling-Framework/pull/905","diff_url":"https://github.com/Gamua/Starling-Framework/pull/905.diff","patch_url":"https://github.com/Gamua/Starling-Framework/pull/905.patch"},"body":"The \"texture\" is a through-constructor initialized immutable field. The case of which the two arguments are <code>null</code> is the \"default\" approach to utilize the \"minimal\" embedded font, and the \"typical\" case is when the two arguments are provided correctly. The <code>else</code> statement is to assert for data consistency and considering the current implementation, there is no chance to \"set\" the \"texture\" nor the \"XML\" later, so both of them need to be provided \"not <code>null</code>\" initially. However, only the specific case of the <code>texture != null && fontXml == null</code> is evaluated leaving the case of <code>texture == null && fontXml != null</code> unregarded! To compensate the issue, change the criteria to <code>texture == null || fontXml == null</code> to regard the both of the \"wrong\" cases :)\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/905/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/904","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/904/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/904/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/904/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/904","id":178724240,"number":904,"title":"AIR 23 fatal graphics glitches on Mac","user":{"login":"tconkling","id":709022,"avatar_url":"https://avatars2.githubusercontent.com/u/709022?v=4","gravatar_id":"","url":"https://api.github.com/users/tconkling","html_url":"https://github.com/tconkling","followers_url":"https://api.github.com/users/tconkling/followers","following_url":"https://api.github.com/users/tconkling/following{/other_user}","gists_url":"https://api.github.com/users/tconkling/gists{/gist_id}","starred_url":"https://api.github.com/users/tconkling/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tconkling/subscriptions","organizations_url":"https://api.github.com/users/tconkling/orgs","repos_url":"https://api.github.com/users/tconkling/repos","events_url":"https://api.github.com/users/tconkling/events{/privacy}","received_events_url":"https://api.github.com/users/tconkling/received_events","type":"User","site_admin":false},"labels":[{"id":64488856,"url":"https://api.github.com/repos/Gamua/Starling-Framework/labels/Bug%20in%20Flash/AIR","name":"Bug in Flash/AIR","color":"5319e7","default":false}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2016-09-22T21:23:49Z","updated_at":"2016-09-23T18:25:52Z","closed_at":null,"author_association":"CONTRIBUTOR","body":"I just updated to AIR SDK 23, and now my game exhibits this awesomeness (see attached movie).\n\n![screen shot 2016-09-22 at 2 19 44 pm](https://cloud.githubusercontent.com/assets/709022/18766556/a5d4cdde-80cf-11e6-83cf-73cb8e67a625.png)\n\nI make use of FragmentFilters and MeshEffects in my game (a glow filter around the character, and a custom MeshEffect for coloring bits of characters). I think these are related to my woes: when filters are being updated frequently (for example, when I'm moving the character around), the flickering happens more frequently.\n\nAfter a short while, some or all of the game's textures disappear. A short while after that there's generally some error thrown during a render pass:\n\n```\nArgumentError: Error #3672\n        at starling.rendering::VertexData/createVertexBuffer()\n        at starling.rendering::Effect/uploadVertexData()\n        at starling.display::MeshBatch/syncVertexBuffer()\n        at starling.display::MeshBatch/render()\n        at starling.rendering::Painter/drawBatch()\n        at BatchProcessor/finishBatch()\n        at starling.rendering::Painter/finishFrame()\n        at starling.core::Starling/render()\n        at starling.core::Starling/nextFrame()\n        at starling.core::Starling/onEnterFrame()\n```\n\nor:\n\n```\nRangeError: Error #2006\n        at starling.rendering::VertexData/copyTo()\n        at starling.styles::MeshStyle/batchVertexData()\n        at starling.display::MeshBatch/addMesh()\n        at BatchProcessor/addMesh()\n        at starling.rendering::Painter/drawFromCache()\n        at starling.display::DisplayObjectContainer/render()\n        at StatsDisplay/render()\n```\n\n[air23_is_broken.mov.zip](https://github.com/Gamua/Starling-Framework/files/488372/air23_is_broken.mov.zip)\n\nThis is happening on my Mac, which I just updated to macOS Sierra. Not sure if the OS update has anything to do with it. It doesn't _seem_ to be an issue on Windows, iOS, or Android, though I need to do more testing.\n\nDropping back to AIR 22 fixes things.\n\nGood lord, Adobe.\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/904/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/903","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/903/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/903/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/903/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/903","id":177184698,"number":903,"title":"Add autoSize to TextOptions","user":{"login":"neuronix","id":219800,"avatar_url":"https://avatars1.githubusercontent.com/u/219800?v=4","gravatar_id":"","url":"https://api.github.com/users/neuronix","html_url":"https://github.com/neuronix","followers_url":"https://api.github.com/users/neuronix/followers","following_url":"https://api.github.com/users/neuronix/following{/other_user}","gists_url":"https://api.github.com/users/neuronix/gists{/gist_id}","starred_url":"https://api.github.com/users/neuronix/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/neuronix/subscriptions","organizations_url":"https://api.github.com/users/neuronix/orgs","repos_url":"https://api.github.com/users/neuronix/repos","events_url":"https://api.github.com/users/neuronix/events{/privacy}","received_events_url":"https://api.github.com/users/neuronix/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2016-09-15T13:58:45Z","updated_at":"2016-09-22T08:52:43Z","closed_at":"2016-09-22T08:39:00Z","author_association":"NONE","body":"Custom TextCompositors may require knowing if the textfield has autoSize enabled. One can cheat and look at height == 10000 but that's dirty.\n\nTextOptions seems to have been made for this, so autoSize should be added to the list of values.\n\nThanks Daniel!\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/903/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/902","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/902/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/902/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/902/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/902","id":176525500,"number":902,"title":"TextField vertical alignment differs between bitmap font and ttf","user":{"login":"Lucker01","id":22161275,"avatar_url":"https://avatars1.githubusercontent.com/u/22161275?v=4","gravatar_id":"","url":"https://api.github.com/users/Lucker01","html_url":"https://github.com/Lucker01","followers_url":"https://api.github.com/users/Lucker01/followers","following_url":"https://api.github.com/users/Lucker01/following{/other_user}","gists_url":"https://api.github.com/users/Lucker01/gists{/gist_id}","starred_url":"https://api.github.com/users/Lucker01/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Lucker01/subscriptions","organizations_url":"https://api.github.com/users/Lucker01/orgs","repos_url":"https://api.github.com/users/Lucker01/repos","events_url":"https://api.github.com/users/Lucker01/events{/privacy}","received_events_url":"https://api.github.com/users/Lucker01/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":12,"created_at":"2016-09-13T01:26:27Z","updated_at":"2016-09-19T06:50:32Z","closed_at":"2016-09-15T09:24:01Z","author_association":"NONE","body":"**Problem:**\nWhen using bitmap fonts, the TextField vertically aligns text slightly higher than True type fonts (see attached pic for sample output showing vertical alignments of Top, Center, and Bottom).\n\n![bitmap font bug](https://cloud.githubusercontent.com/assets/22161275/18458237/5013a234-7914-11e6-96e1-9f426534313f.png)\n\n**Sample code:**\n for center vert alignment (I created a test bitmap font (using Littera) of Verdana for the sake of comparing here):\n`var normalFont:TextField = new TextField(120, 30, \"Hello world\");`\n`normalFont.format.setTo(\"Verdana\", 12, 0x000000, Align.CENTER, Align.CENTER);`\n`var bitmapFont:TextField = new TextField(120, 30, \"Hello world\");`\n`bitmapFont.format.setTo(\"VerdanaTest\", 12, 0x000000, Align.CENTER, Align.CENTER);`\n\n**Issue versions:**\nIt does this using 2.0.1 swc (and I have pulled the src from here today and tried with the same result)\n\n**Add'n info:**\nThis is an issue for me when trying to make \"slim\" textfields (so the height of the textfield is just slightly larger than the text) because the bitmap font requires more space because of the extra bottom padding it appears to be adding. It is particularly noticeable when the textfield border = true.\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/902/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/901","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/901/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/901/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/901/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/901","id":175764859,"number":901,"title":"Exposing default text compositor for extending TextField","user":{"login":"neuronix","id":219800,"avatar_url":"https://avatars1.githubusercontent.com/u/219800?v=4","gravatar_id":"","url":"https://api.github.com/users/neuronix","html_url":"https://github.com/neuronix","followers_url":"https://api.github.com/users/neuronix/followers","following_url":"https://api.github.com/users/neuronix/following{/other_user}","gists_url":"https://api.github.com/users/neuronix/gists{/gist_id}","starred_url":"https://api.github.com/users/neuronix/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/neuronix/subscriptions","organizations_url":"https://api.github.com/users/neuronix/orgs","repos_url":"https://api.github.com/users/neuronix/repos","events_url":"https://api.github.com/users/neuronix/events{/privacy}","received_events_url":"https://api.github.com/users/neuronix/received_events","type":"User","site_admin":false},"labels":[{"id":130317,"url":"https://api.github.com/repos/Gamua/Starling-Framework/labels/Feature","name":"Feature","color":"009800","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2016-09-08T14:13:20Z","updated_at":"2016-09-09T09:00:50Z","closed_at":"2016-09-08T15:32:13Z","author_association":"NONE","body":"Hi Daniel,\n\nAdding the TrueTypeCompositor and moving the rendering of text outside of the textfield class is a great move in starling 2.0. However, the compositor is private and cannot be replaced for easy extending. \n\nI created a TLFCompositor that uses the TLF framework to render RTL correctly with starling.  However, to use it, I had the modify the TextField class.\n\nEnabling TLF support is then as simple as TextField.defaultCompositor = new TLFCompositor(); (and including the required .swcs of course). \n\nYou can see both classes and example here: https://gist.github.com/neuronix/009fa134fcfbf80a3e9ab1fdf924a5fa\n\nThis might not be how you would do it, but I would like to ask for you to allow some sort of access to the compositor for easy extending.\n\nThanks again for all your hard work Daniel ! :)\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/901/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/900","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/900/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/900/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/900/events","html_url":"https://github.com/Gamua/Starling-Framework/pull/900","id":175703245,"number":900,"title":"Added Mesh.fromPolygon static helper method","user":{"login":"kadiryazgan","id":2729020,"avatar_url":"https://avatars1.githubusercontent.com/u/2729020?v=4","gravatar_id":"","url":"https://api.github.com/users/kadiryazgan","html_url":"https://github.com/kadiryazgan","followers_url":"https://api.github.com/users/kadiryazgan/followers","following_url":"https://api.github.com/users/kadiryazgan/following{/other_user}","gists_url":"https://api.github.com/users/kadiryazgan/gists{/gist_id}","starred_url":"https://api.github.com/users/kadiryazgan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kadiryazgan/subscriptions","organizations_url":"https://api.github.com/users/kadiryazgan/orgs","repos_url":"https://api.github.com/users/kadiryazgan/repos","events_url":"https://api.github.com/users/kadiryazgan/events{/privacy}","received_events_url":"https://api.github.com/users/kadiryazgan/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-09-08T09:12:43Z","updated_at":"2016-09-09T09:00:08Z","closed_at":"2016-09-09T08:51:35Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/pulls/900","html_url":"https://github.com/Gamua/Starling-Framework/pull/900","diff_url":"https://github.com/Gamua/Starling-Framework/pull/900.diff","patch_url":"https://github.com/Gamua/Starling-Framework/pull/900.patch"},"body":"","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/900/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/899","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/899/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/899/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/899/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/899","id":175437853,"number":899,"title":"Applying mask post scale has unexpected results","user":{"login":"Binklebonk","id":16984998,"avatar_url":"https://avatars2.githubusercontent.com/u/16984998?v=4","gravatar_id":"","url":"https://api.github.com/users/Binklebonk","html_url":"https://github.com/Binklebonk","followers_url":"https://api.github.com/users/Binklebonk/followers","following_url":"https://api.github.com/users/Binklebonk/following{/other_user}","gists_url":"https://api.github.com/users/Binklebonk/gists{/gist_id}","starred_url":"https://api.github.com/users/Binklebonk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Binklebonk/subscriptions","organizations_url":"https://api.github.com/users/Binklebonk/orgs","repos_url":"https://api.github.com/users/Binklebonk/repos","events_url":"https://api.github.com/users/Binklebonk/events{/privacy}","received_events_url":"https://api.github.com/users/Binklebonk/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2016-09-07T08:03:07Z","updated_at":"2016-09-08T06:21:55Z","closed_at":"2016-09-08T01:56:38Z","author_association":"NONE","body":"Hi Daniel.  When applying a mask in this order (scale, then mask) I encounter an issue where the mask is too small:\n\n`image.scale = 0.5;`\n`image.mask = new Quad(image.width, image.height, 0x000000);`\n\nHowever, if I apply it in this order (mask, then scale), it's ok:\n\n`image.mask = new Quad(image.width, image.height, 0x000000);`\n`image.scale = 0.5;`\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/899/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/898","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/898/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/898/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/898/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/898","id":174308101,"number":898,"title":"Feature: Support uploadFromBitmapDataAsync() introduced in AIR 23","user":{"login":"harry248","id":2579166,"avatar_url":"https://avatars1.githubusercontent.com/u/2579166?v=4","gravatar_id":"","url":"https://api.github.com/users/harry248","html_url":"https://github.com/harry248","followers_url":"https://api.github.com/users/harry248/followers","following_url":"https://api.github.com/users/harry248/following{/other_user}","gists_url":"https://api.github.com/users/harry248/gists{/gist_id}","starred_url":"https://api.github.com/users/harry248/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/harry248/subscriptions","organizations_url":"https://api.github.com/users/harry248/orgs","repos_url":"https://api.github.com/users/harry248/repos","events_url":"https://api.github.com/users/harry248/events{/privacy}","received_events_url":"https://api.github.com/users/harry248/received_events","type":"User","site_admin":false},"labels":[{"id":130317,"url":"https://api.github.com/repos/Gamua/Starling-Framework/labels/Feature","name":"Feature","color":"009800","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":28,"created_at":"2016-08-31T15:43:22Z","updated_at":"2017-01-24T16:12:13Z","closed_at":"2016-11-16T12:51:15Z","author_association":"NONE","body":"Please see https://github.com/BowlerHatLLC/feathers/issues/1447, where I mistakenly thought this would have to be added to feathers.\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/898/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/897","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/897/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/897/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/897/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/897","id":173460330,"number":897,"title":"TextField#style property get/set is inconsistent","user":{"login":"Maligan","id":1263469,"avatar_url":"https://avatars0.githubusercontent.com/u/1263469?v=4","gravatar_id":"","url":"https://api.github.com/users/Maligan","html_url":"https://github.com/Maligan","followers_url":"https://api.github.com/users/Maligan/followers","following_url":"https://api.github.com/users/Maligan/following{/other_user}","gists_url":"https://api.github.com/users/Maligan/gists{/gist_id}","starred_url":"https://api.github.com/users/Maligan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Maligan/subscriptions","organizations_url":"https://api.github.com/users/Maligan/orgs","repos_url":"https://api.github.com/users/Maligan/repos","events_url":"https://api.github.com/users/Maligan/events{/privacy}","received_events_url":"https://api.github.com/users/Maligan/received_events","type":"User","site_admin":false},"labels":[{"id":130316,"url":"https://api.github.com/repos/Gamua/Starling-Framework/labels/Bug","name":"Bug","color":"e10c02","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2016-08-26T14:01:27Z","updated_at":"2016-09-01T12:33:48Z","closed_at":"2016-09-01T12:32:55Z","author_association":"NONE","body":"Houston, we have a small problem:\n\n``` as3\nvar textField:TextField = new TextField(...)\ntextField.style = new DistanceFieldStyle();\nDistanceFieldStyle(textField.style); // Type Coercion failed: cannot convert MeshStyle to DistanceFieldStyle.\n```\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/897/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/896","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/896/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/896/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/896/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/896","id":173251512,"number":896,"title":"KeyboardEvent didnt work.","user":{"login":"AvetisSargsian","id":8079621,"avatar_url":"https://avatars1.githubusercontent.com/u/8079621?v=4","gravatar_id":"","url":"https://api.github.com/users/AvetisSargsian","html_url":"https://github.com/AvetisSargsian","followers_url":"https://api.github.com/users/AvetisSargsian/followers","following_url":"https://api.github.com/users/AvetisSargsian/following{/other_user}","gists_url":"https://api.github.com/users/AvetisSargsian/gists{/gist_id}","starred_url":"https://api.github.com/users/AvetisSargsian/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AvetisSargsian/subscriptions","organizations_url":"https://api.github.com/users/AvetisSargsian/orgs","repos_url":"https://api.github.com/users/AvetisSargsian/repos","events_url":"https://api.github.com/users/AvetisSargsian/events{/privacy}","received_events_url":"https://api.github.com/users/AvetisSargsian/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2016-08-25T16:34:05Z","updated_at":"2016-08-26T09:09:51Z","closed_at":"2016-08-26T09:09:51Z","author_association":"NONE","body":"Hello Daniel,I'd like to thank you for great job you did!\nRecently I migrated from starling 1.8 to 2.0.1 and notice that my code which duty to handle keyboard events stopped working. I cheked, whenever I roll back my working brunch to starling 1.8 it work again.\nHere is my code:\n\n```\n    public class SceneMediator extends AbstractMediator\n{\n    public function SceneMediator()\n    {\n        super();\n        nativeVIew.addEventListener(KeyboardEvent.KEY_DOWN,onKeyDown);\n    }\n\n    override public function dispose():void\n    {\n        nativeVIew.removeEventListener(KeyboardEvent.KEY_DOWN,onKeyDown);\n        super.dispose();\n    }\n\n    override protected function setNativeVIew():AbstractView\n    {\n        return new Scene();\n    }\n\n    protected function onKeyboardBACK():void {}\n\n    private function onKeyDown(event:KeyboardEvent):void\n    {\n        switch(event.keyCode)\n        {\n            case Keyboard.ESCAPE:\n            case Keyboard.BACK:\n                onKeyboardBACK();\n                event.preventDefault();\n                break;\n            default:\n                break;\n        }\n    }\n}\n```\n\nIt is never enter in \" function onKeyDown(event:KeyboardEvent):void \"\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/896/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/895","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/895/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/895/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/895/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/895","id":172676851,"number":895,"title":"Incorrect transformation (via width/height) while rotation","user":{"login":"Maligan","id":1263469,"avatar_url":"https://avatars0.githubusercontent.com/u/1263469?v=4","gravatar_id":"","url":"https://api.github.com/users/Maligan","html_url":"https://github.com/Maligan","followers_url":"https://api.github.com/users/Maligan/followers","following_url":"https://api.github.com/users/Maligan/following{/other_user}","gists_url":"https://api.github.com/users/Maligan/gists{/gist_id}","starred_url":"https://api.github.com/users/Maligan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Maligan/subscriptions","organizations_url":"https://api.github.com/users/Maligan/orgs","repos_url":"https://api.github.com/users/Maligan/repos","events_url":"https://api.github.com/users/Maligan/events{/privacy}","received_events_url":"https://api.github.com/users/Maligan/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2016-08-23T11:36:57Z","updated_at":"2016-08-24T09:31:53Z","closed_at":"2016-08-24T09:28:17Z","author_association":"NONE","body":"If set width/height of display object while it rotated - display object become invalid transformed:\nI use this code for reproduce error:\n\n``` as3\npackage\n{\n    import flash.display.Sprite;\n\n    import starling.core.Starling;\n\n    public class Main extends Sprite\n    {\n        private var _starling:Starling;\n\n        public function Main()\n        {\n            _starling = new Starling(MainStarling, stage);\n            _starling.start();\n        }\n    }\n}\n\nimport flash.utils.setInterval;\n\nimport starling.core.Starling;\nimport starling.display.Quad;\nimport starling.display.Sprite;\nimport starling.utils.Color;\n\nclass MainStarling extends Sprite\n{\n    private static const SPINNER_SIZE:int = 32;\n\n    private var _spinner:Quad;\n\n    public function MainStarling():void\n    {\n        _spinner = new Quad(SPINNER_SIZE, SPINNER_SIZE, Color.RED);\n        _spinner.alignPivot();\n        _spinner.x = _spinner.y = 100;\n\n        Starling.juggler.tween(_spinner, 1, { repeatCount: 0, rotation: 2*Math.PI });\n        addChild(_spinner);\n\n        setInterval(update, 23); // for example 23...\n    }\n\n    public function update():void\n    {\n        _spinner.width = SPINNER_SIZE;\n        _spinner.height = SPINNER_SIZE;\n    }\n}\n```\n\nExpected:\n![ss 2016-08-23 at 02 28 47](https://cloud.githubusercontent.com/assets/1263469/17890361/2f112ac4-693e-11e6-8e83-127152e6072d.png)\n\nResult: (distortion can be very various!)\n![ss 2016-08-23 at 02 29 50](https://cloud.githubusercontent.com/assets/1263469/17890362/2f147904-693e-11e6-99c0-adfc990e06e0.png)\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/895/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/894","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/894/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/894/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/894/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/894","id":172413255,"number":894,"title":"Potential issue with broadcastEvent()","user":{"login":"b005t3r","id":757150,"avatar_url":"https://avatars3.githubusercontent.com/u/757150?v=4","gravatar_id":"","url":"https://api.github.com/users/b005t3r","html_url":"https://github.com/b005t3r","followers_url":"https://api.github.com/users/b005t3r/followers","following_url":"https://api.github.com/users/b005t3r/following{/other_user}","gists_url":"https://api.github.com/users/b005t3r/gists{/gist_id}","starred_url":"https://api.github.com/users/b005t3r/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/b005t3r/subscriptions","organizations_url":"https://api.github.com/users/b005t3r/orgs","repos_url":"https://api.github.com/users/b005t3r/repos","events_url":"https://api.github.com/users/b005t3r/events{/privacy}","received_events_url":"https://api.github.com/users/b005t3r/received_events","type":"User","site_admin":false},"labels":[{"id":42482767,"url":"https://api.github.com/repos/Gamua/Starling-Framework/labels/Discussion","name":"Discussion","color":"fbca04","default":false}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2016-08-22T10:01:38Z","updated_at":"2016-08-26T07:28:30Z","closed_at":null,"author_association":"NONE","body":"This situation I'm describing here caused problems with my project, where I copied your event system, Daniel. It probably doesn't have any effect on Starling currently, but it may cause problems in the future.\n\nIn DisplayObjectContainer you have two methods: `broadcastEvent()` and `getChildEventListeners()`. What they do is firing a given event for the parent and each children, but they always do it in the same order - parent is always first, children are always second. This is OK for event like `ADDED_TO_STAGE`, but is backward for `REMOVED_FROM_STAGE` where the parent notifies the rest of the system that it has been removed and the children still haven't done that. For me it was an issue, so I fixed it by adding a `bottomUp` parameter to both of this methods and changed `getChildEventListeners()` like so:\n\n``` as3\n    internal function getChildEventListeners(object:Node, eventType:String, listeners:Vector.<Node>, bottomUp:Boolean):void {\n        var container:ContainerNode = object as ContainerNode;\n\n        if(! bottomUp && object.hasEventListener(eventType))\n            listeners[listeners.length] = object; // avoiding 'push'\n\n        if(container) {\n            var children:Vector.<Node> = container._nodes;\n            var numChildren:int = children.length;\n\n            for(var i:int = 0; i < numChildren; ++i)\n                getChildEventListeners(children[i], eventType, listeners, bottomUp);\n        }\n\n        if(bottomUp && object.hasEventListener(eventType))\n            listeners[listeners.length] = object; // avoiding 'push'\n    }\n```\n\nso it reverses the order listeners are gathered if `bottomUp` equals `true`, which is when a container is removed from the stage.\n\nAs I said, probably not a problem at the moment, but a logical change which should break anything. Give it a thought.\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/894/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/893","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/893/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/893/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/893/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/893","id":171196829,"number":893,"title":"Polygon mesh sprites","user":{"login":"pSi-X","id":1802047,"avatar_url":"https://avatars0.githubusercontent.com/u/1802047?v=4","gravatar_id":"","url":"https://api.github.com/users/pSi-X","html_url":"https://github.com/pSi-X","followers_url":"https://api.github.com/users/pSi-X/followers","following_url":"https://api.github.com/users/pSi-X/following{/other_user}","gists_url":"https://api.github.com/users/pSi-X/gists{/gist_id}","starred_url":"https://api.github.com/users/pSi-X/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pSi-X/subscriptions","organizations_url":"https://api.github.com/users/pSi-X/orgs","repos_url":"https://api.github.com/users/pSi-X/repos","events_url":"https://api.github.com/users/pSi-X/events{/privacy}","received_events_url":"https://api.github.com/users/pSi-X/received_events","type":"User","site_admin":false},"labels":[{"id":130317,"url":"https://api.github.com/repos/Gamua/Starling-Framework/labels/Feature","name":"Feature","color":"009800","default":false}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":18,"created_at":"2016-08-15T15:42:01Z","updated_at":"2016-08-26T07:16:56Z","closed_at":null,"author_association":"NONE","body":"Texture Pack implemented the ability to create polygon mesh sprites:\nhttps://www.codeandweb.com/blog/2015/10/01/cocos2d-x-performance-optimization\nAre there any plans in this Starling 2?\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/893/reactions","total_count":4,"+1":4,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/892","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/892/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/892/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/892/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/892","id":171147981,"number":892,"title":"scale, scaleX, scaleY property of Image, reset width and height","user":{"login":"kolobok55","id":10562199,"avatar_url":"https://avatars1.githubusercontent.com/u/10562199?v=4","gravatar_id":"","url":"https://api.github.com/users/kolobok55","html_url":"https://github.com/kolobok55","followers_url":"https://api.github.com/users/kolobok55/followers","following_url":"https://api.github.com/users/kolobok55/following{/other_user}","gists_url":"https://api.github.com/users/kolobok55/gists{/gist_id}","starred_url":"https://api.github.com/users/kolobok55/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kolobok55/subscriptions","organizations_url":"https://api.github.com/users/kolobok55/orgs","repos_url":"https://api.github.com/users/kolobok55/repos","events_url":"https://api.github.com/users/kolobok55/events{/privacy}","received_events_url":"https://api.github.com/users/kolobok55/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2016-08-15T10:45:06Z","updated_at":"2016-08-16T09:34:43Z","closed_at":"2016-08-16T09:34:43Z","author_association":"NONE","body":"``` as3\npackage\n{\n    import flash.display.BitmapData;\n    import flash.geom.Rectangle;\n\n    import starling.display.Image;\n    import starling.display.Sprite;\n    import starling.textures.Texture;\n\n    public class StartMin extends Sprite\n    {\n        public function StartMin()\n        {\n            super();\n\n            var btmp:BitmapData = new BitmapData( 32, 32, false, 0xff0000 );\n            btmp.fillRect( new Rectangle( 8, 8, 16, 16 ), 0x0000ff )\n            var txtr:Texture = Texture.fromBitmapData(btmp);\n\n            var img:Image = new Image(txtr);\n            img.scale9Grid = new Rectangle( 8, 8, 16, 16 );\n            img.width = 200;\n            img.height = 200;\n            addChild( img );\n\n            var img1:Image = new Image(txtr);\n            img1.scale9Grid = new Rectangle( 8, 8, 16, 16 );\n            img1.x = 250;\n            img1.width = 200;\n            img1.height = 200;\n            img1.scale = 1;\n            addChild( img1 );\n        }\n    }\n}\n```\n\nsecond Image hasn't 200х200 size\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/892/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/891","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/891/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/891/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/891/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/891","id":170803751,"number":891,"title":"Feature: Add bezier curves to Starling tweens","user":{"login":"tangerinepop","id":6341905,"avatar_url":"https://avatars2.githubusercontent.com/u/6341905?v=4","gravatar_id":"","url":"https://api.github.com/users/tangerinepop","html_url":"https://github.com/tangerinepop","followers_url":"https://api.github.com/users/tangerinepop/followers","following_url":"https://api.github.com/users/tangerinepop/following{/other_user}","gists_url":"https://api.github.com/users/tangerinepop/gists{/gist_id}","starred_url":"https://api.github.com/users/tangerinepop/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tangerinepop/subscriptions","organizations_url":"https://api.github.com/users/tangerinepop/orgs","repos_url":"https://api.github.com/users/tangerinepop/repos","events_url":"https://api.github.com/users/tangerinepop/events{/privacy}","received_events_url":"https://api.github.com/users/tangerinepop/received_events","type":"User","site_admin":false},"labels":[{"id":130317,"url":"https://api.github.com/repos/Gamua/Starling-Framework/labels/Feature","name":"Feature","color":"009800","default":false}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":13,"created_at":"2016-08-12T05:53:50Z","updated_at":"2016-09-26T06:02:24Z","closed_at":null,"author_association":"NONE","body":"Add bezier curves and custom features to Starling tweens similar to what is available through Tweenmax.\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/891/reactions","total_count":4,"+1":4,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/890","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/890/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/890/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/890/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/890","id":170344744,"number":890,"title":"VertexData.setPoint() retrieves attribute offset from list every time when non-standard attribute is used?","user":{"login":"vroad","id":396351,"avatar_url":"https://avatars2.githubusercontent.com/u/396351?v=4","gravatar_id":"","url":"https://api.github.com/users/vroad","html_url":"https://github.com/vroad","followers_url":"https://api.github.com/users/vroad/followers","following_url":"https://api.github.com/users/vroad/following{/other_user}","gists_url":"https://api.github.com/users/vroad/gists{/gist_id}","starred_url":"https://api.github.com/users/vroad/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vroad/subscriptions","organizations_url":"https://api.github.com/users/vroad/orgs","repos_url":"https://api.github.com/users/vroad/repos","events_url":"https://api.github.com/users/vroad/events{/privacy}","received_events_url":"https://api.github.com/users/vroad/received_events","type":"User","site_admin":false},"labels":[{"id":42482767,"url":"https://api.github.com/repos/Gamua/Starling-Framework/labels/Discussion","name":"Discussion","color":"fbca04","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2016-08-10T07:08:31Z","updated_at":"2016-09-21T13:51:44Z","closed_at":"2016-09-21T13:51:44Z","author_association":"NONE","body":"Doesn't this cause `setPoint()` to run slower? Or, is this not so slow on AS3?\n\nI retrieve offset by myself before manipulating vertices, so I don't think it's inconvenient even if second parameter is an attribute offset, not a String.\n\nhttps://github.com/Gamua/Starling-Framework/blob/870f0eade51a6a57df07302f27575edfb835cc8c/starling/src/starling/rendering/VertexData.as#L420\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/890/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/889","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/889/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/889/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/889/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/889","id":170239386,"number":889,"title":"Flickering issue with filters","user":{"login":"tconkling","id":709022,"avatar_url":"https://avatars2.githubusercontent.com/u/709022?v=4","gravatar_id":"","url":"https://api.github.com/users/tconkling","html_url":"https://github.com/tconkling","followers_url":"https://api.github.com/users/tconkling/followers","following_url":"https://api.github.com/users/tconkling/following{/other_user}","gists_url":"https://api.github.com/users/tconkling/gists{/gist_id}","starred_url":"https://api.github.com/users/tconkling/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tconkling/subscriptions","organizations_url":"https://api.github.com/users/tconkling/orgs","repos_url":"https://api.github.com/users/tconkling/repos","events_url":"https://api.github.com/users/tconkling/events{/privacy}","received_events_url":"https://api.github.com/users/tconkling/received_events","type":"User","site_admin":false},"labels":[{"id":130316,"url":"https://api.github.com/repos/Gamua/Starling-Framework/labels/Bug","name":"Bug","color":"e10c02","default":false}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2016-08-09T18:38:02Z","updated_at":"2016-09-22T13:08:36Z","closed_at":null,"author_association":"CONTRIBUTOR","body":"I'm seeing a bizarre problem in my game: under certain circumstances, applying a ColorMatrixFilter to a display object causes other DisplayObjects with custom MeshEffects to flicker between \"custom MeshEffect applied\" and \"custom MeshEffect not applied\" states.\n\nThis issue _only occurs_ when running in Chrome or on iOS - it _doesn't_ occur in a bundled \"captive AIR runtime\" version, or when running directly in Flash Player on my (Mac) desktop, or when running in Safari (which uses a different plugin than Chrome for Flash content).\n\nBecause it's a hard issue to explain, here's a movie demonstrating the issue: \n[starling_flicker.mov.zip](https://github.com/Gamua/Starling-Framework/files/409658/starling_flicker.mov.zip)\n\nIn this movie, I'm toggling the checkmark button in the bottom-right corner of the screen between its enabled and disabled states. When it's disabled, its grayscale effect is achieved with a `ColorMatrixFilter.adjustSaturation(-1)` filter applied to it.\n\nThe player portraits at the top of the screen, and in the lower left corner, are dynamically recolored with a custom MeshEffect class that implements an overlay blend mode. You can see that, while the checkmark is greyscale, the recolored bits flicker between non-recolored greyscale and properly recolored, MeshEffect-is-being-applied states. When the checkmark's ColorMatrixFilter is removed, the recolored portraits appear as expected.\n\nAgain, this _only_ happens when running in Chrome and on iOS, which makes me think I'm exceeding some sort of Context3DProfile-specific threshold, or something of the sort?\n\nI realize this is possibly a game-specific bug that's going to be tough for anyone to reproduce (though I can work on getting a smaller test case). But I'm throwing it out there in case anyone has any ideas?\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/889/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/888","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/888/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/888/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/888/events","html_url":"https://github.com/Gamua/Starling-Framework/pull/888","id":169758629,"number":888,"title":"Proportionally scaled corner's dimensions in 'scale9Grid'","user":{"login":"Liklainy","id":20872986,"avatar_url":"https://avatars1.githubusercontent.com/u/20872986?v=4","gravatar_id":"","url":"https://api.github.com/users/Liklainy","html_url":"https://github.com/Liklainy","followers_url":"https://api.github.com/users/Liklainy/followers","following_url":"https://api.github.com/users/Liklainy/following{/other_user}","gists_url":"https://api.github.com/users/Liklainy/gists{/gist_id}","starred_url":"https://api.github.com/users/Liklainy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Liklainy/subscriptions","organizations_url":"https://api.github.com/users/Liklainy/orgs","repos_url":"https://api.github.com/users/Liklainy/repos","events_url":"https://api.github.com/users/Liklainy/events{/privacy}","received_events_url":"https://api.github.com/users/Liklainy/received_events","type":"User","site_admin":false},"labels":[{"id":130317,"url":"https://api.github.com/repos/Gamua/Starling-Framework/labels/Feature","name":"Feature","color":"009800","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2016-08-06T18:03:45Z","updated_at":"2016-08-12T16:11:10Z","closed_at":"2016-08-11T13:31:12Z","author_association":"NONE","pull_request":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/pulls/888","html_url":"https://github.com/Gamua/Starling-Framework/pull/888","diff_url":"https://github.com/Gamua/Starling-Framework/pull/888.diff","patch_url":"https://github.com/Gamua/Starling-Framework/pull/888.patch"},"body":"When migrating from 1.8 to 2.0.1 Scale3Image is replaced by Image with scale9Grid.\nFeathers's migration guide suggests that it should be done like this:\n![screen shot 2016-08-06 at 19 30 53](https://cloud.githubusercontent.com/assets/20872986/17458213/ee606802-5c1b-11e6-9c6f-9e09a2d59326.png)\n\"For horizontal scaling, set the grid's height to the full height of the texture\"\nBut when scaled vertically it's behaviour is not the same as Scale3Image.\nGot:\n![screen shot 2016-08-06 at 20 03 49](https://cloud.githubusercontent.com/assets/20872986/17458229/6cb809ee-5c1c-11e6-84e9-fd1dd763c140.png)\nWanted:\n![screen shot 2016-08-06 at 20 03 19](https://cloud.githubusercontent.com/assets/20872986/17458234/89705802-5c1c-11e6-9d3c-ec213817e1d7.png)\nSo this grid is not what i wanted, and i think the right grid should be like this ( with height == 0 ):\n![screen shot 2016-08-06 at 19 31 12](https://cloud.githubusercontent.com/assets/20872986/17458299/f2e05fa2-5c1d-11e6-8231-b048a1ad9c36.png)\nBut when an image with this grid is scaled vertically texture coordinates are messed up.\n![screen shot 2016-08-06 at 20 53 01](https://cloud.githubusercontent.com/assets/20872986/17458410/2f2a0628-5c20-11e6-8efc-26e40f579a74.png)\nI tried to fix this by adding proportional scaling for corners. \n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/888/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/887","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/887/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/887/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/887/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/887","id":168824207,"number":887,"title":"BugReport about Starling.isNativeDisplayObjectEmpty","user":{"login":"leefj","id":12420137,"avatar_url":"https://avatars0.githubusercontent.com/u/12420137?v=4","gravatar_id":"","url":"https://api.github.com/users/leefj","html_url":"https://github.com/leefj","followers_url":"https://api.github.com/users/leefj/followers","following_url":"https://api.github.com/users/leefj/following{/other_user}","gists_url":"https://api.github.com/users/leefj/gists{/gist_id}","starred_url":"https://api.github.com/users/leefj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leefj/subscriptions","organizations_url":"https://api.github.com/users/leefj/orgs","repos_url":"https://api.github.com/users/leefj/repos","events_url":"https://api.github.com/users/leefj/events{/privacy}","received_events_url":"https://api.github.com/users/leefj/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2016-08-02T08:09:31Z","updated_at":"2016-08-12T01:14:20Z","closed_at":"2016-08-11T06:55:34Z","author_association":"NONE","body":"Hi,\nI Use the Starling.current.nativeOverlay add a loading movieclip to show a loading progress.\nthe movieclip is exported in a swc file witch is created in flash profession.\nit is so strange,the container.numChildren return 8, when i add to watch expression\n\ncontainer.getChildAt(0)\ncontainer.getChildAt(1)\ncontainer.getChildAt(2)\n\nall returns null.\n\nso the last row of Starling.isNativeDisplayObjectEmpty\nreport\nTypeError: Error #1009: Cannot access a property or method of a null object reference.\n\nis it a bug of starling?\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/887/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/886","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/886/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/886/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/886/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/886","id":166932784,"number":886,"title":"ContentScaleFactor alters appearance of scale9grid corners","user":{"login":"kevinfoley","id":7231744,"avatar_url":"https://avatars2.githubusercontent.com/u/7231744?v=4","gravatar_id":"","url":"https://api.github.com/users/kevinfoley","html_url":"https://github.com/kevinfoley","followers_url":"https://api.github.com/users/kevinfoley/followers","following_url":"https://api.github.com/users/kevinfoley/following{/other_user}","gists_url":"https://api.github.com/users/kevinfoley/gists{/gist_id}","starred_url":"https://api.github.com/users/kevinfoley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kevinfoley/subscriptions","organizations_url":"https://api.github.com/users/kevinfoley/orgs","repos_url":"https://api.github.com/users/kevinfoley/repos","events_url":"https://api.github.com/users/kevinfoley/events{/privacy}","received_events_url":"https://api.github.com/users/kevinfoley/received_events","type":"User","site_admin":false},"labels":[{"id":42482767,"url":"https://api.github.com/repos/Gamua/Starling-Framework/labels/Discussion","name":"Discussion","color":"fbca04","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2016-07-21T22:31:22Z","updated_at":"2016-08-16T09:00:42Z","closed_at":"2016-08-16T09:00:42Z","author_association":"CONTRIBUTOR","body":"The corners of an Image with scale9Grid applied are affected by scaleFactor in an undesirable way. Fidelity is lost if the scaleFactor is greater than 1, even after correcting the dimensions of the scale9Grid.\n\n![scale9 corners change](https://cloud.githubusercontent.com/assets/7231744/17040960/a26f9934-4f57-11e6-8aa3-5c7117d066b0.png)\n\nSample code (use with attached image)\n\n```\npublic class Game extends Sprite {\n\n    private var am1:AssetManager;\n    private var am1Loaded:Boolean = false;\n    private var am2:AssetManager;\n    private var am2Loaded:Boolean = false;\n\n    public function Game() {\n        am1 = new AssetManager(1);\n        am2 = new AssetManager(2);\n        am1.enqueue(\"Button.png\");\n        am2.enqueue(\"Button.png\");\n\n        am1.loadQueue(am1Progress);\n        am2.loadQueue(am2Progress);\n    }\n\n    private function am1Progress(value:Number):void {\n        if (value >= 1) {\n            am1Loaded = true;\n            if (am2Loaded) {\n                doDemo();\n            }\n        }\n    }\n\n    private function am2Progress(value:Number):void {\n        if (value >= 1) {\n            am2Loaded = true;\n            if (am1Loaded) {\n                doDemo();\n            }\n        }\n    }\n\n    private function doDemo():void {\n        Starling.current.stage.color = 0xffffff;    \n\n        var t1:Texture = am1.getTexture(\"Button\");\n        var t2:Texture = am2.getTexture(\"Button\");\n\n        var image1:Image = new Image(t1);\n        image1.width = 200;\n        image1.height = 80;\n        image1.x = 20;\n        image1.y = 50;\n        image1.scale9Grid = new Rectangle(3, 3, 59, 24);\n        addChild(image1);\n\n        var image2:Image = new Image(t2);\n        image2.width = image1.width;\n        image2.height = image1.height;\n        image2.x = image1.x + image1.width + 50;\n        image2.y = image1.y;\n        image2.scale9Grid = new Rectangle(2, 2, 26, 9);\n        addChild(image2);\n    }\n}\n```\n\nButton.png:\n![button](https://cloud.githubusercontent.com/assets/7231744/17040966/a89d8672-4f57-11e6-8d56-7d1b4ac14654.png)\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/886/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/885","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/885/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/885/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/885/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/885","id":166846545,"number":885,"title":"Bug with BitmapFont","user":{"login":"subdan","id":410293,"avatar_url":"https://avatars3.githubusercontent.com/u/410293?v=4","gravatar_id":"","url":"https://api.github.com/users/subdan","html_url":"https://github.com/subdan","followers_url":"https://api.github.com/users/subdan/followers","following_url":"https://api.github.com/users/subdan/following{/other_user}","gists_url":"https://api.github.com/users/subdan/gists{/gist_id}","starred_url":"https://api.github.com/users/subdan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/subdan/subscriptions","organizations_url":"https://api.github.com/users/subdan/orgs","repos_url":"https://api.github.com/users/subdan/repos","events_url":"https://api.github.com/users/subdan/events{/privacy}","received_events_url":"https://api.github.com/users/subdan/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2016-07-21T15:20:56Z","updated_at":"2016-07-22T07:04:02Z","closed_at":"2016-07-22T06:54:25Z","author_association":"NONE","body":"I want to modify the BitmapFont class to dynamically generate some characters. I want to display a fraction instead of special symbols. For example: I want to display this text:\nSome Ӑ text\nas:\n![screenshot_2](https://cloud.githubusercontent.com/assets/410293/17028212/7ddcb558-4f6f-11e6-8a7c-f85bb8bbb922.png)\n\nInside parseFontXml method I found a loop:\n\n```\n for each (var charElement:XML in fontXml.chars.char)\n            {\n                var id:int = parseInt(charElement.@id);\n                var xOffset:Number  = parseFloat(charElement.@xoffset)  / scale;\n                var yOffset:Number  = parseFloat(charElement.@yoffset)  / scale;\n                var xAdvance:Number = parseFloat(charElement.@xadvance) / scale;\n\n                var region:Rectangle = new Rectangle();\n                region.x = parseFloat(charElement.@x) / scale + frameX;\n                region.y = parseFloat(charElement.@y) / scale + frameY;\n                region.width  = parseFloat(charElement.@width)  / scale;\n                region.height = parseFloat(charElement.@height) / scale;\n\n                var texture:Texture = Texture.fromTexture(mTexture, region);\n                var bitmapChar:BitmapChar = new BitmapChar(id, texture, xOffset, yOffset, xAdvance); \n                addChar(id, bitmapChar);\n            }\n```\n\nI added a condition:\n\n```\n                if (id == 1232) // I want to replace the symbol Ӑ with dynamic texture\n                {\n                    texture = Texture.empty(100,100); // I create a new empty texture (for testing)\n                }\n```\n\nI see the next picture:\n![screenshot_1](https://cloud.githubusercontent.com/assets/410293/17027937/94ddcfe0-4f6e-11e6-8c12-2befcae7c4f1.png)\n\nIt's a TextField:\n`var tf:TextField = new TextField(400, 100, \"Some Ӑ text\");`\nI replace Ӑ symbol with empty Texture.\n\nWhy I see a font texture atlas instead of empty space?\n![screenshot_3](https://cloud.githubusercontent.com/assets/410293/17028385/1b6f8d36-4f70-11e6-9e32-6a3e3861bb02.png)\n\nIn the future I will replace Texture.fromEmpty to RenderTexture. Inside RenderTexture I will combine 3 Image: numerator, denominator and separator.\n\nThis bug appears in all versions of Starling.\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/885/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/884","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/884/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/884/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/884/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/884","id":166705837,"number":884,"title":"Factor out default mesh style implementation from MestStyle class","user":{"login":"henke37","id":4971363,"avatar_url":"https://avatars0.githubusercontent.com/u/4971363?v=4","gravatar_id":"","url":"https://api.github.com/users/henke37","html_url":"https://github.com/henke37","followers_url":"https://api.github.com/users/henke37/followers","following_url":"https://api.github.com/users/henke37/following{/other_user}","gists_url":"https://api.github.com/users/henke37/gists{/gist_id}","starred_url":"https://api.github.com/users/henke37/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/henke37/subscriptions","organizations_url":"https://api.github.com/users/henke37/orgs","repos_url":"https://api.github.com/users/henke37/repos","events_url":"https://api.github.com/users/henke37/events{/privacy}","received_events_url":"https://api.github.com/users/henke37/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-07-20T23:30:02Z","updated_at":"2016-07-21T09:21:15Z","closed_at":"2016-07-21T09:21:15Z","author_association":"NONE","body":"Starling obviously provides a default MeshStyle. It has some default features, such as color tinting vertexes. But, not all of those features will be applicable to all styles. As such, the default style should be a subclass of an abstract base class that only contains features shared by all styles.\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/884/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/883","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/883/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/883/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/883/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/883","id":166037147,"number":883,"title":"Request: Add file extension to AssetManager's verbose traces","user":{"login":"Snky","id":7985031,"avatar_url":"https://avatars0.githubusercontent.com/u/7985031?v=4","gravatar_id":"","url":"https://api.github.com/users/Snky","html_url":"https://github.com/Snky","followers_url":"https://api.github.com/users/Snky/followers","following_url":"https://api.github.com/users/Snky/following{/other_user}","gists_url":"https://api.github.com/users/Snky/gists{/gist_id}","starred_url":"https://api.github.com/users/Snky/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Snky/subscriptions","organizations_url":"https://api.github.com/users/Snky/orgs","repos_url":"https://api.github.com/users/Snky/repos","events_url":"https://api.github.com/users/Snky/events{/privacy}","received_events_url":"https://api.github.com/users/Snky/received_events","type":"User","site_admin":false},"labels":[{"id":130317,"url":"https://api.github.com/repos/Gamua/Starling-Framework/labels/Feature","name":"Feature","color":"009800","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2016-07-18T07:51:06Z","updated_at":"2016-07-20T09:01:07Z","closed_at":"2016-07-19T07:37:15Z","author_association":"NONE","body":"What do you think?\nI would personally like to know the file extension of the asset the verbose is telling me about. \n( am.verbose = Capabilities.isDebugger )\n( AssetManager.as Line 576 )\n\nExample:\n[AssetManager] Enqueuing 'sTiles'\n[AssetManager] Enqueuing 'sTiles'\n[AssetManager] Enqueuing 'sUtils'\n[AssetManager] Enqueuing 'sUtils'\n[AssetManager] Adding texture 'sUtils'\n[AssetManager] Adding texture 'sTiles'\n[AssetManager] Adding texture atlas 'sTiles'\n[AssetManager] Removing texture 'sTiles'\n[AssetManager] Adding texture atlas 'sUtils'\n[AssetManager] Removing texture 'sUtils'\n\nI found this misleading, as I thought somewhere I'm loading the assets twice over, but it's one trace for the XML and one for the ATF/PNG/ETC.?\n\nBut even if I worked that out, I still would not understand by reading the verbose, what was being removed, but I'm going to assume it was the XMLs.\n\nAlso, I don't understand why sUtils for example had been added as a texture, and also as an atlas, but I'm not sure if my naming convention made the verbose traces appear vague. \n(sUtils.atf / sUtils.xml, sUtils is of type TextureAtlas, same applies for sTiles).\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/883/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}}],"meta":{"x-ratelimit-limit":"5000","x-ratelimit-remaining":"4763","x-ratelimit-reset":"1507250212","x-github-request-id":"D58B:572B:DC2CE8:1D186D6:59D6C720","x-github-media-type":"github.squirrel-girl-preview","link":"<https://api.github.com/repositories/2097941/issues?state=all&page=5>; rel=\"next\", <https://api.github.com/repositories/2097941/issues?state=all&page=34>; rel=\"last\", <https://api.github.com/repositories/2097941/issues?state=all&page=1>; rel=\"first\", <https://api.github.com/repositories/2097941/issues?state=all&page=3>; rel=\"prev\"","etag":"\"a09b439045c093cd92f750437b4643e1\"","status":"200 OK"}}
