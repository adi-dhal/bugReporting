{"data":[{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/162","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/162/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/162/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/162/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/162","id":6595105,"number":162,"title":"EventDispatcher - Assignment within conditional","user":{"login":"osro","id":556353,"avatar_url":"https://avatars1.githubusercontent.com/u/556353?v=4","gravatar_id":"","url":"https://api.github.com/users/osro","html_url":"https://github.com/osro","followers_url":"https://api.github.com/users/osro/followers","following_url":"https://api.github.com/users/osro/following{/other_user}","gists_url":"https://api.github.com/users/osro/gists{/gist_id}","starred_url":"https://api.github.com/users/osro/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/osro/subscriptions","organizations_url":"https://api.github.com/users/osro/orgs","repos_url":"https://api.github.com/users/osro/repos","events_url":"https://api.github.com/users/osro/events{/privacy}","received_events_url":"https://api.github.com/users/osro/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2012-09-01T12:35:59Z","updated_at":"2012-09-02T14:09:53Z","closed_at":"2012-09-02T14:06:54Z","author_association":"NONE","body":"The while loop has assignment within. I doubt that is correct?\n\nhttps://github.com/PrimaryFeather/Starling-Framework/blob/master/starling/src/starling/events/EventDispatcher.as#L157\n\n``` actionscript\n        private function bubble(event:Event):void\n        {\n            // we determine the bubble chain before starting to invoke the listeners.\n            // that way, changes done by the listeners won't affect the bubble chain.\n\n            var chain:Vector.<EventDispatcher>;\n            var element:DisplayObject = this as DisplayObject;\n            var length:int = 1;\n\n            if (sBubbleChains.length > 0) { chain = sBubbleChains.pop(); chain[0] = element; }\n            else chain = new <EventDispatcher>[element];\n\n            while (element = element.parent) // HERE HERE HERE\n                chain[length++] = element;\n\n            for (var i:int=0; i<length; ++i)\n            {\n                var stopPropagation:Boolean = chain[i].invoke(event);\n                if (stopPropagation) break;\n            }\n\n            chain.length = 0;\n            sBubbleChains.push(chain);\n        }\n```\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/162/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/161","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/161/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/161/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/161/events","html_url":"https://github.com/Gamua/Starling-Framework/pull/161","id":6595016,"number":161,"title":"Ambiguous reference to Texture","user":{"login":"osro","id":556353,"avatar_url":"https://avatars1.githubusercontent.com/u/556353?v=4","gravatar_id":"","url":"https://api.github.com/users/osro","html_url":"https://github.com/osro","followers_url":"https://api.github.com/users/osro/followers","following_url":"https://api.github.com/users/osro/following{/other_user}","gists_url":"https://api.github.com/users/osro/gists{/gist_id}","starred_url":"https://api.github.com/users/osro/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/osro/subscriptions","organizations_url":"https://api.github.com/users/osro/orgs","repos_url":"https://api.github.com/users/osro/repos","events_url":"https://api.github.com/users/osro/events{/privacy}","received_events_url":"https://api.github.com/users/osro/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2012-09-01T12:12:37Z","updated_at":"2014-06-12T21:34:04Z","closed_at":"2012-09-02T14:13:32Z","author_association":"NONE","pull_request":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/pulls/161","html_url":"https://github.com/Gamua/Starling-Framework/pull/161","diff_url":"https://github.com/Gamua/Starling-Framework/pull/161.diff","patch_url":"https://github.com/Gamua/Starling-Framework/pull/161.patch"},"body":"\"Ambiguous reference to Texture\" prevents Starling to compile in Flash Builder 4.7.\n\nFlash Builder 4.7 seems to be more strict with these situations, so I removed import line for flash.display3D.textures.Texture. This is not needed as all references are using the whole qualified class name. After that it will compile, also in 4.6.\n\nhttp://forum.starling-framework.org/topic/flash-builder-47-and-textureas\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/161/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/160","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/160/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/160/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/160/events","html_url":"https://github.com/Gamua/Starling-Framework/pull/160","id":6592991,"number":160,"title":"Change the way to initialize Quad & add .svn for gitignore","user":{"login":"area80","id":1935444,"avatar_url":"https://avatars1.githubusercontent.com/u/1935444?v=4","gravatar_id":"","url":"https://api.github.com/users/area80","html_url":"https://github.com/area80","followers_url":"https://api.github.com/users/area80/followers","following_url":"https://api.github.com/users/area80/following{/other_user}","gists_url":"https://api.github.com/users/area80/gists{/gist_id}","starred_url":"https://api.github.com/users/area80/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/area80/subscriptions","organizations_url":"https://api.github.com/users/area80/orgs","repos_url":"https://api.github.com/users/area80/repos","events_url":"https://api.github.com/users/area80/events{/privacy}","received_events_url":"https://api.github.com/users/area80/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2012-09-01T04:06:19Z","updated_at":"2013-06-13T07:58:56Z","closed_at":"2013-06-13T07:58:56Z","author_association":"NONE","pull_request":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/pulls/160","html_url":"https://github.com/Gamua/Starling-Framework/pull/160","diff_url":"https://github.com/Gamua/Starling-Framework/pull/160.diff","patch_url":"https://github.com/Gamua/Starling-Framework/pull/160.patch"},"body":"Add initVertexData function for initializing mVertexData instead of creating it in constructor.\nHaving this will open the opportunity to change the way to initialize\nmVertexData by overriding the function. It is useful when creating a tile like or\nparticle like quad. For an example, we could use a global vertex data\ninstead of creating a new one for every quad which makes it faster and\nlighter with less effort.\n\nAdd .svn to .gitignore\nFor people who uses svn with git as version control.\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/160/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/159","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/159/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/159/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/159/events","html_url":"https://github.com/Gamua/Starling-Framework/pull/159","id":6557248,"number":159,"title":"ASC2.0 support: fixed \"Ambiguous reference to Texture\"","user":{"login":"fzzr-","id":888526,"avatar_url":"https://avatars2.githubusercontent.com/u/888526?v=4","gravatar_id":"","url":"https://api.github.com/users/fzzr-","html_url":"https://github.com/fzzr-","followers_url":"https://api.github.com/users/fzzr-/followers","following_url":"https://api.github.com/users/fzzr-/following{/other_user}","gists_url":"https://api.github.com/users/fzzr-/gists{/gist_id}","starred_url":"https://api.github.com/users/fzzr-/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fzzr-/subscriptions","organizations_url":"https://api.github.com/users/fzzr-/orgs","repos_url":"https://api.github.com/users/fzzr-/repos","events_url":"https://api.github.com/users/fzzr-/events{/privacy}","received_events_url":"https://api.github.com/users/fzzr-/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2012-08-30T15:59:57Z","updated_at":"2014-07-29T10:06:46Z","closed_at":"2012-09-02T14:11:20Z","author_association":"NONE","pull_request":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/pulls/159","html_url":"https://github.com/Gamua/Starling-Framework/pull/159","diff_url":"https://github.com/Gamua/Starling-Framework/pull/159.diff","patch_url":"https://github.com/Gamua/Starling-Framework/pull/159.patch"},"body":"","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/159/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/158","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/158/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/158/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/158/events","html_url":"https://github.com/Gamua/Starling-Framework/pull/158","id":6548069,"number":158,"title":"Try to update texture update atf data could set async type","user":{"login":"Lepozuk","id":1825851,"avatar_url":"https://avatars1.githubusercontent.com/u/1825851?v=4","gravatar_id":"","url":"https://api.github.com/users/Lepozuk","html_url":"https://github.com/Lepozuk","followers_url":"https://api.github.com/users/Lepozuk/followers","following_url":"https://api.github.com/users/Lepozuk/following{/other_user}","gists_url":"https://api.github.com/users/Lepozuk/gists{/gist_id}","starred_url":"https://api.github.com/users/Lepozuk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Lepozuk/subscriptions","organizations_url":"https://api.github.com/users/Lepozuk/orgs","repos_url":"https://api.github.com/users/Lepozuk/repos","events_url":"https://api.github.com/users/Lepozuk/events{/privacy}","received_events_url":"https://api.github.com/users/Lepozuk/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2012-08-30T08:41:21Z","updated_at":"2014-07-17T06:23:10Z","closed_at":"2012-11-21T15:26:32Z","author_association":"NONE","pull_request":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/pulls/158","html_url":"https://github.com/Gamua/Starling-Framework/pull/158","diff_url":"https://github.com/Gamua/Starling-Framework/pull/158.diff","patch_url":"https://github.com/Gamua/Starling-Framework/pull/158.patch"},"body":"Hi, Daniel:\nI try to update texture update atf data could set async type and not break the elder version support.\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/158/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/157","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/157/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/157/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/157/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/157","id":6538140,"number":157,"title":"Filters cause issue with contentScaleFactor","user":{"login":"pchertok","id":1420525,"avatar_url":"https://avatars3.githubusercontent.com/u/1420525?v=4","gravatar_id":"","url":"https://api.github.com/users/pchertok","html_url":"https://github.com/pchertok","followers_url":"https://api.github.com/users/pchertok/followers","following_url":"https://api.github.com/users/pchertok/following{/other_user}","gists_url":"https://api.github.com/users/pchertok/gists{/gist_id}","starred_url":"https://api.github.com/users/pchertok/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pchertok/subscriptions","organizations_url":"https://api.github.com/users/pchertok/orgs","repos_url":"https://api.github.com/users/pchertok/repos","events_url":"https://api.github.com/users/pchertok/events{/privacy}","received_events_url":"https://api.github.com/users/pchertok/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2012-08-29T20:42:18Z","updated_at":"2012-09-06T18:26:58Z","closed_at":"2012-09-06T18:26:58Z","author_association":"NONE","body":"If you scale your viewport up and then apply a filter to an image, the filter will render but at the texture's original size, not the size applied via contentScaleFactor.\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/157/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/156","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/156/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/156/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/156/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/156","id":6491520,"number":156,"title":"DropShadow Filter at wrong position issue.","user":{"login":"Lepozuk","id":1825851,"avatar_url":"https://avatars1.githubusercontent.com/u/1825851?v=4","gravatar_id":"","url":"https://api.github.com/users/Lepozuk","html_url":"https://github.com/Lepozuk","followers_url":"https://api.github.com/users/Lepozuk/followers","following_url":"https://api.github.com/users/Lepozuk/following{/other_user}","gists_url":"https://api.github.com/users/Lepozuk/gists{/gist_id}","starred_url":"https://api.github.com/users/Lepozuk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Lepozuk/subscriptions","organizations_url":"https://api.github.com/users/Lepozuk/orgs","repos_url":"https://api.github.com/users/Lepozuk/repos","events_url":"https://api.github.com/users/Lepozuk/events{/privacy}","received_events_url":"https://api.github.com/users/Lepozuk/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2012-08-28T06:04:44Z","updated_at":"2013-11-01T12:34:56Z","closed_at":"2012-08-28T12:07:27Z","author_association":"NONE","body":"Hi, Daniel:\nGreat  work on Filters implements.\nAnd I found a bug.\nand blew is the reproduce code.\nhope will fix quickly.\n\ntips: You can drag the background to check the issue.\n\nBTW:\nThe dropshadow filter is a little different with  traditional flash.\nI can't set the strength for it. \nSo I can't make the effect like the stroke border  such as  use the code(new DropShadowFilter(0,0,0,1,2,2,8));\n\nThanks again for the great work.\n\nDocument Class Starling_DropShadow_bug.as:\n\n```\npackage\n{\n    import flash.display.Bitmap;\n    import flash.display.Loader;\n    import flash.display.LoaderInfo;\n    import flash.display.Sprite;\n    import flash.display.Stage;\n    import flash.events.Event;\n    import flash.net.URLRequest;\n\n    import starling.core.Starling;\n    import starling.events.Event;\n\n    public class Starling_DropShadow_bug extends Sprite\n    {\n        private var _bird:Bitmap;\n        private var _background:Bitmap;\n\n        public function Starling_DropShadow_bug()\n        {\n            super();\n            var myStarling:Starling = new Starling(StarlingStage, stage, null, null, \"auto\", \"baseline\");\n            myStarling.addEventListener(starling.events.Event.ROOT_CREATED, initAsset);\n            myStarling.start();\n        }\n\n        private function initAsset(e:starling.events.Event):void\n        {\n            Starling.current.showStats = true;\n            var loader:Loader = new Loader();\n            loader.contentLoaderInfo.addEventListener(flash.events.Event.COMPLETE, onBirdLoaded);\n            loader.load(new URLRequest(\"http://gamua.com/img/starling/title-logo.png\"));\n        }\n\n        private function onBirdLoaded(e:flash.events.Event):void\n        {\n            _bird = (e.currentTarget as LoaderInfo).content as Bitmap;\n            var loader:Loader = new Loader();\n            loader.contentLoaderInfo.addEventListener(flash.events.Event.COMPLETE, onBackgroundLoaded);\n            loader.load(new URLRequest(\"http://gamua.com/img/starling/roundabout/featured-games.jpg\"));\n        }\n\n        protected function onBackgroundLoaded(e:flash.events.Event):void\n        {\n            _background = (e.currentTarget as LoaderInfo).content as Bitmap;\n\n            (Starling.current.root as StarlingStage).init(_bird, _background);\n        }            \n\n    }\n}\n```\n\nClass StarlingStage.as\n\n```\npackage\n{\n    import flash.display.Bitmap;\n    import flash.geom.Point;\n\n    import starling.display.DisplayObject;\n    import starling.display.Image;\n    import starling.display.Sprite;\n    import starling.events.Touch;\n    import starling.events.TouchEvent;\n    import starling.events.TouchPhase;\n    import starling.filters.BlurFilter;\n    import starling.textures.Texture;\n\n\n    public class StarlingStage extends Sprite\n    {\n        private var _container:Sprite;\n        private var _currentDragTarget:DisplayObject;\n        private var _dragOffset:Point;\n\n        private var background:Image;\n\n        public function StarlingStage()\n        {\n\n        }\n\n        public function init(birdData:Bitmap, backgroundData:Bitmap):void\n        {\n\n            var birdImage:Image = new Image(Texture.fromBitmap(birdData));\n            birdImage.x = 100;\n            birdImage.y = 100;\n            birdImage.filter = BlurFilter.createDropShadow(0,0,0xff0000,1,3);\n            background = new Image(Texture.fromBitmap(backgroundData));\n\n            _container = new Sprite();\n            _container.addChild(background);\n            _container.addChild(birdImage);\n\n            birdImage.addEventListener(TouchEvent.TOUCH, onTouchHandle);\n            background.addEventListener(TouchEvent.TOUCH, onTouchHandle);\n            addEventListener(TouchEvent.TOUCH, onStageTouchHandle);\n            addChild(_container);\n        }\n\n        private function onStageTouchHandle(e:TouchEvent):void\n        {\n            var touch:Touch = e.getTouch(this);\n            if(touch.phase == TouchPhase.ENDED)\n            {\n                _currentDragTarget = null;\n                return;\n            }\n\n            if(_currentDragTarget)\n            {\n                if(background == _currentDragTarget)\n                {\n                    _container.x = touch.globalX+_dragOffset.x;\n                    _container.y = touch.globalY+_dragOffset.y;\n\n                }\n                else\n                {\n                    _currentDragTarget.y = touch.globalY+_dragOffset.y;\n                    _currentDragTarget.x = touch.globalX+_dragOffset.x;\n                }\n\n            }\n        }\n\n        private function onTouchHandle(e:TouchEvent):void\n        {\n            var target:DisplayObject = e.currentTarget as DisplayObject;\n            var touch:Touch = e.getTouch(target);\n\n            if(touch)\n            {\n                switch(touch.phase)\n                {\n                    case TouchPhase.BEGAN:\n                    {\n                        _currentDragTarget = target;\n                        _dragOffset = new Point(target.x-touch.globalX, target.y-touch.globalY);\n                        break;\n                    }\n                }\n            }\n        }\n    }\n}\n```\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/156/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/155","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/155/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/155/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/155/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/155","id":6476645,"number":155,"title":"Juggler removal bug","user":{"login":"andrewstart","id":1816311,"avatar_url":"https://avatars3.githubusercontent.com/u/1816311?v=4","gravatar_id":"","url":"https://api.github.com/users/andrewstart","html_url":"https://github.com/andrewstart","followers_url":"https://api.github.com/users/andrewstart/followers","following_url":"https://api.github.com/users/andrewstart/following{/other_user}","gists_url":"https://api.github.com/users/andrewstart/gists{/gist_id}","starred_url":"https://api.github.com/users/andrewstart/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrewstart/subscriptions","organizations_url":"https://api.github.com/users/andrewstart/orgs","repos_url":"https://api.github.com/users/andrewstart/repos","events_url":"https://api.github.com/users/andrewstart/events{/privacy}","received_events_url":"https://api.github.com/users/andrewstart/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2012-08-27T15:34:48Z","updated_at":"2012-08-28T11:11:13Z","closed_at":"2012-08-28T11:10:37Z","author_association":"NONE","body":"If an object is removed from a juggler during its advanceTime() call, and there is a null in the list before it, then the Juggler will immediately add the object back to the list.\n\nThe simplest way to fix it would be to change line 142:\n\n``` AS3\nmObjects[currentIndex] = mObjects[i];\n```\n\n or to move the entire `if (currentIndex != i)` block above the advanceTime() call. Both methods will leave a null value in the list to get cleaned up the next time through, though, if that is a concern.\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/155/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/154","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/154/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/154/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/154/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/154","id":6429423,"number":154,"title":"uploadCompressedTextureFromByteArray  async flag","user":{"login":"Oldes","id":454805,"avatar_url":"https://avatars3.githubusercontent.com/u/454805?v=4","gravatar_id":"","url":"https://api.github.com/users/Oldes","html_url":"https://github.com/Oldes","followers_url":"https://api.github.com/users/Oldes/followers","following_url":"https://api.github.com/users/Oldes/following{/other_user}","gists_url":"https://api.github.com/users/Oldes/gists{/gist_id}","starred_url":"https://api.github.com/users/Oldes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Oldes/subscriptions","organizations_url":"https://api.github.com/users/Oldes/orgs","repos_url":"https://api.github.com/users/Oldes/repos","events_url":"https://api.github.com/users/Oldes/events{/privacy}","received_events_url":"https://api.github.com/users/Oldes/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2012-08-24T09:33:56Z","updated_at":"2013-06-13T08:02:45Z","closed_at":"2013-06-13T08:02:45Z","author_association":"NONE","body":"nativeTexture.uploadCompressedTextureFromByteArray has async flag which is by default false and there is no way how to set it to true in the Texture.uploadAtfData method. Is there any reason for that?\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/154/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/153","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/153/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/153/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/153/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/153","id":6381729,"number":153,"title":"Starling 1.2+ missing runtime texture compression feature?","user":{"login":"jamikado","id":826630,"avatar_url":"https://avatars2.githubusercontent.com/u/826630?v=4","gravatar_id":"","url":"https://api.github.com/users/jamikado","html_url":"https://github.com/jamikado","followers_url":"https://api.github.com/users/jamikado/followers","following_url":"https://api.github.com/users/jamikado/following{/other_user}","gists_url":"https://api.github.com/users/jamikado/gists{/gist_id}","starred_url":"https://api.github.com/users/jamikado/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jamikado/subscriptions","organizations_url":"https://api.github.com/users/jamikado/orgs","repos_url":"https://api.github.com/users/jamikado/repos","events_url":"https://api.github.com/users/jamikado/events{/privacy}","received_events_url":"https://api.github.com/users/jamikado/received_events","type":"User","site_admin":false},"labels":[{"id":130317,"url":"https://api.github.com/repos/Gamua/Starling-Framework/labels/Feature","name":"Feature","color":"009800","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":39,"created_at":"2012-08-22T16:17:08Z","updated_at":"2013-11-18T15:22:33Z","closed_at":"2013-07-26T11:49:19Z","author_association":"NONE","body":"I realize that the ATF format support is added but when I read Adobe's docs here:\n\nhttp://help.adobe.com/en_US/as3/dev/WS5b3ccc516d4fbf351e63e3d118a9b90204-7d5b.html\n\nSpecifically:\n\n\"Texture compression lets you store texture images in compressed format directly on the GPU, which saves GPU memory and memory bandwidth. Typically, compressed textures are compressed offline and uploaded to the GPU in compressed format. However, Flash Player 11.4 and AIR 3.4 support runtime texture compression, which is useful in certain situations, such as when rendering dynami textures from vector art. To use runtime texture compression, perform the following steps:\n\nCreate the texture object by calling the Context3D.createTexture() method, passing either flash.display3D.Context3DTextureFormat.COMPRESSED or flash.display3D.Context3DTextureFormat.COMPRESSED_ALPHA in the third parameter.\n\nUsing the flash.display3D.textures.Texture instance returned by createTexture(), call either flash.display3D.textures.Texture.uploadFromBitmapData() or flash.display3D.textures.Texture.uploadFromByteArray(). These methods upload and compress the texture in one step.\"\n\nDoesn't this imply that Starling could/should also allow runtime creation of textures that are compressed either from bitmapData or byteArrays when users dynamically need to create textures but that still want to store/use compressed textures on the GPU?\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/153/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/152","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/152/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/152/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/152/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/152","id":6362549,"number":152,"title":"Modify order of advanceTime() calls","user":{"login":"joshtynjala","id":141885,"avatar_url":"https://avatars1.githubusercontent.com/u/141885?v=4","gravatar_id":"","url":"https://api.github.com/users/joshtynjala","html_url":"https://github.com/joshtynjala","followers_url":"https://api.github.com/users/joshtynjala/followers","following_url":"https://api.github.com/users/joshtynjala/following{/other_user}","gists_url":"https://api.github.com/users/joshtynjala/gists{/gist_id}","starred_url":"https://api.github.com/users/joshtynjala/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/joshtynjala/subscriptions","organizations_url":"https://api.github.com/users/joshtynjala/orgs","repos_url":"https://api.github.com/users/joshtynjala/repos","events_url":"https://api.github.com/users/joshtynjala/events{/privacy}","received_events_url":"https://api.github.com/users/joshtynjala/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2012-08-21T21:01:48Z","updated_at":"2012-08-28T08:51:15Z","closed_at":"2012-08-28T08:49:57Z","author_association":"CONTRIBUTOR","body":"In the advanceTime() function in the Starling class, a few things get updated, in the following order:\n\n```\nmStage.advanceTime(passedTime);\nmJuggler.advanceTime(passedTime);\nmTouchProcessor.advanceTime(passedTime);\n```\n\nI would like to suggest moving the mTouchProcessor.advanceTime() call to the beginning (or, at least, before the Juggler). Foxhole validates its components once per frame, triggered by the Juggler. A touch may cause a component's state to change, requiring validation. As it stands now, the visual result of the touch won't be visible until the next frame unless the component is manually validated.\n\nIs this possible, or is there an existing reason that the touches need to be processed last?\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/152/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/151","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/151/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/151/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/151/events","html_url":"https://github.com/Gamua/Starling-Framework/pull/151","id":6355280,"number":151,"title":"Scale the statsDisplay","user":{"login":"fogAndWhisky","id":104370,"avatar_url":"https://avatars2.githubusercontent.com/u/104370?v=4","gravatar_id":"","url":"https://api.github.com/users/fogAndWhisky","html_url":"https://github.com/fogAndWhisky","followers_url":"https://api.github.com/users/fogAndWhisky/followers","following_url":"https://api.github.com/users/fogAndWhisky/following{/other_user}","gists_url":"https://api.github.com/users/fogAndWhisky/gists{/gist_id}","starred_url":"https://api.github.com/users/fogAndWhisky/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fogAndWhisky/subscriptions","organizations_url":"https://api.github.com/users/fogAndWhisky/orgs","repos_url":"https://api.github.com/users/fogAndWhisky/repos","events_url":"https://api.github.com/users/fogAndWhisky/events{/privacy}","received_events_url":"https://api.github.com/users/fogAndWhisky/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2012-08-21T16:28:47Z","updated_at":"2012-08-28T14:38:24Z","closed_at":"2012-08-28T08:45:28Z","author_association":"NONE","pull_request":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/pulls/151","html_url":"https://github.com/Gamua/Starling-Framework/pull/151","diff_url":"https://github.com/Gamua/Starling-Framework/pull/151.diff","patch_url":"https://github.com/Gamua/Starling-Framework/pull/151.patch"},"body":"The stats display can be too small to be usable under certain conditions (e.g., on my iPad3). To fix this, I offer this trivially simple amendment:\n\npublic function showStatsAt(hAlign:String=\"left\", vAlign:String=\"top\", scale:Number=1):void\n{\n                 ...\n                 mStatsDisplay.scaleX = mStatsDisplay.scaleY = scale;\n                 ...\n}\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/151/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/150","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/150/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/150/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/150/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/150","id":6342813,"number":150,"title":"[Starling 1.2] DisplayObjects render in reverse order in shared context with depthAndStencil=true","user":{"login":"fogAndWhisky","id":104370,"avatar_url":"https://avatars2.githubusercontent.com/u/104370?v=4","gravatar_id":"","url":"https://api.github.com/users/fogAndWhisky","html_url":"https://github.com/fogAndWhisky","followers_url":"https://api.github.com/users/fogAndWhisky/followers","following_url":"https://api.github.com/users/fogAndWhisky/following{/other_user}","gists_url":"https://api.github.com/users/fogAndWhisky/gists{/gist_id}","starred_url":"https://api.github.com/users/fogAndWhisky/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fogAndWhisky/subscriptions","organizations_url":"https://api.github.com/users/fogAndWhisky/orgs","repos_url":"https://api.github.com/users/fogAndWhisky/repos","events_url":"https://api.github.com/users/fogAndWhisky/events{/privacy}","received_events_url":"https://api.github.com/users/fogAndWhisky/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2012-08-21T05:34:01Z","updated_at":"2012-10-06T12:45:17Z","closed_at":"2012-10-06T12:45:17Z","author_association":"NONE","body":"So there appears to be a bug in the 1.2 Starling release that affects our project and makes it impossible for us to upgrade. In a shared context situation where depthAndStencil = true, rendering order is reversed (i.e., a DisplayObject with depth==0 renders in front of a DisplayObject with depth==n) . Try the code example below to see:\n\n``` actionscript\npackage com.powerflasher.SampleApp\n{\n    import flash.utils.setInterval;\n    import starling.core.Starling;\n    import starling.events.Event;\n\n    import flash.display.Sprite;\n    import flash.display.Stage3D;\n    import flash.display3D.Context3DRenderMode;\n    import flash.events.Event;\n\n    public class Starling1_2_test extends flash.display.Sprite\n    {\n        private var starling:Starling;\n        private var stage3d:Stage3D;\n\n        public function Starling1_2_test()\n        {\n            stage3d = stage.stage3Ds[0];\n            if (stage3d.context3D)\n            {\n                onContextCreated();\n            }\n            else\n            {\n                stage3d.addEventListener(flash.events.Event.CONTEXT3D_CREATE, onContextCreated);\n                stage3d.requestContext3D( Context3DRenderMode.AUTO );\n            }\n        }\n\n        private function onContextCreated(event:flash.events.Event = null):void\n        {\n            stage3d.removeEventListener(flash.events.Event.CONTEXT3D_CREATE, onContextCreated);\n            stage3d.context3D.configureBackBuffer(stage.stageWidth, stage.stageHeight, 4, true);    //depthAndStencil = true, order reversed\n            //stage3d.context3D.configureBackBuffer(stage.stageWidth, stage.stageHeight, 4, false); //depthAndStencil = false, order as expected\n\n            Starling.handleLostContext = false;\n            starling = new Starling(StarlingMain, stage, null, stage3d);\n            starling.addEventListener(starling.events.Event.ROOT_CREATED, onStarlingReady);\n            starling.antiAliasing = 1;\n            starling.start();\n        }\n\n        private function onStarlingReady(event:starling.events.Event):void\n        {\n            setInterval(onTimer, 50);\n        }\n\n        private function onTimer():void\n        {\n            stage3d.context3D.clear();\n            starling.nextFrame();\n            starling.context.present();\n        }\n    }\n}\n```\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/150/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/149","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/149/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/149/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/149/events","html_url":"https://github.com/Gamua/Starling-Framework/pull/149","id":6186059,"number":149,"title":"test","user":{"login":"06wj","id":800043,"avatar_url":"https://avatars1.githubusercontent.com/u/800043?v=4","gravatar_id":"","url":"https://api.github.com/users/06wj","html_url":"https://github.com/06wj","followers_url":"https://api.github.com/users/06wj/followers","following_url":"https://api.github.com/users/06wj/following{/other_user}","gists_url":"https://api.github.com/users/06wj/gists{/gist_id}","starred_url":"https://api.github.com/users/06wj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/06wj/subscriptions","organizations_url":"https://api.github.com/users/06wj/orgs","repos_url":"https://api.github.com/users/06wj/repos","events_url":"https://api.github.com/users/06wj/events{/privacy}","received_events_url":"https://api.github.com/users/06wj/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2012-08-13T09:24:25Z","updated_at":"2012-08-13T19:26:26Z","closed_at":"2012-08-13T19:26:26Z","author_association":"NONE","pull_request":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/pulls/149","html_url":"https://github.com/Gamua/Starling-Framework/pull/149","diff_url":"https://github.com/Gamua/Starling-Framework/pull/149.diff","patch_url":"https://github.com/Gamua/Starling-Framework/pull/149.patch"},"body":"test\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/149/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/148","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/148/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/148/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/148/events","html_url":"https://github.com/Gamua/Starling-Framework/pull/148","id":6168350,"number":148,"title":"Add get modelViewMatrix function to RenderSupport","user":{"login":"area80","id":1935444,"avatar_url":"https://avatars1.githubusercontent.com/u/1935444?v=4","gravatar_id":"","url":"https://api.github.com/users/area80","html_url":"https://github.com/area80","followers_url":"https://api.github.com/users/area80/followers","following_url":"https://api.github.com/users/area80/following{/other_user}","gists_url":"https://api.github.com/users/area80/gists{/gist_id}","starred_url":"https://api.github.com/users/area80/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/area80/subscriptions","organizations_url":"https://api.github.com/users/area80/orgs","repos_url":"https://api.github.com/users/area80/repos","events_url":"https://api.github.com/users/area80/events{/privacy}","received_events_url":"https://api.github.com/users/area80/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2012-08-11T06:41:58Z","updated_at":"2012-08-28T14:11:20Z","closed_at":"2012-08-28T14:11:20Z","author_association":"NONE","pull_request":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/pulls/148","html_url":"https://github.com/Gamua/Starling-Framework/pull/148","diff_url":"https://github.com/Gamua/Starling-Framework/pull/148.diff","patch_url":"https://github.com/Gamua/Starling-Framework/pull/148.patch"},"body":"This is cpu speed safer, when we need to do something like set masking of some sprite. Old school way is to use localToGlobal to convert current sprite x to global x but it takes more cpu and ram usage.\nAdding this will also helps to get global rotation, scale, skew of current displayObject without any further effort.\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/148/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/147","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/147/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/147/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/147/events","html_url":"https://github.com/Gamua/Starling-Framework/pull/147","id":6166762,"number":147,"title":"TouchEvent Pooling","user":{"login":"joshtynjala","id":141885,"avatar_url":"https://avatars1.githubusercontent.com/u/141885?v=4","gravatar_id":"","url":"https://api.github.com/users/joshtynjala","html_url":"https://github.com/joshtynjala","followers_url":"https://api.github.com/users/joshtynjala/followers","following_url":"https://api.github.com/users/joshtynjala/following{/other_user}","gists_url":"https://api.github.com/users/joshtynjala/gists{/gist_id}","starred_url":"https://api.github.com/users/joshtynjala/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/joshtynjala/subscriptions","organizations_url":"https://api.github.com/users/joshtynjala/orgs","repos_url":"https://api.github.com/users/joshtynjala/repos","events_url":"https://api.github.com/users/joshtynjala/events{/privacy}","received_events_url":"https://api.github.com/users/joshtynjala/received_events","type":"User","site_admin":false},"labels":[{"id":130317,"url":"https://api.github.com/repos/Gamua/Starling-Framework/labels/Feature","name":"Feature","color":"009800","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":11,"created_at":"2012-08-11T00:38:11Z","updated_at":"2016-09-19T06:44:30Z","closed_at":"2016-09-16T11:22:24Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/pulls/147","html_url":"https://github.com/Gamua/Starling-Framework/pull/147","diff_url":"https://github.com/Gamua/Starling-Framework/pull/147.diff","patch_url":"https://github.com/Gamua/Starling-Framework/pull/147.patch"},"body":"I have updated TouchProcessor to use pooled touch events. The pooling is exposed as static functions on TouchEvent. I tried to keep it very similar to the starling.events.Event implementation of pooling. The main difference is that doesn't tie into dispatchEventWith() in any way. TouchProcessor directly calls fromPool() and toPool().\n\nI'm seeing a small FPS improvement when scrolling a Foxhole list on my iPad 1. It's only about 1-3 FPS, but I tested the pooled implementation a number of times to be sure, and it is consistently better than the old implementation with TouchEvents that are not pooled.\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/147/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/146","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/146/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/146/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/146/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/146","id":6165635,"number":146,"title":"After TouchPhase.ENDED, TouchPhase.HOVER happens again only after mouse moves","user":{"login":"joshtynjala","id":141885,"avatar_url":"https://avatars1.githubusercontent.com/u/141885?v=4","gravatar_id":"","url":"https://api.github.com/users/joshtynjala","html_url":"https://github.com/joshtynjala","followers_url":"https://api.github.com/users/joshtynjala/followers","following_url":"https://api.github.com/users/joshtynjala/following{/other_user}","gists_url":"https://api.github.com/users/joshtynjala/gists{/gist_id}","starred_url":"https://api.github.com/users/joshtynjala/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/joshtynjala/subscriptions","organizations_url":"https://api.github.com/users/joshtynjala/orgs","repos_url":"https://api.github.com/users/joshtynjala/repos","events_url":"https://api.github.com/users/joshtynjala/events{/privacy}","received_events_url":"https://api.github.com/users/joshtynjala/received_events","type":"User","site_admin":false},"labels":[{"id":130316,"url":"https://api.github.com/repos/Gamua/Starling-Framework/labels/Bug","name":"Bug","color":"e10c02","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":20,"created_at":"2012-08-10T22:52:51Z","updated_at":"2017-06-13T17:08:16Z","closed_at":"2017-06-13T16:47:40Z","author_association":"CONTRIBUTOR","body":"If the mouse remains over the same target after a TouchEvent with TouchPhase.ENDED, a TouchEvent with TouchPhase.HOVER should be dispatched immediately. Currently, a TouchEvent with TouchPhase.HOVER will only be dispatched after the mouse has moved again.\n\nFor a button component, after you click the button, the current behavior means that the button will not know to return to the hover state until you move the mouse. It is possible to manually hitTest() to see if the mouse is still over the button. However, Starling doesn't consider this to be a real hover, and that's leading to buggy behavior . If the button moves to a new position that is not under the mouse after the button has manually detected that it should be in its hover state, and the mouse hasn't moved yet to make Starling recognize the hover, the button will receive no event to indicate that it should leave its hover state and return to its up state.\n\nThis situation is currently happening in Foxhole. The ToggleSwitch component has a thumb that is a Button component. If you click the thumb, it will toggle selection, and the thumb will animate to a new position on the other side of the ToggleSwitch. The thumb remains in the hover state because it has moved away from the mouse, but Starling hasn't acknowledged the hover since the mouse remained stationary after the click.\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/146/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/145","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/145/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/145/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/145/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/145","id":6077859,"number":145,"title":"Multitouch simulation not working in full screen display state","user":{"login":"Oldes","id":454805,"avatar_url":"https://avatars3.githubusercontent.com/u/454805?v=4","gravatar_id":"","url":"https://api.github.com/users/Oldes","html_url":"https://github.com/Oldes","followers_url":"https://api.github.com/users/Oldes/followers","following_url":"https://api.github.com/users/Oldes/following{/other_user}","gists_url":"https://api.github.com/users/Oldes/gists{/gist_id}","starred_url":"https://api.github.com/users/Oldes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Oldes/subscriptions","organizations_url":"https://api.github.com/users/Oldes/orgs","repos_url":"https://api.github.com/users/Oldes/repos","events_url":"https://api.github.com/users/Oldes/events{/privacy}","received_events_url":"https://api.github.com/users/Oldes/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2012-08-07T13:43:14Z","updated_at":"2012-08-24T09:58:34Z","closed_at":"2012-08-24T09:58:34Z","author_association":"NONE","body":"Not a big issue as with mobile simulator, the full screen is not used anyway, but it looks it's not possible to use multitouch simulation when :\n\n```\nstage.displayState = StageDisplayState.FULL_SCREEN;\n```\n\nIt took me a while to find the reason:)\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/145/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/144","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/144/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/144/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/144/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/144","id":6012589,"number":144,"title":"Event pooling memory leak?","user":{"login":"bsideup","id":1050762,"avatar_url":"https://avatars3.githubusercontent.com/u/1050762?v=4","gravatar_id":"","url":"https://api.github.com/users/bsideup","html_url":"https://github.com/bsideup","followers_url":"https://api.github.com/users/bsideup/followers","following_url":"https://api.github.com/users/bsideup/following{/other_user}","gists_url":"https://api.github.com/users/bsideup/gists{/gist_id}","starred_url":"https://api.github.com/users/bsideup/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bsideup/subscriptions","organizations_url":"https://api.github.com/users/bsideup/orgs","repos_url":"https://api.github.com/users/bsideup/repos","events_url":"https://api.github.com/users/bsideup/events{/privacy}","received_events_url":"https://api.github.com/users/bsideup/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2012-08-03T11:11:43Z","updated_at":"2012-08-06T11:39:57Z","closed_at":"2012-08-06T11:32:50Z","author_association":"CONTRIBUTOR","body":"Hi!\n\nI've watched Event pooling system and i think, that there is potential memory leak\n\nFor example, this code:\n\n``` actionscript\nvar dispatcher : EventDispatcher = new EventDispatcher();\nvar bd : BitmapData = new BitmapData( 4096, 4096, false, 0);\nbd.noise(3);\ndispatcher. dispatchEventWith(\"foo\", false, bd); \n```\n\nLets see what's happened:\nevent is dispatched, everything is ok, but then it's putted to pool and unless someone pool event from storage, there will be event with link to bd (which cost something around to 24mb of memory).\n\nI think you should create protected dispose(); method in Event and call it before it's pooled to storage. Also it's can help to implement any Event child classes pooling ( dispatcher.dispatchWith(TouchEvent, TouchEvent.TOUCH) or something like that)\n\nWhat do you think about it?\n\nThanks!\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/144/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/143","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/143/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/143/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/143/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/143","id":5820736,"number":143,"title":"Redundant TouchEvent dispatches","user":{"login":"joshtynjala","id":141885,"avatar_url":"https://avatars1.githubusercontent.com/u/141885?v=4","gravatar_id":"","url":"https://api.github.com/users/joshtynjala","html_url":"https://github.com/joshtynjala","followers_url":"https://api.github.com/users/joshtynjala/followers","following_url":"https://api.github.com/users/joshtynjala/following{/other_user}","gists_url":"https://api.github.com/users/joshtynjala/gists{/gist_id}","starred_url":"https://api.github.com/users/joshtynjala/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/joshtynjala/subscriptions","organizations_url":"https://api.github.com/users/joshtynjala/orgs","repos_url":"https://api.github.com/users/joshtynjala/repos","events_url":"https://api.github.com/users/joshtynjala/events{/privacy}","received_events_url":"https://api.github.com/users/joshtynjala/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2012-07-25T00:36:41Z","updated_at":"2012-07-27T07:35:39Z","closed_at":"2012-07-27T07:35:39Z","author_association":"CONTRIBUTOR","body":"In TouchProcessor, it loops through all values stored in sProcessedTouchIDs and the target of each touch dispatches a TouchEvent. However, if multiple touches have the same target, then the target will end up dispatching redundant events. Every TouchEvent receives the same mCurrentTouches value, so there's no difference between the first TouchEvent dispatched by a particular target and any additional TouchEvents that are dispatched after the first.\n\nI see two options to fix this:\n\n1) During the loop, keep track of which targets have dispatched a TouchEvent already. If one of the stored targets comes up again, skip it.\n\n2) Continue dispatching multiple touch events to the same target, but associate one particular touch with each event as being the touch that triggered the event. In code, the dispatch call might change from this:\n\n```\ntouch.target.dispatchEvent(new TouchEvent(TouchEvent.TOUCH, mCurrentTouches,\n                                          mShiftDown, mCtrlDown));\n```\n\nTo this:\n\n```\ntouch.target.dispatchEvent(new TouchEvent(TouchEvent.TOUCH, touch, mCurrentTouches,\n                                          mShiftDown, mCtrlDown));\n```\n\nThat triggering touch passed into the constructor could be exposed as a property on the event to possibly be used by listeners. Until today, I actually assumed that getTouch() with no arguments would return that touch. Probably due to experience with native touches where things are different. Jeff set me straight on how Starling does it. Either way, after investigating the code to try to understand it all, I discovered the redundant dispatches.'\n\nOption 1 could improve performance, since it skips redundant dispatches. Option 2 would be more like what I originally expected, while still exposing the full set of touches for processing gestures and stuff. Option 2 would be a safer change, since the only difference would be more information getting exposed on the event object.\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/143/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/142","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/142/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/142/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/142/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/142","id":5773650,"number":142,"title":"Repeat mode (Crop and tile) for Texture region (i.e. from Atlas or other Subtexture source)","user":{"login":"nikitaosyak","id":1550079,"avatar_url":"https://avatars1.githubusercontent.com/u/1550079?v=4","gravatar_id":"","url":"https://api.github.com/users/nikitaosyak","html_url":"https://github.com/nikitaosyak","followers_url":"https://api.github.com/users/nikitaosyak/followers","following_url":"https://api.github.com/users/nikitaosyak/following{/other_user}","gists_url":"https://api.github.com/users/nikitaosyak/gists{/gist_id}","starred_url":"https://api.github.com/users/nikitaosyak/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nikitaosyak/subscriptions","organizations_url":"https://api.github.com/users/nikitaosyak/orgs","repos_url":"https://api.github.com/users/nikitaosyak/repos","events_url":"https://api.github.com/users/nikitaosyak/events{/privacy}","received_events_url":"https://api.github.com/users/nikitaosyak/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2012-07-23T07:49:49Z","updated_at":"2013-06-13T08:01:47Z","closed_at":"2013-06-13T08:01:47Z","author_association":"NONE","body":"Hi all.\n\nNoticed, that Starling could not do repeat mode for texture region. In case of mobile development, opportunity to have all assets on one texture sheet is actual, if not crucial. I wonder how many developers stumble in this, but I found myself needed in crop and tile for texture regions for different kind of tasks (i.e. 9-slicing). If you make tile-based game, you can run into the issue as well, and forced to use separate texture source for each tile, unless you come up with workaround, or, if you developing for web only, just live with it.\n\nFor my own project at work, I make a workaround this issue and make two overhead classes - image which can crop with texture region source (as transformation, now I implemented only scale change), and other image - sprite descendant, which fill itself with crop images,  and hold a pool inside self, with this implementing tiling and crop for texture region. This solution help me with performance on mobile a lot, because of single texture source.\n\nThis implementation is pretty rude overhead above starling, and ment as ready to use, as if TextField would be. I wonder if anyone but me need this things as out-of-the-box functionality, rather than thinking about this by yourself every time. I'm not sure if I should make a pull request, so I decide to ask first.\n\nIf I'm miselading, please close the issue.\n\nps. sorry for bad punctuation and possible typos.\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/142/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/141","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/141/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/141/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/141/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/141","id":5773639,"number":141,"title":"Texture resizing","user":{"login":"elmortem","id":571506,"avatar_url":"https://avatars3.githubusercontent.com/u/571506?v=4","gravatar_id":"","url":"https://api.github.com/users/elmortem","html_url":"https://github.com/elmortem","followers_url":"https://api.github.com/users/elmortem/followers","following_url":"https://api.github.com/users/elmortem/following{/other_user}","gists_url":"https://api.github.com/users/elmortem/gists{/gist_id}","starred_url":"https://api.github.com/users/elmortem/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elmortem/subscriptions","organizations_url":"https://api.github.com/users/elmortem/orgs","repos_url":"https://api.github.com/users/elmortem/repos","events_url":"https://api.github.com/users/elmortem/events{/privacy}","received_events_url":"https://api.github.com/users/elmortem/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2012-07-23T07:49:06Z","updated_at":"2012-07-23T09:34:31Z","closed_at":"2012-07-23T09:34:31Z","author_association":"NONE","body":"In MovieClip.advanceTime\nif (mCurrentFrame != previousFrame) {\n                texture = mTextures[mCurrentFrame];\n                                readjustSize(); // !!!!\n                        }\n\nAnd, please, create frame property setter in Texture:\npublic function set frame(value:Rectangle):void {\n                    mFrame = value.clone();\n                }\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/141/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/140","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/140/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/140/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/140/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/140","id":5735385,"number":140,"title":"Re-initialising a starling instance","user":{"login":"geoffperry","id":2011035,"avatar_url":"https://avatars1.githubusercontent.com/u/2011035?v=4","gravatar_id":"","url":"https://api.github.com/users/geoffperry","html_url":"https://github.com/geoffperry","followers_url":"https://api.github.com/users/geoffperry/followers","following_url":"https://api.github.com/users/geoffperry/following{/other_user}","gists_url":"https://api.github.com/users/geoffperry/gists{/gist_id}","starred_url":"https://api.github.com/users/geoffperry/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/geoffperry/subscriptions","organizations_url":"https://api.github.com/users/geoffperry/orgs","repos_url":"https://api.github.com/users/geoffperry/repos","events_url":"https://api.github.com/users/geoffperry/events{/privacy}","received_events_url":"https://api.github.com/users/geoffperry/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":33,"created_at":"2012-07-20T11:48:27Z","updated_at":"2013-01-09T19:55:09Z","closed_at":"2012-08-08T13:58:54Z","author_association":"NONE","body":"Hi All,\n\nI have a simple test application to prototype the reuse of the starling instance using the basic add quad example which is fine, but when the clear down of the instance is executed and the instance is recreated the Starling mShareContext variable in onEnterframe is now true on the second/further instances which stops nextframe/render being called and nothing is being displayed in the test window.\n\n_starling = new Starling(Game,stage);\n_starling.showStats = true;\n_starling.enableErrorChecking = true;\n_starling.start();\n\nafter a delay the clear down is called\n\n_starling.showStats = false;\n_starling.enableErrorChecking = false;\n_starling.dispose();\n_starling = null;\n\nand then after a further delay is creates the starling again as above and so on but nothing displays due to whats mentioned above.\n\ni have tried setting the variable to false with the set property but this then explodes on the second cycle.\n\nDoes anyone have any thoughts/examples on a work around for this issue?\n\nI have just downloaded the latest build and tested with that and still get the same issue.\n\nIf its any relevance, developing with flex builder for a mobile application.\n\nThanks in advance\n\nGeoff\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/140/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/139","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/139/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/139/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/139/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/139","id":5711664,"number":139,"title":"Enhancement request: TextureAtlas expose parseAtlasXml()","user":{"login":"FBB-Yamago","id":2005182,"avatar_url":"https://avatars3.githubusercontent.com/u/2005182?v=4","gravatar_id":"","url":"https://api.github.com/users/FBB-Yamago","html_url":"https://github.com/FBB-Yamago","followers_url":"https://api.github.com/users/FBB-Yamago/followers","following_url":"https://api.github.com/users/FBB-Yamago/following{/other_user}","gists_url":"https://api.github.com/users/FBB-Yamago/gists{/gist_id}","starred_url":"https://api.github.com/users/FBB-Yamago/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/FBB-Yamago/subscriptions","organizations_url":"https://api.github.com/users/FBB-Yamago/orgs","repos_url":"https://api.github.com/users/FBB-Yamago/repos","events_url":"https://api.github.com/users/FBB-Yamago/events{/privacy}","received_events_url":"https://api.github.com/users/FBB-Yamago/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2012-07-19T13:03:30Z","updated_at":"2012-07-19T13:36:50Z","closed_at":"2012-07-19T13:36:33Z","author_association":"NONE","body":"Please consider rendering the parseAtlasXml method protected instead of private.\nIt would help a lot if we were able to override this method and manipulate the way regions are created.\n\nMain examples could be for instance if I have a frame of movieclip that should repeat itself 40 times I could simply set that duration inside a movieclip or add several references to the same region with different names. Either way I would need to store that information somewhere and the xml seems the correct place.\n\nThis change would also allow overall better extension of TextureAtlas to better suite each projects needs.\n\nBest regards,\nFernando\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/139/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/138","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/138/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/138/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/138/events","html_url":"https://github.com/Gamua/Starling-Framework/pull/138","id":5662332,"number":138,"title":"onDemand getNextPowerOfTwo","user":{"login":"bsideup","id":1050762,"avatar_url":"https://avatars3.githubusercontent.com/u/1050762?v=4","gravatar_id":"","url":"https://api.github.com/users/bsideup","html_url":"https://github.com/bsideup","followers_url":"https://api.github.com/users/bsideup/followers","following_url":"https://api.github.com/users/bsideup/following{/other_user}","gists_url":"https://api.github.com/users/bsideup/gists{/gist_id}","starred_url":"https://api.github.com/users/bsideup/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bsideup/subscriptions","organizations_url":"https://api.github.com/users/bsideup/orgs","repos_url":"https://api.github.com/users/bsideup/repos","events_url":"https://api.github.com/users/bsideup/events{/privacy}","received_events_url":"https://api.github.com/users/bsideup/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2012-07-17T12:14:31Z","updated_at":"2014-06-18T21:13:57Z","closed_at":"2012-07-17T13:30:28Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/pulls/138","html_url":"https://github.com/Gamua/Starling-Framework/pull/138","diff_url":"https://github.com/Gamua/Starling-Framework/pull/138.diff","patch_url":"https://github.com/Gamua/Starling-Framework/pull/138.patch"},"body":"I think starling should not call getNextPowerOfTwo if it's not necessary:)\n\nNote:\nto check power of two i prever to use this algorithm:\nhttp://en.wikipedia.org/wiki/Power_of_two#Fast_algorithm_to_check_if_a_positive_number_is_a_power_of_two\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/138/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/137","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/137/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/137/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/137/events","html_url":"https://github.com/Gamua/Starling-Framework/pull/137","id":5661776,"number":137,"title":"small getNextPowerOfTwo improvement","user":{"login":"bsideup","id":1050762,"avatar_url":"https://avatars3.githubusercontent.com/u/1050762?v=4","gravatar_id":"","url":"https://api.github.com/users/bsideup","html_url":"https://github.com/bsideup","followers_url":"https://api.github.com/users/bsideup/followers","following_url":"https://api.github.com/users/bsideup/following{/other_user}","gists_url":"https://api.github.com/users/bsideup/gists{/gist_id}","starred_url":"https://api.github.com/users/bsideup/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bsideup/subscriptions","organizations_url":"https://api.github.com/users/bsideup/orgs","repos_url":"https://api.github.com/users/bsideup/repos","events_url":"https://api.github.com/users/bsideup/events{/privacy}","received_events_url":"https://api.github.com/users/bsideup/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2012-07-17T11:38:07Z","updated_at":"2012-07-17T13:28:39Z","closed_at":"2012-07-17T13:28:39Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/pulls/137","html_url":"https://github.com/Gamua/Starling-Framework/pull/137","diff_url":"https://github.com/Gamua/Starling-Framework/pull/137.diff","patch_url":"https://github.com/Gamua/Starling-Framework/pull/137.patch"},"body":"Since it's called twice per new Texture creation, it makes sense to optimize it, even if optimization is not huge:) All we want starling to be faster and faster, don't we?$)\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/137/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/136","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/136/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/136/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/136/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/136","id":5661237,"number":136,"title":"Duplicates in Juggler","user":{"login":"bsideup","id":1050762,"avatar_url":"https://avatars3.githubusercontent.com/u/1050762?v=4","gravatar_id":"","url":"https://api.github.com/users/bsideup","html_url":"https://github.com/bsideup","followers_url":"https://api.github.com/users/bsideup/followers","following_url":"https://api.github.com/users/bsideup/following{/other_user}","gists_url":"https://api.github.com/users/bsideup/gists{/gist_id}","starred_url":"https://api.github.com/users/bsideup/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bsideup/subscriptions","organizations_url":"https://api.github.com/users/bsideup/orgs","repos_url":"https://api.github.com/users/bsideup/repos","events_url":"https://api.github.com/users/bsideup/events{/privacy}","received_events_url":"https://api.github.com/users/bsideup/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2012-07-17T11:07:25Z","updated_at":"2012-07-17T11:15:54Z","closed_at":"2012-07-17T11:15:39Z","author_association":"CONTRIBUTOR","body":"Hi, Daniel!\n\nAm i right if i will say that there is a bug\\perfomance issue with Juggler, because if user calls Starling.juggler.add(concreateObject) twice or more times it will animates it's N times per frame?\n\n```\nif (object != null) mObjects.push(object);\n```\n\nI think it will be better to add check that object is already added:\n\n```\nif (object != null && mObjects.indexOf(object) == -1) mObjects.push(object);\n```\n\nOr i misunderstand it?\n\nThanks\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/136/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/135","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/135/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/135/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/135/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/135","id":5651662,"number":135,"title":"addEventListener() optimization","user":{"login":"joshtynjala","id":141885,"avatar_url":"https://avatars1.githubusercontent.com/u/141885?v=4","gravatar_id":"","url":"https://api.github.com/users/joshtynjala","html_url":"https://github.com/joshtynjala","followers_url":"https://api.github.com/users/joshtynjala/followers","following_url":"https://api.github.com/users/joshtynjala/following{/other_user}","gists_url":"https://api.github.com/users/joshtynjala/gists{/gist_id}","starred_url":"https://api.github.com/users/joshtynjala/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/joshtynjala/subscriptions","organizations_url":"https://api.github.com/users/joshtynjala/orgs","repos_url":"https://api.github.com/users/joshtynjala/repos","events_url":"https://api.github.com/users/joshtynjala/events{/privacy}","received_events_url":"https://api.github.com/users/joshtynjala/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":19,"created_at":"2012-07-16T22:19:31Z","updated_at":"2012-07-17T20:50:31Z","closed_at":"2012-07-17T08:25:52Z","author_association":"CONTRIBUTOR","body":"The following line appears in addEventListener():\n\n```\nmEventListeners[type] = listeners.concat(new <Function>[listener]);\n```\n\nMaybe I'm missing something, but can't it be simplified to the following instead?\n\n```\nlisteners.push(listener);\n```\n\nThe current code creates two new Vector instances when it should be able to safely continue using the original Vector.\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/135/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/134","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/134/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/134/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/134/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/134","id":5523103,"number":134,"title":"Enhancement Request: make Sprite.mFlattenedContents protected","user":{"login":"vync79","id":1656299,"avatar_url":"https://avatars0.githubusercontent.com/u/1656299?v=4","gravatar_id":"","url":"https://api.github.com/users/vync79","html_url":"https://github.com/vync79","followers_url":"https://api.github.com/users/vync79/followers","following_url":"https://api.github.com/users/vync79/following{/other_user}","gists_url":"https://api.github.com/users/vync79/gists{/gist_id}","starred_url":"https://api.github.com/users/vync79/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vync79/subscriptions","organizations_url":"https://api.github.com/users/vync79/orgs","repos_url":"https://api.github.com/users/vync79/repos","events_url":"https://api.github.com/users/vync79/events{/privacy}","received_events_url":"https://api.github.com/users/vync79/received_events","type":"User","site_admin":false},"labels":[{"id":130317,"url":"https://api.github.com/repos/Gamua/Starling-Framework/labels/Feature","name":"Feature","color":"009800","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":12,"created_at":"2012-07-10T13:40:14Z","updated_at":"2014-11-04T07:02:10Z","closed_at":"2014-11-03T15:36:33Z","author_association":"NONE","body":"Hi Daniel,\n\nthis is an enhancement request to change mFlattenedContents from private to protected in Sprite class.\n\nThe reason I am asking this is the following:\n\nIn my project, I need to use a slightly different flatten strategy where I actually flatten further the default mFlattenedContents by concatenating all compatible QuadBatchs even though they are not contiguous in the mFlattenedContents vector.\n\nThis obviously might break the Z ordering and should not be done in all cases.\n\nHowever this becomes very efficient in some occasions like for instance if the children objects are layed out in such a way that Z ordering is not important or if the blending mode is ADD or MULTIPLY for which the result does not depend on the actual Z ordering.\n\nI have a specific use case where we built a kind of scrolling list for which each item is a sprite made of a background untextured quad + some textured images + a textfield on top of it. \nUsing the normal flatten in such a case does not bring anything and the list is rendered in 3 \\* \"Number of items\" batches. \n\nHowever using the above described flatten() modification allows rendering the full scrolling list into only 3 batches (whatever the number of items is).\n\nI currently had to fully duplicate the Sprite class to add my flatten() modification because the mFlattenedContents is private.\n\nThat's why I was wondering whether you would be willing to turn it into \"protected\" in which case I could simply extend Sprite and only overide the flatten method to further tweak mFlattenedContents. This extended Sprite class would then simply have an option to turn the \"deep flatten\" mode on/off. (it could even be something added to the regular Sprite class if this is of interest as it only requires very few extra lines of code in the original flatten() code ).\n\nLet me know your thoughts.\n\nCheers.\n\nVince.\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/134/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/133","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/133/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/133/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/133/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/133","id":5463685,"number":133,"title":"DisplayObjectContainer error in dispose function!","user":{"login":"hamidhomatash","id":1932138,"avatar_url":"https://avatars2.githubusercontent.com/u/1932138?v=4","gravatar_id":"","url":"https://api.github.com/users/hamidhomatash","html_url":"https://github.com/hamidhomatash","followers_url":"https://api.github.com/users/hamidhomatash/followers","following_url":"https://api.github.com/users/hamidhomatash/following{/other_user}","gists_url":"https://api.github.com/users/hamidhomatash/gists{/gist_id}","starred_url":"https://api.github.com/users/hamidhomatash/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hamidhomatash/subscriptions","organizations_url":"https://api.github.com/users/hamidhomatash/orgs","repos_url":"https://api.github.com/users/hamidhomatash/repos","events_url":"https://api.github.com/users/hamidhomatash/events{/privacy}","received_events_url":"https://api.github.com/users/hamidhomatash/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2012-07-06T12:03:54Z","updated_at":"2012-07-10T06:23:12Z","closed_at":"2012-07-09T15:02:15Z","author_association":"CONTRIBUTOR","body":"I encountered a situation where a child was removing itself from its parent (DisplayObjectContainer) while the parent was disposing of its children. This causes the following code in DisplayObjectContainer to throw an index out of bounds error since mChildren's length has changed.\n\n```\n    public override function dispose():void\n    {\n        var numChildren:int = mChildren.length;\n\n        for (var i:int=0; i<numChildren; ++i)\n            mChildren[i].dispose();\n\n        super.dispose();\n    }\n```\n\nNow I know that you shouldn't be removing a child from its parent while its being destroyed, but I think the problem should be fixed. I have fixed it for myself by changing the dispose function to:\n\n```\n    public override function dispose():void\n    {\n        while(mChildren.length)\n        {\n            mChildren.pop().dispose();\n        }\n\n        super.dispose();\n    }\n```\n\nAlthough this is slower it is always guaranteed to ensure safe disposal.\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/133/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}}],"meta":{"x-ratelimit-limit":"5000","x-ratelimit-remaining":"4739","x-ratelimit-reset":"1507250212","x-github-request-id":"C747:6E5E:4CE0A4:B2A9BD:59D6C7F5","x-github-media-type":"github.squirrel-girl-preview","link":"<https://api.github.com/repositories/2097941/issues?state=all&page=30>; rel=\"next\", <https://api.github.com/repositories/2097941/issues?state=all&page=34>; rel=\"last\", <https://api.github.com/repositories/2097941/issues?state=all&page=1>; rel=\"first\", <https://api.github.com/repositories/2097941/issues?state=all&page=28>; rel=\"prev\"","etag":"\"eaa92185bed5bb0583550914f1cf333c\"","status":"200 OK"}}
