{"data":[{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/492","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/492/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/492/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/492/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/492","id":27767911,"number":492,"title":"TouchProcessor:dispose need remove NativeApplication's deactivate event listener","user":{"login":"lynxerzhang","id":240933,"avatar_url":"https://avatars3.githubusercontent.com/u/240933?v=4","gravatar_id":"","url":"https://api.github.com/users/lynxerzhang","html_url":"https://github.com/lynxerzhang","followers_url":"https://api.github.com/users/lynxerzhang/followers","following_url":"https://api.github.com/users/lynxerzhang/following{/other_user}","gists_url":"https://api.github.com/users/lynxerzhang/gists{/gist_id}","starred_url":"https://api.github.com/users/lynxerzhang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lynxerzhang/subscriptions","organizations_url":"https://api.github.com/users/lynxerzhang/orgs","repos_url":"https://api.github.com/users/lynxerzhang/repos","events_url":"https://api.github.com/users/lynxerzhang/events{/privacy}","received_events_url":"https://api.github.com/users/lynxerzhang/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-02-18T03:56:03Z","updated_at":"2014-02-18T07:41:52Z","closed_at":"2014-02-18T07:40:50Z","author_association":"NONE","body":"In TouchProcessor:\nwhen the method 'monitorInterruptions' 's parameter is false, should remove NativeApplication's deactivate event, but current is remove activate event, Is that correct?\n\n``` as\nprivate function monitorInterruptions(enable:Boolean):void\n{\n    // if the application moves into the background or is interrupted (e.g. through\n    // an incoming phone call), we need to abort all touches.\n\n    try\n    {\n        var nativeAppClass:Object = getDefinitionByName(\"flash.desktop::NativeApplication\");\n        var nativeApp:Object = nativeAppClass[\"nativeApplication\"];\n\n        if (enable)\n            nativeApp.addEventListener(\"deactivate\", onInterruption, false, 0, true);\n        else\n            nativeApp.removeEventListener(\"activate\", onInterruption);\n    }\n    catch (e:Error) {} // we're not running in AIR\n}\n```\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/492/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/491","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/491/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/491/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/491/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/491","id":27577451,"number":491,"title":"removeEventListener performance boost","user":{"login":"IonSwitz","id":3709822,"avatar_url":"https://avatars0.githubusercontent.com/u/3709822?v=4","gravatar_id":"","url":"https://api.github.com/users/IonSwitz","html_url":"https://github.com/IonSwitz","followers_url":"https://api.github.com/users/IonSwitz/followers","following_url":"https://api.github.com/users/IonSwitz/following{/other_user}","gists_url":"https://api.github.com/users/IonSwitz/gists{/gist_id}","starred_url":"https://api.github.com/users/IonSwitz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/IonSwitz/subscriptions","organizations_url":"https://api.github.com/users/IonSwitz/orgs","repos_url":"https://api.github.com/users/IonSwitz/repos","events_url":"https://api.github.com/users/IonSwitz/events{/privacy}","received_events_url":"https://api.github.com/users/IonSwitz/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":29,"created_at":"2014-02-14T06:54:14Z","updated_at":"2014-02-16T18:22:58Z","closed_at":"2014-02-15T11:38:26Z","author_association":"NONE","body":"As I was going through code in my beloved Starling Graphics Extension, I stumbled upon something funny in one of my benchmarks: removeEventListener eats up a LOT of CPU.\n\nWhile I am sure this issue for the Starling Graphics Extension can be solved in different ways, here is the problem I found when the number of event listeners grow on one object:\n\nEach Graphic base class registers itself as a listener on Event.CONTEXT3D_CREATE, on Starling.current, in order to be able to recreate its geometry on a lost context situation. When I create and dispose a lot of Graphics classes ( several 100) and start investigating the performance problem, I end up in removeEventListener.\n\nSo I put together a test case, that adds and removes 2000 sprites as event listeners to Starling.current, listening to this event:\n\n``` as3\npackage\n{\n    import flash.display.Sprite;\n    import flash.display.StageAlign;\n    import flash.display.StageScaleMode;\n\n    import starling.core.Starling;\n\n    [SWF( width=\"1200\", height=\"800\", backgroundColor=\"#000000\", frameRate=\"60\" )]\n    public class Main extends flash.display.Sprite\n    {\n        private var starling    :Starling;\n\n        public function Main()\n        {\n            stage.scaleMode = StageScaleMode.NO_SCALE;\n            stage.align = StageAlign.TOP_LEFT;\n            starling = new Starling( ManySprites, stage, null, null, \"auto\", \"baselineConstrained\" );\n            starling.antiAliasing = 0;\n            starling.showStats = true;\n            starling.start();\n        }\n    }\n}\n```\n\n``` as3\nimport flash.display.BitmapData;\nimport flash.display.Shape;\nimport starling.events.Event;\nimport flash.geom.Point;\nimport flash.geom.Rectangle;\n\nimport starling.display.DisplayObject;\nimport starling.core.Starling;\nimport starling.display.Sprite;\n\nclass ManySprites extends starling.display.Sprite\n{\n    private var sprites:Vector.<ManySprites>;\n    function ManySprites(addListener:Boolean = true)\n    {\n        if ( addListener )\n            addEventListener(Event.ADDED_TO_STAGE, onAdded);\n    }\n\n    private function onAdded ( e:Event ):void\n    {\n        sprites = new Vector.<ManySprites>(2000, true);\n        for ( var i:int = 0; i < 2000; i++ )\n        {\n            var s:ManySprites = new ManySprites(false);\n            sprites[i] = s;\n            addChild(s);\n            Starling.current.addEventListener(Event.CONTEXT3D_CREATE, s.onContextCreated);\n        }\n        addEventListener(Event.ENTER_FRAME, enterFrameHandler);\n    }\n\n    private function onContextCreated(event:starling.events.Event) : void\n    {\n    }\n\n    private function enterFrameHandler( event:Event ):void\n    {\n        var i: int;\n        for ( i = 0 ; i < 2000; i++)\n        {\n            var s:ManySprites = sprites[i];\n            Starling.current.removeEventListener(Event.CONTEXT3D_CREATE, s.onContextCreated);\n        }\n        for ( i = 0 ; i < 2000; i++)\n        {\n            var s:ManySprites = sprites[i];\n            Starling.current.addEventListener(Event.CONTEXT3D_CREATE, s.onContextCreated);\n        }\n\n    }\n}\n```\n\nAnd performance chokes. The problem is the loop in removeEventListener, that pushes listeners from \"listeners\" to the \"remainingListeners\" vector. This eats up a lot of CPU.\n\nIs there a reason that the \"splice\" method isn't used in removeEventListener to remove the listener from the vector? It is ALOT faster like this, and I think the functionality is identical, unless I misunderstand something about the splice method.\n\n``` as3\npublic function removeEventListener(type:String, listener:Function):void\n{\n    if (mEventListeners)\n    {\n        var listeners:Vector.<Function> = mEventListeners[type] as Vector.<Function>;\n        if (listeners)\n        {\n            var numListeners:int = listeners.length;\n            var remainingListeners:Vector.<Function>;\n\n            var index:int = listeners.indexOf(listener);\n            if ( index != -1)\n                remainingListeners = listeners.splice(index, 1);\n            else \n                remainingListeners = new <Function>[];\n\n            mEventListeners[type] = remainingListeners;\n        }\n    }\n}\n```\n\nPerformance on my PC jumps from 5 FPS to 30 FPS in my extreme example above by using the \"splice\" method rather than the loop and \"push\" method.\n\nEDIT: ~~And I apologize for the horrible formatting of the code, I can't seem to get the forum to accept the indentation properly~~ [PrimaryFeather] I fixed that for you!\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/491/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/490","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/490/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/490/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/490/events","html_url":"https://github.com/Gamua/Starling-Framework/pull/490","id":27442981,"number":490,"title":"Update ColorMatrixFilter.as","user":{"login":"esdebon","id":1408296,"avatar_url":"https://avatars1.githubusercontent.com/u/1408296?v=4","gravatar_id":"","url":"https://api.github.com/users/esdebon","html_url":"https://github.com/esdebon","followers_url":"https://api.github.com/users/esdebon/followers","following_url":"https://api.github.com/users/esdebon/following{/other_user}","gists_url":"https://api.github.com/users/esdebon/gists{/gist_id}","starred_url":"https://api.github.com/users/esdebon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/esdebon/subscriptions","organizations_url":"https://api.github.com/users/esdebon/orgs","repos_url":"https://api.github.com/users/esdebon/repos","events_url":"https://api.github.com/users/esdebon/events{/privacy}","received_events_url":"https://api.github.com/users/esdebon/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2014-02-12T15:46:29Z","updated_at":"2014-06-16T03:18:38Z","closed_at":"2014-03-07T00:02:06Z","author_association":"NONE","pull_request":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/pulls/490","html_url":"https://github.com/Gamua/Starling-Framework/pull/490","diff_url":"https://github.com/Gamua/Starling-Framework/pull/490.diff","patch_url":"https://github.com/Gamua/Starling-Framework/pull/490.patch"},"body":"Added the public function adjustHueColorize, this create a similar effect to \"colorize\" in Photoshop Hue/Saturation\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/490/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/489","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/489/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/489/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/489/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/489","id":27437505,"number":489,"title":"Touch handling on removeChild()","user":{"login":"mikhailkuts","id":2330807,"avatar_url":"https://avatars3.githubusercontent.com/u/2330807?v=4","gravatar_id":"","url":"https://api.github.com/users/mikhailkuts","html_url":"https://github.com/mikhailkuts","followers_url":"https://api.github.com/users/mikhailkuts/followers","following_url":"https://api.github.com/users/mikhailkuts/following{/other_user}","gists_url":"https://api.github.com/users/mikhailkuts/gists{/gist_id}","starred_url":"https://api.github.com/users/mikhailkuts/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikhailkuts/subscriptions","organizations_url":"https://api.github.com/users/mikhailkuts/orgs","repos_url":"https://api.github.com/users/mikhailkuts/repos","events_url":"https://api.github.com/users/mikhailkuts/events{/privacy}","received_events_url":"https://api.github.com/users/mikhailkuts/received_events","type":"User","site_admin":false},"labels":[{"id":130317,"url":"https://api.github.com/repos/Gamua/Starling-Framework/labels/Feature","name":"Feature","color":"009800","default":false},{"id":48336470,"url":"https://api.github.com/repos/Gamua/Starling-Framework/labels/Waiting","name":"Waiting","color":"eb6420","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2014-02-12T14:36:23Z","updated_at":"2014-04-29T08:14:08Z","closed_at":"2014-04-29T08:14:08Z","author_association":"NONE","body":"Hi. \nSeems like I can't get touch event on removeChild() of touch target. So I can't be notified inside touch handler that target display removed from stage.\nHowever the native flash sending MOUSE_OUT event before touch target removing.\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/489/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/488","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/488/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/488/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/488/events","html_url":"https://github.com/Gamua/Starling-Framework/pull/488","id":27299783,"number":488,"title":"Added a more performant normalizeAngle()","user":{"login":"zeh","id":49529,"avatar_url":"https://avatars0.githubusercontent.com/u/49529?v=4","gravatar_id":"","url":"https://api.github.com/users/zeh","html_url":"https://github.com/zeh","followers_url":"https://api.github.com/users/zeh/followers","following_url":"https://api.github.com/users/zeh/following{/other_user}","gists_url":"https://api.github.com/users/zeh/gists{/gist_id}","starred_url":"https://api.github.com/users/zeh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zeh/subscriptions","organizations_url":"https://api.github.com/users/zeh/orgs","repos_url":"https://api.github.com/users/zeh/repos","events_url":"https://api.github.com/users/zeh/events{/privacy}","received_events_url":"https://api.github.com/users/zeh/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":12,"created_at":"2014-02-10T20:59:44Z","updated_at":"2014-06-12T16:30:45Z","closed_at":"2014-02-11T08:40:28Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/pulls/488","html_url":"https://github.com/Gamua/Starling-Framework/pull/488","diff_url":"https://github.com/Gamua/Starling-Framework/pull/488.diff","patch_url":"https://github.com/Gamua/Starling-Framework/pull/488.patch"},"body":"This is a more performant version of normalizeAngle(). It correctly clamps the value of the angle to be in the -PI..PI range, applying a proper modulo-like conversion. The big deal is that it uses no while() loops, so it will have consistent performance, regardless of the angle.\n\n---\n\nI'm working on some code that is supposed to be running for days without stop or intervention. I noticed that after a few hundred hours, certain functions started taking more and more time to execute, and that Starling's `normalizeAngle()` was by far the biggest culprit in increasing execution time.\n\nThere were no memory leaks in my code. However, I have several particles (sometimes hundreds of them) and sprites that rotate endlessly. I do so by taking the current timer value and applying it as the rotation angle of the image. This means that the rotation property of the image would, at times, contain huge numbers (think of the typical `rotation = getTimer() / speed`).\n\nLooking at the code of `normalizeAngle()` quickly made me realize what the problem was. After a few thousand rotations of my particles, updating the rotation would trigger long loops because of the while() blocks used in the function.\n\nI fixed my code with my own range-modulo code, but it would make sense to have this on the public version of Starling since more people may run into this problem. The suggested code does that.\n\nThe solution contains no loops so it will always perform the same. It _does_ have a difference of resulting values compared to the old version when the rotation value contains a few million rotations, probably because of loss of floating point precision. That said, I believe the new equation is more precise since it's not trying to add or subtract PI from a value many many times.\n\nHere's some quick benchmarks of the function itself, for 1000000 conversions:\n\nRotation of \"-1\":\nOld: 294ms, new: 335ms\n\nRotation of \"1\": \nOld: 302ms, new: 333ms\n\nRotation of \"4\":\nOld: 299ms, new: 327ms\n\nRotation of \"20\":\nOld: 315ms, new: 329ms\n\nRotation of \"200\":\nOld: 673ms, new: 320ms\n\nRotation of \"2000\":\nOld: 4111ms, new: 336ms\n\nAs you can see, the new method has a ~10% impact in performance when converting most valid ranges. But the impact on ranges that are far out of the range is brutal.\n\n(This ~10% impact is mostly solved by using a TWO_PI constant, by the way, but I just didn't want to alter the class too much)\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/488/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/487","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/487/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/487/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/487/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/487","id":27127846,"number":487,"title":"Impossible to resize Quad created with width and/or height set to 0","user":{"login":"b005t3r","id":757150,"avatar_url":"https://avatars3.githubusercontent.com/u/757150?v=4","gravatar_id":"","url":"https://api.github.com/users/b005t3r","html_url":"https://github.com/b005t3r","followers_url":"https://api.github.com/users/b005t3r/followers","following_url":"https://api.github.com/users/b005t3r/following{/other_user}","gists_url":"https://api.github.com/users/b005t3r/gists{/gist_id}","starred_url":"https://api.github.com/users/b005t3r/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/b005t3r/subscriptions","organizations_url":"https://api.github.com/users/b005t3r/orgs","repos_url":"https://api.github.com/users/b005t3r/repos","events_url":"https://api.github.com/users/b005t3r/events{/privacy}","received_events_url":"https://api.github.com/users/b005t3r/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":10,"created_at":"2014-02-07T11:12:07Z","updated_at":"2014-06-02T16:52:33Z","closed_at":"2014-02-10T08:41:16Z","author_association":"NONE","body":"Am I really the first one to notice this? :)\n\nThis code reproduces the bug:\n\n``` as3\n// create an \"empty\" Quad  \nvar quad:Quad = new Quad(0, 0, Color.RED);\naddChild(quad);\n\n// try to change its width or height\nquad.width = 100;\nquad.height = 100;\n// nothing happens, it's still w=0, h=0\n```\n\nbut this one works as expected:\n\n``` as3\n// create a Quad  \nvar quad:Quad = new Quad(1, 1, Color.RED);\naddChild(quad);\n\n// try to change its width or height\nquad.width = 100;\nquad.height = 100;\n// works! w=100, h=100\n```\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/487/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/486","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/486/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/486/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/486/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/486","id":27006943,"number":486,"title":"Allow Image to have null texture","user":{"login":"troygilbert","id":146465,"avatar_url":"https://avatars0.githubusercontent.com/u/146465?v=4","gravatar_id":"","url":"https://api.github.com/users/troygilbert","html_url":"https://github.com/troygilbert","followers_url":"https://api.github.com/users/troygilbert/followers","following_url":"https://api.github.com/users/troygilbert/following{/other_user}","gists_url":"https://api.github.com/users/troygilbert/gists{/gist_id}","starred_url":"https://api.github.com/users/troygilbert/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/troygilbert/subscriptions","organizations_url":"https://api.github.com/users/troygilbert/orgs","repos_url":"https://api.github.com/users/troygilbert/repos","events_url":"https://api.github.com/users/troygilbert/events{/privacy}","received_events_url":"https://api.github.com/users/troygilbert/received_events","type":"User","site_admin":false},"labels":[{"id":130317,"url":"https://api.github.com/repos/Gamua/Starling-Framework/labels/Feature","name":"Feature","color":"009800","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2014-02-05T22:18:44Z","updated_at":"2016-04-14T14:28:56Z","closed_at":"2016-04-14T14:28:28Z","author_association":"NONE","body":"I would love to be able to construct an instance of an Image class without having to provide a texture. The class currently throws an exception if the texture is null, but I can't see any reason to have this constraint in the underlying implementation of Image. It fact, it seems to degrade gracefully into a quad (as you'd expect). It also doesn't mirror the functionality/style of the Flash display list, where a Bitmap can definitely be put on the display list without having BitmapData associated with it.\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/486/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/485","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/485/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/485/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/485/events","html_url":"https://github.com/Gamua/Starling-Framework/pull/485","id":26894104,"number":485,"title":"Update EventDispatcher.as","user":{"login":"samoiloff","id":1687620,"avatar_url":"https://avatars0.githubusercontent.com/u/1687620?v=4","gravatar_id":"","url":"https://api.github.com/users/samoiloff","html_url":"https://github.com/samoiloff","followers_url":"https://api.github.com/users/samoiloff/followers","following_url":"https://api.github.com/users/samoiloff/following{/other_user}","gists_url":"https://api.github.com/users/samoiloff/gists{/gist_id}","starred_url":"https://api.github.com/users/samoiloff/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/samoiloff/subscriptions","organizations_url":"https://api.github.com/users/samoiloff/orgs","repos_url":"https://api.github.com/users/samoiloff/repos","events_url":"https://api.github.com/users/samoiloff/events{/privacy}","received_events_url":"https://api.github.com/users/samoiloff/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2014-02-04T16:23:26Z","updated_at":"2014-07-01T06:16:46Z","closed_at":"2014-02-05T08:17:41Z","author_association":"NONE","pull_request":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/pulls/485","html_url":"https://github.com/Gamua/Starling-Framework/pull/485","diff_url":"https://github.com/Gamua/Starling-Framework/pull/485.diff","patch_url":"https://github.com/Gamua/Starling-Framework/pull/485.patch"},"body":"Optimized removal of listener. No memory allocation for new vector.\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/485/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/484","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/484/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/484/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/484/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/484","id":26775942,"number":484,"title":"30 FPS stuttering while 60 FPS runs fine.","user":{"login":"IonSwitz","id":3709822,"avatar_url":"https://avatars0.githubusercontent.com/u/3709822?v=4","gravatar_id":"","url":"https://api.github.com/users/IonSwitz","html_url":"https://github.com/IonSwitz","followers_url":"https://api.github.com/users/IonSwitz/followers","following_url":"https://api.github.com/users/IonSwitz/following{/other_user}","gists_url":"https://api.github.com/users/IonSwitz/gists{/gist_id}","starred_url":"https://api.github.com/users/IonSwitz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/IonSwitz/subscriptions","organizations_url":"https://api.github.com/users/IonSwitz/orgs","repos_url":"https://api.github.com/users/IonSwitz/repos","events_url":"https://api.github.com/users/IonSwitz/events{/privacy}","received_events_url":"https://api.github.com/users/IonSwitz/received_events","type":"User","site_admin":false},"labels":[{"id":64488856,"url":"https://api.github.com/repos/Gamua/Starling-Framework/labels/Bug%20in%20Flash/AIR","name":"Bug in Flash/AIR","color":"5319e7","default":false},{"id":92578788,"url":"https://api.github.com/repos/Gamua/Starling-Framework/labels/Can't%20fix","name":"Can't fix","color":"207de5","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":24,"created_at":"2014-02-03T00:43:24Z","updated_at":"2016-08-10T10:02:42Z","closed_at":"2014-04-29T08:15:47Z","author_association":"NONE","body":"Following up this discussion thread from the Starling Forum with an Issue here at GitHub.\n\nI am not sure this is something that Daniel can fix in Starling, but something seems very very odd here.\n\nhttp://forum.starling-framework.org/topic/30-fps-vs-60-fps-why-30-looks-jagged\n\nBasically: For some of us, this happens: \n\nSet up a trivial Starling project, a Main file and something else.\nSet SWF to 60 fps - observe smooth animations.\nSet SWF to 30 fps - observe stuttering.\n\nTo investigate, I added a trace to see what the passedTime argument to advanceTime was, and at 30 FPS, I saw these fluctuations:\n\nadvanceTime: 0.04600000000000026\nadvanceTime: 0.019999999999999574\nadvanceTime: 0.03300000000000036\nadvanceTime: 0.02999999999999936\nadvanceTime: 0.034000000000000696\nadvanceTime: 0.03399999999999981\nadvanceTime: 0.03200000000000003\nadvanceTime: 0.03399999999999981\n\n(Just a random sample of the frames, observe the difference, 0.046 vs 0.0199 )\n\nSo, I hooked up Scout, and I got this (observe the stuttering greyed out columns)\n\nhttps://dl.dropboxusercontent.com/u/107200878/more30fpsStutter.jpg\n\nBUT!\n\nWhen I hacked further into the Starling class, and added another mContext.present() directly after the already existing one, the stuttering disappeared almost completely, animations run smooth again, and the variations in the printout became almost zero, as with 60 FPS.\n\nhttps://dl.dropboxusercontent.com/u/107200878/30fpsWithDoubleRenderCalls.jpg\n\nI wanted this to get Daniel's attention, even though it might not be something he can do about this, but this seems to be a Flash Player issue, not a Starling issue.\n\nIt should also be mentioned, that I have developed a Starling game (on the first release of 1.4.1 ) in a mixed environment, with Display List and Stage3D mixed, at 30 FPS without seeing this issue.\n\nSo this is spooky, in my view.\n\nEDIT: Of course, a reproduction is always nice. This one is 26 lines long, a complete sample to reproduce the problem:\n\n``` as3\npackage\n{\n    import flash.display.Sprite;\n    import flash.display.StageAlign;\n    import flash.display.StageScaleMode;\n    import starling.core.Starling;\n    [SWF( width=\"1200\", height=\"800\", backgroundColor=\"#000000\", frameRate=\"30\" )]\n    public class Main extends flash.display.Sprite\n    {\n        private var starling    :Starling;\n        public function Main()\n        {\n            stage.scaleMode = StageScaleMode.NO_SCALE;\n            stage.align = StageAlign.TOP_LEFT;\n            starling = new Starling( NullSprite, stage, null, null, \"auto\", \"baselineConstrained\" );\n            starling.start();\n        }\n    }\n}\nimport starling.display.Sprite;\nclass NullSprite extends starling.display.Sprite\n{\n    function NullSprite()\n    {\n    }\n}\n```\n\nBuild this, start up Scout, observe how irregular the patterns are. :( \n\nNaturally, there might be something special with my machine, and that of the others in the other thread, that cause this to happen. It might not be reproducible on other machines.\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/484/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/483","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/483/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/483/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/483/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/483","id":26713559,"number":483,"title":"Text dissapears from textfield","user":{"login":"juanamd","id":3893714,"avatar_url":"https://avatars1.githubusercontent.com/u/3893714?v=4","gravatar_id":"","url":"https://api.github.com/users/juanamd","html_url":"https://github.com/juanamd","followers_url":"https://api.github.com/users/juanamd/followers","following_url":"https://api.github.com/users/juanamd/following{/other_user}","gists_url":"https://api.github.com/users/juanamd/gists{/gist_id}","starred_url":"https://api.github.com/users/juanamd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanamd/subscriptions","organizations_url":"https://api.github.com/users/juanamd/orgs","repos_url":"https://api.github.com/users/juanamd/repos","events_url":"https://api.github.com/users/juanamd/events{/privacy}","received_events_url":"https://api.github.com/users/juanamd/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2014-01-31T20:33:50Z","updated_at":"2014-02-03T13:32:40Z","closed_at":"2014-02-03T13:32:40Z","author_association":"NONE","body":"Hi Daniel,\n\nFirst of all, i didn't test this enough because i don't have so much time atm, so maybe its something on my end.\nToday i switched to the latest github build of Starling in my game, and noticed that some textfields where not appearing as before (previously i had a build near the release of 1.4).\nI don't have the time right now to build a test case, but i can reproduce the issue like this:\n1- Have a textfield with some text in it, placed on the stage: everything is fine.\n2- Remove it from its parent and dispose it (it is using a bitmap font on a texture atlas)\n3- Change the text by doing: _textfield.text = String(someInt);\n4- Adding it to the stage again\n5- Now the textfield is not displayed.\n\nI found a workaroudn this: if in step 4 i do this instead: _textfield.text = String(someInt) + \" \";\nIn other words, if i append some text, it now displays it correctly.\nI think this is odd, since if i revert my previous Starling build, everything works fine again without the workaround, so thats why im filing it as a bug.\n\nThanks!\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/483/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/482","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/482/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/482/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/482/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/482","id":26706759,"number":482,"title":"Single Line Textfield","user":{"login":"JimTheMan","id":5354163,"avatar_url":"https://avatars2.githubusercontent.com/u/5354163?v=4","gravatar_id":"","url":"https://api.github.com/users/JimTheMan","html_url":"https://github.com/JimTheMan","followers_url":"https://api.github.com/users/JimTheMan/followers","following_url":"https://api.github.com/users/JimTheMan/following{/other_user}","gists_url":"https://api.github.com/users/JimTheMan/gists{/gist_id}","starred_url":"https://api.github.com/users/JimTheMan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JimTheMan/subscriptions","organizations_url":"https://api.github.com/users/JimTheMan/orgs","repos_url":"https://api.github.com/users/JimTheMan/repos","events_url":"https://api.github.com/users/JimTheMan/events{/privacy}","received_events_url":"https://api.github.com/users/JimTheMan/received_events","type":"User","site_admin":false},"labels":[{"id":130317,"url":"https://api.github.com/repos/Gamua/Starling-Framework/labels/Feature","name":"Feature","color":"009800","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2014-01-31T18:56:13Z","updated_at":"2016-02-29T14:01:57Z","closed_at":"2016-02-29T14:01:57Z","author_association":"NONE","body":"Problem: For dynamic  (string) text that can be of varying lengths it can be difficult to ensure the text is only one line.\n\nSolution: Give starling textfields a single line toggle property. If text is bigger than bounds text will just go off to the right. This will allow people to check if (tf.textBounds.width < tf.width) and shrink the font accordingly.\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/482/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/481","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/481/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/481/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/481/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/481","id":26599524,"number":481,"title":"Textfield > Add the possibility to set the leftMargin / rightMargin","user":{"login":"Zamiel","id":3900433,"avatar_url":"https://avatars1.githubusercontent.com/u/3900433?v=4","gravatar_id":"","url":"https://api.github.com/users/Zamiel","html_url":"https://github.com/Zamiel","followers_url":"https://api.github.com/users/Zamiel/followers","following_url":"https://api.github.com/users/Zamiel/following{/other_user}","gists_url":"https://api.github.com/users/Zamiel/gists{/gist_id}","starred_url":"https://api.github.com/users/Zamiel/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Zamiel/subscriptions","organizations_url":"https://api.github.com/users/Zamiel/orgs","repos_url":"https://api.github.com/users/Zamiel/repos","events_url":"https://api.github.com/users/Zamiel/events{/privacy}","received_events_url":"https://api.github.com/users/Zamiel/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2014-01-30T13:57:19Z","updated_at":"2014-02-10T14:11:23Z","closed_at":"2014-02-10T14:08:05Z","author_association":"NONE","body":"By adding the leftMargin / rightMaring to the format we can fix the GlowFilter bug under the Textfield.\n(Bug : Glow cutted by the bound.)\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/481/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/480","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/480/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/480/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/480/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/480","id":26591016,"number":480,"title":"Bitmap font scale value","user":{"login":"jarrodmoldrich","id":920769,"avatar_url":"https://avatars1.githubusercontent.com/u/920769?v=4","gravatar_id":"","url":"https://api.github.com/users/jarrodmoldrich","html_url":"https://github.com/jarrodmoldrich","followers_url":"https://api.github.com/users/jarrodmoldrich/followers","following_url":"https://api.github.com/users/jarrodmoldrich/following{/other_user}","gists_url":"https://api.github.com/users/jarrodmoldrich/gists{/gist_id}","starred_url":"https://api.github.com/users/jarrodmoldrich/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jarrodmoldrich/subscriptions","organizations_url":"https://api.github.com/users/jarrodmoldrich/orgs","repos_url":"https://api.github.com/users/jarrodmoldrich/repos","events_url":"https://api.github.com/users/jarrodmoldrich/events{/privacy}","received_events_url":"https://api.github.com/users/jarrodmoldrich/received_events","type":"User","site_admin":false},"labels":[{"id":130316,"url":"https://api.github.com/repos/Gamua/Starling-Framework/labels/Bug","name":"Bug","color":"e10c02","default":false},{"id":48336470,"url":"https://api.github.com/repos/Gamua/Starling-Framework/labels/Waiting","name":"Waiting","color":"eb6420","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2014-01-30T11:11:58Z","updated_at":"2014-04-29T08:17:58Z","closed_at":"2014-04-29T08:17:58Z","author_association":"NONE","body":"Greetings PrimaryFeather,\n\nI've been scaling my texture atlases to try and mitigate compression artefacts in PVRTC textures.  To ensure that atlases display correctly I have adjusted the scaling factor of the atlas texture with the Texture.fromAtfData(..) function.  Everything seems to work correctly, except the textures.  I found that forcing the scale value to 1.0 in parseFontXml(..) fixed the problem.  I haven't investigated any further, but I'm assuming that because UV coordinates are relative, scaling them due to a change in absolute scale shouldn't affect them?\n\nIs this a bug?  Or perhaps it has a different effect for scaled non-atlas textures?\n\nThanks,\n\nJarrod\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/480/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/479","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/479/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/479/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/479/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/479","id":26345525,"number":479,"title":"DelayedCall cannot be re-started on the delayed function ","user":{"login":"binouze","id":1785477,"avatar_url":"https://avatars1.githubusercontent.com/u/1785477?v=4","gravatar_id":"","url":"https://api.github.com/users/binouze","html_url":"https://github.com/binouze","followers_url":"https://api.github.com/users/binouze/followers","following_url":"https://api.github.com/users/binouze/following{/other_user}","gists_url":"https://api.github.com/users/binouze/gists{/gist_id}","starred_url":"https://api.github.com/users/binouze/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/binouze/subscriptions","organizations_url":"https://api.github.com/users/binouze/orgs","repos_url":"https://api.github.com/users/binouze/repos","events_url":"https://api.github.com/users/binouze/events{/privacy}","received_events_url":"https://api.github.com/users/binouze/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2014-01-27T11:07:29Z","updated_at":"2014-01-28T18:12:21Z","closed_at":"2014-01-28T14:43:38Z","author_association":"NONE","body":"Is it possible to call the delayed function after dispatching the REMOVE_FROM_JUGGLER event. So it would be possible to reset and/or restart the delayedCall in the function called.\nThanks\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/479/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/478","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/478/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/478/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/478/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/478","id":26289204,"number":478,"title":"visibleAreaChildrenList - Performance boost suggestion","user":{"login":"ghost","id":10137,"avatar_url":"https://avatars3.githubusercontent.com/u/10137?v=4","gravatar_id":"","url":"https://api.github.com/users/ghost","html_url":"https://github.com/ghost","followers_url":"https://api.github.com/users/ghost/followers","following_url":"https://api.github.com/users/ghost/following{/other_user}","gists_url":"https://api.github.com/users/ghost/gists{/gist_id}","starred_url":"https://api.github.com/users/ghost/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ghost/subscriptions","organizations_url":"https://api.github.com/users/ghost/orgs","repos_url":"https://api.github.com/users/ghost/repos","events_url":"https://api.github.com/users/ghost/events{/privacy}","received_events_url":"https://api.github.com/users/ghost/received_events","type":"User","site_admin":false},"labels":[{"id":130317,"url":"https://api.github.com/repos/Gamua/Starling-Framework/labels/Feature","name":"Feature","color":"009800","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2014-01-25T08:21:13Z","updated_at":"2016-04-14T14:30:26Z","closed_at":"2016-04-14T14:30:26Z","author_association":"NONE","body":"Hi,\n\nInside DisplayObjectContainer render loop you iterate over all the children and check if they got visible area(hasVisibleArea), and only render them if you get a positive answer.\n\nYou can get performance boost if you will manage visibleAreaChildrenList. This way you will reduce your rander cycle. \n\nI did something like this once. It's not a big boost but it's helping.\n\nNote that to implement this you need a mapping between child and his index in the parent(I just stored this data in the child itself), so when the child become visible you need to place him in proper position in the visible list queue according to his actual index in the parent.\n\nRight now I am developing a tool that use GridList and I need to add layers to it. In my specific case I will have hundreds of invisible children.\n\nI think that every app has good potential for 10%-20% of invisible displayObjects.\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/478/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/477","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/477/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/477/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/477/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/477","id":26288170,"number":477,"title":"Can increase when creating texture format to use?","user":{"login":"zhl006006","id":4127887,"avatar_url":"https://avatars2.githubusercontent.com/u/4127887?v=4","gravatar_id":"","url":"https://api.github.com/users/zhl006006","html_url":"https://github.com/zhl006006","followers_url":"https://api.github.com/users/zhl006006/followers","following_url":"https://api.github.com/users/zhl006006/following{/other_user}","gists_url":"https://api.github.com/users/zhl006006/gists{/gist_id}","starred_url":"https://api.github.com/users/zhl006006/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhl006006/subscriptions","organizations_url":"https://api.github.com/users/zhl006006/orgs","repos_url":"https://api.github.com/users/zhl006006/repos","events_url":"https://api.github.com/users/zhl006006/events{/privacy}","received_events_url":"https://api.github.com/users/zhl006006/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-01-25T06:51:25Z","updated_at":"2014-04-25T09:02:10Z","closed_at":"2014-04-25T09:02:10Z","author_association":"NONE","body":"Part can run with a 16-bit color, and so can reduce the use of memory\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/477/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/476","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/476/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/476/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/476/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/476","id":26238127,"number":476,"title":"Make TextureAtlas to support getAllTextures()","user":{"login":"ghost","id":10137,"avatar_url":"https://avatars3.githubusercontent.com/u/10137?v=4","gravatar_id":"","url":"https://api.github.com/users/ghost","html_url":"https://github.com/ghost","followers_url":"https://api.github.com/users/ghost/followers","following_url":"https://api.github.com/users/ghost/following{/other_user}","gists_url":"https://api.github.com/users/ghost/gists{/gist_id}","starred_url":"https://api.github.com/users/ghost/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ghost/subscriptions","organizations_url":"https://api.github.com/users/ghost/orgs","repos_url":"https://api.github.com/users/ghost/repos","events_url":"https://api.github.com/users/ghost/events{/privacy}","received_events_url":"https://api.github.com/users/ghost/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2014-01-24T12:39:55Z","updated_at":"2014-01-25T07:52:03Z","closed_at":"2014-01-25T07:52:03Z","author_association":"NONE","body":"Can you please add the next method to TextureAtlas. I am writing a tool using starling and I need this functionality. Or make mTextureFrames protected so I be able to implement it by myself.\n\n```\n    /**\n     * Return a vector of all the textures in the attlas\n     */\n    public function getAllTextures():Vector.<Texture>{\n        var textures:Vector.<Texture> = new Vector.<Texture>();\n        for (var k:Object in mTextureFrames) {\n            var value:Texture = mTextureFrames[k];\n            var key:String = k as String;\n\n            textures.push(getTexture(key));\n        }\n\n        return textures;\n    }\n```\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/476/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/475","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/475/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/475/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/475/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/475","id":26184161,"number":475,"title":"Minor change to AssetManager","user":{"login":"ghost","id":10137,"avatar_url":"https://avatars3.githubusercontent.com/u/10137?v=4","gravatar_id":"","url":"https://api.github.com/users/ghost","html_url":"https://github.com/ghost","followers_url":"https://api.github.com/users/ghost/followers","following_url":"https://api.github.com/users/ghost/following{/other_user}","gists_url":"https://api.github.com/users/ghost/gists{/gist_id}","starred_url":"https://api.github.com/users/ghost/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ghost/subscriptions","organizations_url":"https://api.github.com/users/ghost/orgs","repos_url":"https://api.github.com/users/ghost/repos","events_url":"https://api.github.com/users/ghost/events{/privacy}","received_events_url":"https://api.github.com/users/ghost/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2014-01-23T17:42:31Z","updated_at":"2014-01-23T17:46:23Z","closed_at":"2014-01-23T17:46:23Z","author_association":"NONE","body":"Please change in AssetManager\n\nFrom\n        public function loadQueue(onProgress:Function):void\nTo:\n        public function loadQueue(onProgress:Function = null):void\n\nBecause you already allow onProgress to be null.\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/475/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/474","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/474/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/474/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/474/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/474","id":26121024,"number":474,"title":"Cached Filters and Context Loss","user":{"login":"etmiranda","id":3160644,"avatar_url":"https://avatars2.githubusercontent.com/u/3160644?v=4","gravatar_id":"","url":"https://api.github.com/users/etmiranda","html_url":"https://github.com/etmiranda","followers_url":"https://api.github.com/users/etmiranda/followers","following_url":"https://api.github.com/users/etmiranda/following{/other_user}","gists_url":"https://api.github.com/users/etmiranda/gists{/gist_id}","starred_url":"https://api.github.com/users/etmiranda/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/etmiranda/subscriptions","organizations_url":"https://api.github.com/users/etmiranda/orgs","repos_url":"https://api.github.com/users/etmiranda/repos","events_url":"https://api.github.com/users/etmiranda/events{/privacy}","received_events_url":"https://api.github.com/users/etmiranda/received_events","type":"User","site_admin":false},"labels":[{"id":130316,"url":"https://api.github.com/repos/Gamua/Starling-Framework/labels/Bug","name":"Bug","color":"e10c02","default":false}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2014-01-22T20:39:16Z","updated_at":"2014-01-23T19:22:40Z","closed_at":null,"author_association":"NONE","body":"See http://forum.starling-framework.org/topic/context-loss-filters\n\nWe may also want some sort of event? I say this because I already have functionality in my code for text fields with filters where I wait a frame and _then_ cache the filter (since text doesn't render for a frame). I'm not sure if that will be an issue with context restore or not, quite honestly.\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/474/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/473","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/473/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/473/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/473/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/473","id":25933925,"number":473,"title":"Question about localToGlobal","user":{"login":"ghost","id":10137,"avatar_url":"https://avatars3.githubusercontent.com/u/10137?v=4","gravatar_id":"","url":"https://api.github.com/users/ghost","html_url":"https://github.com/ghost","followers_url":"https://api.github.com/users/ghost/followers","following_url":"https://api.github.com/users/ghost/following{/other_user}","gists_url":"https://api.github.com/users/ghost/gists{/gist_id}","starred_url":"https://api.github.com/users/ghost/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ghost/subscriptions","organizations_url":"https://api.github.com/users/ghost/orgs","repos_url":"https://api.github.com/users/ghost/repos","events_url":"https://api.github.com/users/ghost/events{/privacy}","received_events_url":"https://api.github.com/users/ghost/received_events","type":"User","site_admin":false},"labels":[{"id":42482767,"url":"https://api.github.com/repos/Gamua/Starling-Framework/labels/Discussion","name":"Discussion","color":"fbca04","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2014-01-20T17:28:42Z","updated_at":"2014-01-21T07:55:08Z","closed_at":"2014-01-21T07:55:02Z","author_association":"NONE","body":"Look at the \"Hello world\" setup project. Add those lines at the end of Screen1.createBox()\n\n```\n        trace(text.x + x); // 10 as expected\n        trace(text.localToGlobal(new Point(text.x, text.y))); // (x=120, y=120)\n        x += 100;\n        text.x -= 100;\n        trace(text.x + x); // 10 as expected\n        trace(text.localToGlobal(new Point(text.x, text.y))); // (x=20, y=120) instead of 120 as expected\n```\n\nI am getting unexpected values from localToGlobal method. Here is the full Screen1 class source code:\n\npackage\n{\n    import flash.geom.Point;\n\n```\nimport starling.display.Quad;\nimport starling.display.Sprite;\nimport starling.events.Event;\nimport starling.text.TextField;\nimport starling.utils.HAlign;\nimport starling.utils.VAlign;\n\n/**\n * ...\n * @author Abiyasa\n */\npublic class Screen1 extends Sprite\n{\n    protected var _box:Sprite;\n\n    public function Screen1()\n    {\n        super();\n        this.addEventListener(Event.ADDED_TO_STAGE, init);\n    }\n\n    protected function init(event:Event):void\n    {\n        this.removeEventListener(Event.ADDED_TO_STAGE, init);\n\n        createBox();\n    }\n\n    protected function createBox():void\n    {\n        // create box sprite\n        _box = new Sprite();\n\n        // create quad (box shape)\n        var q:Quad = new Quad(128, 128, 0x009ee1);\n        _box.addChild(q);\n\n        // add text\n        var text:TextField = new TextField(100, 100, \"Hello World\", \"Verdana\", 16, 0xFFFFFF);\n        text.vAlign = VAlign.TOP;\n        text.hAlign = HAlign.LEFT;\n        text.x = 10;\n        text.y = 10;\n        _box.addChild(text);\n\n        this.addChild(_box);\n\n        _box.x = 100;\n        _box.y = 100;\n\n\n        trace(text.x + x); // 10 as expected\n        trace(text.localToGlobal(new Point(text.x, text.y))); // (x=120, y=120)\n        x += 100;\n        text.x -= 100;\n        trace(text.x + x); // 10 as expected\n        trace(text.localToGlobal(new Point(text.x, text.y))); // (x=20, y=120) instead of 120 as expected\n    }\n}\n```\n\n}\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/473/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/472","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/472/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/472/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/472/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/472","id":25902431,"number":472,"title":"Context loss while AssetManager is loading assets","user":{"login":"loonychewy","id":777139,"avatar_url":"https://avatars1.githubusercontent.com/u/777139?v=4","gravatar_id":"","url":"https://api.github.com/users/loonychewy","html_url":"https://github.com/loonychewy","followers_url":"https://api.github.com/users/loonychewy/followers","following_url":"https://api.github.com/users/loonychewy/following{/other_user}","gists_url":"https://api.github.com/users/loonychewy/gists{/gist_id}","starred_url":"https://api.github.com/users/loonychewy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/loonychewy/subscriptions","organizations_url":"https://api.github.com/users/loonychewy/orgs","repos_url":"https://api.github.com/users/loonychewy/repos","events_url":"https://api.github.com/users/loonychewy/events{/privacy}","received_events_url":"https://api.github.com/users/loonychewy/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-01-20T07:20:11Z","updated_at":"2014-01-21T11:43:32Z","closed_at":"2014-01-21T11:41:09Z","author_association":"NONE","body":"When AssetManager is loading assets, and the device context is loss, error #3694 (The object was disposed by an earlier call of dispose() on it) is sometimes thrown, with a callstack as such:\n\nat starling.textures::Texture$/empty()\nat starling.textures::Texture$/fromBitmapData()\nat starling.textures::Texture$/fromData()\nat Function/process()\nat Function/onLoaderComplete()\n\nThis isn't handled in the try/catch block of texture.root.onRestore, because the error occurs during texture creation, before the onRestore callback is even assigned.\n\nIn Function/onLoaderComplete(), a Bitmap instance is obtained from the asset file, which is then used to create a texture in Function/process(). However, because the device context happens to be lost at that time (i.e. Starling.current.context.driverInfo == \"Disposed\"), the texture creation fails.\n\nOne suggestion is to put a try/catch around the call to Texture.fromData(), and in the event of failed texture creation, put aside the Bitmap instance until context is recreated, before attempting to recreate the texture from this Bitmap instance. (Or we could requeue the source asset too.)\n\nThe way that I managed to reproduce this error is to get AssetManager to load a bunch of textures on an Android device, and during this time, constantly flip the device between portrait and landscape orientation to trigger context losses. (Note: In the real world, players may move their phones around while waiting for the game to load, so this may occur occasionally to them.)\n\nEdit: Link to the forum discussion here: http://forum.starling-framework.org/topic/context-loss-while-assetmanager-is-loading-assets\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/472/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/471","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/471/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/471/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/471/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/471","id":25844515,"number":471,"title":"make AssetManager support multiple URLLoaders loading at the same time","user":{"login":"yuhengh","id":1954274,"avatar_url":"https://avatars1.githubusercontent.com/u/1954274?v=4","gravatar_id":"","url":"https://api.github.com/users/yuhengh","html_url":"https://github.com/yuhengh","followers_url":"https://api.github.com/users/yuhengh/followers","following_url":"https://api.github.com/users/yuhengh/following{/other_user}","gists_url":"https://api.github.com/users/yuhengh/gists{/gist_id}","starred_url":"https://api.github.com/users/yuhengh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yuhengh/subscriptions","organizations_url":"https://api.github.com/users/yuhengh/orgs","repos_url":"https://api.github.com/users/yuhengh/repos","events_url":"https://api.github.com/users/yuhengh/events{/privacy}","received_events_url":"https://api.github.com/users/yuhengh/received_events","type":"User","site_admin":false},"labels":[{"id":130317,"url":"https://api.github.com/repos/Gamua/Starling-Framework/labels/Feature","name":"Feature","color":"009800","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2014-01-17T23:00:35Z","updated_at":"2014-03-06T06:57:15Z","closed_at":"2014-03-06T06:57:15Z","author_association":"NONE","body":"I have made a small change to AssetManager to support multiple URLLoaders loading at the same time.\n\nhttps://github.com/yuhengh/Starling-Framework/commit/3e90d9ad9d114b9665925f4c088a75e85703c7ee\n\nI did some benchmarking in my project and it made the loading 2x to 3x faster. I am not sure if this fix is stable enough for production use but it would be great to have starling to support this feature officially. It's a huge performance boost with minimal effort.\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/471/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/470","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/470/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/470/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/470/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/470","id":25800704,"number":470,"title":"Add public 'transformationMatrix' property to SubTexture","user":{"login":"b005t3r","id":757150,"avatar_url":"https://avatars3.githubusercontent.com/u/757150?v=4","gravatar_id":"","url":"https://api.github.com/users/b005t3r","html_url":"https://github.com/b005t3r","followers_url":"https://api.github.com/users/b005t3r/followers","following_url":"https://api.github.com/users/b005t3r/following{/other_user}","gists_url":"https://api.github.com/users/b005t3r/gists{/gist_id}","starred_url":"https://api.github.com/users/b005t3r/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/b005t3r/subscriptions","organizations_url":"https://api.github.com/users/b005t3r/orgs","repos_url":"https://api.github.com/users/b005t3r/repos","events_url":"https://api.github.com/users/b005t3r/events{/privacy}","received_events_url":"https://api.github.com/users/b005t3r/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2014-01-17T11:02:08Z","updated_at":"2014-01-21T15:20:57Z","closed_at":"2014-01-21T15:12:44Z","author_association":"NONE","body":"The only (indirect) way of accessing mTransformatonMatrix is by calling adjustTexCoords(). I need to access this matrix to adjust my custom vertex data for SubTextures, but currently this seems impossible.\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/470/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/469","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/469/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/469/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/469/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/469","id":25747923,"number":469,"title":"BitmapFont.createSprite bug ","user":{"login":"agnithegreat","id":1287687,"avatar_url":"https://avatars0.githubusercontent.com/u/1287687?v=4","gravatar_id":"","url":"https://api.github.com/users/agnithegreat","html_url":"https://github.com/agnithegreat","followers_url":"https://api.github.com/users/agnithegreat/followers","following_url":"https://api.github.com/users/agnithegreat/following{/other_user}","gists_url":"https://api.github.com/users/agnithegreat/gists{/gist_id}","starred_url":"https://api.github.com/users/agnithegreat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/agnithegreat/subscriptions","organizations_url":"https://api.github.com/users/agnithegreat/orgs","repos_url":"https://api.github.com/users/agnithegreat/repos","events_url":"https://api.github.com/users/agnithegreat/events{/privacy}","received_events_url":"https://api.github.com/users/agnithegreat/received_events","type":"User","site_admin":false},"labels":[{"id":130317,"url":"https://api.github.com/repos/Gamua/Starling-Framework/labels/Feature","name":"Feature","color":"009800","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2014-01-16T18:38:07Z","updated_at":"2014-01-20T08:20:59Z","closed_at":"2014-01-20T08:20:32Z","author_association":"NONE","body":"Seems like there is a bug in the createSprite method of BitmapFont.\nI have a 176x59-size button and 30-sized bitmap font, so I want to add a custom label for my button:\n\n<pre lang=\"as3\">\n_label = TextField.getBitmapFont(\"button_text\").createSprite(_button.width, _button.height, _text);\n_label.touchable = false;\naddChild(_label);\ntrace(_label.getBounds(this)); // it traces (x=41, y=11, w=99, h=27)\n</pre>\n\nAt first I expected that sprite will have size of the button (176x59), but then I understood that it has margins around glyphs, because of VAlign and HAlign = CENTER.\nSo, let's count:\n\n<pre lang=\"as3\">\nvar bounds: Rectangle = _label.getBounds(this); // (x=41, y=11, w=99, h=27)\ntrace(_button.width == bounds.width + bounds.x * 2); // false: 176 != 181 (99 + 41*2)\ntrace(_button.height == bounds.height + bounds.y * 2); // false: 59 != 49 (27 + 11*2)\n</pre>\n\nPlease, correct me, if I'm going wrong in my thoughts.\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/469/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/468","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/468/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/468/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/468/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/468","id":25711997,"number":468,"title":"Starling.render(): render target set and cleared in the wrong order","user":{"login":"b005t3r","id":757150,"avatar_url":"https://avatars3.githubusercontent.com/u/757150?v=4","gravatar_id":"","url":"https://api.github.com/users/b005t3r","html_url":"https://github.com/b005t3r","followers_url":"https://api.github.com/users/b005t3r/followers","following_url":"https://api.github.com/users/b005t3r/following{/other_user}","gists_url":"https://api.github.com/users/b005t3r/gists{/gist_id}","starred_url":"https://api.github.com/users/b005t3r/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/b005t3r/subscriptions","organizations_url":"https://api.github.com/users/b005t3r/orgs","repos_url":"https://api.github.com/users/b005t3r/repos","events_url":"https://api.github.com/users/b005t3r/events{/privacy}","received_events_url":"https://api.github.com/users/b005t3r/received_events","type":"User","site_admin":false},"labels":[{"id":130316,"url":"https://api.github.com/repos/Gamua/Starling-Framework/labels/Bug","name":"Bug","color":"e10c02","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-01-16T09:20:43Z","updated_at":"2014-01-22T09:57:25Z","closed_at":"2014-01-22T09:56:54Z","author_association":"NONE","body":"Starling render() method:\n\n``` as3\npublic function render():void                                                                                                \n{                                                                                                                            \n    if (!mContextValid)                                                                                                      \n        return;                                                                                                              \n\n    makeCurrent();                                                                                                           \n    updateViewPort();                                                                                                        \n    updateNativeOverlay();                                                                                                   \n    mSupport.nextFrame();                                                                                                    \n\n    if (!mShareContext)                                                                                                      \n        RenderSupport.clear(mStage.color, 1.0);                                                                              \n\n    var scaleX:Number = mViewPort.width  / mStage.stageWidth;                                                                \n    var scaleY:Number = mViewPort.height / mStage.stageHeight;                                                               \n\n    mContext.setDepthTest(false, Context3DCompareMode.ALWAYS);                                                               \n    mContext.setCulling(Context3DTriangleFace.NONE);                                                                         \n\n    mSupport.renderTarget = null; // back buffer                                                                             \n    mSupport.setOrthographicProjection(                                                                                      \n        mViewPort.x < 0 ? -mViewPort.x / scaleX : 0.0,                                                                       \n        mViewPort.y < 0 ? -mViewPort.y / scaleY : 0.0,                                                                       \n        mClippedViewPort.width  / scaleX,                                                                                    \n        mClippedViewPort.height / scaleY);                                                                                   \n\n    mStage.render(mSupport, 1.0);                                                                                            \n    mSupport.finishQuadBatch();                                                                                              \n\n    if (mStatsDisplay)                                                                                                       \n        mStatsDisplay.drawCount = mSupport.drawCount;                                                                        \n\n    if (!mShareContext)                                                                                                      \n        mContext.present();                                                                                                  \n}                                                                                                                           \n```\n\nfirst clears the previously set render target and then sets a new one. I think this should be the other way around. Currently, if other render target was used in the client code and Context3D.setRenderToBackBuffer() was not called, the client's render target (i.e. a texture) gets cleared, not the back buffer which leads to an error being thrown.\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/468/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/467","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/467/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/467/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/467/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/467","id":25696129,"number":467,"title":"[Asset Manager] Replaced textures are not disposed.","user":{"login":"ghost","id":10137,"avatar_url":"https://avatars3.githubusercontent.com/u/10137?v=4","gravatar_id":"","url":"https://api.github.com/users/ghost","html_url":"https://github.com/ghost","followers_url":"https://api.github.com/users/ghost/followers","following_url":"https://api.github.com/users/ghost/following{/other_user}","gists_url":"https://api.github.com/users/ghost/gists{/gist_id}","starred_url":"https://api.github.com/users/ghost/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ghost/subscriptions","organizations_url":"https://api.github.com/users/ghost/orgs","repos_url":"https://api.github.com/users/ghost/repos","events_url":"https://api.github.com/users/ghost/events{/privacy}","received_events_url":"https://api.github.com/users/ghost/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-01-16T01:11:29Z","updated_at":"2014-01-20T07:48:34Z","closed_at":"2014-01-20T07:47:59Z","author_association":"NONE","body":"HI there,\nI was loading/unloading/reloading assets recently and I've noticed that GPU memory was keep increasing. After some Scout session and debugging I've noticed that it was caused by new texture atlas which were replacing old ones in AssetManager.\nSo as I saw in addTexture, addTextureAtlas if texture already exist, we just have a trace about that. Maybe it's worth disposing it in this case since we won't be able to access it from AssetManager after that?\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/467/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/466","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/466/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/466/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/466/events","html_url":"https://github.com/Gamua/Starling-Framework/pull/466","id":25604399,"number":466,"title":"QuadBatch registers AGAL programs on demand","user":{"login":"ajwfrost","id":6400804,"avatar_url":"https://avatars1.githubusercontent.com/u/6400804?v=4","gravatar_id":"","url":"https://api.github.com/users/ajwfrost","html_url":"https://github.com/ajwfrost","followers_url":"https://api.github.com/users/ajwfrost/followers","following_url":"https://api.github.com/users/ajwfrost/following{/other_user}","gists_url":"https://api.github.com/users/ajwfrost/gists{/gist_id}","starred_url":"https://api.github.com/users/ajwfrost/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ajwfrost/subscriptions","organizations_url":"https://api.github.com/users/ajwfrost/orgs","repos_url":"https://api.github.com/users/ajwfrost/repos","events_url":"https://api.github.com/users/ajwfrost/events{/privacy}","received_events_url":"https://api.github.com/users/ajwfrost/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2014-01-14T20:51:43Z","updated_at":"2014-06-25T03:56:06Z","closed_at":"2014-01-15T10:20:57Z","author_association":"NONE","pull_request":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/pulls/466","html_url":"https://github.com/Gamua/Starling-Framework/pull/466","diff_url":"https://github.com/Gamua/Starling-Framework/pull/466.diff","patch_url":"https://github.com/Gamua/Starling-Framework/pull/466.patch"},"body":"Change to prevent QuadBatch from automatically compiling and registering 70+ AGAL programs at start-up, instead it just registers the programs it needs when they're first used.\nSaved 50ms on my Windows desktop, but 1.5s+ on an Android handset.\nIf clients do actually use many of the program types then it might still be worth them being pre-loaded somehow, but I don't know how common this is. I'd measured this taking around 20ms to compile and register a single program so it may still be beneficial to do this when they're first used rather than at start-up.\nOpening up for discussion...\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/466/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/465","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/465/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/465/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/465/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/465","id":25484831,"number":465,"title":"Add layer support to starling.display.Stage for post processing effects","user":{"login":"b005t3r","id":757150,"avatar_url":"https://avatars3.githubusercontent.com/u/757150?v=4","gravatar_id":"","url":"https://api.github.com/users/b005t3r","html_url":"https://github.com/b005t3r","followers_url":"https://api.github.com/users/b005t3r/followers","following_url":"https://api.github.com/users/b005t3r/following{/other_user}","gists_url":"https://api.github.com/users/b005t3r/gists{/gist_id}","starred_url":"https://api.github.com/users/b005t3r/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/b005t3r/subscriptions","organizations_url":"https://api.github.com/users/b005t3r/orgs","repos_url":"https://api.github.com/users/b005t3r/repos","events_url":"https://api.github.com/users/b005t3r/events{/privacy}","received_events_url":"https://api.github.com/users/b005t3r/received_events","type":"User","site_admin":false},"labels":[{"id":130317,"url":"https://api.github.com/repos/Gamua/Starling-Framework/labels/Feature","name":"Feature","color":"009800","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2014-01-13T09:19:14Z","updated_at":"2014-01-23T09:55:31Z","closed_at":"2014-01-23T09:47:56Z","author_association":"NONE","body":"It's already possible to render the stage to a texture, but for some (most, I guess) post processing effects it is required to render layers of the stage to separate textures and then process these textures (blend together, redraw using a custom shader, etc.) before rendering the final result to the screen.\n\nHow I see it ():\n\n``` as3\n// create internal textures - layers - to be used for rendering\nstage.createLayer(\"layerID\");\nstage.createLayer(\"anotherLayerID\");\n// so we have two layers to use now\n```\n\nthen we set our layers:\n\n``` as3\nstage.addChildToLayer(childA, \"layerID\");\nstage.addChildToLayer(childB, \"layerID\");\n\nstage.addChildToLayer(childC, \"anotherLayerID\");\nstage.addChildToLayer(childD, \"anotherLayerID\");\n\n// it should be still possible to add children in the standard way\nstage.addChild(childE);\nstage.addChild(childF);\nstage.addChild(childG);\n```\n\nNow childA and childB will be rendered to \"layerID\", childC and childD to \"anotherLayerID\", both layers will be draw on top of each other, copied to screen and finally childE, childF and childG will also be rendered to the screen.\n\nBut users will also be able to (that's the whole point of it really) register their custom functions to process each layer before rendering, like so:\n\n``` as3\nstage.onLayerRendered = function(buffer:RenderTexture, layerID:String):void {\n    if(layerID == \"layerID\") {\n        // apply custom processing\n    }\n    else if(layerID == \"anotherLayerID\") {\n        // apply custom processing\n    }\n}; \nstage.onLayersBlended = function(layers:Vector.<RenderTexture>, layerIDs:Vector.<String>):Texture {\n    // blend layers together in a custom way and return a texture with the result\n    return layers[0]; // it does not have to be a new texture\n}\n```\n\nOf course, it would be even better if it was possible with not only starling.display.Stage but every starling.display.DisplayObjectContainer - then you'd be able to apply custom processing only to some portions of the stage.\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/465/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/464","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/464/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/464/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/464/events","html_url":"https://github.com/Gamua/Starling-Framework/issues/464","id":25483766,"number":464,"title":"Add methods for adding custom properties to VertexData","user":{"login":"b005t3r","id":757150,"avatar_url":"https://avatars3.githubusercontent.com/u/757150?v=4","gravatar_id":"","url":"https://api.github.com/users/b005t3r","html_url":"https://github.com/b005t3r","followers_url":"https://api.github.com/users/b005t3r/followers","following_url":"https://api.github.com/users/b005t3r/following{/other_user}","gists_url":"https://api.github.com/users/b005t3r/gists{/gist_id}","starred_url":"https://api.github.com/users/b005t3r/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/b005t3r/subscriptions","organizations_url":"https://api.github.com/users/b005t3r/orgs","repos_url":"https://api.github.com/users/b005t3r/repos","events_url":"https://api.github.com/users/b005t3r/events{/privacy}","received_events_url":"https://api.github.com/users/b005t3r/received_events","type":"User","site_admin":false},"labels":[{"id":130317,"url":"https://api.github.com/repos/Gamua/Starling-Framework/labels/Feature","name":"Feature","color":"009800","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/milestones/1","html_url":"https://github.com/Gamua/Starling-Framework/milestone/1","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/milestones/1/labels","id":1120809,"number":1,"title":"Starling 2.0","description":"This release will come with a much more flexible rendering architecture and some other changes I've been wishing to make for a long time. It won't be compatible with the old releases, though: several APIs will change.","creator":{"login":"PrimaryFeather","id":547347,"avatar_url":"https://avatars1.githubusercontent.com/u/547347?v=4","gravatar_id":"","url":"https://api.github.com/users/PrimaryFeather","html_url":"https://github.com/PrimaryFeather","followers_url":"https://api.github.com/users/PrimaryFeather/followers","following_url":"https://api.github.com/users/PrimaryFeather/following{/other_user}","gists_url":"https://api.github.com/users/PrimaryFeather/gists{/gist_id}","starred_url":"https://api.github.com/users/PrimaryFeather/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/PrimaryFeather/subscriptions","organizations_url":"https://api.github.com/users/PrimaryFeather/orgs","repos_url":"https://api.github.com/users/PrimaryFeather/repos","events_url":"https://api.github.com/users/PrimaryFeather/events{/privacy}","received_events_url":"https://api.github.com/users/PrimaryFeather/received_events","type":"User","site_admin":false},"open_issues":0,"closed_issues":9,"state":"open","created_at":"2015-05-20T12:20:07Z","updated_at":"2016-04-15T06:07:15Z","due_on":null,"closed_at":null},"comments":4,"created_at":"2014-01-13T08:53:48Z","updated_at":"2016-04-14T15:49:51Z","closed_at":"2016-04-14T15:49:51Z","author_association":"NONE","body":"VertexData is widely used across Starling custom DisplayObjects, but it's still too limited for some. It would be great to be able to register custom sets of values per each vertex like so:\n\n``` as3\nmVertexData.setCustomFloat2(\"valueID\", 0 /* vertex index */, 100, 200);\n// ...\n\nmVertexData.setCustomFloat4(\"anotherValueID\", 3, -1,-2, 1, 2);\n// ...\n```\n\nand then after uploading to a vertex buffer:\n\n``` as3\nmVertexBuffer.uploadFromVector(mVertexData.rawData, 0, mVertexData.numVertices);\n```\n\nto be able to set them as one of va registers, like so:\n\n``` as3\ncontext.setVertexBufferAt(0, mVertexBuffer, VertexData.POSITION_OFFSET, Context3DVertexBufferFormat.FLOAT_2); // va0\ncontext.setVertexBufferAt(1, mVertexBuffer, VertexData.TEXCOORD_OFFSET, Context3DVertexBufferFormat.FLOAT_2); // va1\ncontext.setVertexBufferAt(2, mVertexBuffer, vertexData.offfsetForID(\"valueID\"), vertexData.typeForID(\"valueID\")); // va2\ncontext.setVertexBufferAt(3, mVertexBuffer, vertexData.offfsetForID(\"anotherValueID\"), vertexData.typeForID(\"anotherValueID\")); // va3\n```\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/464/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}},{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/463","repository_url":"https://api.github.com/repos/Gamua/Starling-Framework","labels_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/463/labels{/name}","comments_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/463/comments","events_url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/463/events","html_url":"https://github.com/Gamua/Starling-Framework/pull/463","id":25454423,"number":463,"title":"Added a Point pivot in DisplayObject.as","user":{"login":"justjoeyuk","id":987388,"avatar_url":"https://avatars1.githubusercontent.com/u/987388?v=4","gravatar_id":"","url":"https://api.github.com/users/justjoeyuk","html_url":"https://github.com/justjoeyuk","followers_url":"https://api.github.com/users/justjoeyuk/followers","following_url":"https://api.github.com/users/justjoeyuk/following{/other_user}","gists_url":"https://api.github.com/users/justjoeyuk/gists{/gist_id}","starred_url":"https://api.github.com/users/justjoeyuk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/justjoeyuk/subscriptions","organizations_url":"https://api.github.com/users/justjoeyuk/orgs","repos_url":"https://api.github.com/users/justjoeyuk/repos","events_url":"https://api.github.com/users/justjoeyuk/events{/privacy}","received_events_url":"https://api.github.com/users/justjoeyuk/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2014-01-12T00:56:50Z","updated_at":"2014-01-13T15:26:58Z","closed_at":"2014-01-13T15:26:58Z","author_association":"NONE","pull_request":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/pulls/463","html_url":"https://github.com/Gamua/Starling-Framework/pull/463","diff_url":"https://github.com/Gamua/Starling-Framework/pull/463.diff","patch_url":"https://github.com/Gamua/Starling-Framework/pull/463.patch"},"body":"I've added a way to get the 'pivot' of a DisplayObject in the format of a Point. Also, there is now a way to set the 'pivot' using a point.\n","reactions":{"url":"https://api.github.com/repos/Gamua/Starling-Framework/issues/463/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0}}],"meta":{"x-ratelimit-limit":"5000","x-ratelimit-remaining":"4750","x-ratelimit-reset":"1507250212","x-github-request-id":"D7F4:572D:14788D5:31B8B5E:59D6C7CD","x-github-media-type":"github.squirrel-girl-preview","link":"<https://api.github.com/repositories/2097941/issues?state=all&page=19>; rel=\"next\", <https://api.github.com/repositories/2097941/issues?state=all&page=34>; rel=\"last\", <https://api.github.com/repositories/2097941/issues?state=all&page=1>; rel=\"first\", <https://api.github.com/repositories/2097941/issues?state=all&page=17>; rel=\"prev\"","etag":"\"d76c8b98a814fda6014fe9deb7d77bf4\"","status":"200 OK"}}
